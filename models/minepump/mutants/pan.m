#define rand	pan_rand
#define pthread_equal(a,b)	((a)==(b))
#if defined(HAS_CODE) && defined(VERBOSE)
	#ifdef BFS_PAR
		bfs_printf("Pr: %d Tr: %d\n", II, t->forw);
	#else
		cpu_printf("Pr: %d Tr: %d\n", II, t->forw);
	#endif
#endif
	switch (t->forw) {
	default: Uerror("bad forward move");
	case 0:	/* if without executable clauses */
		continue;
	case 1: /* generic 'goto' or 'skip' */
		IfNotBlocked
		_m = 3; goto P999;
	case 2: /* generic 'else' */
		IfNotBlocked
		if (trpt->o_pm&1) continue;
		_m = 3; goto P999;

		 /* CLAIM user_cmd_consistency */
	case 3: // STATE 1 - _spin_nvr.tmp:3079 - [(!(((uwants==start)||(uwants==stop))))] (6:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[23][1] = 1;
		if (!( !(((now.uwants==8)||(now.uwants==13)))))
			continue;
		/* merge: assert(!(!(((uwants==start)||(uwants==stop)))))(0, 2, 6) */
		reached[23][2] = 1;
		spin_assert( !( !(((now.uwants==8)||(now.uwants==13)))), " !( !(((uwants==8)||(uwants==13))))", II, tt, t);
		/* merge: .(goto)(0, 7, 6) */
		reached[23][7] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 4: // STATE 10 - _spin_nvr.tmp:3084 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[23][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM high_water_evolution_consistency */
	case 5: // STATE 1 - _spin_nvr.tmp:3064 - [(!(((waterLevel==medium)||(waterLevel==high))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[22][1] = 1;
		if (!( !(((now.waterLevel==3)||(now.waterLevel==6)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 6: // STATE 3 - _spin_nvr.tmp:3065 - [((!(((waterLevel==medium)||(waterLevel==high)))&&!((waterLevel==high))))] (8:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[22][3] = 1;
		if (!(( !(((now.waterLevel==3)||(now.waterLevel==6)))&& !((now.waterLevel==6)))))
			continue;
		/* merge: assert(!((!(((waterLevel==medium)||(waterLevel==high)))&&!((waterLevel==high)))))(0, 4, 8) */
		reached[22][4] = 1;
		spin_assert( !(( !(((now.waterLevel==3)||(now.waterLevel==6)))&& !((now.waterLevel==6)))), " !(( !(((waterLevel==3)||(waterLevel==6)))&& !((waterLevel==6))))", II, tt, t);
		/* merge: .(goto)(0, 9, 8) */
		reached[22][9] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 7: // STATE 11 - _spin_nvr.tmp:3070 - [(!(((waterLevel==medium)||(waterLevel==high))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[22][11] = 1;
		if (!( !(((now.waterLevel==3)||(now.waterLevel==6)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 8: // STATE 13 - _spin_nvr.tmp:3071 - [((!(((waterLevel==medium)||(waterLevel==high)))&&!((waterLevel==high))))] (16:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[22][13] = 1;
		if (!(( !(((now.waterLevel==3)||(now.waterLevel==6)))&& !((now.waterLevel==6)))))
			continue;
		/* merge: assert(!((!(((waterLevel==medium)||(waterLevel==high)))&&!((waterLevel==high)))))(0, 14, 16) */
		reached[22][14] = 1;
		spin_assert( !(( !(((now.waterLevel==3)||(now.waterLevel==6)))&& !((now.waterLevel==6)))), " !(( !(((waterLevel==3)||(waterLevel==6)))&& !((waterLevel==6))))", II, tt, t);
		/* merge: .(goto)(0, 17, 16) */
		reached[22][17] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 9: // STATE 20 - _spin_nvr.tmp:3075 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported20 = 0;
			if (verbose && !reported20)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported20 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported20 = 0;
			if (verbose && !reported20)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported20 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[22][20] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM medium_water_evolution_consistency */
	case 10: // STATE 1 - _spin_nvr.tmp:3049 - [(!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[21][1] = 1;
		if (!( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 11: // STATE 3 - _spin_nvr.tmp:3050 - [((!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high)))&&!((waterLevel==medium))))] (8:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[21][3] = 1;
		if (!(( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))&& !((now.waterLevel==3)))))
			continue;
		/* merge: assert(!((!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high)))&&!((waterLevel==medium)))))(0, 4, 8) */
		reached[21][4] = 1;
		spin_assert( !(( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))&& !((now.waterLevel==3)))), " !(( !((((waterLevel==5)||(waterLevel==3))||(waterLevel==6)))&& !((waterLevel==3))))", II, tt, t);
		/* merge: .(goto)(0, 9, 8) */
		reached[21][9] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 12: // STATE 11 - _spin_nvr.tmp:3055 - [(!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[21][11] = 1;
		if (!( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 13: // STATE 13 - _spin_nvr.tmp:3056 - [((!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high)))&&!((waterLevel==medium))))] (16:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[21][13] = 1;
		if (!(( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))&& !((now.waterLevel==3)))))
			continue;
		/* merge: assert(!((!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high)))&&!((waterLevel==medium)))))(0, 14, 16) */
		reached[21][14] = 1;
		spin_assert( !(( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))&& !((now.waterLevel==3)))), " !(( !((((waterLevel==5)||(waterLevel==3))||(waterLevel==6)))&& !((waterLevel==3))))", II, tt, t);
		/* merge: .(goto)(0, 17, 16) */
		reached[21][17] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 14: // STATE 20 - _spin_nvr.tmp:3060 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported20 = 0;
			if (verbose && !reported20)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported20 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported20 = 0;
			if (verbose && !reported20)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported20 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[21][20] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM water_level_consistency */
	case 15: // STATE 1 - _spin_nvr.tmp:3040 - [(!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high))))] (6:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[20][1] = 1;
		if (!( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))))
			continue;
		/* merge: assert(!(!((((waterLevel==low)||(waterLevel==medium))||(waterLevel==high)))))(0, 2, 6) */
		reached[20][2] = 1;
		spin_assert( !( !((((now.waterLevel==5)||(now.waterLevel==3))||(now.waterLevel==6)))), " !( !((((waterLevel==5)||(waterLevel==3))||(waterLevel==6))))", II, tt, t);
		/* merge: .(goto)(0, 7, 6) */
		reached[20][7] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 16: // STATE 10 - _spin_nvr.tmp:3045 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[20][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_activation */
	case 17: // STATE 1 - _spin_nvr.tmp:3020 - [((!((waterLevel==high))&&(!(pumpOn)&&(waterLevel==low))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[19][1] = 1;
		if (!(( !((now.waterLevel==6))&&( !(((int)now.pumpOn))&&(now.waterLevel==5)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 18: // STATE 3 - _spin_nvr.tmp:3021 - [(((!(!(pumpOn))&&!((waterLevel==high)))&&(!(pumpOn)&&(waterLevel==low))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[19][3] = 1;
		if (!((( !( !(((int)now.pumpOn)))&& !((now.waterLevel==6)))&&( !(((int)now.pumpOn))&&(now.waterLevel==5)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 19: // STATE 10 - _spin_nvr.tmp:3026 - [(!((waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[19][10] = 1;
		if (!( !((now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 20: // STATE 12 - _spin_nvr.tmp:3027 - [((!(!(pumpOn))&&!((waterLevel==high))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[19][12] = 1;
		if (!(( !( !(((int)now.pumpOn)))&& !((now.waterLevel==6)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 21: // STATE 17 - _spin_nvr.tmp:3031 - [((waterLevel==high))] (22:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[19][17] = 1;
		if (!((now.waterLevel==6)))
			continue;
		/* merge: assert(!((waterLevel==high)))(0, 18, 22) */
		reached[19][18] = 1;
		spin_assert( !((now.waterLevel==6)), " !((waterLevel==6))", II, tt, t);
		/* merge: .(goto)(0, 23, 22) */
		reached[19][23] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 22: // STATE 26 - _spin_nvr.tmp:3036 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[19][26] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_effectiveness */
	case 23: // STATE 1 - _spin_nvr.tmp:2398 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 24: // STATE 3 - _spin_nvr.tmp:2399 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][3] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 25: // STATE 5 - _spin_nvr.tmp:2400 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][5] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 26: // STATE 7 - _spin_nvr.tmp:2401 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][7] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 27: // STATE 9 - _spin_nvr.tmp:2402 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][9] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 28: // STATE 11 - _spin_nvr.tmp:2403 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][11] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 29: // STATE 13 - _spin_nvr.tmp:2404 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][13] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 30: // STATE 15 - _spin_nvr.tmp:2405 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][15] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 31: // STATE 17 - _spin_nvr.tmp:2406 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][17] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 32: // STATE 19 - _spin_nvr.tmp:2407 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][19] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 33: // STATE 21 - _spin_nvr.tmp:2408 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][21] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 34: // STATE 28 - _spin_nvr.tmp:2413 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][28] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 35: // STATE 33 - _spin_nvr.tmp:2417 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][33] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 36: // STATE 35 - _spin_nvr.tmp:2418 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][35] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 37: // STATE 40 - _spin_nvr.tmp:2422 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][40] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 38: // STATE 42 - _spin_nvr.tmp:2423 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][42] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 39: // STATE 44 - _spin_nvr.tmp:2424 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][44] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 40: // STATE 49 - _spin_nvr.tmp:2428 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][49] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 41: // STATE 51 - _spin_nvr.tmp:2429 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][51] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 42: // STATE 53 - _spin_nvr.tmp:2430 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][53] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 43: // STATE 55 - _spin_nvr.tmp:2431 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][55] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 44: // STATE 57 - _spin_nvr.tmp:2432 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][57] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 45: // STATE 59 - _spin_nvr.tmp:2433 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][59] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 46: // STATE 61 - _spin_nvr.tmp:2434 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][61] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 47: // STATE 63 - _spin_nvr.tmp:2435 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][63] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 48: // STATE 65 - _spin_nvr.tmp:2436 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][65] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 49: // STATE 67 - _spin_nvr.tmp:2437 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported67 = 0;
			if (verbose && !reported67)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported67 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported67 = 0;
			if (verbose && !reported67)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported67 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][67] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 50: // STATE 69 - _spin_nvr.tmp:2438 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][69] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 51: // STATE 73 - _spin_nvr.tmp:2440 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported73 = 0;
			if (verbose && !reported73)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported73 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported73 = 0;
			if (verbose && !reported73)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported73 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][73] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 52: // STATE 75 - _spin_nvr.tmp:2441 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported75 = 0;
			if (verbose && !reported75)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported75 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported75 = 0;
			if (verbose && !reported75)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported75 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][75] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 53: // STATE 80 - _spin_nvr.tmp:2445 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][80] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 54: // STATE 82 - _spin_nvr.tmp:2446 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][82] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 55: // STATE 84 - _spin_nvr.tmp:2447 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][84] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 56: // STATE 86 - _spin_nvr.tmp:2448 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][86] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 57: // STATE 88 - _spin_nvr.tmp:2449 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][88] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 58: // STATE 90 - _spin_nvr.tmp:2450 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][90] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 59: // STATE 92 - _spin_nvr.tmp:2451 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][92] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 60: // STATE 94 - _spin_nvr.tmp:2452 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][94] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 61: // STATE 96 - _spin_nvr.tmp:2453 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported96 = 0;
			if (verbose && !reported96)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported96 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported96 = 0;
			if (verbose && !reported96)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported96 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][96] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 62: // STATE 98 - _spin_nvr.tmp:2454 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][98] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 63: // STATE 100 - _spin_nvr.tmp:2455 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][100] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 64: // STATE 107 - _spin_nvr.tmp:2460 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][107] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 65: // STATE 109 - _spin_nvr.tmp:2461 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][109] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 66: // STATE 111 - _spin_nvr.tmp:2462 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][111] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 67: // STATE 113 - _spin_nvr.tmp:2463 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][113] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 68: // STATE 115 - _spin_nvr.tmp:2464 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][115] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 69: // STATE 117 - _spin_nvr.tmp:2465 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][117] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 70: // STATE 119 - _spin_nvr.tmp:2466 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][119] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 71: // STATE 121 - _spin_nvr.tmp:2467 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][121] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 72: // STATE 123 - _spin_nvr.tmp:2468 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][123] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 73: // STATE 125 - _spin_nvr.tmp:2469 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][125] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 74: // STATE 127 - _spin_nvr.tmp:2470 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported127 = 0;
			if (verbose && !reported127)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported127 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported127 = 0;
			if (verbose && !reported127)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported127 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][127] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 75: // STATE 129 - _spin_nvr.tmp:2471 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][129] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 76: // STATE 131 - _spin_nvr.tmp:2472 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][131] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 77: // STATE 133 - _spin_nvr.tmp:2473 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported133 = 0;
			if (verbose && !reported133)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported133 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported133 = 0;
			if (verbose && !reported133)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported133 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][133] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 78: // STATE 140 - _spin_nvr.tmp:2478 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][140] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 79: // STATE 142 - _spin_nvr.tmp:2479 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][142] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 80: // STATE 144 - _spin_nvr.tmp:2480 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][144] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 81: // STATE 146 - _spin_nvr.tmp:2481 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][146] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 82: // STATE 148 - _spin_nvr.tmp:2482 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][148] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 83: // STATE 150 - _spin_nvr.tmp:2483 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][150] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 84: // STATE 152 - _spin_nvr.tmp:2484 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][152] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 85: // STATE 154 - _spin_nvr.tmp:2485 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][154] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 86: // STATE 156 - _spin_nvr.tmp:2486 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][156] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 87: // STATE 158 - _spin_nvr.tmp:2487 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported158 = 0;
			if (verbose && !reported158)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported158 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported158 = 0;
			if (verbose && !reported158)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported158 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][158] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 88: // STATE 160 - _spin_nvr.tmp:2488 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][160] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 89: // STATE 162 - _spin_nvr.tmp:2489 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][162] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 90: // STATE 166 - _spin_nvr.tmp:2491 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported166 = 0;
			if (verbose && !reported166)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported166 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported166 = 0;
			if (verbose && !reported166)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported166 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][166] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 91: // STATE 171 - _spin_nvr.tmp:2495 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][171] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 92: // STATE 173 - _spin_nvr.tmp:2496 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][173] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 93: // STATE 175 - _spin_nvr.tmp:2497 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][175] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 94: // STATE 177 - _spin_nvr.tmp:2498 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][177] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 95: // STATE 179 - _spin_nvr.tmp:2499 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][179] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 96: // STATE 181 - _spin_nvr.tmp:2500 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][181] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 97: // STATE 183 - _spin_nvr.tmp:2501 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][183] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 98: // STATE 185 - _spin_nvr.tmp:2502 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][185] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 99: // STATE 187 - _spin_nvr.tmp:2503 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][187] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 100: // STATE 189 - _spin_nvr.tmp:2504 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][189] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 101: // STATE 191 - _spin_nvr.tmp:2505 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported191 = 0;
			if (verbose && !reported191)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported191 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported191 = 0;
			if (verbose && !reported191)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported191 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][191] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 102: // STATE 193 - _spin_nvr.tmp:2506 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][193] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 103: // STATE 195 - _spin_nvr.tmp:2507 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][195] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 104: // STATE 197 - _spin_nvr.tmp:2508 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported197 = 0;
			if (verbose && !reported197)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported197 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported197 = 0;
			if (verbose && !reported197)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported197 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][197] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 105: // STATE 199 - _spin_nvr.tmp:2509 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported199 = 0;
			if (verbose && !reported199)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported199 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported199 = 0;
			if (verbose && !reported199)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported199 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][199] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 106: // STATE 201 - _spin_nvr.tmp:2510 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported201 = 0;
			if (verbose && !reported201)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported201 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported201 = 0;
			if (verbose && !reported201)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported201 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][201] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 107: // STATE 208 - _spin_nvr.tmp:2515 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][208] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 108: // STATE 210 - _spin_nvr.tmp:2516 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][210] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 109: // STATE 212 - _spin_nvr.tmp:2517 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][212] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 110: // STATE 214 - _spin_nvr.tmp:2518 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][214] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 111: // STATE 216 - _spin_nvr.tmp:2519 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][216] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 112: // STATE 218 - _spin_nvr.tmp:2520 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][218] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 113: // STATE 220 - _spin_nvr.tmp:2521 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][220] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 114: // STATE 222 - _spin_nvr.tmp:2522 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][222] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 115: // STATE 224 - _spin_nvr.tmp:2523 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][224] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 116: // STATE 226 - _spin_nvr.tmp:2524 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported226 = 0;
			if (verbose && !reported226)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported226 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported226 = 0;
			if (verbose && !reported226)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported226 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][226] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 117: // STATE 228 - _spin_nvr.tmp:2525 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][228] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 118: // STATE 230 - _spin_nvr.tmp:2526 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][230] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 119: // STATE 237 - _spin_nvr.tmp:2531 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][237] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 120: // STATE 239 - _spin_nvr.tmp:2532 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][239] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 121: // STATE 241 - _spin_nvr.tmp:2533 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][241] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 122: // STATE 243 - _spin_nvr.tmp:2534 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported243 = 0;
			if (verbose && !reported243)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported243 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported243 = 0;
			if (verbose && !reported243)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported243 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][243] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 123: // STATE 245 - _spin_nvr.tmp:2535 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported245 = 0;
			if (verbose && !reported245)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported245 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported245 = 0;
			if (verbose && !reported245)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported245 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][245] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 124: // STATE 247 - _spin_nvr.tmp:2536 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported247 = 0;
			if (verbose && !reported247)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported247 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported247 = 0;
			if (verbose && !reported247)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported247 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][247] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 125: // STATE 249 - _spin_nvr.tmp:2537 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported249 = 0;
			if (verbose && !reported249)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported249 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported249 = 0;
			if (verbose && !reported249)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported249 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][249] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 126: // STATE 251 - _spin_nvr.tmp:2538 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported251 = 0;
			if (verbose && !reported251)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported251 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported251 = 0;
			if (verbose && !reported251)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported251 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][251] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 127: // STATE 253 - _spin_nvr.tmp:2539 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported253 = 0;
			if (verbose && !reported253)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported253 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported253 = 0;
			if (verbose && !reported253)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported253 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][253] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 128: // STATE 255 - _spin_nvr.tmp:2540 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported255 = 0;
			if (verbose && !reported255)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported255 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported255 = 0;
			if (verbose && !reported255)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported255 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][255] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 129: // STATE 257 - _spin_nvr.tmp:2541 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported257 = 0;
			if (verbose && !reported257)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported257 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported257 = 0;
			if (verbose && !reported257)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported257 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][257] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 130: // STATE 261 - _spin_nvr.tmp:2543 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported261 = 0;
			if (verbose && !reported261)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported261 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported261 = 0;
			if (verbose && !reported261)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported261 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][261] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 131: // STATE 263 - _spin_nvr.tmp:2544 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported263 = 0;
			if (verbose && !reported263)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported263 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported263 = 0;
			if (verbose && !reported263)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported263 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][263] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 132: // STATE 265 - _spin_nvr.tmp:2545 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported265 = 0;
			if (verbose && !reported265)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported265 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported265 = 0;
			if (verbose && !reported265)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported265 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][265] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 133: // STATE 267 - _spin_nvr.tmp:2546 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported267 = 0;
			if (verbose && !reported267)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported267 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported267 = 0;
			if (verbose && !reported267)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported267 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][267] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 134: // STATE 269 - _spin_nvr.tmp:2547 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported269 = 0;
			if (verbose && !reported269)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported269 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported269 = 0;
			if (verbose && !reported269)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported269 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][269] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 135: // STATE 274 - _spin_nvr.tmp:2551 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported274 = 0;
			if (verbose && !reported274)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported274 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported274 = 0;
			if (verbose && !reported274)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported274 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][274] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 136: // STATE 276 - _spin_nvr.tmp:2552 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported276 = 0;
			if (verbose && !reported276)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported276 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported276 = 0;
			if (verbose && !reported276)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported276 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][276] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 137: // STATE 278 - _spin_nvr.tmp:2553 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported278 = 0;
			if (verbose && !reported278)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported278 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported278 = 0;
			if (verbose && !reported278)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported278 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][278] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 138: // STATE 280 - _spin_nvr.tmp:2554 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported280 = 0;
			if (verbose && !reported280)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported280 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported280 = 0;
			if (verbose && !reported280)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported280 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][280] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 139: // STATE 282 - _spin_nvr.tmp:2555 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported282 = 0;
			if (verbose && !reported282)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported282 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported282 = 0;
			if (verbose && !reported282)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported282 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][282] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 140: // STATE 284 - _spin_nvr.tmp:2556 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported284 = 0;
			if (verbose && !reported284)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported284 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported284 = 0;
			if (verbose && !reported284)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported284 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][284] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 141: // STATE 286 - _spin_nvr.tmp:2557 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported286 = 0;
			if (verbose && !reported286)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported286 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported286 = 0;
			if (verbose && !reported286)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported286 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][286] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 142: // STATE 288 - _spin_nvr.tmp:2558 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported288 = 0;
			if (verbose && !reported288)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported288 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported288 = 0;
			if (verbose && !reported288)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported288 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][288] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 143: // STATE 290 - _spin_nvr.tmp:2559 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported290 = 0;
			if (verbose && !reported290)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported290 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported290 = 0;
			if (verbose && !reported290)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported290 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][290] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 144: // STATE 292 - _spin_nvr.tmp:2560 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported292 = 0;
			if (verbose && !reported292)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported292 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported292 = 0;
			if (verbose && !reported292)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported292 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][292] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 145: // STATE 294 - _spin_nvr.tmp:2561 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported294 = 0;
			if (verbose && !reported294)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported294 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported294 = 0;
			if (verbose && !reported294)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported294 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][294] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 146: // STATE 296 - _spin_nvr.tmp:2562 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported296 = 0;
			if (verbose && !reported296)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported296 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported296 = 0;
			if (verbose && !reported296)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported296 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][296] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 147: // STATE 298 - _spin_nvr.tmp:2563 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported298 = 0;
			if (verbose && !reported298)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported298 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported298 = 0;
			if (verbose && !reported298)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported298 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][298] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 148: // STATE 300 - _spin_nvr.tmp:2564 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported300 = 0;
			if (verbose && !reported300)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported300 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported300 = 0;
			if (verbose && !reported300)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported300 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][300] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 149: // STATE 302 - _spin_nvr.tmp:2565 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported302 = 0;
			if (verbose && !reported302)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported302 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported302 = 0;
			if (verbose && !reported302)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported302 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][302] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 150: // STATE 309 - _spin_nvr.tmp:2570 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported309 = 0;
			if (verbose && !reported309)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported309 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported309 = 0;
			if (verbose && !reported309)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported309 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][309] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 151: // STATE 311 - _spin_nvr.tmp:2571 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported311 = 0;
			if (verbose && !reported311)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported311 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported311 = 0;
			if (verbose && !reported311)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported311 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][311] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 152: // STATE 313 - _spin_nvr.tmp:2572 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported313 = 0;
			if (verbose && !reported313)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported313 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported313 = 0;
			if (verbose && !reported313)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported313 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][313] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 153: // STATE 315 - _spin_nvr.tmp:2573 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported315 = 0;
			if (verbose && !reported315)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported315 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported315 = 0;
			if (verbose && !reported315)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported315 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][315] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 154: // STATE 317 - _spin_nvr.tmp:2574 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported317 = 0;
			if (verbose && !reported317)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported317 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported317 = 0;
			if (verbose && !reported317)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported317 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][317] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 155: // STATE 319 - _spin_nvr.tmp:2575 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported319 = 0;
			if (verbose && !reported319)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported319 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported319 = 0;
			if (verbose && !reported319)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported319 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][319] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 156: // STATE 321 - _spin_nvr.tmp:2576 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported321 = 0;
			if (verbose && !reported321)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported321 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported321 = 0;
			if (verbose && !reported321)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported321 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][321] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 157: // STATE 323 - _spin_nvr.tmp:2577 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported323 = 0;
			if (verbose && !reported323)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported323 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported323 = 0;
			if (verbose && !reported323)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported323 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][323] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 158: // STATE 325 - _spin_nvr.tmp:2578 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported325 = 0;
			if (verbose && !reported325)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported325 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported325 = 0;
			if (verbose && !reported325)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported325 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][325] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 159: // STATE 327 - _spin_nvr.tmp:2579 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported327 = 0;
			if (verbose && !reported327)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported327 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported327 = 0;
			if (verbose && !reported327)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported327 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][327] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 160: // STATE 329 - _spin_nvr.tmp:2580 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported329 = 0;
			if (verbose && !reported329)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported329 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported329 = 0;
			if (verbose && !reported329)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported329 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][329] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 161: // STATE 333 - _spin_nvr.tmp:2582 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported333 = 0;
			if (verbose && !reported333)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported333 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported333 = 0;
			if (verbose && !reported333)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported333 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][333] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 162: // STATE 335 - _spin_nvr.tmp:2583 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported335 = 0;
			if (verbose && !reported335)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported335 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported335 = 0;
			if (verbose && !reported335)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported335 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][335] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 163: // STATE 337 - _spin_nvr.tmp:2584 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported337 = 0;
			if (verbose && !reported337)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported337 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported337 = 0;
			if (verbose && !reported337)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported337 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][337] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 164: // STATE 342 - _spin_nvr.tmp:2588 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported342 = 0;
			if (verbose && !reported342)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported342 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported342 = 0;
			if (verbose && !reported342)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported342 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][342] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 165: // STATE 344 - _spin_nvr.tmp:2589 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported344 = 0;
			if (verbose && !reported344)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported344 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported344 = 0;
			if (verbose && !reported344)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported344 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][344] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 166: // STATE 346 - _spin_nvr.tmp:2590 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported346 = 0;
			if (verbose && !reported346)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported346 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported346 = 0;
			if (verbose && !reported346)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported346 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][346] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 167: // STATE 348 - _spin_nvr.tmp:2591 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported348 = 0;
			if (verbose && !reported348)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported348 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported348 = 0;
			if (verbose && !reported348)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported348 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][348] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 168: // STATE 350 - _spin_nvr.tmp:2592 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported350 = 0;
			if (verbose && !reported350)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported350 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported350 = 0;
			if (verbose && !reported350)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported350 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][350] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 169: // STATE 352 - _spin_nvr.tmp:2593 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported352 = 0;
			if (verbose && !reported352)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported352 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported352 = 0;
			if (verbose && !reported352)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported352 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][352] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 170: // STATE 354 - _spin_nvr.tmp:2594 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported354 = 0;
			if (verbose && !reported354)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported354 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported354 = 0;
			if (verbose && !reported354)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported354 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][354] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 171: // STATE 356 - _spin_nvr.tmp:2595 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported356 = 0;
			if (verbose && !reported356)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported356 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported356 = 0;
			if (verbose && !reported356)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported356 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][356] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 172: // STATE 358 - _spin_nvr.tmp:2596 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported358 = 0;
			if (verbose && !reported358)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported358 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported358 = 0;
			if (verbose && !reported358)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported358 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][358] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 173: // STATE 360 - _spin_nvr.tmp:2597 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported360 = 0;
			if (verbose && !reported360)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported360 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported360 = 0;
			if (verbose && !reported360)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported360 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][360] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 174: // STATE 362 - _spin_nvr.tmp:2598 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported362 = 0;
			if (verbose && !reported362)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported362 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported362 = 0;
			if (verbose && !reported362)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported362 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][362] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 175: // STATE 364 - _spin_nvr.tmp:2599 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported364 = 0;
			if (verbose && !reported364)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported364 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported364 = 0;
			if (verbose && !reported364)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported364 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][364] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 176: // STATE 366 - _spin_nvr.tmp:2600 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported366 = 0;
			if (verbose && !reported366)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported366 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported366 = 0;
			if (verbose && !reported366)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported366 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][366] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 177: // STATE 368 - _spin_nvr.tmp:2601 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported368 = 0;
			if (verbose && !reported368)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported368 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported368 = 0;
			if (verbose && !reported368)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported368 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][368] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 178: // STATE 370 - _spin_nvr.tmp:2602 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported370 = 0;
			if (verbose && !reported370)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported370 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported370 = 0;
			if (verbose && !reported370)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported370 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][370] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 179: // STATE 372 - _spin_nvr.tmp:2603 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][372] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 180: // STATE 374 - _spin_nvr.tmp:2604 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][374] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 181: // STATE 381 - _spin_nvr.tmp:2609 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported381 = 0;
			if (verbose && !reported381)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported381 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported381 = 0;
			if (verbose && !reported381)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported381 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][381] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 182: // STATE 383 - _spin_nvr.tmp:2610 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported383 = 0;
			if (verbose && !reported383)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported383 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported383 = 0;
			if (verbose && !reported383)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported383 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][383] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 183: // STATE 385 - _spin_nvr.tmp:2611 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported385 = 0;
			if (verbose && !reported385)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported385 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported385 = 0;
			if (verbose && !reported385)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported385 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][385] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 184: // STATE 387 - _spin_nvr.tmp:2612 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported387 = 0;
			if (verbose && !reported387)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported387 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported387 = 0;
			if (verbose && !reported387)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported387 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][387] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 185: // STATE 389 - _spin_nvr.tmp:2613 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported389 = 0;
			if (verbose && !reported389)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported389 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported389 = 0;
			if (verbose && !reported389)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported389 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][389] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 186: // STATE 391 - _spin_nvr.tmp:2614 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported391 = 0;
			if (verbose && !reported391)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported391 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported391 = 0;
			if (verbose && !reported391)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported391 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][391] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 187: // STATE 393 - _spin_nvr.tmp:2615 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported393 = 0;
			if (verbose && !reported393)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported393 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported393 = 0;
			if (verbose && !reported393)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported393 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][393] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 188: // STATE 395 - _spin_nvr.tmp:2616 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported395 = 0;
			if (verbose && !reported395)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported395 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported395 = 0;
			if (verbose && !reported395)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported395 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][395] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 189: // STATE 397 - _spin_nvr.tmp:2617 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported397 = 0;
			if (verbose && !reported397)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported397 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported397 = 0;
			if (verbose && !reported397)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported397 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][397] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 190: // STATE 399 - _spin_nvr.tmp:2618 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported399 = 0;
			if (verbose && !reported399)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported399 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported399 = 0;
			if (verbose && !reported399)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported399 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][399] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 191: // STATE 401 - _spin_nvr.tmp:2619 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][401] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 192: // STATE 405 - _spin_nvr.tmp:2621 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][405] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 193: // STATE 407 - _spin_nvr.tmp:2622 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][407] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 194: // STATE 409 - _spin_nvr.tmp:2623 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][409] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 195: // STATE 411 - _spin_nvr.tmp:2624 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][411] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 196: // STATE 416 - _spin_nvr.tmp:2628 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported416 = 0;
			if (verbose && !reported416)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported416 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported416 = 0;
			if (verbose && !reported416)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported416 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][416] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 197: // STATE 418 - _spin_nvr.tmp:2629 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported418 = 0;
			if (verbose && !reported418)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported418 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported418 = 0;
			if (verbose && !reported418)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported418 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][418] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 198: // STATE 420 - _spin_nvr.tmp:2630 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported420 = 0;
			if (verbose && !reported420)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported420 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported420 = 0;
			if (verbose && !reported420)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported420 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][420] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 199: // STATE 422 - _spin_nvr.tmp:2631 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported422 = 0;
			if (verbose && !reported422)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported422 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported422 = 0;
			if (verbose && !reported422)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported422 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][422] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 200: // STATE 424 - _spin_nvr.tmp:2632 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported424 = 0;
			if (verbose && !reported424)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported424 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported424 = 0;
			if (verbose && !reported424)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported424 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][424] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 201: // STATE 426 - _spin_nvr.tmp:2633 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported426 = 0;
			if (verbose && !reported426)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported426 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported426 = 0;
			if (verbose && !reported426)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported426 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][426] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 202: // STATE 428 - _spin_nvr.tmp:2634 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported428 = 0;
			if (verbose && !reported428)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported428 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported428 = 0;
			if (verbose && !reported428)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported428 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][428] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 203: // STATE 430 - _spin_nvr.tmp:2635 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported430 = 0;
			if (verbose && !reported430)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported430 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported430 = 0;
			if (verbose && !reported430)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported430 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][430] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 204: // STATE 432 - _spin_nvr.tmp:2636 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported432 = 0;
			if (verbose && !reported432)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported432 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported432 = 0;
			if (verbose && !reported432)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported432 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][432] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 205: // STATE 434 - _spin_nvr.tmp:2637 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported434 = 0;
			if (verbose && !reported434)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported434 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported434 = 0;
			if (verbose && !reported434)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported434 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][434] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 206: // STATE 436 - _spin_nvr.tmp:2638 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][436] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 207: // STATE 438 - _spin_nvr.tmp:2639 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][438] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 208: // STATE 442 - _spin_nvr.tmp:2641 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][442] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 209: // STATE 444 - _spin_nvr.tmp:2642 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][444] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 210: // STATE 446 - _spin_nvr.tmp:2643 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][446] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 211: // STATE 448 - _spin_nvr.tmp:2644 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][448] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 212: // STATE 453 - _spin_nvr.tmp:2648 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported453 = 0;
			if (verbose && !reported453)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported453 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported453 = 0;
			if (verbose && !reported453)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported453 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][453] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 213: // STATE 455 - _spin_nvr.tmp:2649 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported455 = 0;
			if (verbose && !reported455)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported455 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported455 = 0;
			if (verbose && !reported455)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported455 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][455] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 214: // STATE 457 - _spin_nvr.tmp:2650 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported457 = 0;
			if (verbose && !reported457)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported457 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported457 = 0;
			if (verbose && !reported457)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported457 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][457] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 215: // STATE 459 - _spin_nvr.tmp:2651 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported459 = 0;
			if (verbose && !reported459)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported459 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported459 = 0;
			if (verbose && !reported459)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported459 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][459] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 216: // STATE 461 - _spin_nvr.tmp:2652 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported461 = 0;
			if (verbose && !reported461)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported461 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported461 = 0;
			if (verbose && !reported461)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported461 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][461] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 217: // STATE 463 - _spin_nvr.tmp:2653 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported463 = 0;
			if (verbose && !reported463)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported463 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported463 = 0;
			if (verbose && !reported463)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported463 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][463] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 218: // STATE 465 - _spin_nvr.tmp:2654 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported465 = 0;
			if (verbose && !reported465)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported465 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported465 = 0;
			if (verbose && !reported465)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported465 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][465] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 219: // STATE 467 - _spin_nvr.tmp:2655 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][467] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 220: // STATE 469 - _spin_nvr.tmp:2656 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][469] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 221: // STATE 471 - _spin_nvr.tmp:2657 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][471] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 222: // STATE 473 - _spin_nvr.tmp:2658 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][473] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 223: // STATE 477 - _spin_nvr.tmp:2660 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][477] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 224: // STATE 479 - _spin_nvr.tmp:2661 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][479] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 225: // STATE 481 - _spin_nvr.tmp:2662 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][481] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 226: // STATE 483 - _spin_nvr.tmp:2663 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][483] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 227: // STATE 485 - _spin_nvr.tmp:2664 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][485] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 228: // STATE 487 - _spin_nvr.tmp:2665 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][487] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 229: // STATE 489 - _spin_nvr.tmp:2666 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported489 = 0;
			if (verbose && !reported489)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported489 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported489 = 0;
			if (verbose && !reported489)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported489 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][489] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 230: // STATE 491 - _spin_nvr.tmp:2667 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][491] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 231: // STATE 493 - _spin_nvr.tmp:2668 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][493] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 232: // STATE 495 - _spin_nvr.tmp:2669 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][495] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 233: // STATE 497 - _spin_nvr.tmp:2670 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported497 = 0;
			if (verbose && !reported497)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported497 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported497 = 0;
			if (verbose && !reported497)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported497 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][497] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 234: // STATE 502 - _spin_nvr.tmp:2674 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][502] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 235: // STATE 504 - _spin_nvr.tmp:2675 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][504] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 236: // STATE 506 - _spin_nvr.tmp:2676 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][506] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 237: // STATE 508 - _spin_nvr.tmp:2677 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][508] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 238: // STATE 510 - _spin_nvr.tmp:2678 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][510] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 239: // STATE 512 - _spin_nvr.tmp:2679 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][512] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 240: // STATE 514 - _spin_nvr.tmp:2680 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][514] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 241: // STATE 516 - _spin_nvr.tmp:2681 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][516] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 242: // STATE 518 - _spin_nvr.tmp:2682 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][518] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 243: // STATE 520 - _spin_nvr.tmp:2683 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][520] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 244: // STATE 522 - _spin_nvr.tmp:2684 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][522] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 245: // STATE 526 - _spin_nvr.tmp:2686 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][526] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 246: // STATE 528 - _spin_nvr.tmp:2687 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][528] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 247: // STATE 530 - _spin_nvr.tmp:2688 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported530 = 0;
			if (verbose && !reported530)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported530 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported530 = 0;
			if (verbose && !reported530)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported530 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][530] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 248: // STATE 532 - _spin_nvr.tmp:2689 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported532 = 0;
			if (verbose && !reported532)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported532 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported532 = 0;
			if (verbose && !reported532)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported532 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][532] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 249: // STATE 534 - _spin_nvr.tmp:2690 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported534 = 0;
			if (verbose && !reported534)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported534 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported534 = 0;
			if (verbose && !reported534)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported534 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][534] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 250: // STATE 539 - _spin_nvr.tmp:2694 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][539] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 251: // STATE 541 - _spin_nvr.tmp:2695 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][541] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 252: // STATE 543 - _spin_nvr.tmp:2696 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][543] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 253: // STATE 545 - _spin_nvr.tmp:2697 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][545] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 254: // STATE 547 - _spin_nvr.tmp:2698 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][547] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 255: // STATE 549 - _spin_nvr.tmp:2699 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][549] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 256: // STATE 551 - _spin_nvr.tmp:2700 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][551] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 257: // STATE 553 - _spin_nvr.tmp:2701 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported553 = 0;
			if (verbose && !reported553)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported553 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported553 = 0;
			if (verbose && !reported553)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported553 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][553] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 258: // STATE 555 - _spin_nvr.tmp:2702 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][555] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 259: // STATE 557 - _spin_nvr.tmp:2703 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][557] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 260: // STATE 559 - _spin_nvr.tmp:2704 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][559] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 261: // STATE 563 - _spin_nvr.tmp:2706 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported563 = 0;
			if (verbose && !reported563)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported563 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported563 = 0;
			if (verbose && !reported563)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported563 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][563] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 262: // STATE 565 - _spin_nvr.tmp:2707 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported565 = 0;
			if (verbose && !reported565)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported565 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported565 = 0;
			if (verbose && !reported565)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported565 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][565] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 263: // STATE 567 - _spin_nvr.tmp:2708 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported567 = 0;
			if (verbose && !reported567)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported567 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported567 = 0;
			if (verbose && !reported567)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported567 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][567] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 264: // STATE 569 - _spin_nvr.tmp:2709 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported569 = 0;
			if (verbose && !reported569)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported569 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported569 = 0;
			if (verbose && !reported569)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported569 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][569] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 265: // STATE 571 - _spin_nvr.tmp:2710 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported571 = 0;
			if (verbose && !reported571)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported571 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported571 = 0;
			if (verbose && !reported571)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported571 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][571] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 266: // STATE 573 - _spin_nvr.tmp:2711 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported573 = 0;
			if (verbose && !reported573)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported573 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported573 = 0;
			if (verbose && !reported573)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported573 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][573] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 267: // STATE 578 - _spin_nvr.tmp:2715 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][578] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 268: // STATE 580 - _spin_nvr.tmp:2716 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][580] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 269: // STATE 582 - _spin_nvr.tmp:2717 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][582] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 270: // STATE 584 - _spin_nvr.tmp:2718 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][584] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 271: // STATE 586 - _spin_nvr.tmp:2719 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][586] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 272: // STATE 588 - _spin_nvr.tmp:2720 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][588] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 273: // STATE 590 - _spin_nvr.tmp:2721 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported590 = 0;
			if (verbose && !reported590)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported590 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported590 = 0;
			if (verbose && !reported590)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported590 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][590] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 274: // STATE 592 - _spin_nvr.tmp:2722 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][592] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 275: // STATE 594 - _spin_nvr.tmp:2723 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][594] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 276: // STATE 596 - _spin_nvr.tmp:2724 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][596] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 277: // STATE 598 - _spin_nvr.tmp:2725 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][598] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 278: // STATE 602 - _spin_nvr.tmp:2727 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][602] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 279: // STATE 607 - _spin_nvr.tmp:2731 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][607] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 280: // STATE 609 - _spin_nvr.tmp:2732 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported609 = 0;
			if (verbose && !reported609)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported609 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported609 = 0;
			if (verbose && !reported609)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported609 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][609] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 281: // STATE 611 - _spin_nvr.tmp:2733 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported611 = 0;
			if (verbose && !reported611)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported611 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported611 = 0;
			if (verbose && !reported611)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported611 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][611] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 282: // STATE 613 - _spin_nvr.tmp:2734 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported613 = 0;
			if (verbose && !reported613)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported613 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported613 = 0;
			if (verbose && !reported613)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported613 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][613] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 283: // STATE 615 - _spin_nvr.tmp:2735 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported615 = 0;
			if (verbose && !reported615)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported615 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported615 = 0;
			if (verbose && !reported615)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported615 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][615] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 284: // STATE 617 - _spin_nvr.tmp:2736 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported617 = 0;
			if (verbose && !reported617)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported617 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported617 = 0;
			if (verbose && !reported617)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported617 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][617] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 285: // STATE 619 - _spin_nvr.tmp:2737 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported619 = 0;
			if (verbose && !reported619)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported619 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported619 = 0;
			if (verbose && !reported619)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported619 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][619] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 286: // STATE 621 - _spin_nvr.tmp:2738 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported621 = 0;
			if (verbose && !reported621)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported621 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported621 = 0;
			if (verbose && !reported621)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported621 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][621] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 287: // STATE 623 - _spin_nvr.tmp:2739 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported623 = 0;
			if (verbose && !reported623)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported623 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported623 = 0;
			if (verbose && !reported623)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported623 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][623] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 288: // STATE 625 - _spin_nvr.tmp:2740 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported625 = 0;
			if (verbose && !reported625)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported625 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported625 = 0;
			if (verbose && !reported625)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported625 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][625] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 289: // STATE 627 - _spin_nvr.tmp:2741 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported627 = 0;
			if (verbose && !reported627)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported627 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported627 = 0;
			if (verbose && !reported627)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported627 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][627] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 290: // STATE 631 - _spin_nvr.tmp:2743 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported631 = 0;
			if (verbose && !reported631)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported631 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported631 = 0;
			if (verbose && !reported631)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported631 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][631] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 291: // STATE 633 - _spin_nvr.tmp:2744 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported633 = 0;
			if (verbose && !reported633)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported633 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported633 = 0;
			if (verbose && !reported633)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported633 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][633] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 292: // STATE 635 - _spin_nvr.tmp:2745 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported635 = 0;
			if (verbose && !reported635)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported635 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported635 = 0;
			if (verbose && !reported635)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported635 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][635] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 293: // STATE 637 - _spin_nvr.tmp:2746 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported637 = 0;
			if (verbose && !reported637)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported637 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported637 = 0;
			if (verbose && !reported637)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported637 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][637] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 294: // STATE 639 - _spin_nvr.tmp:2747 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported639 = 0;
			if (verbose && !reported639)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported639 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported639 = 0;
			if (verbose && !reported639)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported639 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][639] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 295: // STATE 641 - _spin_nvr.tmp:2748 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported641 = 0;
			if (verbose && !reported641)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported641 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported641 = 0;
			if (verbose && !reported641)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported641 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][641] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 296: // STATE 643 - _spin_nvr.tmp:2749 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported643 = 0;
			if (verbose && !reported643)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported643 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported643 = 0;
			if (verbose && !reported643)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported643 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][643] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 297: // STATE 645 - _spin_nvr.tmp:2750 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported645 = 0;
			if (verbose && !reported645)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported645 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported645 = 0;
			if (verbose && !reported645)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported645 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][645] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 298: // STATE 647 - _spin_nvr.tmp:2751 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported647 = 0;
			if (verbose && !reported647)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported647 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported647 = 0;
			if (verbose && !reported647)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported647 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][647] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 299: // STATE 649 - _spin_nvr.tmp:2752 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported649 = 0;
			if (verbose && !reported649)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported649 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported649 = 0;
			if (verbose && !reported649)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported649 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][649] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 300: // STATE 651 - _spin_nvr.tmp:2753 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported651 = 0;
			if (verbose && !reported651)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported651 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported651 = 0;
			if (verbose && !reported651)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported651 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][651] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 301: // STATE 653 - _spin_nvr.tmp:2754 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported653 = 0;
			if (verbose && !reported653)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported653 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported653 = 0;
			if (verbose && !reported653)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported653 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][653] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 302: // STATE 658 - _spin_nvr.tmp:2758 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported658 = 0;
			if (verbose && !reported658)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported658 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported658 = 0;
			if (verbose && !reported658)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported658 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][658] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 303: // STATE 660 - _spin_nvr.tmp:2759 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported660 = 0;
			if (verbose && !reported660)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported660 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported660 = 0;
			if (verbose && !reported660)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported660 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][660] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 304: // STATE 662 - _spin_nvr.tmp:2760 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported662 = 0;
			if (verbose && !reported662)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported662 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported662 = 0;
			if (verbose && !reported662)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported662 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][662] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 305: // STATE 664 - _spin_nvr.tmp:2761 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported664 = 0;
			if (verbose && !reported664)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported664 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported664 = 0;
			if (verbose && !reported664)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported664 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][664] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 306: // STATE 666 - _spin_nvr.tmp:2762 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported666 = 0;
			if (verbose && !reported666)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported666 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported666 = 0;
			if (verbose && !reported666)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported666 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][666] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 307: // STATE 668 - _spin_nvr.tmp:2763 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported668 = 0;
			if (verbose && !reported668)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported668 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported668 = 0;
			if (verbose && !reported668)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported668 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][668] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 308: // STATE 670 - _spin_nvr.tmp:2764 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported670 = 0;
			if (verbose && !reported670)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported670 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported670 = 0;
			if (verbose && !reported670)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported670 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][670] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 309: // STATE 672 - _spin_nvr.tmp:2765 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported672 = 0;
			if (verbose && !reported672)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported672 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported672 = 0;
			if (verbose && !reported672)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported672 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][672] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 310: // STATE 674 - _spin_nvr.tmp:2766 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported674 = 0;
			if (verbose && !reported674)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported674 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported674 = 0;
			if (verbose && !reported674)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported674 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][674] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 311: // STATE 676 - _spin_nvr.tmp:2767 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported676 = 0;
			if (verbose && !reported676)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported676 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported676 = 0;
			if (verbose && !reported676)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported676 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][676] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 312: // STATE 678 - _spin_nvr.tmp:2768 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported678 = 0;
			if (verbose && !reported678)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported678 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported678 = 0;
			if (verbose && !reported678)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported678 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][678] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 313: // STATE 682 - _spin_nvr.tmp:2770 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported682 = 0;
			if (verbose && !reported682)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported682 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported682 = 0;
			if (verbose && !reported682)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported682 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][682] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 314: // STATE 684 - _spin_nvr.tmp:2771 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported684 = 0;
			if (verbose && !reported684)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported684 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported684 = 0;
			if (verbose && !reported684)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported684 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][684] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 315: // STATE 686 - _spin_nvr.tmp:2772 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported686 = 0;
			if (verbose && !reported686)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported686 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported686 = 0;
			if (verbose && !reported686)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported686 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][686] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 316: // STATE 688 - _spin_nvr.tmp:2773 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported688 = 0;
			if (verbose && !reported688)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported688 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported688 = 0;
			if (verbose && !reported688)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported688 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][688] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 317: // STATE 690 - _spin_nvr.tmp:2774 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported690 = 0;
			if (verbose && !reported690)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported690 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported690 = 0;
			if (verbose && !reported690)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported690 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][690] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 318: // STATE 692 - _spin_nvr.tmp:2775 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported692 = 0;
			if (verbose && !reported692)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported692 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported692 = 0;
			if (verbose && !reported692)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported692 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][692] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 319: // STATE 694 - _spin_nvr.tmp:2776 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported694 = 0;
			if (verbose && !reported694)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported694 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported694 = 0;
			if (verbose && !reported694)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported694 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][694] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 320: // STATE 696 - _spin_nvr.tmp:2777 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported696 = 0;
			if (verbose && !reported696)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported696 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported696 = 0;
			if (verbose && !reported696)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported696 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][696] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 321: // STATE 698 - _spin_nvr.tmp:2778 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported698 = 0;
			if (verbose && !reported698)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported698 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported698 = 0;
			if (verbose && !reported698)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported698 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][698] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 322: // STATE 700 - _spin_nvr.tmp:2779 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported700 = 0;
			if (verbose && !reported700)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported700 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported700 = 0;
			if (verbose && !reported700)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported700 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][700] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 323: // STATE 702 - _spin_nvr.tmp:2780 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported702 = 0;
			if (verbose && !reported702)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported702 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported702 = 0;
			if (verbose && !reported702)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported702 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][702] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 324: // STATE 704 - _spin_nvr.tmp:2781 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported704 = 0;
			if (verbose && !reported704)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported704 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported704 = 0;
			if (verbose && !reported704)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported704 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][704] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 325: // STATE 706 - _spin_nvr.tmp:2782 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported706 = 0;
			if (verbose && !reported706)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported706 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported706 = 0;
			if (verbose && !reported706)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported706 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][706] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 326: // STATE 711 - _spin_nvr.tmp:2786 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported711 = 0;
			if (verbose && !reported711)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported711 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported711 = 0;
			if (verbose && !reported711)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported711 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][711] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 327: // STATE 713 - _spin_nvr.tmp:2787 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported713 = 0;
			if (verbose && !reported713)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported713 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported713 = 0;
			if (verbose && !reported713)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported713 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][713] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 328: // STATE 715 - _spin_nvr.tmp:2788 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported715 = 0;
			if (verbose && !reported715)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported715 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported715 = 0;
			if (verbose && !reported715)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported715 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][715] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 329: // STATE 717 - _spin_nvr.tmp:2789 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported717 = 0;
			if (verbose && !reported717)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported717 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported717 = 0;
			if (verbose && !reported717)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported717 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][717] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 330: // STATE 719 - _spin_nvr.tmp:2790 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported719 = 0;
			if (verbose && !reported719)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported719 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported719 = 0;
			if (verbose && !reported719)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported719 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][719] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 331: // STATE 721 - _spin_nvr.tmp:2791 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported721 = 0;
			if (verbose && !reported721)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported721 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported721 = 0;
			if (verbose && !reported721)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported721 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][721] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 332: // STATE 723 - _spin_nvr.tmp:2792 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported723 = 0;
			if (verbose && !reported723)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported723 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported723 = 0;
			if (verbose && !reported723)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported723 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][723] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 333: // STATE 725 - _spin_nvr.tmp:2793 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported725 = 0;
			if (verbose && !reported725)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported725 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported725 = 0;
			if (verbose && !reported725)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported725 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][725] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 334: // STATE 727 - _spin_nvr.tmp:2794 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported727 = 0;
			if (verbose && !reported727)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported727 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported727 = 0;
			if (verbose && !reported727)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported727 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][727] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 335: // STATE 729 - _spin_nvr.tmp:2795 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported729 = 0;
			if (verbose && !reported729)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported729 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported729 = 0;
			if (verbose && !reported729)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported729 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][729] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 336: // STATE 731 - _spin_nvr.tmp:2796 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported731 = 0;
			if (verbose && !reported731)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported731 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported731 = 0;
			if (verbose && !reported731)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported731 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][731] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 337: // STATE 735 - _spin_nvr.tmp:2798 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported735 = 0;
			if (verbose && !reported735)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported735 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported735 = 0;
			if (verbose && !reported735)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported735 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][735] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 338: // STATE 737 - _spin_nvr.tmp:2799 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported737 = 0;
			if (verbose && !reported737)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported737 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported737 = 0;
			if (verbose && !reported737)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported737 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][737] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 339: // STATE 739 - _spin_nvr.tmp:2800 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported739 = 0;
			if (verbose && !reported739)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported739 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported739 = 0;
			if (verbose && !reported739)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported739 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][739] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 340: // STATE 741 - _spin_nvr.tmp:2801 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported741 = 0;
			if (verbose && !reported741)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported741 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported741 = 0;
			if (verbose && !reported741)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported741 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][741] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 341: // STATE 743 - _spin_nvr.tmp:2802 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported743 = 0;
			if (verbose && !reported743)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported743 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported743 = 0;
			if (verbose && !reported743)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported743 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][743] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 342: // STATE 745 - _spin_nvr.tmp:2803 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported745 = 0;
			if (verbose && !reported745)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported745 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported745 = 0;
			if (verbose && !reported745)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported745 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][745] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 343: // STATE 747 - _spin_nvr.tmp:2804 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported747 = 0;
			if (verbose && !reported747)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported747 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported747 = 0;
			if (verbose && !reported747)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported747 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][747] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 344: // STATE 749 - _spin_nvr.tmp:2805 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported749 = 0;
			if (verbose && !reported749)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported749 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported749 = 0;
			if (verbose && !reported749)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported749 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][749] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 345: // STATE 751 - _spin_nvr.tmp:2806 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported751 = 0;
			if (verbose && !reported751)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported751 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported751 = 0;
			if (verbose && !reported751)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported751 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][751] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 346: // STATE 753 - _spin_nvr.tmp:2807 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported753 = 0;
			if (verbose && !reported753)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported753 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported753 = 0;
			if (verbose && !reported753)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported753 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][753] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 347: // STATE 755 - _spin_nvr.tmp:2808 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported755 = 0;
			if (verbose && !reported755)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported755 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported755 = 0;
			if (verbose && !reported755)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported755 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][755] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 348: // STATE 757 - _spin_nvr.tmp:2809 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported757 = 0;
			if (verbose && !reported757)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported757 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported757 = 0;
			if (verbose && !reported757)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported757 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][757] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 349: // STATE 759 - _spin_nvr.tmp:2810 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported759 = 0;
			if (verbose && !reported759)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported759 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported759 = 0;
			if (verbose && !reported759)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported759 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][759] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 350: // STATE 761 - _spin_nvr.tmp:2811 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported761 = 0;
			if (verbose && !reported761)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported761 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported761 = 0;
			if (verbose && !reported761)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported761 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][761] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 351: // STATE 766 - _spin_nvr.tmp:2815 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported766 = 0;
			if (verbose && !reported766)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported766 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported766 = 0;
			if (verbose && !reported766)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported766 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][766] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 352: // STATE 768 - _spin_nvr.tmp:2816 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported768 = 0;
			if (verbose && !reported768)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported768 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported768 = 0;
			if (verbose && !reported768)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported768 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][768] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 353: // STATE 770 - _spin_nvr.tmp:2817 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported770 = 0;
			if (verbose && !reported770)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported770 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported770 = 0;
			if (verbose && !reported770)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported770 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][770] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 354: // STATE 772 - _spin_nvr.tmp:2818 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported772 = 0;
			if (verbose && !reported772)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported772 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported772 = 0;
			if (verbose && !reported772)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported772 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][772] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 355: // STATE 774 - _spin_nvr.tmp:2819 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported774 = 0;
			if (verbose && !reported774)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported774 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported774 = 0;
			if (verbose && !reported774)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported774 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][774] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 356: // STATE 776 - _spin_nvr.tmp:2820 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported776 = 0;
			if (verbose && !reported776)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported776 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported776 = 0;
			if (verbose && !reported776)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported776 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][776] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 357: // STATE 778 - _spin_nvr.tmp:2821 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported778 = 0;
			if (verbose && !reported778)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported778 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported778 = 0;
			if (verbose && !reported778)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported778 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][778] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 358: // STATE 780 - _spin_nvr.tmp:2822 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported780 = 0;
			if (verbose && !reported780)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported780 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported780 = 0;
			if (verbose && !reported780)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported780 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][780] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 359: // STATE 782 - _spin_nvr.tmp:2823 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported782 = 0;
			if (verbose && !reported782)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported782 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported782 = 0;
			if (verbose && !reported782)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported782 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][782] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 360: // STATE 784 - _spin_nvr.tmp:2824 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported784 = 0;
			if (verbose && !reported784)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported784 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported784 = 0;
			if (verbose && !reported784)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported784 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][784] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 361: // STATE 786 - _spin_nvr.tmp:2825 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported786 = 0;
			if (verbose && !reported786)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported786 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported786 = 0;
			if (verbose && !reported786)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported786 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][786] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 362: // STATE 788 - _spin_nvr.tmp:2826 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported788 = 0;
			if (verbose && !reported788)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported788 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported788 = 0;
			if (verbose && !reported788)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported788 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][788] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 363: // STATE 792 - _spin_nvr.tmp:2828 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported792 = 0;
			if (verbose && !reported792)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported792 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported792 = 0;
			if (verbose && !reported792)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported792 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][792] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 364: // STATE 794 - _spin_nvr.tmp:2829 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported794 = 0;
			if (verbose && !reported794)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported794 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported794 = 0;
			if (verbose && !reported794)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported794 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][794] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 365: // STATE 796 - _spin_nvr.tmp:2830 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported796 = 0;
			if (verbose && !reported796)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported796 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported796 = 0;
			if (verbose && !reported796)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported796 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][796] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 366: // STATE 798 - _spin_nvr.tmp:2831 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported798 = 0;
			if (verbose && !reported798)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported798 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported798 = 0;
			if (verbose && !reported798)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported798 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][798] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 367: // STATE 800 - _spin_nvr.tmp:2832 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported800 = 0;
			if (verbose && !reported800)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported800 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported800 = 0;
			if (verbose && !reported800)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported800 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][800] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 368: // STATE 805 - _spin_nvr.tmp:2836 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported805 = 0;
			if (verbose && !reported805)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported805 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported805 = 0;
			if (verbose && !reported805)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported805 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][805] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 369: // STATE 807 - _spin_nvr.tmp:2837 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported807 = 0;
			if (verbose && !reported807)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported807 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported807 = 0;
			if (verbose && !reported807)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported807 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][807] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 370: // STATE 809 - _spin_nvr.tmp:2838 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported809 = 0;
			if (verbose && !reported809)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported809 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported809 = 0;
			if (verbose && !reported809)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported809 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][809] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 371: // STATE 811 - _spin_nvr.tmp:2839 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported811 = 0;
			if (verbose && !reported811)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported811 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported811 = 0;
			if (verbose && !reported811)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported811 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][811] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 372: // STATE 813 - _spin_nvr.tmp:2840 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported813 = 0;
			if (verbose && !reported813)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported813 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported813 = 0;
			if (verbose && !reported813)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported813 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][813] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 373: // STATE 815 - _spin_nvr.tmp:2841 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported815 = 0;
			if (verbose && !reported815)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported815 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported815 = 0;
			if (verbose && !reported815)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported815 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][815] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 374: // STATE 817 - _spin_nvr.tmp:2842 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported817 = 0;
			if (verbose && !reported817)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported817 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported817 = 0;
			if (verbose && !reported817)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported817 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][817] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 375: // STATE 819 - _spin_nvr.tmp:2843 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported819 = 0;
			if (verbose && !reported819)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported819 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported819 = 0;
			if (verbose && !reported819)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported819 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][819] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 376: // STATE 821 - _spin_nvr.tmp:2844 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported821 = 0;
			if (verbose && !reported821)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported821 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported821 = 0;
			if (verbose && !reported821)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported821 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][821] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 377: // STATE 823 - _spin_nvr.tmp:2845 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported823 = 0;
			if (verbose && !reported823)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported823 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported823 = 0;
			if (verbose && !reported823)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported823 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][823] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 378: // STATE 825 - _spin_nvr.tmp:2846 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported825 = 0;
			if (verbose && !reported825)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported825 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported825 = 0;
			if (verbose && !reported825)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported825 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][825] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 379: // STATE 829 - _spin_nvr.tmp:2848 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported829 = 0;
			if (verbose && !reported829)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported829 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported829 = 0;
			if (verbose && !reported829)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported829 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][829] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 380: // STATE 831 - _spin_nvr.tmp:2849 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported831 = 0;
			if (verbose && !reported831)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported831 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported831 = 0;
			if (verbose && !reported831)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported831 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][831] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 381: // STATE 833 - _spin_nvr.tmp:2850 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported833 = 0;
			if (verbose && !reported833)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported833 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported833 = 0;
			if (verbose && !reported833)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported833 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][833] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 382: // STATE 835 - _spin_nvr.tmp:2851 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported835 = 0;
			if (verbose && !reported835)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported835 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported835 = 0;
			if (verbose && !reported835)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported835 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][835] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 383: // STATE 837 - _spin_nvr.tmp:2852 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported837 = 0;
			if (verbose && !reported837)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported837 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported837 = 0;
			if (verbose && !reported837)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported837 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][837] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 384: // STATE 839 - _spin_nvr.tmp:2853 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported839 = 0;
			if (verbose && !reported839)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported839 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported839 = 0;
			if (verbose && !reported839)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported839 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][839] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 385: // STATE 841 - _spin_nvr.tmp:2854 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported841 = 0;
			if (verbose && !reported841)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported841 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported841 = 0;
			if (verbose && !reported841)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported841 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][841] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 386: // STATE 843 - _spin_nvr.tmp:2855 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported843 = 0;
			if (verbose && !reported843)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported843 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported843 = 0;
			if (verbose && !reported843)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported843 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][843] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 387: // STATE 845 - _spin_nvr.tmp:2856 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported845 = 0;
			if (verbose && !reported845)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported845 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported845 = 0;
			if (verbose && !reported845)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported845 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][845] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 388: // STATE 847 - _spin_nvr.tmp:2857 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported847 = 0;
			if (verbose && !reported847)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported847 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported847 = 0;
			if (verbose && !reported847)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported847 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][847] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 389: // STATE 849 - _spin_nvr.tmp:2858 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported849 = 0;
			if (verbose && !reported849)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported849 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported849 = 0;
			if (verbose && !reported849)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported849 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][849] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 390: // STATE 851 - _spin_nvr.tmp:2859 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported851 = 0;
			if (verbose && !reported851)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported851 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported851 = 0;
			if (verbose && !reported851)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported851 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][851] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 391: // STATE 853 - _spin_nvr.tmp:2860 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported853 = 0;
			if (verbose && !reported853)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported853 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported853 = 0;
			if (verbose && !reported853)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported853 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][853] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 392: // STATE 855 - _spin_nvr.tmp:2861 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported855 = 0;
			if (verbose && !reported855)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported855 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported855 = 0;
			if (verbose && !reported855)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported855 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][855] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 393: // STATE 857 - _spin_nvr.tmp:2862 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported857 = 0;
			if (verbose && !reported857)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported857 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported857 = 0;
			if (verbose && !reported857)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported857 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][857] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 394: // STATE 862 - _spin_nvr.tmp:2866 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported862 = 0;
			if (verbose && !reported862)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported862 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported862 = 0;
			if (verbose && !reported862)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported862 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][862] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 395: // STATE 864 - _spin_nvr.tmp:2867 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported864 = 0;
			if (verbose && !reported864)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported864 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported864 = 0;
			if (verbose && !reported864)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported864 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][864] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 396: // STATE 866 - _spin_nvr.tmp:2868 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported866 = 0;
			if (verbose && !reported866)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported866 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported866 = 0;
			if (verbose && !reported866)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported866 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][866] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 397: // STATE 868 - _spin_nvr.tmp:2869 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported868 = 0;
			if (verbose && !reported868)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported868 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported868 = 0;
			if (verbose && !reported868)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported868 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][868] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 398: // STATE 870 - _spin_nvr.tmp:2870 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported870 = 0;
			if (verbose && !reported870)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported870 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported870 = 0;
			if (verbose && !reported870)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported870 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][870] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 399: // STATE 872 - _spin_nvr.tmp:2871 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported872 = 0;
			if (verbose && !reported872)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported872 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported872 = 0;
			if (verbose && !reported872)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported872 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][872] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 400: // STATE 874 - _spin_nvr.tmp:2872 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported874 = 0;
			if (verbose && !reported874)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported874 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported874 = 0;
			if (verbose && !reported874)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported874 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][874] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 401: // STATE 876 - _spin_nvr.tmp:2873 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported876 = 0;
			if (verbose && !reported876)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported876 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported876 = 0;
			if (verbose && !reported876)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported876 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][876] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 402: // STATE 878 - _spin_nvr.tmp:2874 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported878 = 0;
			if (verbose && !reported878)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported878 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported878 = 0;
			if (verbose && !reported878)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported878 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][878] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 403: // STATE 880 - _spin_nvr.tmp:2875 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported880 = 0;
			if (verbose && !reported880)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported880 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported880 = 0;
			if (verbose && !reported880)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported880 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][880] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 404: // STATE 882 - _spin_nvr.tmp:2876 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported882 = 0;
			if (verbose && !reported882)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported882 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported882 = 0;
			if (verbose && !reported882)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported882 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][882] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 405: // STATE 886 - _spin_nvr.tmp:2878 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported886 = 0;
			if (verbose && !reported886)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported886 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported886 = 0;
			if (verbose && !reported886)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported886 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][886] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 406: // STATE 888 - _spin_nvr.tmp:2879 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported888 = 0;
			if (verbose && !reported888)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported888 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported888 = 0;
			if (verbose && !reported888)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported888 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][888] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 407: // STATE 890 - _spin_nvr.tmp:2880 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported890 = 0;
			if (verbose && !reported890)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported890 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported890 = 0;
			if (verbose && !reported890)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported890 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][890] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 408: // STATE 892 - _spin_nvr.tmp:2881 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported892 = 0;
			if (verbose && !reported892)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported892 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported892 = 0;
			if (verbose && !reported892)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported892 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][892] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 409: // STATE 894 - _spin_nvr.tmp:2882 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported894 = 0;
			if (verbose && !reported894)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported894 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported894 = 0;
			if (verbose && !reported894)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported894 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][894] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 410: // STATE 896 - _spin_nvr.tmp:2883 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported896 = 0;
			if (verbose && !reported896)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported896 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported896 = 0;
			if (verbose && !reported896)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported896 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][896] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 411: // STATE 898 - _spin_nvr.tmp:2884 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported898 = 0;
			if (verbose && !reported898)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported898 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported898 = 0;
			if (verbose && !reported898)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported898 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][898] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 412: // STATE 900 - _spin_nvr.tmp:2885 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported900 = 0;
			if (verbose && !reported900)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported900 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported900 = 0;
			if (verbose && !reported900)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported900 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][900] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 413: // STATE 902 - _spin_nvr.tmp:2886 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported902 = 0;
			if (verbose && !reported902)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported902 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported902 = 0;
			if (verbose && !reported902)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported902 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][902] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 414: // STATE 904 - _spin_nvr.tmp:2887 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported904 = 0;
			if (verbose && !reported904)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported904 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported904 = 0;
			if (verbose && !reported904)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported904 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][904] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 415: // STATE 906 - _spin_nvr.tmp:2888 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported906 = 0;
			if (verbose && !reported906)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported906 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported906 = 0;
			if (verbose && !reported906)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported906 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][906] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 416: // STATE 908 - _spin_nvr.tmp:2889 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported908 = 0;
			if (verbose && !reported908)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported908 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported908 = 0;
			if (verbose && !reported908)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported908 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][908] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 417: // STATE 910 - _spin_nvr.tmp:2890 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported910 = 0;
			if (verbose && !reported910)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported910 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported910 = 0;
			if (verbose && !reported910)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported910 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][910] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 418: // STATE 912 - _spin_nvr.tmp:2891 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported912 = 0;
			if (verbose && !reported912)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported912 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported912 = 0;
			if (verbose && !reported912)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported912 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][912] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 419: // STATE 914 - _spin_nvr.tmp:2892 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported914 = 0;
			if (verbose && !reported914)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported914 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported914 = 0;
			if (verbose && !reported914)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported914 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][914] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 420: // STATE 916 - _spin_nvr.tmp:2893 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported916 = 0;
			if (verbose && !reported916)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported916 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported916 = 0;
			if (verbose && !reported916)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported916 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][916] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 421: // STATE 921 - _spin_nvr.tmp:2897 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported921 = 0;
			if (verbose && !reported921)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported921 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported921 = 0;
			if (verbose && !reported921)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported921 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][921] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 422: // STATE 923 - _spin_nvr.tmp:2898 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported923 = 0;
			if (verbose && !reported923)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported923 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported923 = 0;
			if (verbose && !reported923)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported923 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][923] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 423: // STATE 925 - _spin_nvr.tmp:2899 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported925 = 0;
			if (verbose && !reported925)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported925 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported925 = 0;
			if (verbose && !reported925)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported925 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][925] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 424: // STATE 927 - _spin_nvr.tmp:2900 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported927 = 0;
			if (verbose && !reported927)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported927 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported927 = 0;
			if (verbose && !reported927)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported927 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][927] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 425: // STATE 932 - _spin_nvr.tmp:2904 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported932 = 0;
			if (verbose && !reported932)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported932 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported932 = 0;
			if (verbose && !reported932)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported932 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][932] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 426: // STATE 934 - _spin_nvr.tmp:2905 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported934 = 0;
			if (verbose && !reported934)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported934 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported934 = 0;
			if (verbose && !reported934)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported934 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][934] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 427: // STATE 936 - _spin_nvr.tmp:2906 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported936 = 0;
			if (verbose && !reported936)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported936 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported936 = 0;
			if (verbose && !reported936)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported936 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][936] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 428: // STATE 938 - _spin_nvr.tmp:2907 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported938 = 0;
			if (verbose && !reported938)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported938 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported938 = 0;
			if (verbose && !reported938)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported938 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][938] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 429: // STATE 940 - _spin_nvr.tmp:2908 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported940 = 0;
			if (verbose && !reported940)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported940 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported940 = 0;
			if (verbose && !reported940)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported940 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][940] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 430: // STATE 942 - _spin_nvr.tmp:2909 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported942 = 0;
			if (verbose && !reported942)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported942 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported942 = 0;
			if (verbose && !reported942)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported942 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][942] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 431: // STATE 944 - _spin_nvr.tmp:2910 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported944 = 0;
			if (verbose && !reported944)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported944 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported944 = 0;
			if (verbose && !reported944)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported944 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][944] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 432: // STATE 946 - _spin_nvr.tmp:2911 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported946 = 0;
			if (verbose && !reported946)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported946 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported946 = 0;
			if (verbose && !reported946)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported946 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][946] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 433: // STATE 948 - _spin_nvr.tmp:2912 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported948 = 0;
			if (verbose && !reported948)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported948 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported948 = 0;
			if (verbose && !reported948)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported948 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][948] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 434: // STATE 950 - _spin_nvr.tmp:2913 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported950 = 0;
			if (verbose && !reported950)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported950 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported950 = 0;
			if (verbose && !reported950)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported950 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][950] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 435: // STATE 952 - _spin_nvr.tmp:2914 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported952 = 0;
			if (verbose && !reported952)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported952 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported952 = 0;
			if (verbose && !reported952)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported952 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][952] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 436: // STATE 956 - _spin_nvr.tmp:2916 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported956 = 0;
			if (verbose && !reported956)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported956 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported956 = 0;
			if (verbose && !reported956)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported956 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][956] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 437: // STATE 958 - _spin_nvr.tmp:2917 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported958 = 0;
			if (verbose && !reported958)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported958 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported958 = 0;
			if (verbose && !reported958)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported958 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][958] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 438: // STATE 963 - _spin_nvr.tmp:2921 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported963 = 0;
			if (verbose && !reported963)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported963 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported963 = 0;
			if (verbose && !reported963)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported963 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][963] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 439: // STATE 965 - _spin_nvr.tmp:2922 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported965 = 0;
			if (verbose && !reported965)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported965 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported965 = 0;
			if (verbose && !reported965)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported965 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][965] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 440: // STATE 967 - _spin_nvr.tmp:2923 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported967 = 0;
			if (verbose && !reported967)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported967 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported967 = 0;
			if (verbose && !reported967)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported967 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][967] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 441: // STATE 969 - _spin_nvr.tmp:2924 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported969 = 0;
			if (verbose && !reported969)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported969 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported969 = 0;
			if (verbose && !reported969)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported969 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][969] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 442: // STATE 971 - _spin_nvr.tmp:2925 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported971 = 0;
			if (verbose && !reported971)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported971 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported971 = 0;
			if (verbose && !reported971)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported971 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][971] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 443: // STATE 973 - _spin_nvr.tmp:2926 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported973 = 0;
			if (verbose && !reported973)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported973 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported973 = 0;
			if (verbose && !reported973)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported973 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][973] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 444: // STATE 975 - _spin_nvr.tmp:2927 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported975 = 0;
			if (verbose && !reported975)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported975 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported975 = 0;
			if (verbose && !reported975)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported975 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][975] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 445: // STATE 977 - _spin_nvr.tmp:2928 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported977 = 0;
			if (verbose && !reported977)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported977 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported977 = 0;
			if (verbose && !reported977)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported977 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][977] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 446: // STATE 979 - _spin_nvr.tmp:2929 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported979 = 0;
			if (verbose && !reported979)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported979 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported979 = 0;
			if (verbose && !reported979)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported979 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][979] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 447: // STATE 981 - _spin_nvr.tmp:2930 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported981 = 0;
			if (verbose && !reported981)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported981 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported981 = 0;
			if (verbose && !reported981)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported981 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][981] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 448: // STATE 983 - _spin_nvr.tmp:2931 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported983 = 0;
			if (verbose && !reported983)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported983 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported983 = 0;
			if (verbose && !reported983)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported983 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][983] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 449: // STATE 987 - _spin_nvr.tmp:2933 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported987 = 0;
			if (verbose && !reported987)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported987 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported987 = 0;
			if (verbose && !reported987)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported987 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][987] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 450: // STATE 989 - _spin_nvr.tmp:2934 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported989 = 0;
			if (verbose && !reported989)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported989 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported989 = 0;
			if (verbose && !reported989)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported989 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][989] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 451: // STATE 991 - _spin_nvr.tmp:2935 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported991 = 0;
			if (verbose && !reported991)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported991 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported991 = 0;
			if (verbose && !reported991)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported991 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][991] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 452: // STATE 993 - _spin_nvr.tmp:2936 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported993 = 0;
			if (verbose && !reported993)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported993 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported993 = 0;
			if (verbose && !reported993)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported993 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][993] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 453: // STATE 995 - _spin_nvr.tmp:2937 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported995 = 0;
			if (verbose && !reported995)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported995 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported995 = 0;
			if (verbose && !reported995)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported995 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][995] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 454: // STATE 997 - _spin_nvr.tmp:2938 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported997 = 0;
			if (verbose && !reported997)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported997 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported997 = 0;
			if (verbose && !reported997)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported997 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][997] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 455: // STATE 999 - _spin_nvr.tmp:2939 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported999 = 0;
			if (verbose && !reported999)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported999 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported999 = 0;
			if (verbose && !reported999)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported999 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][999] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 456: // STATE 1001 - _spin_nvr.tmp:2940 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1001 = 0;
			if (verbose && !reported1001)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1001 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1001 = 0;
			if (verbose && !reported1001)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1001 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1001] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 457: // STATE 1006 - _spin_nvr.tmp:2944 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1006 = 0;
			if (verbose && !reported1006)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1006 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1006 = 0;
			if (verbose && !reported1006)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1006 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1006] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 458: // STATE 1008 - _spin_nvr.tmp:2945 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1008 = 0;
			if (verbose && !reported1008)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1008 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1008 = 0;
			if (verbose && !reported1008)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1008 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1008] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 459: // STATE 1010 - _spin_nvr.tmp:2946 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1010 = 0;
			if (verbose && !reported1010)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1010 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1010 = 0;
			if (verbose && !reported1010)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1010 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1010] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 460: // STATE 1012 - _spin_nvr.tmp:2947 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1012 = 0;
			if (verbose && !reported1012)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1012 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1012 = 0;
			if (verbose && !reported1012)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1012 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1012] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 461: // STATE 1014 - _spin_nvr.tmp:2948 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1014 = 0;
			if (verbose && !reported1014)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1014 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1014 = 0;
			if (verbose && !reported1014)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1014 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1014] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 462: // STATE 1016 - _spin_nvr.tmp:2949 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1016 = 0;
			if (verbose && !reported1016)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1016 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1016 = 0;
			if (verbose && !reported1016)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1016 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1016] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 463: // STATE 1018 - _spin_nvr.tmp:2950 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1018 = 0;
			if (verbose && !reported1018)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1018 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1018 = 0;
			if (verbose && !reported1018)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1018 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1018] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 464: // STATE 1020 - _spin_nvr.tmp:2951 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1020 = 0;
			if (verbose && !reported1020)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1020 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1020 = 0;
			if (verbose && !reported1020)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1020 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1020] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 465: // STATE 1022 - _spin_nvr.tmp:2952 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1022 = 0;
			if (verbose && !reported1022)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1022 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1022 = 0;
			if (verbose && !reported1022)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1022 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1022] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 466: // STATE 1024 - _spin_nvr.tmp:2953 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1024 = 0;
			if (verbose && !reported1024)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1024 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1024 = 0;
			if (verbose && !reported1024)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1024 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1024] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 467: // STATE 1026 - _spin_nvr.tmp:2954 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1026 = 0;
			if (verbose && !reported1026)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1026 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1026 = 0;
			if (verbose && !reported1026)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1026 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1026] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 468: // STATE 1030 - _spin_nvr.tmp:2956 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1030 = 0;
			if (verbose && !reported1030)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1030 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1030 = 0;
			if (verbose && !reported1030)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1030 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1030] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 469: // STATE 1032 - _spin_nvr.tmp:2957 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1032 = 0;
			if (verbose && !reported1032)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1032 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1032 = 0;
			if (verbose && !reported1032)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1032 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1032] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 470: // STATE 1034 - _spin_nvr.tmp:2958 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1034 = 0;
			if (verbose && !reported1034)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1034 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1034 = 0;
			if (verbose && !reported1034)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1034 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1034] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 471: // STATE 1039 - _spin_nvr.tmp:2962 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1039 = 0;
			if (verbose && !reported1039)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1039 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1039 = 0;
			if (verbose && !reported1039)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1039 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1039] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 472: // STATE 1041 - _spin_nvr.tmp:2963 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1041 = 0;
			if (verbose && !reported1041)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1041 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1041 = 0;
			if (verbose && !reported1041)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1041 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1041] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 473: // STATE 1043 - _spin_nvr.tmp:2964 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1043 = 0;
			if (verbose && !reported1043)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1043 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1043 = 0;
			if (verbose && !reported1043)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1043 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1043] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 474: // STATE 1045 - _spin_nvr.tmp:2965 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1045 = 0;
			if (verbose && !reported1045)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1045 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1045 = 0;
			if (verbose && !reported1045)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1045 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1045] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 475: // STATE 1047 - _spin_nvr.tmp:2966 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1047 = 0;
			if (verbose && !reported1047)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1047 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1047 = 0;
			if (verbose && !reported1047)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1047 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1047] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 476: // STATE 1049 - _spin_nvr.tmp:2967 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1049 = 0;
			if (verbose && !reported1049)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1049 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1049 = 0;
			if (verbose && !reported1049)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1049 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1049] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 477: // STATE 1051 - _spin_nvr.tmp:2968 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1051 = 0;
			if (verbose && !reported1051)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1051 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1051 = 0;
			if (verbose && !reported1051)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1051 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1051] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 478: // STATE 1053 - _spin_nvr.tmp:2969 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1053 = 0;
			if (verbose && !reported1053)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1053 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1053 = 0;
			if (verbose && !reported1053)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1053 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1053] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 479: // STATE 1055 - _spin_nvr.tmp:2970 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1055 = 0;
			if (verbose && !reported1055)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1055 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1055 = 0;
			if (verbose && !reported1055)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1055 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1055] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 480: // STATE 1057 - _spin_nvr.tmp:2971 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1057 = 0;
			if (verbose && !reported1057)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1057 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1057 = 0;
			if (verbose && !reported1057)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1057 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1057] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 481: // STATE 1059 - _spin_nvr.tmp:2972 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1059 = 0;
			if (verbose && !reported1059)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1059 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1059 = 0;
			if (verbose && !reported1059)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1059 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1059] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 482: // STATE 1063 - _spin_nvr.tmp:2974 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1063 = 0;
			if (verbose && !reported1063)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1063 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1063 = 0;
			if (verbose && !reported1063)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1063 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1063] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 483: // STATE 1065 - _spin_nvr.tmp:2975 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1065 = 0;
			if (verbose && !reported1065)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1065 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1065 = 0;
			if (verbose && !reported1065)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1065 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1065] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 484: // STATE 1067 - _spin_nvr.tmp:2976 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1067 = 0;
			if (verbose && !reported1067)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1067 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1067 = 0;
			if (verbose && !reported1067)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1067 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1067] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 485: // STATE 1069 - _spin_nvr.tmp:2977 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1069 = 0;
			if (verbose && !reported1069)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1069 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1069 = 0;
			if (verbose && !reported1069)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1069 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1069] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 486: // STATE 1071 - _spin_nvr.tmp:2978 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1071 = 0;
			if (verbose && !reported1071)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1071 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1071 = 0;
			if (verbose && !reported1071)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1071 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1071] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 487: // STATE 1073 - _spin_nvr.tmp:2979 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1073 = 0;
			if (verbose && !reported1073)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1073 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1073 = 0;
			if (verbose && !reported1073)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1073 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1073] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 488: // STATE 1075 - _spin_nvr.tmp:2980 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1075 = 0;
			if (verbose && !reported1075)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1075 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1075 = 0;
			if (verbose && !reported1075)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1075 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1075] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 489: // STATE 1077 - _spin_nvr.tmp:2981 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1077 = 0;
			if (verbose && !reported1077)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1077 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1077 = 0;
			if (verbose && !reported1077)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1077 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1077] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 490: // STATE 1079 - _spin_nvr.tmp:2982 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1079 = 0;
			if (verbose && !reported1079)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1079 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1079 = 0;
			if (verbose && !reported1079)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1079 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1079] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 491: // STATE 1081 - _spin_nvr.tmp:2983 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1081 = 0;
			if (verbose && !reported1081)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1081 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1081 = 0;
			if (verbose && !reported1081)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1081 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1081] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 492: // STATE 1083 - _spin_nvr.tmp:2984 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1083 = 0;
			if (verbose && !reported1083)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1083 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1083 = 0;
			if (verbose && !reported1083)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1083 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1083] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 493: // STATE 1085 - _spin_nvr.tmp:2985 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1085 = 0;
			if (verbose && !reported1085)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1085 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1085 = 0;
			if (verbose && !reported1085)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1085 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1085] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 494: // STATE 1087 - _spin_nvr.tmp:2986 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1087 = 0;
			if (verbose && !reported1087)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1087 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1087 = 0;
			if (verbose && !reported1087)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1087 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1087] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 495: // STATE 1089 - _spin_nvr.tmp:2987 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1089 = 0;
			if (verbose && !reported1089)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1089 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1089 = 0;
			if (verbose && !reported1089)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1089 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1089] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 496: // STATE 1091 - _spin_nvr.tmp:2988 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1091 = 0;
			if (verbose && !reported1091)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1091 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1091 = 0;
			if (verbose && !reported1091)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1091 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1091] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 497: // STATE 1093 - _spin_nvr.tmp:2989 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1093 = 0;
			if (verbose && !reported1093)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1093 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1093 = 0;
			if (verbose && !reported1093)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1093 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1093] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 498: // STATE 1098 - _spin_nvr.tmp:2993 - [((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1098 = 0;
			if (verbose && !reported1098)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1098 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1098 = 0;
			if (verbose && !reported1098)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1098 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1098] = 1;
		if (!(((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 499: // STATE 1100 - _spin_nvr.tmp:2994 - [(((!(pumpOn)&&!(methane))&&(waterLevel==high)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1100 = 0;
			if (verbose && !reported1100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1100 = 0;
			if (verbose && !reported1100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1100] = 1;
		if (!((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 500: // STATE 1102 - _spin_nvr.tmp:2995 - [((((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1102 = 0;
			if (verbose && !reported1102)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1102 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1102 = 0;
			if (verbose && !reported1102)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1102 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1102] = 1;
		if (!(((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 501: // STATE 1104 - _spin_nvr.tmp:2996 - [(((((!(pumpOn)&&!(methane))&&(waterLevel==high))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1104 = 0;
			if (verbose && !reported1104)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1104 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1104 = 0;
			if (verbose && !reported1104)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1104 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1104] = 1;
		if (!((((( !(((int)now.pumpOn))&& !(((int)now.methane)))&&(now.waterLevel==6))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 502: // STATE 1106 - _spin_nvr.tmp:2997 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1106 = 0;
			if (verbose && !reported1106)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1106 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1106 = 0;
			if (verbose && !reported1106)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1106 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1106] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 503: // STATE 1108 - _spin_nvr.tmp:2998 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1108 = 0;
			if (verbose && !reported1108)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1108 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1108 = 0;
			if (verbose && !reported1108)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1108 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1108] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 504: // STATE 1110 - _spin_nvr.tmp:2999 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1110 = 0;
			if (verbose && !reported1110)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1110 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1110 = 0;
			if (verbose && !reported1110)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1110 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1110] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 505: // STATE 1112 - _spin_nvr.tmp:3000 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1112 = 0;
			if (verbose && !reported1112)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1112 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1112 = 0;
			if (verbose && !reported1112)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1112 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1112] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 506: // STATE 1114 - _spin_nvr.tmp:3001 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1114 = 0;
			if (verbose && !reported1114)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1114 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1114 = 0;
			if (verbose && !reported1114)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1114 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1114] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 507: // STATE 1116 - _spin_nvr.tmp:3002 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1116 = 0;
			if (verbose && !reported1116)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1116 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1116 = 0;
			if (verbose && !reported1116)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1116 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1116] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 508: // STATE 1118 - _spin_nvr.tmp:3003 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1118 = 0;
			if (verbose && !reported1118)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1118 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1118 = 0;
			if (verbose && !reported1118)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1118 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1118] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 509: // STATE 1120 - _spin_nvr.tmp:3004 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1120 = 0;
			if (verbose && !reported1120)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1120 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1120 = 0;
			if (verbose && !reported1120)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1120 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1120] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 510: // STATE 1122 - _spin_nvr.tmp:3005 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1122 = 0;
			if (verbose && !reported1122)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1122 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1122 = 0;
			if (verbose && !reported1122)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1122 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1122] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 511: // STATE 1124 - _spin_nvr.tmp:3006 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1124 = 0;
			if (verbose && !reported1124)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1124 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1124 = 0;
			if (verbose && !reported1124)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1124 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1124] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 512: // STATE 1126 - _spin_nvr.tmp:3007 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1126 = 0;
			if (verbose && !reported1126)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1126 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1126 = 0;
			if (verbose && !reported1126)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1126 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1126] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 513: // STATE 1128 - _spin_nvr.tmp:3008 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1128 = 0;
			if (verbose && !reported1128)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1128 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1128 = 0;
			if (verbose && !reported1128)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1128 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1128] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 514: // STATE 1130 - _spin_nvr.tmp:3009 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1130 = 0;
			if (verbose && !reported1130)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1130 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1130 = 0;
			if (verbose && !reported1130)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1130 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1130] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 515: // STATE 1132 - _spin_nvr.tmp:3010 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1132 = 0;
			if (verbose && !reported1132)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1132 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1132 = 0;
			if (verbose && !reported1132)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1132 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1132] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 516: // STATE 1134 - _spin_nvr.tmp:3011 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1134 = 0;
			if (verbose && !reported1134)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1134 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1134 = 0;
			if (verbose && !reported1134)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1134 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1134] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 517: // STATE 1136 - _spin_nvr.tmp:3012 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1136 = 0;
			if (verbose && !reported1136)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1136 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1136 = 0;
			if (verbose && !reported1136)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1136 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1136] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 518: // STATE 1138 - _spin_nvr.tmp:3013 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1138 = 0;
			if (verbose && !reported1138)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1138 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1138 = 0;
			if (verbose && !reported1138)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1138 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1138] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 519: // STATE 1145 - _spin_nvr.tmp:3016 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1145 = 0;
			if (verbose && !reported1145)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1145 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1145 = 0;
			if (verbose && !reported1145)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1145 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[18][1145] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_stopped */
	case 520: // STATE 1 - _spin_nvr.tmp:1776 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 521: // STATE 3 - _spin_nvr.tmp:1777 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][3] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 522: // STATE 5 - _spin_nvr.tmp:1778 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][5] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 523: // STATE 7 - _spin_nvr.tmp:1779 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][7] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 524: // STATE 9 - _spin_nvr.tmp:1780 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][9] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 525: // STATE 11 - _spin_nvr.tmp:1781 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][11] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 526: // STATE 13 - _spin_nvr.tmp:1782 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][13] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 527: // STATE 15 - _spin_nvr.tmp:1783 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][15] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 528: // STATE 17 - _spin_nvr.tmp:1784 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][17] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 529: // STATE 19 - _spin_nvr.tmp:1785 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][19] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 530: // STATE 21 - _spin_nvr.tmp:1786 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][21] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 531: // STATE 28 - _spin_nvr.tmp:1791 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][28] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 532: // STATE 33 - _spin_nvr.tmp:1795 - [(((pumpOn&&(waterLevel==low))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][33] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 533: // STATE 35 - _spin_nvr.tmp:1796 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][35] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 534: // STATE 40 - _spin_nvr.tmp:1800 - [((((pumpOn&&(waterLevel==low))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][40] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 535: // STATE 42 - _spin_nvr.tmp:1801 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][42] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 536: // STATE 44 - _spin_nvr.tmp:1802 - [(((pumpOn&&(waterLevel==low))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][44] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 537: // STATE 49 - _spin_nvr.tmp:1806 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][49] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 538: // STATE 51 - _spin_nvr.tmp:1807 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][51] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 539: // STATE 53 - _spin_nvr.tmp:1808 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][53] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 540: // STATE 55 - _spin_nvr.tmp:1809 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][55] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 541: // STATE 57 - _spin_nvr.tmp:1810 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][57] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 542: // STATE 59 - _spin_nvr.tmp:1811 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][59] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 543: // STATE 61 - _spin_nvr.tmp:1812 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][61] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 544: // STATE 63 - _spin_nvr.tmp:1813 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][63] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 545: // STATE 65 - _spin_nvr.tmp:1814 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][65] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 546: // STATE 67 - _spin_nvr.tmp:1815 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported67 = 0;
			if (verbose && !reported67)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported67 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported67 = 0;
			if (verbose && !reported67)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported67 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][67] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 547: // STATE 69 - _spin_nvr.tmp:1816 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][69] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 548: // STATE 73 - _spin_nvr.tmp:1818 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported73 = 0;
			if (verbose && !reported73)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported73 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported73 = 0;
			if (verbose && !reported73)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported73 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][73] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 549: // STATE 75 - _spin_nvr.tmp:1819 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported75 = 0;
			if (verbose && !reported75)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported75 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported75 = 0;
			if (verbose && !reported75)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported75 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][75] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 550: // STATE 80 - _spin_nvr.tmp:1823 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][80] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 551: // STATE 82 - _spin_nvr.tmp:1824 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][82] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 552: // STATE 84 - _spin_nvr.tmp:1825 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][84] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 553: // STATE 86 - _spin_nvr.tmp:1826 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][86] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 554: // STATE 88 - _spin_nvr.tmp:1827 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][88] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 555: // STATE 90 - _spin_nvr.tmp:1828 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][90] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 556: // STATE 92 - _spin_nvr.tmp:1829 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][92] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 557: // STATE 94 - _spin_nvr.tmp:1830 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][94] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 558: // STATE 96 - _spin_nvr.tmp:1831 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported96 = 0;
			if (verbose && !reported96)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported96 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported96 = 0;
			if (verbose && !reported96)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported96 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][96] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 559: // STATE 98 - _spin_nvr.tmp:1832 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][98] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 560: // STATE 100 - _spin_nvr.tmp:1833 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][100] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 561: // STATE 107 - _spin_nvr.tmp:1838 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][107] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 562: // STATE 109 - _spin_nvr.tmp:1839 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][109] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 563: // STATE 111 - _spin_nvr.tmp:1840 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][111] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 564: // STATE 113 - _spin_nvr.tmp:1841 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][113] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 565: // STATE 115 - _spin_nvr.tmp:1842 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][115] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 566: // STATE 117 - _spin_nvr.tmp:1843 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][117] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 567: // STATE 119 - _spin_nvr.tmp:1844 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][119] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 568: // STATE 121 - _spin_nvr.tmp:1845 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][121] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 569: // STATE 123 - _spin_nvr.tmp:1846 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][123] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 570: // STATE 125 - _spin_nvr.tmp:1847 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][125] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 571: // STATE 127 - _spin_nvr.tmp:1848 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported127 = 0;
			if (verbose && !reported127)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported127 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported127 = 0;
			if (verbose && !reported127)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported127 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][127] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 572: // STATE 129 - _spin_nvr.tmp:1849 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][129] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 573: // STATE 131 - _spin_nvr.tmp:1850 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][131] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 574: // STATE 133 - _spin_nvr.tmp:1851 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported133 = 0;
			if (verbose && !reported133)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported133 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported133 = 0;
			if (verbose && !reported133)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported133 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][133] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 575: // STATE 140 - _spin_nvr.tmp:1856 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][140] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 576: // STATE 142 - _spin_nvr.tmp:1857 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][142] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 577: // STATE 144 - _spin_nvr.tmp:1858 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][144] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 578: // STATE 146 - _spin_nvr.tmp:1859 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][146] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 579: // STATE 148 - _spin_nvr.tmp:1860 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][148] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 580: // STATE 150 - _spin_nvr.tmp:1861 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][150] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 581: // STATE 152 - _spin_nvr.tmp:1862 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][152] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 582: // STATE 154 - _spin_nvr.tmp:1863 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][154] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 583: // STATE 156 - _spin_nvr.tmp:1864 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][156] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 584: // STATE 158 - _spin_nvr.tmp:1865 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported158 = 0;
			if (verbose && !reported158)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported158 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported158 = 0;
			if (verbose && !reported158)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported158 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][158] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 585: // STATE 160 - _spin_nvr.tmp:1866 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][160] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 586: // STATE 162 - _spin_nvr.tmp:1867 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][162] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 587: // STATE 166 - _spin_nvr.tmp:1869 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported166 = 0;
			if (verbose && !reported166)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported166 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported166 = 0;
			if (verbose && !reported166)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported166 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][166] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 588: // STATE 171 - _spin_nvr.tmp:1873 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][171] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 589: // STATE 173 - _spin_nvr.tmp:1874 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][173] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 590: // STATE 175 - _spin_nvr.tmp:1875 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][175] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 591: // STATE 177 - _spin_nvr.tmp:1876 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][177] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 592: // STATE 179 - _spin_nvr.tmp:1877 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][179] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 593: // STATE 181 - _spin_nvr.tmp:1878 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][181] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 594: // STATE 183 - _spin_nvr.tmp:1879 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][183] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 595: // STATE 185 - _spin_nvr.tmp:1880 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][185] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 596: // STATE 187 - _spin_nvr.tmp:1881 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][187] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 597: // STATE 189 - _spin_nvr.tmp:1882 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][189] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 598: // STATE 191 - _spin_nvr.tmp:1883 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported191 = 0;
			if (verbose && !reported191)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported191 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported191 = 0;
			if (verbose && !reported191)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported191 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][191] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 599: // STATE 193 - _spin_nvr.tmp:1884 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][193] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 600: // STATE 195 - _spin_nvr.tmp:1885 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][195] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 601: // STATE 197 - _spin_nvr.tmp:1886 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported197 = 0;
			if (verbose && !reported197)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported197 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported197 = 0;
			if (verbose && !reported197)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported197 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][197] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 602: // STATE 199 - _spin_nvr.tmp:1887 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported199 = 0;
			if (verbose && !reported199)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported199 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported199 = 0;
			if (verbose && !reported199)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported199 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][199] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 603: // STATE 201 - _spin_nvr.tmp:1888 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported201 = 0;
			if (verbose && !reported201)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported201 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported201 = 0;
			if (verbose && !reported201)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported201 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][201] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 604: // STATE 208 - _spin_nvr.tmp:1893 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][208] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 605: // STATE 210 - _spin_nvr.tmp:1894 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][210] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 606: // STATE 212 - _spin_nvr.tmp:1895 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][212] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 607: // STATE 214 - _spin_nvr.tmp:1896 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][214] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 608: // STATE 216 - _spin_nvr.tmp:1897 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][216] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 609: // STATE 218 - _spin_nvr.tmp:1898 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][218] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 610: // STATE 220 - _spin_nvr.tmp:1899 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][220] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 611: // STATE 222 - _spin_nvr.tmp:1900 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][222] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 612: // STATE 224 - _spin_nvr.tmp:1901 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][224] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 613: // STATE 226 - _spin_nvr.tmp:1902 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported226 = 0;
			if (verbose && !reported226)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported226 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported226 = 0;
			if (verbose && !reported226)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported226 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][226] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 614: // STATE 228 - _spin_nvr.tmp:1903 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][228] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 615: // STATE 230 - _spin_nvr.tmp:1904 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][230] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 616: // STATE 237 - _spin_nvr.tmp:1909 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][237] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 617: // STATE 239 - _spin_nvr.tmp:1910 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][239] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 618: // STATE 241 - _spin_nvr.tmp:1911 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][241] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 619: // STATE 243 - _spin_nvr.tmp:1912 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported243 = 0;
			if (verbose && !reported243)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported243 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported243 = 0;
			if (verbose && !reported243)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported243 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][243] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 620: // STATE 245 - _spin_nvr.tmp:1913 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported245 = 0;
			if (verbose && !reported245)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported245 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported245 = 0;
			if (verbose && !reported245)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported245 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][245] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 621: // STATE 247 - _spin_nvr.tmp:1914 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported247 = 0;
			if (verbose && !reported247)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported247 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported247 = 0;
			if (verbose && !reported247)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported247 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][247] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 622: // STATE 249 - _spin_nvr.tmp:1915 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported249 = 0;
			if (verbose && !reported249)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported249 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported249 = 0;
			if (verbose && !reported249)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported249 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][249] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 623: // STATE 251 - _spin_nvr.tmp:1916 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported251 = 0;
			if (verbose && !reported251)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported251 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported251 = 0;
			if (verbose && !reported251)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported251 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][251] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 624: // STATE 253 - _spin_nvr.tmp:1917 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported253 = 0;
			if (verbose && !reported253)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported253 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported253 = 0;
			if (verbose && !reported253)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported253 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][253] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 625: // STATE 255 - _spin_nvr.tmp:1918 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported255 = 0;
			if (verbose && !reported255)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported255 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported255 = 0;
			if (verbose && !reported255)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported255 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][255] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 626: // STATE 257 - _spin_nvr.tmp:1919 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported257 = 0;
			if (verbose && !reported257)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported257 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported257 = 0;
			if (verbose && !reported257)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported257 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][257] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 627: // STATE 261 - _spin_nvr.tmp:1921 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported261 = 0;
			if (verbose && !reported261)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported261 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported261 = 0;
			if (verbose && !reported261)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported261 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][261] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 628: // STATE 263 - _spin_nvr.tmp:1922 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported263 = 0;
			if (verbose && !reported263)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported263 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported263 = 0;
			if (verbose && !reported263)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported263 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][263] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 629: // STATE 265 - _spin_nvr.tmp:1923 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported265 = 0;
			if (verbose && !reported265)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported265 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported265 = 0;
			if (verbose && !reported265)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported265 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][265] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 630: // STATE 267 - _spin_nvr.tmp:1924 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported267 = 0;
			if (verbose && !reported267)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported267 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported267 = 0;
			if (verbose && !reported267)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported267 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][267] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 631: // STATE 269 - _spin_nvr.tmp:1925 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported269 = 0;
			if (verbose && !reported269)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported269 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported269 = 0;
			if (verbose && !reported269)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported269 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][269] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 632: // STATE 274 - _spin_nvr.tmp:1929 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported274 = 0;
			if (verbose && !reported274)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported274 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported274 = 0;
			if (verbose && !reported274)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported274 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][274] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 633: // STATE 276 - _spin_nvr.tmp:1930 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported276 = 0;
			if (verbose && !reported276)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported276 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported276 = 0;
			if (verbose && !reported276)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported276 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][276] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 634: // STATE 278 - _spin_nvr.tmp:1931 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported278 = 0;
			if (verbose && !reported278)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported278 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported278 = 0;
			if (verbose && !reported278)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported278 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][278] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 635: // STATE 280 - _spin_nvr.tmp:1932 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported280 = 0;
			if (verbose && !reported280)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported280 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported280 = 0;
			if (verbose && !reported280)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported280 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][280] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 636: // STATE 282 - _spin_nvr.tmp:1933 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported282 = 0;
			if (verbose && !reported282)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported282 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported282 = 0;
			if (verbose && !reported282)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported282 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][282] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 637: // STATE 284 - _spin_nvr.tmp:1934 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported284 = 0;
			if (verbose && !reported284)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported284 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported284 = 0;
			if (verbose && !reported284)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported284 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][284] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 638: // STATE 286 - _spin_nvr.tmp:1935 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported286 = 0;
			if (verbose && !reported286)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported286 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported286 = 0;
			if (verbose && !reported286)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported286 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][286] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 639: // STATE 288 - _spin_nvr.tmp:1936 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported288 = 0;
			if (verbose && !reported288)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported288 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported288 = 0;
			if (verbose && !reported288)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported288 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][288] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 640: // STATE 290 - _spin_nvr.tmp:1937 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported290 = 0;
			if (verbose && !reported290)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported290 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported290 = 0;
			if (verbose && !reported290)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported290 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][290] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 641: // STATE 292 - _spin_nvr.tmp:1938 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported292 = 0;
			if (verbose && !reported292)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported292 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported292 = 0;
			if (verbose && !reported292)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported292 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][292] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 642: // STATE 294 - _spin_nvr.tmp:1939 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported294 = 0;
			if (verbose && !reported294)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported294 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported294 = 0;
			if (verbose && !reported294)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported294 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][294] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 643: // STATE 296 - _spin_nvr.tmp:1940 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported296 = 0;
			if (verbose && !reported296)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported296 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported296 = 0;
			if (verbose && !reported296)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported296 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][296] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 644: // STATE 298 - _spin_nvr.tmp:1941 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported298 = 0;
			if (verbose && !reported298)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported298 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported298 = 0;
			if (verbose && !reported298)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported298 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][298] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 645: // STATE 300 - _spin_nvr.tmp:1942 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported300 = 0;
			if (verbose && !reported300)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported300 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported300 = 0;
			if (verbose && !reported300)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported300 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][300] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 646: // STATE 302 - _spin_nvr.tmp:1943 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported302 = 0;
			if (verbose && !reported302)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported302 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported302 = 0;
			if (verbose && !reported302)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported302 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][302] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 647: // STATE 309 - _spin_nvr.tmp:1948 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported309 = 0;
			if (verbose && !reported309)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported309 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported309 = 0;
			if (verbose && !reported309)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported309 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][309] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 648: // STATE 311 - _spin_nvr.tmp:1949 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported311 = 0;
			if (verbose && !reported311)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported311 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported311 = 0;
			if (verbose && !reported311)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported311 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][311] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 649: // STATE 313 - _spin_nvr.tmp:1950 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported313 = 0;
			if (verbose && !reported313)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported313 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported313 = 0;
			if (verbose && !reported313)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported313 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][313] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 650: // STATE 315 - _spin_nvr.tmp:1951 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported315 = 0;
			if (verbose && !reported315)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported315 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported315 = 0;
			if (verbose && !reported315)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported315 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][315] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 651: // STATE 317 - _spin_nvr.tmp:1952 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported317 = 0;
			if (verbose && !reported317)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported317 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported317 = 0;
			if (verbose && !reported317)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported317 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][317] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 652: // STATE 319 - _spin_nvr.tmp:1953 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported319 = 0;
			if (verbose && !reported319)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported319 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported319 = 0;
			if (verbose && !reported319)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported319 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][319] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 653: // STATE 321 - _spin_nvr.tmp:1954 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported321 = 0;
			if (verbose && !reported321)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported321 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported321 = 0;
			if (verbose && !reported321)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported321 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][321] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 654: // STATE 323 - _spin_nvr.tmp:1955 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported323 = 0;
			if (verbose && !reported323)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported323 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported323 = 0;
			if (verbose && !reported323)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported323 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][323] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 655: // STATE 325 - _spin_nvr.tmp:1956 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported325 = 0;
			if (verbose && !reported325)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported325 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported325 = 0;
			if (verbose && !reported325)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported325 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][325] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 656: // STATE 327 - _spin_nvr.tmp:1957 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported327 = 0;
			if (verbose && !reported327)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported327 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported327 = 0;
			if (verbose && !reported327)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported327 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][327] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 657: // STATE 329 - _spin_nvr.tmp:1958 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported329 = 0;
			if (verbose && !reported329)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported329 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported329 = 0;
			if (verbose && !reported329)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported329 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][329] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 658: // STATE 333 - _spin_nvr.tmp:1960 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported333 = 0;
			if (verbose && !reported333)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported333 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported333 = 0;
			if (verbose && !reported333)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported333 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][333] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 659: // STATE 335 - _spin_nvr.tmp:1961 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported335 = 0;
			if (verbose && !reported335)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported335 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported335 = 0;
			if (verbose && !reported335)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported335 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][335] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 660: // STATE 337 - _spin_nvr.tmp:1962 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported337 = 0;
			if (verbose && !reported337)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported337 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported337 = 0;
			if (verbose && !reported337)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported337 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][337] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 661: // STATE 342 - _spin_nvr.tmp:1966 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported342 = 0;
			if (verbose && !reported342)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported342 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported342 = 0;
			if (verbose && !reported342)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported342 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][342] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 662: // STATE 344 - _spin_nvr.tmp:1967 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported344 = 0;
			if (verbose && !reported344)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported344 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported344 = 0;
			if (verbose && !reported344)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported344 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][344] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 663: // STATE 346 - _spin_nvr.tmp:1968 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported346 = 0;
			if (verbose && !reported346)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported346 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported346 = 0;
			if (verbose && !reported346)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported346 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][346] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 664: // STATE 348 - _spin_nvr.tmp:1969 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported348 = 0;
			if (verbose && !reported348)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported348 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported348 = 0;
			if (verbose && !reported348)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported348 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][348] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 665: // STATE 350 - _spin_nvr.tmp:1970 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported350 = 0;
			if (verbose && !reported350)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported350 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported350 = 0;
			if (verbose && !reported350)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported350 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][350] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 666: // STATE 352 - _spin_nvr.tmp:1971 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported352 = 0;
			if (verbose && !reported352)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported352 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported352 = 0;
			if (verbose && !reported352)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported352 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][352] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 667: // STATE 354 - _spin_nvr.tmp:1972 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported354 = 0;
			if (verbose && !reported354)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported354 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported354 = 0;
			if (verbose && !reported354)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported354 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][354] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 668: // STATE 356 - _spin_nvr.tmp:1973 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported356 = 0;
			if (verbose && !reported356)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported356 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported356 = 0;
			if (verbose && !reported356)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported356 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][356] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 669: // STATE 358 - _spin_nvr.tmp:1974 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported358 = 0;
			if (verbose && !reported358)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported358 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported358 = 0;
			if (verbose && !reported358)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported358 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][358] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 670: // STATE 360 - _spin_nvr.tmp:1975 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported360 = 0;
			if (verbose && !reported360)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported360 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported360 = 0;
			if (verbose && !reported360)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported360 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][360] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 671: // STATE 362 - _spin_nvr.tmp:1976 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported362 = 0;
			if (verbose && !reported362)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported362 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported362 = 0;
			if (verbose && !reported362)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported362 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][362] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 672: // STATE 364 - _spin_nvr.tmp:1977 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported364 = 0;
			if (verbose && !reported364)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported364 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported364 = 0;
			if (verbose && !reported364)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported364 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][364] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 673: // STATE 366 - _spin_nvr.tmp:1978 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported366 = 0;
			if (verbose && !reported366)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported366 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported366 = 0;
			if (verbose && !reported366)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported366 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][366] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 674: // STATE 368 - _spin_nvr.tmp:1979 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported368 = 0;
			if (verbose && !reported368)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported368 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported368 = 0;
			if (verbose && !reported368)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported368 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][368] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 675: // STATE 370 - _spin_nvr.tmp:1980 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported370 = 0;
			if (verbose && !reported370)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported370 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported370 = 0;
			if (verbose && !reported370)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported370 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][370] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 676: // STATE 372 - _spin_nvr.tmp:1981 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][372] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 677: // STATE 374 - _spin_nvr.tmp:1982 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][374] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 678: // STATE 381 - _spin_nvr.tmp:1987 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported381 = 0;
			if (verbose && !reported381)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported381 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported381 = 0;
			if (verbose && !reported381)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported381 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][381] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 679: // STATE 383 - _spin_nvr.tmp:1988 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported383 = 0;
			if (verbose && !reported383)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported383 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported383 = 0;
			if (verbose && !reported383)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported383 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][383] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 680: // STATE 385 - _spin_nvr.tmp:1989 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported385 = 0;
			if (verbose && !reported385)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported385 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported385 = 0;
			if (verbose && !reported385)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported385 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][385] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 681: // STATE 387 - _spin_nvr.tmp:1990 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported387 = 0;
			if (verbose && !reported387)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported387 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported387 = 0;
			if (verbose && !reported387)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported387 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][387] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 682: // STATE 389 - _spin_nvr.tmp:1991 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported389 = 0;
			if (verbose && !reported389)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported389 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported389 = 0;
			if (verbose && !reported389)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported389 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][389] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 683: // STATE 391 - _spin_nvr.tmp:1992 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported391 = 0;
			if (verbose && !reported391)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported391 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported391 = 0;
			if (verbose && !reported391)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported391 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][391] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 684: // STATE 393 - _spin_nvr.tmp:1993 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported393 = 0;
			if (verbose && !reported393)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported393 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported393 = 0;
			if (verbose && !reported393)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported393 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][393] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 685: // STATE 395 - _spin_nvr.tmp:1994 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported395 = 0;
			if (verbose && !reported395)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported395 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported395 = 0;
			if (verbose && !reported395)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported395 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][395] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 686: // STATE 397 - _spin_nvr.tmp:1995 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported397 = 0;
			if (verbose && !reported397)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported397 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported397 = 0;
			if (verbose && !reported397)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported397 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][397] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 687: // STATE 399 - _spin_nvr.tmp:1996 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported399 = 0;
			if (verbose && !reported399)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported399 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported399 = 0;
			if (verbose && !reported399)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported399 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][399] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 688: // STATE 401 - _spin_nvr.tmp:1997 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][401] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 689: // STATE 405 - _spin_nvr.tmp:1999 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][405] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 690: // STATE 407 - _spin_nvr.tmp:2000 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][407] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 691: // STATE 409 - _spin_nvr.tmp:2001 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][409] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 692: // STATE 411 - _spin_nvr.tmp:2002 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][411] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 693: // STATE 416 - _spin_nvr.tmp:2006 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported416 = 0;
			if (verbose && !reported416)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported416 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported416 = 0;
			if (verbose && !reported416)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported416 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][416] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 694: // STATE 418 - _spin_nvr.tmp:2007 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported418 = 0;
			if (verbose && !reported418)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported418 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported418 = 0;
			if (verbose && !reported418)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported418 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][418] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 695: // STATE 420 - _spin_nvr.tmp:2008 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported420 = 0;
			if (verbose && !reported420)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported420 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported420 = 0;
			if (verbose && !reported420)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported420 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][420] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 696: // STATE 422 - _spin_nvr.tmp:2009 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported422 = 0;
			if (verbose && !reported422)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported422 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported422 = 0;
			if (verbose && !reported422)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported422 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][422] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 697: // STATE 424 - _spin_nvr.tmp:2010 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported424 = 0;
			if (verbose && !reported424)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported424 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported424 = 0;
			if (verbose && !reported424)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported424 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][424] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 698: // STATE 426 - _spin_nvr.tmp:2011 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported426 = 0;
			if (verbose && !reported426)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported426 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported426 = 0;
			if (verbose && !reported426)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported426 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][426] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 699: // STATE 428 - _spin_nvr.tmp:2012 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported428 = 0;
			if (verbose && !reported428)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported428 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported428 = 0;
			if (verbose && !reported428)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported428 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][428] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 700: // STATE 430 - _spin_nvr.tmp:2013 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported430 = 0;
			if (verbose && !reported430)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported430 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported430 = 0;
			if (verbose && !reported430)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported430 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][430] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 701: // STATE 432 - _spin_nvr.tmp:2014 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported432 = 0;
			if (verbose && !reported432)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported432 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported432 = 0;
			if (verbose && !reported432)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported432 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][432] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 702: // STATE 434 - _spin_nvr.tmp:2015 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported434 = 0;
			if (verbose && !reported434)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported434 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported434 = 0;
			if (verbose && !reported434)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported434 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][434] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 703: // STATE 436 - _spin_nvr.tmp:2016 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][436] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 704: // STATE 438 - _spin_nvr.tmp:2017 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][438] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 705: // STATE 442 - _spin_nvr.tmp:2019 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][442] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 706: // STATE 444 - _spin_nvr.tmp:2020 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][444] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 707: // STATE 446 - _spin_nvr.tmp:2021 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][446] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 708: // STATE 448 - _spin_nvr.tmp:2022 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][448] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 709: // STATE 453 - _spin_nvr.tmp:2026 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported453 = 0;
			if (verbose && !reported453)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported453 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported453 = 0;
			if (verbose && !reported453)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported453 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][453] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 710: // STATE 455 - _spin_nvr.tmp:2027 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported455 = 0;
			if (verbose && !reported455)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported455 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported455 = 0;
			if (verbose && !reported455)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported455 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][455] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 711: // STATE 457 - _spin_nvr.tmp:2028 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported457 = 0;
			if (verbose && !reported457)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported457 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported457 = 0;
			if (verbose && !reported457)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported457 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][457] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 712: // STATE 459 - _spin_nvr.tmp:2029 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported459 = 0;
			if (verbose && !reported459)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported459 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported459 = 0;
			if (verbose && !reported459)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported459 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][459] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 713: // STATE 461 - _spin_nvr.tmp:2030 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported461 = 0;
			if (verbose && !reported461)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported461 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported461 = 0;
			if (verbose && !reported461)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported461 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][461] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 714: // STATE 463 - _spin_nvr.tmp:2031 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported463 = 0;
			if (verbose && !reported463)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported463 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported463 = 0;
			if (verbose && !reported463)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported463 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][463] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 715: // STATE 465 - _spin_nvr.tmp:2032 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported465 = 0;
			if (verbose && !reported465)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported465 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported465 = 0;
			if (verbose && !reported465)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported465 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][465] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 716: // STATE 467 - _spin_nvr.tmp:2033 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][467] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 717: // STATE 469 - _spin_nvr.tmp:2034 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][469] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 718: // STATE 471 - _spin_nvr.tmp:2035 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][471] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 719: // STATE 473 - _spin_nvr.tmp:2036 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][473] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 720: // STATE 477 - _spin_nvr.tmp:2038 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][477] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 721: // STATE 479 - _spin_nvr.tmp:2039 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][479] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 722: // STATE 481 - _spin_nvr.tmp:2040 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][481] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 723: // STATE 483 - _spin_nvr.tmp:2041 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][483] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 724: // STATE 485 - _spin_nvr.tmp:2042 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][485] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 725: // STATE 487 - _spin_nvr.tmp:2043 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][487] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 726: // STATE 489 - _spin_nvr.tmp:2044 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported489 = 0;
			if (verbose && !reported489)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported489 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported489 = 0;
			if (verbose && !reported489)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported489 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][489] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 727: // STATE 491 - _spin_nvr.tmp:2045 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][491] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 728: // STATE 493 - _spin_nvr.tmp:2046 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][493] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 729: // STATE 495 - _spin_nvr.tmp:2047 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][495] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 730: // STATE 497 - _spin_nvr.tmp:2048 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported497 = 0;
			if (verbose && !reported497)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported497 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported497 = 0;
			if (verbose && !reported497)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported497 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][497] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 731: // STATE 502 - _spin_nvr.tmp:2052 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][502] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 732: // STATE 504 - _spin_nvr.tmp:2053 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][504] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 733: // STATE 506 - _spin_nvr.tmp:2054 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][506] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 734: // STATE 508 - _spin_nvr.tmp:2055 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][508] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 735: // STATE 510 - _spin_nvr.tmp:2056 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][510] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 736: // STATE 512 - _spin_nvr.tmp:2057 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][512] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 737: // STATE 514 - _spin_nvr.tmp:2058 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][514] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 738: // STATE 516 - _spin_nvr.tmp:2059 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][516] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 739: // STATE 518 - _spin_nvr.tmp:2060 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][518] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 740: // STATE 520 - _spin_nvr.tmp:2061 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][520] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 741: // STATE 522 - _spin_nvr.tmp:2062 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][522] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 742: // STATE 526 - _spin_nvr.tmp:2064 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][526] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 743: // STATE 528 - _spin_nvr.tmp:2065 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][528] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 744: // STATE 530 - _spin_nvr.tmp:2066 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported530 = 0;
			if (verbose && !reported530)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported530 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported530 = 0;
			if (verbose && !reported530)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported530 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][530] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 745: // STATE 532 - _spin_nvr.tmp:2067 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported532 = 0;
			if (verbose && !reported532)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported532 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported532 = 0;
			if (verbose && !reported532)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported532 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][532] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 746: // STATE 534 - _spin_nvr.tmp:2068 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported534 = 0;
			if (verbose && !reported534)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported534 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported534 = 0;
			if (verbose && !reported534)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported534 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][534] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 747: // STATE 539 - _spin_nvr.tmp:2072 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][539] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 748: // STATE 541 - _spin_nvr.tmp:2073 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][541] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 749: // STATE 543 - _spin_nvr.tmp:2074 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][543] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 750: // STATE 545 - _spin_nvr.tmp:2075 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][545] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 751: // STATE 547 - _spin_nvr.tmp:2076 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][547] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 752: // STATE 549 - _spin_nvr.tmp:2077 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][549] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 753: // STATE 551 - _spin_nvr.tmp:2078 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][551] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 754: // STATE 553 - _spin_nvr.tmp:2079 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported553 = 0;
			if (verbose && !reported553)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported553 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported553 = 0;
			if (verbose && !reported553)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported553 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][553] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 755: // STATE 555 - _spin_nvr.tmp:2080 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][555] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 756: // STATE 557 - _spin_nvr.tmp:2081 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][557] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 757: // STATE 559 - _spin_nvr.tmp:2082 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][559] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 758: // STATE 563 - _spin_nvr.tmp:2084 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported563 = 0;
			if (verbose && !reported563)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported563 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported563 = 0;
			if (verbose && !reported563)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported563 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][563] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 759: // STATE 565 - _spin_nvr.tmp:2085 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported565 = 0;
			if (verbose && !reported565)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported565 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported565 = 0;
			if (verbose && !reported565)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported565 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][565] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 760: // STATE 567 - _spin_nvr.tmp:2086 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported567 = 0;
			if (verbose && !reported567)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported567 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported567 = 0;
			if (verbose && !reported567)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported567 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][567] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 761: // STATE 569 - _spin_nvr.tmp:2087 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported569 = 0;
			if (verbose && !reported569)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported569 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported569 = 0;
			if (verbose && !reported569)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported569 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][569] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 762: // STATE 571 - _spin_nvr.tmp:2088 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported571 = 0;
			if (verbose && !reported571)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported571 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported571 = 0;
			if (verbose && !reported571)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported571 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][571] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 763: // STATE 573 - _spin_nvr.tmp:2089 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported573 = 0;
			if (verbose && !reported573)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported573 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported573 = 0;
			if (verbose && !reported573)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported573 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][573] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 764: // STATE 578 - _spin_nvr.tmp:2093 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][578] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 765: // STATE 580 - _spin_nvr.tmp:2094 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][580] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 766: // STATE 582 - _spin_nvr.tmp:2095 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][582] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 767: // STATE 584 - _spin_nvr.tmp:2096 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][584] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 768: // STATE 586 - _spin_nvr.tmp:2097 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][586] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 769: // STATE 588 - _spin_nvr.tmp:2098 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][588] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 770: // STATE 590 - _spin_nvr.tmp:2099 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported590 = 0;
			if (verbose && !reported590)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported590 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported590 = 0;
			if (verbose && !reported590)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported590 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][590] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 771: // STATE 592 - _spin_nvr.tmp:2100 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][592] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 772: // STATE 594 - _spin_nvr.tmp:2101 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][594] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 773: // STATE 596 - _spin_nvr.tmp:2102 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][596] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 774: // STATE 598 - _spin_nvr.tmp:2103 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][598] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 775: // STATE 602 - _spin_nvr.tmp:2105 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][602] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 776: // STATE 607 - _spin_nvr.tmp:2109 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][607] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 777: // STATE 609 - _spin_nvr.tmp:2110 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported609 = 0;
			if (verbose && !reported609)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported609 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported609 = 0;
			if (verbose && !reported609)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported609 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][609] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 778: // STATE 611 - _spin_nvr.tmp:2111 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported611 = 0;
			if (verbose && !reported611)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported611 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported611 = 0;
			if (verbose && !reported611)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported611 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][611] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 779: // STATE 613 - _spin_nvr.tmp:2112 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported613 = 0;
			if (verbose && !reported613)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported613 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported613 = 0;
			if (verbose && !reported613)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported613 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][613] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 780: // STATE 615 - _spin_nvr.tmp:2113 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported615 = 0;
			if (verbose && !reported615)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported615 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported615 = 0;
			if (verbose && !reported615)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported615 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][615] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 781: // STATE 617 - _spin_nvr.tmp:2114 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported617 = 0;
			if (verbose && !reported617)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported617 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported617 = 0;
			if (verbose && !reported617)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported617 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][617] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 782: // STATE 619 - _spin_nvr.tmp:2115 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported619 = 0;
			if (verbose && !reported619)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported619 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported619 = 0;
			if (verbose && !reported619)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported619 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][619] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 783: // STATE 621 - _spin_nvr.tmp:2116 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported621 = 0;
			if (verbose && !reported621)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported621 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported621 = 0;
			if (verbose && !reported621)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported621 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][621] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 784: // STATE 623 - _spin_nvr.tmp:2117 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported623 = 0;
			if (verbose && !reported623)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported623 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported623 = 0;
			if (verbose && !reported623)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported623 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][623] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 785: // STATE 625 - _spin_nvr.tmp:2118 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported625 = 0;
			if (verbose && !reported625)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported625 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported625 = 0;
			if (verbose && !reported625)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported625 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][625] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 786: // STATE 627 - _spin_nvr.tmp:2119 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported627 = 0;
			if (verbose && !reported627)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported627 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported627 = 0;
			if (verbose && !reported627)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported627 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][627] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 787: // STATE 631 - _spin_nvr.tmp:2121 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported631 = 0;
			if (verbose && !reported631)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported631 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported631 = 0;
			if (verbose && !reported631)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported631 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][631] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 788: // STATE 633 - _spin_nvr.tmp:2122 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported633 = 0;
			if (verbose && !reported633)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported633 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported633 = 0;
			if (verbose && !reported633)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported633 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][633] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 789: // STATE 635 - _spin_nvr.tmp:2123 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported635 = 0;
			if (verbose && !reported635)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported635 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported635 = 0;
			if (verbose && !reported635)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported635 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][635] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 790: // STATE 637 - _spin_nvr.tmp:2124 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported637 = 0;
			if (verbose && !reported637)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported637 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported637 = 0;
			if (verbose && !reported637)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported637 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][637] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 791: // STATE 639 - _spin_nvr.tmp:2125 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported639 = 0;
			if (verbose && !reported639)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported639 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported639 = 0;
			if (verbose && !reported639)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported639 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][639] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 792: // STATE 641 - _spin_nvr.tmp:2126 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported641 = 0;
			if (verbose && !reported641)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported641 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported641 = 0;
			if (verbose && !reported641)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported641 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][641] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 793: // STATE 643 - _spin_nvr.tmp:2127 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported643 = 0;
			if (verbose && !reported643)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported643 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported643 = 0;
			if (verbose && !reported643)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported643 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][643] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 794: // STATE 645 - _spin_nvr.tmp:2128 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported645 = 0;
			if (verbose && !reported645)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported645 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported645 = 0;
			if (verbose && !reported645)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported645 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][645] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 795: // STATE 647 - _spin_nvr.tmp:2129 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported647 = 0;
			if (verbose && !reported647)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported647 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported647 = 0;
			if (verbose && !reported647)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported647 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][647] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 796: // STATE 649 - _spin_nvr.tmp:2130 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported649 = 0;
			if (verbose && !reported649)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported649 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported649 = 0;
			if (verbose && !reported649)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported649 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][649] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 797: // STATE 651 - _spin_nvr.tmp:2131 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported651 = 0;
			if (verbose && !reported651)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported651 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported651 = 0;
			if (verbose && !reported651)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported651 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][651] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 798: // STATE 653 - _spin_nvr.tmp:2132 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported653 = 0;
			if (verbose && !reported653)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported653 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported653 = 0;
			if (verbose && !reported653)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported653 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][653] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 799: // STATE 658 - _spin_nvr.tmp:2136 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported658 = 0;
			if (verbose && !reported658)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported658 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported658 = 0;
			if (verbose && !reported658)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported658 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][658] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 800: // STATE 660 - _spin_nvr.tmp:2137 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported660 = 0;
			if (verbose && !reported660)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported660 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported660 = 0;
			if (verbose && !reported660)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported660 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][660] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 801: // STATE 662 - _spin_nvr.tmp:2138 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported662 = 0;
			if (verbose && !reported662)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported662 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported662 = 0;
			if (verbose && !reported662)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported662 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][662] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 802: // STATE 664 - _spin_nvr.tmp:2139 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported664 = 0;
			if (verbose && !reported664)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported664 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported664 = 0;
			if (verbose && !reported664)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported664 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][664] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 803: // STATE 666 - _spin_nvr.tmp:2140 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported666 = 0;
			if (verbose && !reported666)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported666 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported666 = 0;
			if (verbose && !reported666)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported666 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][666] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 804: // STATE 668 - _spin_nvr.tmp:2141 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported668 = 0;
			if (verbose && !reported668)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported668 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported668 = 0;
			if (verbose && !reported668)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported668 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][668] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 805: // STATE 670 - _spin_nvr.tmp:2142 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported670 = 0;
			if (verbose && !reported670)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported670 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported670 = 0;
			if (verbose && !reported670)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported670 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][670] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 806: // STATE 672 - _spin_nvr.tmp:2143 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported672 = 0;
			if (verbose && !reported672)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported672 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported672 = 0;
			if (verbose && !reported672)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported672 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][672] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 807: // STATE 674 - _spin_nvr.tmp:2144 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported674 = 0;
			if (verbose && !reported674)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported674 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported674 = 0;
			if (verbose && !reported674)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported674 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][674] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 808: // STATE 676 - _spin_nvr.tmp:2145 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported676 = 0;
			if (verbose && !reported676)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported676 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported676 = 0;
			if (verbose && !reported676)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported676 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][676] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 809: // STATE 678 - _spin_nvr.tmp:2146 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported678 = 0;
			if (verbose && !reported678)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported678 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported678 = 0;
			if (verbose && !reported678)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported678 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][678] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 810: // STATE 682 - _spin_nvr.tmp:2148 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported682 = 0;
			if (verbose && !reported682)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported682 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported682 = 0;
			if (verbose && !reported682)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported682 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][682] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 811: // STATE 684 - _spin_nvr.tmp:2149 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported684 = 0;
			if (verbose && !reported684)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported684 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported684 = 0;
			if (verbose && !reported684)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported684 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][684] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 812: // STATE 686 - _spin_nvr.tmp:2150 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported686 = 0;
			if (verbose && !reported686)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported686 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported686 = 0;
			if (verbose && !reported686)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported686 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][686] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 813: // STATE 688 - _spin_nvr.tmp:2151 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported688 = 0;
			if (verbose && !reported688)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported688 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported688 = 0;
			if (verbose && !reported688)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported688 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][688] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 814: // STATE 690 - _spin_nvr.tmp:2152 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported690 = 0;
			if (verbose && !reported690)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported690 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported690 = 0;
			if (verbose && !reported690)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported690 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][690] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 815: // STATE 692 - _spin_nvr.tmp:2153 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported692 = 0;
			if (verbose && !reported692)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported692 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported692 = 0;
			if (verbose && !reported692)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported692 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][692] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 816: // STATE 694 - _spin_nvr.tmp:2154 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported694 = 0;
			if (verbose && !reported694)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported694 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported694 = 0;
			if (verbose && !reported694)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported694 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][694] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 817: // STATE 696 - _spin_nvr.tmp:2155 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported696 = 0;
			if (verbose && !reported696)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported696 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported696 = 0;
			if (verbose && !reported696)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported696 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][696] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 818: // STATE 698 - _spin_nvr.tmp:2156 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported698 = 0;
			if (verbose && !reported698)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported698 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported698 = 0;
			if (verbose && !reported698)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported698 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][698] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 819: // STATE 700 - _spin_nvr.tmp:2157 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported700 = 0;
			if (verbose && !reported700)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported700 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported700 = 0;
			if (verbose && !reported700)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported700 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][700] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 820: // STATE 702 - _spin_nvr.tmp:2158 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported702 = 0;
			if (verbose && !reported702)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported702 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported702 = 0;
			if (verbose && !reported702)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported702 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][702] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 821: // STATE 704 - _spin_nvr.tmp:2159 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported704 = 0;
			if (verbose && !reported704)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported704 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported704 = 0;
			if (verbose && !reported704)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported704 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][704] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 822: // STATE 706 - _spin_nvr.tmp:2160 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported706 = 0;
			if (verbose && !reported706)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported706 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported706 = 0;
			if (verbose && !reported706)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported706 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][706] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 823: // STATE 711 - _spin_nvr.tmp:2164 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported711 = 0;
			if (verbose && !reported711)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported711 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported711 = 0;
			if (verbose && !reported711)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported711 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][711] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 824: // STATE 713 - _spin_nvr.tmp:2165 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported713 = 0;
			if (verbose && !reported713)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported713 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported713 = 0;
			if (verbose && !reported713)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported713 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][713] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 825: // STATE 715 - _spin_nvr.tmp:2166 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported715 = 0;
			if (verbose && !reported715)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported715 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported715 = 0;
			if (verbose && !reported715)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported715 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][715] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 826: // STATE 717 - _spin_nvr.tmp:2167 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported717 = 0;
			if (verbose && !reported717)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported717 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported717 = 0;
			if (verbose && !reported717)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported717 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][717] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 827: // STATE 719 - _spin_nvr.tmp:2168 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported719 = 0;
			if (verbose && !reported719)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported719 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported719 = 0;
			if (verbose && !reported719)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported719 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][719] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 828: // STATE 721 - _spin_nvr.tmp:2169 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported721 = 0;
			if (verbose && !reported721)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported721 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported721 = 0;
			if (verbose && !reported721)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported721 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][721] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 829: // STATE 723 - _spin_nvr.tmp:2170 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported723 = 0;
			if (verbose && !reported723)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported723 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported723 = 0;
			if (verbose && !reported723)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported723 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][723] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 830: // STATE 725 - _spin_nvr.tmp:2171 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported725 = 0;
			if (verbose && !reported725)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported725 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported725 = 0;
			if (verbose && !reported725)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported725 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][725] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 831: // STATE 727 - _spin_nvr.tmp:2172 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported727 = 0;
			if (verbose && !reported727)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported727 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported727 = 0;
			if (verbose && !reported727)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported727 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][727] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 832: // STATE 729 - _spin_nvr.tmp:2173 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported729 = 0;
			if (verbose && !reported729)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported729 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported729 = 0;
			if (verbose && !reported729)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported729 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][729] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 833: // STATE 731 - _spin_nvr.tmp:2174 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported731 = 0;
			if (verbose && !reported731)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported731 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported731 = 0;
			if (verbose && !reported731)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported731 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][731] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 834: // STATE 735 - _spin_nvr.tmp:2176 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported735 = 0;
			if (verbose && !reported735)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported735 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported735 = 0;
			if (verbose && !reported735)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported735 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][735] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 835: // STATE 737 - _spin_nvr.tmp:2177 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported737 = 0;
			if (verbose && !reported737)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported737 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported737 = 0;
			if (verbose && !reported737)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported737 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][737] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 836: // STATE 739 - _spin_nvr.tmp:2178 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported739 = 0;
			if (verbose && !reported739)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported739 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported739 = 0;
			if (verbose && !reported739)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported739 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][739] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 837: // STATE 741 - _spin_nvr.tmp:2179 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported741 = 0;
			if (verbose && !reported741)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported741 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported741 = 0;
			if (verbose && !reported741)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported741 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][741] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 838: // STATE 743 - _spin_nvr.tmp:2180 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported743 = 0;
			if (verbose && !reported743)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported743 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported743 = 0;
			if (verbose && !reported743)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported743 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][743] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 839: // STATE 745 - _spin_nvr.tmp:2181 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported745 = 0;
			if (verbose && !reported745)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported745 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported745 = 0;
			if (verbose && !reported745)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported745 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][745] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 840: // STATE 747 - _spin_nvr.tmp:2182 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported747 = 0;
			if (verbose && !reported747)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported747 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported747 = 0;
			if (verbose && !reported747)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported747 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][747] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 841: // STATE 749 - _spin_nvr.tmp:2183 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported749 = 0;
			if (verbose && !reported749)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported749 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported749 = 0;
			if (verbose && !reported749)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported749 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][749] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 842: // STATE 751 - _spin_nvr.tmp:2184 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported751 = 0;
			if (verbose && !reported751)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported751 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported751 = 0;
			if (verbose && !reported751)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported751 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][751] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 843: // STATE 753 - _spin_nvr.tmp:2185 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported753 = 0;
			if (verbose && !reported753)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported753 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported753 = 0;
			if (verbose && !reported753)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported753 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][753] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 844: // STATE 755 - _spin_nvr.tmp:2186 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported755 = 0;
			if (verbose && !reported755)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported755 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported755 = 0;
			if (verbose && !reported755)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported755 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][755] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 845: // STATE 757 - _spin_nvr.tmp:2187 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported757 = 0;
			if (verbose && !reported757)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported757 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported757 = 0;
			if (verbose && !reported757)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported757 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][757] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 846: // STATE 759 - _spin_nvr.tmp:2188 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported759 = 0;
			if (verbose && !reported759)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported759 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported759 = 0;
			if (verbose && !reported759)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported759 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][759] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 847: // STATE 761 - _spin_nvr.tmp:2189 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported761 = 0;
			if (verbose && !reported761)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported761 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported761 = 0;
			if (verbose && !reported761)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported761 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][761] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 848: // STATE 766 - _spin_nvr.tmp:2193 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported766 = 0;
			if (verbose && !reported766)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported766 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported766 = 0;
			if (verbose && !reported766)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported766 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][766] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 849: // STATE 768 - _spin_nvr.tmp:2194 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported768 = 0;
			if (verbose && !reported768)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported768 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported768 = 0;
			if (verbose && !reported768)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported768 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][768] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 850: // STATE 770 - _spin_nvr.tmp:2195 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported770 = 0;
			if (verbose && !reported770)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported770 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported770 = 0;
			if (verbose && !reported770)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported770 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][770] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 851: // STATE 772 - _spin_nvr.tmp:2196 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported772 = 0;
			if (verbose && !reported772)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported772 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported772 = 0;
			if (verbose && !reported772)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported772 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][772] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 852: // STATE 774 - _spin_nvr.tmp:2197 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported774 = 0;
			if (verbose && !reported774)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported774 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported774 = 0;
			if (verbose && !reported774)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported774 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][774] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 853: // STATE 776 - _spin_nvr.tmp:2198 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported776 = 0;
			if (verbose && !reported776)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported776 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported776 = 0;
			if (verbose && !reported776)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported776 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][776] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 854: // STATE 778 - _spin_nvr.tmp:2199 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported778 = 0;
			if (verbose && !reported778)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported778 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported778 = 0;
			if (verbose && !reported778)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported778 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][778] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 855: // STATE 780 - _spin_nvr.tmp:2200 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported780 = 0;
			if (verbose && !reported780)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported780 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported780 = 0;
			if (verbose && !reported780)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported780 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][780] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 856: // STATE 782 - _spin_nvr.tmp:2201 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported782 = 0;
			if (verbose && !reported782)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported782 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported782 = 0;
			if (verbose && !reported782)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported782 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][782] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 857: // STATE 784 - _spin_nvr.tmp:2202 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported784 = 0;
			if (verbose && !reported784)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported784 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported784 = 0;
			if (verbose && !reported784)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported784 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][784] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 858: // STATE 786 - _spin_nvr.tmp:2203 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported786 = 0;
			if (verbose && !reported786)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported786 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported786 = 0;
			if (verbose && !reported786)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported786 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][786] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 859: // STATE 788 - _spin_nvr.tmp:2204 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported788 = 0;
			if (verbose && !reported788)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported788 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported788 = 0;
			if (verbose && !reported788)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported788 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][788] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 860: // STATE 792 - _spin_nvr.tmp:2206 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported792 = 0;
			if (verbose && !reported792)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported792 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported792 = 0;
			if (verbose && !reported792)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported792 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][792] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 861: // STATE 794 - _spin_nvr.tmp:2207 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported794 = 0;
			if (verbose && !reported794)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported794 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported794 = 0;
			if (verbose && !reported794)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported794 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][794] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 862: // STATE 796 - _spin_nvr.tmp:2208 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported796 = 0;
			if (verbose && !reported796)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported796 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported796 = 0;
			if (verbose && !reported796)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported796 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][796] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 863: // STATE 798 - _spin_nvr.tmp:2209 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported798 = 0;
			if (verbose && !reported798)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported798 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported798 = 0;
			if (verbose && !reported798)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported798 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][798] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 864: // STATE 800 - _spin_nvr.tmp:2210 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported800 = 0;
			if (verbose && !reported800)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported800 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported800 = 0;
			if (verbose && !reported800)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported800 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][800] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 865: // STATE 805 - _spin_nvr.tmp:2214 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported805 = 0;
			if (verbose && !reported805)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported805 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported805 = 0;
			if (verbose && !reported805)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported805 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][805] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 866: // STATE 807 - _spin_nvr.tmp:2215 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported807 = 0;
			if (verbose && !reported807)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported807 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported807 = 0;
			if (verbose && !reported807)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported807 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][807] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 867: // STATE 809 - _spin_nvr.tmp:2216 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported809 = 0;
			if (verbose && !reported809)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported809 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported809 = 0;
			if (verbose && !reported809)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported809 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][809] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 868: // STATE 811 - _spin_nvr.tmp:2217 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported811 = 0;
			if (verbose && !reported811)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported811 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported811 = 0;
			if (verbose && !reported811)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported811 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][811] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 869: // STATE 813 - _spin_nvr.tmp:2218 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported813 = 0;
			if (verbose && !reported813)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported813 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported813 = 0;
			if (verbose && !reported813)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported813 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][813] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 870: // STATE 815 - _spin_nvr.tmp:2219 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported815 = 0;
			if (verbose && !reported815)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported815 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported815 = 0;
			if (verbose && !reported815)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported815 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][815] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 871: // STATE 817 - _spin_nvr.tmp:2220 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported817 = 0;
			if (verbose && !reported817)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported817 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported817 = 0;
			if (verbose && !reported817)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported817 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][817] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 872: // STATE 819 - _spin_nvr.tmp:2221 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported819 = 0;
			if (verbose && !reported819)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported819 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported819 = 0;
			if (verbose && !reported819)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported819 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][819] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 873: // STATE 821 - _spin_nvr.tmp:2222 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported821 = 0;
			if (verbose && !reported821)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported821 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported821 = 0;
			if (verbose && !reported821)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported821 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][821] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 874: // STATE 823 - _spin_nvr.tmp:2223 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported823 = 0;
			if (verbose && !reported823)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported823 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported823 = 0;
			if (verbose && !reported823)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported823 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][823] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 875: // STATE 825 - _spin_nvr.tmp:2224 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported825 = 0;
			if (verbose && !reported825)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported825 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported825 = 0;
			if (verbose && !reported825)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported825 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][825] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 876: // STATE 829 - _spin_nvr.tmp:2226 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported829 = 0;
			if (verbose && !reported829)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported829 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported829 = 0;
			if (verbose && !reported829)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported829 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][829] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 877: // STATE 831 - _spin_nvr.tmp:2227 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported831 = 0;
			if (verbose && !reported831)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported831 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported831 = 0;
			if (verbose && !reported831)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported831 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][831] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 878: // STATE 833 - _spin_nvr.tmp:2228 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported833 = 0;
			if (verbose && !reported833)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported833 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported833 = 0;
			if (verbose && !reported833)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported833 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][833] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 879: // STATE 835 - _spin_nvr.tmp:2229 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported835 = 0;
			if (verbose && !reported835)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported835 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported835 = 0;
			if (verbose && !reported835)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported835 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][835] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 880: // STATE 837 - _spin_nvr.tmp:2230 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported837 = 0;
			if (verbose && !reported837)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported837 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported837 = 0;
			if (verbose && !reported837)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported837 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][837] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 881: // STATE 839 - _spin_nvr.tmp:2231 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported839 = 0;
			if (verbose && !reported839)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported839 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported839 = 0;
			if (verbose && !reported839)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported839 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][839] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 882: // STATE 841 - _spin_nvr.tmp:2232 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported841 = 0;
			if (verbose && !reported841)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported841 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported841 = 0;
			if (verbose && !reported841)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported841 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][841] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 883: // STATE 843 - _spin_nvr.tmp:2233 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported843 = 0;
			if (verbose && !reported843)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported843 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported843 = 0;
			if (verbose && !reported843)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported843 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][843] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 884: // STATE 845 - _spin_nvr.tmp:2234 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported845 = 0;
			if (verbose && !reported845)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported845 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported845 = 0;
			if (verbose && !reported845)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported845 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][845] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 885: // STATE 847 - _spin_nvr.tmp:2235 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported847 = 0;
			if (verbose && !reported847)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported847 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported847 = 0;
			if (verbose && !reported847)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported847 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][847] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 886: // STATE 849 - _spin_nvr.tmp:2236 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported849 = 0;
			if (verbose && !reported849)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported849 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported849 = 0;
			if (verbose && !reported849)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported849 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][849] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 887: // STATE 851 - _spin_nvr.tmp:2237 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported851 = 0;
			if (verbose && !reported851)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported851 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported851 = 0;
			if (verbose && !reported851)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported851 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][851] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 888: // STATE 853 - _spin_nvr.tmp:2238 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported853 = 0;
			if (verbose && !reported853)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported853 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported853 = 0;
			if (verbose && !reported853)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported853 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][853] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 889: // STATE 855 - _spin_nvr.tmp:2239 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported855 = 0;
			if (verbose && !reported855)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported855 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported855 = 0;
			if (verbose && !reported855)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported855 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][855] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 890: // STATE 857 - _spin_nvr.tmp:2240 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported857 = 0;
			if (verbose && !reported857)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported857 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported857 = 0;
			if (verbose && !reported857)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported857 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][857] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 891: // STATE 862 - _spin_nvr.tmp:2244 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported862 = 0;
			if (verbose && !reported862)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported862 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported862 = 0;
			if (verbose && !reported862)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported862 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][862] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 892: // STATE 864 - _spin_nvr.tmp:2245 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported864 = 0;
			if (verbose && !reported864)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported864 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported864 = 0;
			if (verbose && !reported864)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported864 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][864] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 893: // STATE 866 - _spin_nvr.tmp:2246 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported866 = 0;
			if (verbose && !reported866)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported866 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported866 = 0;
			if (verbose && !reported866)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported866 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][866] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 894: // STATE 868 - _spin_nvr.tmp:2247 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported868 = 0;
			if (verbose && !reported868)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported868 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported868 = 0;
			if (verbose && !reported868)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported868 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][868] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 895: // STATE 870 - _spin_nvr.tmp:2248 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported870 = 0;
			if (verbose && !reported870)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported870 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported870 = 0;
			if (verbose && !reported870)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported870 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][870] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 896: // STATE 872 - _spin_nvr.tmp:2249 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported872 = 0;
			if (verbose && !reported872)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported872 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported872 = 0;
			if (verbose && !reported872)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported872 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][872] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 897: // STATE 874 - _spin_nvr.tmp:2250 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported874 = 0;
			if (verbose && !reported874)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported874 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported874 = 0;
			if (verbose && !reported874)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported874 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][874] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 898: // STATE 876 - _spin_nvr.tmp:2251 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported876 = 0;
			if (verbose && !reported876)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported876 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported876 = 0;
			if (verbose && !reported876)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported876 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][876] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 899: // STATE 878 - _spin_nvr.tmp:2252 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported878 = 0;
			if (verbose && !reported878)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported878 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported878 = 0;
			if (verbose && !reported878)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported878 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][878] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 900: // STATE 880 - _spin_nvr.tmp:2253 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported880 = 0;
			if (verbose && !reported880)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported880 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported880 = 0;
			if (verbose && !reported880)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported880 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][880] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 901: // STATE 882 - _spin_nvr.tmp:2254 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported882 = 0;
			if (verbose && !reported882)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported882 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported882 = 0;
			if (verbose && !reported882)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported882 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][882] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 902: // STATE 886 - _spin_nvr.tmp:2256 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported886 = 0;
			if (verbose && !reported886)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported886 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported886 = 0;
			if (verbose && !reported886)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported886 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][886] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 903: // STATE 888 - _spin_nvr.tmp:2257 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported888 = 0;
			if (verbose && !reported888)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported888 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported888 = 0;
			if (verbose && !reported888)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported888 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][888] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 904: // STATE 890 - _spin_nvr.tmp:2258 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported890 = 0;
			if (verbose && !reported890)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported890 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported890 = 0;
			if (verbose && !reported890)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported890 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][890] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 905: // STATE 892 - _spin_nvr.tmp:2259 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported892 = 0;
			if (verbose && !reported892)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported892 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported892 = 0;
			if (verbose && !reported892)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported892 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][892] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 906: // STATE 894 - _spin_nvr.tmp:2260 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported894 = 0;
			if (verbose && !reported894)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported894 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported894 = 0;
			if (verbose && !reported894)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported894 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][894] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 907: // STATE 896 - _spin_nvr.tmp:2261 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported896 = 0;
			if (verbose && !reported896)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported896 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported896 = 0;
			if (verbose && !reported896)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported896 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][896] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 908: // STATE 898 - _spin_nvr.tmp:2262 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported898 = 0;
			if (verbose && !reported898)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported898 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported898 = 0;
			if (verbose && !reported898)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported898 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][898] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 909: // STATE 900 - _spin_nvr.tmp:2263 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported900 = 0;
			if (verbose && !reported900)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported900 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported900 = 0;
			if (verbose && !reported900)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported900 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][900] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 910: // STATE 902 - _spin_nvr.tmp:2264 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported902 = 0;
			if (verbose && !reported902)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported902 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported902 = 0;
			if (verbose && !reported902)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported902 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][902] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 911: // STATE 904 - _spin_nvr.tmp:2265 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported904 = 0;
			if (verbose && !reported904)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported904 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported904 = 0;
			if (verbose && !reported904)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported904 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][904] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 912: // STATE 906 - _spin_nvr.tmp:2266 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported906 = 0;
			if (verbose && !reported906)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported906 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported906 = 0;
			if (verbose && !reported906)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported906 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][906] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 913: // STATE 908 - _spin_nvr.tmp:2267 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported908 = 0;
			if (verbose && !reported908)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported908 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported908 = 0;
			if (verbose && !reported908)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported908 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][908] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 914: // STATE 910 - _spin_nvr.tmp:2268 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported910 = 0;
			if (verbose && !reported910)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported910 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported910 = 0;
			if (verbose && !reported910)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported910 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][910] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 915: // STATE 912 - _spin_nvr.tmp:2269 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported912 = 0;
			if (verbose && !reported912)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported912 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported912 = 0;
			if (verbose && !reported912)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported912 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][912] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 916: // STATE 914 - _spin_nvr.tmp:2270 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported914 = 0;
			if (verbose && !reported914)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported914 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported914 = 0;
			if (verbose && !reported914)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported914 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][914] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 917: // STATE 916 - _spin_nvr.tmp:2271 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported916 = 0;
			if (verbose && !reported916)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported916 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported916 = 0;
			if (verbose && !reported916)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported916 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][916] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 918: // STATE 921 - _spin_nvr.tmp:2275 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported921 = 0;
			if (verbose && !reported921)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported921 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported921 = 0;
			if (verbose && !reported921)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported921 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][921] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 919: // STATE 923 - _spin_nvr.tmp:2276 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported923 = 0;
			if (verbose && !reported923)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported923 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported923 = 0;
			if (verbose && !reported923)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported923 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][923] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 920: // STATE 925 - _spin_nvr.tmp:2277 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported925 = 0;
			if (verbose && !reported925)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported925 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported925 = 0;
			if (verbose && !reported925)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported925 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][925] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 921: // STATE 927 - _spin_nvr.tmp:2278 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported927 = 0;
			if (verbose && !reported927)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported927 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported927 = 0;
			if (verbose && !reported927)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported927 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][927] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 922: // STATE 932 - _spin_nvr.tmp:2282 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported932 = 0;
			if (verbose && !reported932)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported932 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported932 = 0;
			if (verbose && !reported932)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported932 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][932] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 923: // STATE 934 - _spin_nvr.tmp:2283 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported934 = 0;
			if (verbose && !reported934)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported934 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported934 = 0;
			if (verbose && !reported934)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported934 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][934] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 924: // STATE 936 - _spin_nvr.tmp:2284 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported936 = 0;
			if (verbose && !reported936)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported936 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported936 = 0;
			if (verbose && !reported936)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported936 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][936] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 925: // STATE 938 - _spin_nvr.tmp:2285 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported938 = 0;
			if (verbose && !reported938)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported938 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported938 = 0;
			if (verbose && !reported938)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported938 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][938] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 926: // STATE 940 - _spin_nvr.tmp:2286 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported940 = 0;
			if (verbose && !reported940)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported940 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported940 = 0;
			if (verbose && !reported940)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported940 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][940] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 927: // STATE 942 - _spin_nvr.tmp:2287 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported942 = 0;
			if (verbose && !reported942)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported942 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported942 = 0;
			if (verbose && !reported942)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported942 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][942] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 928: // STATE 944 - _spin_nvr.tmp:2288 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported944 = 0;
			if (verbose && !reported944)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported944 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported944 = 0;
			if (verbose && !reported944)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported944 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][944] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 929: // STATE 946 - _spin_nvr.tmp:2289 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported946 = 0;
			if (verbose && !reported946)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported946 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported946 = 0;
			if (verbose && !reported946)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported946 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][946] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 930: // STATE 948 - _spin_nvr.tmp:2290 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported948 = 0;
			if (verbose && !reported948)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported948 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported948 = 0;
			if (verbose && !reported948)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported948 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][948] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 931: // STATE 950 - _spin_nvr.tmp:2291 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported950 = 0;
			if (verbose && !reported950)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported950 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported950 = 0;
			if (verbose && !reported950)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported950 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][950] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 932: // STATE 952 - _spin_nvr.tmp:2292 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported952 = 0;
			if (verbose && !reported952)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported952 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported952 = 0;
			if (verbose && !reported952)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported952 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][952] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 933: // STATE 956 - _spin_nvr.tmp:2294 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported956 = 0;
			if (verbose && !reported956)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported956 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported956 = 0;
			if (verbose && !reported956)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported956 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][956] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 934: // STATE 958 - _spin_nvr.tmp:2295 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported958 = 0;
			if (verbose && !reported958)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported958 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported958 = 0;
			if (verbose && !reported958)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported958 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][958] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 935: // STATE 963 - _spin_nvr.tmp:2299 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported963 = 0;
			if (verbose && !reported963)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported963 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported963 = 0;
			if (verbose && !reported963)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported963 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][963] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 936: // STATE 965 - _spin_nvr.tmp:2300 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported965 = 0;
			if (verbose && !reported965)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported965 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported965 = 0;
			if (verbose && !reported965)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported965 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][965] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 937: // STATE 967 - _spin_nvr.tmp:2301 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported967 = 0;
			if (verbose && !reported967)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported967 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported967 = 0;
			if (verbose && !reported967)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported967 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][967] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 938: // STATE 969 - _spin_nvr.tmp:2302 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported969 = 0;
			if (verbose && !reported969)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported969 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported969 = 0;
			if (verbose && !reported969)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported969 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][969] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 939: // STATE 971 - _spin_nvr.tmp:2303 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported971 = 0;
			if (verbose && !reported971)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported971 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported971 = 0;
			if (verbose && !reported971)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported971 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][971] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 940: // STATE 973 - _spin_nvr.tmp:2304 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported973 = 0;
			if (verbose && !reported973)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported973 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported973 = 0;
			if (verbose && !reported973)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported973 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][973] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 941: // STATE 975 - _spin_nvr.tmp:2305 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported975 = 0;
			if (verbose && !reported975)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported975 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported975 = 0;
			if (verbose && !reported975)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported975 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][975] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 942: // STATE 977 - _spin_nvr.tmp:2306 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported977 = 0;
			if (verbose && !reported977)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported977 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported977 = 0;
			if (verbose && !reported977)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported977 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][977] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 943: // STATE 979 - _spin_nvr.tmp:2307 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported979 = 0;
			if (verbose && !reported979)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported979 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported979 = 0;
			if (verbose && !reported979)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported979 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][979] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 944: // STATE 981 - _spin_nvr.tmp:2308 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported981 = 0;
			if (verbose && !reported981)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported981 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported981 = 0;
			if (verbose && !reported981)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported981 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][981] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 945: // STATE 983 - _spin_nvr.tmp:2309 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported983 = 0;
			if (verbose && !reported983)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported983 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported983 = 0;
			if (verbose && !reported983)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported983 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][983] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 946: // STATE 987 - _spin_nvr.tmp:2311 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported987 = 0;
			if (verbose && !reported987)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported987 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported987 = 0;
			if (verbose && !reported987)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported987 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][987] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 947: // STATE 989 - _spin_nvr.tmp:2312 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported989 = 0;
			if (verbose && !reported989)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported989 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported989 = 0;
			if (verbose && !reported989)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported989 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][989] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 948: // STATE 991 - _spin_nvr.tmp:2313 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported991 = 0;
			if (verbose && !reported991)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported991 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported991 = 0;
			if (verbose && !reported991)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported991 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][991] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 949: // STATE 993 - _spin_nvr.tmp:2314 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported993 = 0;
			if (verbose && !reported993)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported993 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported993 = 0;
			if (verbose && !reported993)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported993 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][993] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 950: // STATE 995 - _spin_nvr.tmp:2315 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported995 = 0;
			if (verbose && !reported995)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported995 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported995 = 0;
			if (verbose && !reported995)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported995 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][995] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 951: // STATE 997 - _spin_nvr.tmp:2316 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported997 = 0;
			if (verbose && !reported997)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported997 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported997 = 0;
			if (verbose && !reported997)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported997 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][997] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 952: // STATE 999 - _spin_nvr.tmp:2317 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported999 = 0;
			if (verbose && !reported999)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported999 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported999 = 0;
			if (verbose && !reported999)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported999 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][999] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 953: // STATE 1001 - _spin_nvr.tmp:2318 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1001 = 0;
			if (verbose && !reported1001)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1001 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1001 = 0;
			if (verbose && !reported1001)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1001 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1001] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 954: // STATE 1006 - _spin_nvr.tmp:2322 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1006 = 0;
			if (verbose && !reported1006)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1006 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1006 = 0;
			if (verbose && !reported1006)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1006 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1006] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 955: // STATE 1008 - _spin_nvr.tmp:2323 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1008 = 0;
			if (verbose && !reported1008)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1008 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1008 = 0;
			if (verbose && !reported1008)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1008 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1008] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 956: // STATE 1010 - _spin_nvr.tmp:2324 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1010 = 0;
			if (verbose && !reported1010)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1010 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1010 = 0;
			if (verbose && !reported1010)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1010 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1010] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 957: // STATE 1012 - _spin_nvr.tmp:2325 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1012 = 0;
			if (verbose && !reported1012)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1012 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1012 = 0;
			if (verbose && !reported1012)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1012 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1012] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 958: // STATE 1014 - _spin_nvr.tmp:2326 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1014 = 0;
			if (verbose && !reported1014)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1014 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1014 = 0;
			if (verbose && !reported1014)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1014 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1014] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 959: // STATE 1016 - _spin_nvr.tmp:2327 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1016 = 0;
			if (verbose && !reported1016)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1016 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1016 = 0;
			if (verbose && !reported1016)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1016 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1016] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 960: // STATE 1018 - _spin_nvr.tmp:2328 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1018 = 0;
			if (verbose && !reported1018)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1018 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1018 = 0;
			if (verbose && !reported1018)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1018 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1018] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 961: // STATE 1020 - _spin_nvr.tmp:2329 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1020 = 0;
			if (verbose && !reported1020)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1020 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1020 = 0;
			if (verbose && !reported1020)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1020 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1020] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 962: // STATE 1022 - _spin_nvr.tmp:2330 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1022 = 0;
			if (verbose && !reported1022)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1022 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1022 = 0;
			if (verbose && !reported1022)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1022 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1022] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 963: // STATE 1024 - _spin_nvr.tmp:2331 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1024 = 0;
			if (verbose && !reported1024)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1024 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1024 = 0;
			if (verbose && !reported1024)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1024 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1024] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 964: // STATE 1026 - _spin_nvr.tmp:2332 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1026 = 0;
			if (verbose && !reported1026)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1026 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1026 = 0;
			if (verbose && !reported1026)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1026 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1026] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 965: // STATE 1030 - _spin_nvr.tmp:2334 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1030 = 0;
			if (verbose && !reported1030)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1030 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1030 = 0;
			if (verbose && !reported1030)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1030 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1030] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 966: // STATE 1032 - _spin_nvr.tmp:2335 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1032 = 0;
			if (verbose && !reported1032)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1032 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1032 = 0;
			if (verbose && !reported1032)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1032 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1032] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 967: // STATE 1034 - _spin_nvr.tmp:2336 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1034 = 0;
			if (verbose && !reported1034)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1034 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1034 = 0;
			if (verbose && !reported1034)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1034 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1034] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 968: // STATE 1039 - _spin_nvr.tmp:2340 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1039 = 0;
			if (verbose && !reported1039)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1039 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1039 = 0;
			if (verbose && !reported1039)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1039 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1039] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 969: // STATE 1041 - _spin_nvr.tmp:2341 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1041 = 0;
			if (verbose && !reported1041)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1041 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1041 = 0;
			if (verbose && !reported1041)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1041 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1041] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 970: // STATE 1043 - _spin_nvr.tmp:2342 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1043 = 0;
			if (verbose && !reported1043)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1043 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1043 = 0;
			if (verbose && !reported1043)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1043 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1043] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 971: // STATE 1045 - _spin_nvr.tmp:2343 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1045 = 0;
			if (verbose && !reported1045)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1045 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1045 = 0;
			if (verbose && !reported1045)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1045 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1045] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 972: // STATE 1047 - _spin_nvr.tmp:2344 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1047 = 0;
			if (verbose && !reported1047)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1047 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1047 = 0;
			if (verbose && !reported1047)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1047 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1047] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 973: // STATE 1049 - _spin_nvr.tmp:2345 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1049 = 0;
			if (verbose && !reported1049)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1049 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1049 = 0;
			if (verbose && !reported1049)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1049 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1049] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 974: // STATE 1051 - _spin_nvr.tmp:2346 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1051 = 0;
			if (verbose && !reported1051)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1051 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1051 = 0;
			if (verbose && !reported1051)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1051 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1051] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 975: // STATE 1053 - _spin_nvr.tmp:2347 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1053 = 0;
			if (verbose && !reported1053)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1053 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1053 = 0;
			if (verbose && !reported1053)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1053 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1053] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 976: // STATE 1055 - _spin_nvr.tmp:2348 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1055 = 0;
			if (verbose && !reported1055)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1055 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1055 = 0;
			if (verbose && !reported1055)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1055 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1055] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 977: // STATE 1057 - _spin_nvr.tmp:2349 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1057 = 0;
			if (verbose && !reported1057)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1057 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1057 = 0;
			if (verbose && !reported1057)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1057 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1057] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 978: // STATE 1059 - _spin_nvr.tmp:2350 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1059 = 0;
			if (verbose && !reported1059)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1059 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1059 = 0;
			if (verbose && !reported1059)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1059 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1059] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 979: // STATE 1063 - _spin_nvr.tmp:2352 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1063 = 0;
			if (verbose && !reported1063)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1063 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1063 = 0;
			if (verbose && !reported1063)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1063 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1063] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 980: // STATE 1065 - _spin_nvr.tmp:2353 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1065 = 0;
			if (verbose && !reported1065)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1065 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1065 = 0;
			if (verbose && !reported1065)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1065 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1065] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 981: // STATE 1067 - _spin_nvr.tmp:2354 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1067 = 0;
			if (verbose && !reported1067)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1067 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1067 = 0;
			if (verbose && !reported1067)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1067 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1067] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 982: // STATE 1069 - _spin_nvr.tmp:2355 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1069 = 0;
			if (verbose && !reported1069)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1069 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1069 = 0;
			if (verbose && !reported1069)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1069 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1069] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 983: // STATE 1071 - _spin_nvr.tmp:2356 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1071 = 0;
			if (verbose && !reported1071)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1071 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1071 = 0;
			if (verbose && !reported1071)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1071 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1071] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 984: // STATE 1073 - _spin_nvr.tmp:2357 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1073 = 0;
			if (verbose && !reported1073)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1073 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1073 = 0;
			if (verbose && !reported1073)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1073 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1073] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 985: // STATE 1075 - _spin_nvr.tmp:2358 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1075 = 0;
			if (verbose && !reported1075)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1075 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1075 = 0;
			if (verbose && !reported1075)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1075 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1075] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 986: // STATE 1077 - _spin_nvr.tmp:2359 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1077 = 0;
			if (verbose && !reported1077)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1077 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1077 = 0;
			if (verbose && !reported1077)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1077 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1077] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 987: // STATE 1079 - _spin_nvr.tmp:2360 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1079 = 0;
			if (verbose && !reported1079)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1079 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1079 = 0;
			if (verbose && !reported1079)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1079 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1079] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 988: // STATE 1081 - _spin_nvr.tmp:2361 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1081 = 0;
			if (verbose && !reported1081)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1081 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1081 = 0;
			if (verbose && !reported1081)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1081 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1081] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 989: // STATE 1083 - _spin_nvr.tmp:2362 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1083 = 0;
			if (verbose && !reported1083)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1083 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1083 = 0;
			if (verbose && !reported1083)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1083 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1083] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 990: // STATE 1085 - _spin_nvr.tmp:2363 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1085 = 0;
			if (verbose && !reported1085)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1085 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1085 = 0;
			if (verbose && !reported1085)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1085 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1085] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 991: // STATE 1087 - _spin_nvr.tmp:2364 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1087 = 0;
			if (verbose && !reported1087)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1087 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1087 = 0;
			if (verbose && !reported1087)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1087 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1087] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 992: // STATE 1089 - _spin_nvr.tmp:2365 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1089 = 0;
			if (verbose && !reported1089)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1089 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1089 = 0;
			if (verbose && !reported1089)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1089 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1089] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 993: // STATE 1091 - _spin_nvr.tmp:2366 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1091 = 0;
			if (verbose && !reported1091)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1091 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1091 = 0;
			if (verbose && !reported1091)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1091 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1091] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 994: // STATE 1093 - _spin_nvr.tmp:2367 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1093 = 0;
			if (verbose && !reported1093)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1093 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1093 = 0;
			if (verbose && !reported1093)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1093 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1093] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 995: // STATE 1098 - _spin_nvr.tmp:2371 - [(((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1098 = 0;
			if (verbose && !reported1098)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1098 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1098 = 0;
			if (verbose && !reported1098)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1098 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1098] = 1;
		if (!(((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 996: // STATE 1100 - _spin_nvr.tmp:2372 - [((pumpOn&&(waterLevel==low)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1100 = 0;
			if (verbose && !reported1100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1100 = 0;
			if (verbose && !reported1100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1100] = 1;
		if (!((((int)now.pumpOn)&&(now.waterLevel==5))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 997: // STATE 1102 - _spin_nvr.tmp:2373 - [(((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1102 = 0;
			if (verbose && !reported1102)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1102 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1102 = 0;
			if (verbose && !reported1102)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1102 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1102] = 1;
		if (!(((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 998: // STATE 1104 - _spin_nvr.tmp:2374 - [((((pumpOn&&(waterLevel==low))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1104 = 0;
			if (verbose && !reported1104)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1104 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1104 = 0;
			if (verbose && !reported1104)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1104 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1104] = 1;
		if (!((((((int)now.pumpOn)&&(now.waterLevel==5))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 999: // STATE 1106 - _spin_nvr.tmp:2375 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1106 = 0;
			if (verbose && !reported1106)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1106 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1106 = 0;
			if (verbose && !reported1106)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1106 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1106] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1000: // STATE 1108 - _spin_nvr.tmp:2376 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1108 = 0;
			if (verbose && !reported1108)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1108 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1108 = 0;
			if (verbose && !reported1108)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1108 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1108] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1001: // STATE 1110 - _spin_nvr.tmp:2377 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1110 = 0;
			if (verbose && !reported1110)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1110 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1110 = 0;
			if (verbose && !reported1110)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1110 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1110] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1002: // STATE 1112 - _spin_nvr.tmp:2378 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1112 = 0;
			if (verbose && !reported1112)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1112 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1112 = 0;
			if (verbose && !reported1112)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1112 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1112] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1003: // STATE 1114 - _spin_nvr.tmp:2379 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1114 = 0;
			if (verbose && !reported1114)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1114 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1114 = 0;
			if (verbose && !reported1114)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1114 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1114] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1004: // STATE 1116 - _spin_nvr.tmp:2380 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1116 = 0;
			if (verbose && !reported1116)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1116 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1116 = 0;
			if (verbose && !reported1116)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1116 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1116] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1005: // STATE 1118 - _spin_nvr.tmp:2381 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1118 = 0;
			if (verbose && !reported1118)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1118 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1118 = 0;
			if (verbose && !reported1118)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1118 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1118] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1006: // STATE 1120 - _spin_nvr.tmp:2382 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1120 = 0;
			if (verbose && !reported1120)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1120 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1120 = 0;
			if (verbose && !reported1120)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1120 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1120] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1007: // STATE 1122 - _spin_nvr.tmp:2383 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1122 = 0;
			if (verbose && !reported1122)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1122 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1122 = 0;
			if (verbose && !reported1122)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1122 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1122] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1008: // STATE 1124 - _spin_nvr.tmp:2384 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1124 = 0;
			if (verbose && !reported1124)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1124 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1124 = 0;
			if (verbose && !reported1124)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1124 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1124] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1009: // STATE 1126 - _spin_nvr.tmp:2385 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1126 = 0;
			if (verbose && !reported1126)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1126 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1126 = 0;
			if (verbose && !reported1126)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1126 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1126] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1010: // STATE 1128 - _spin_nvr.tmp:2386 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1128 = 0;
			if (verbose && !reported1128)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1128 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1128 = 0;
			if (verbose && !reported1128)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1128 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1128] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1011: // STATE 1130 - _spin_nvr.tmp:2387 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1130 = 0;
			if (verbose && !reported1130)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1130 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1130 = 0;
			if (verbose && !reported1130)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1130 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1130] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1012: // STATE 1132 - _spin_nvr.tmp:2388 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1132 = 0;
			if (verbose && !reported1132)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1132 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1132 = 0;
			if (verbose && !reported1132)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1132 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1132] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1013: // STATE 1134 - _spin_nvr.tmp:2389 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1134 = 0;
			if (verbose && !reported1134)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1134 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1134 = 0;
			if (verbose && !reported1134)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1134 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1134] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1014: // STATE 1136 - _spin_nvr.tmp:2390 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1136 = 0;
			if (verbose && !reported1136)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1136 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1136 = 0;
			if (verbose && !reported1136)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1136 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1136] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1015: // STATE 1138 - _spin_nvr.tmp:2391 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1138 = 0;
			if (verbose && !reported1138)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1138 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1138 = 0;
			if (verbose && !reported1138)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1138 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1138] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1016: // STATE 1145 - _spin_nvr.tmp:2394 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1145 = 0;
			if (verbose && !reported1145)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1145 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1145 = 0;
			if (verbose && !reported1145)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1145 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[17][1145] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_stopping */
	case 1017: // STATE 1 - _spin_nvr.tmp:1438 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][1] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1018: // STATE 3 - _spin_nvr.tmp:1439 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][3] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1019: // STATE 5 - _spin_nvr.tmp:1440 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][5] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1020: // STATE 7 - _spin_nvr.tmp:1441 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][7] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1021: // STATE 9 - _spin_nvr.tmp:1442 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][9] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1022: // STATE 11 - _spin_nvr.tmp:1443 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][11] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1023: // STATE 13 - _spin_nvr.tmp:1444 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][13] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1024: // STATE 15 - _spin_nvr.tmp:1445 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][15] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1025: // STATE 19 - _spin_nvr.tmp:1447 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][19] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1026: // STATE 21 - _spin_nvr.tmp:1448 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][21] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1027: // STATE 23 - _spin_nvr.tmp:1449 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported23 = 0;
			if (verbose && !reported23)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported23 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported23 = 0;
			if (verbose && !reported23)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported23 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][23] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1028: // STATE 28 - _spin_nvr.tmp:1453 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][28] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1029: // STATE 33 - _spin_nvr.tmp:1457 - [((!(!(pumpOn))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][33] = 1;
		if (!(( !( !(((int)now.pumpOn)))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1030: // STATE 35 - _spin_nvr.tmp:1458 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][35] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1031: // STATE 40 - _spin_nvr.tmp:1462 - [(((!(!(pumpOn))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][40] = 1;
		if (!((( !( !(((int)now.pumpOn)))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1032: // STATE 42 - _spin_nvr.tmp:1463 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][42] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1033: // STATE 44 - _spin_nvr.tmp:1464 - [((!(!(pumpOn))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][44] = 1;
		if (!(( !( !(((int)now.pumpOn)))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1034: // STATE 49 - _spin_nvr.tmp:1468 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][49] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1035: // STATE 51 - _spin_nvr.tmp:1469 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][51] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1036: // STATE 53 - _spin_nvr.tmp:1470 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][53] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1037: // STATE 55 - _spin_nvr.tmp:1471 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][55] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1038: // STATE 57 - _spin_nvr.tmp:1472 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][57] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1039: // STATE 59 - _spin_nvr.tmp:1473 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][59] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1040: // STATE 61 - _spin_nvr.tmp:1474 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][61] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1041: // STATE 63 - _spin_nvr.tmp:1475 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][63] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1042: // STATE 65 - _spin_nvr.tmp:1476 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][65] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1043: // STATE 69 - _spin_nvr.tmp:1478 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][69] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1044: // STATE 71 - _spin_nvr.tmp:1479 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported71 = 0;
			if (verbose && !reported71)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported71 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported71 = 0;
			if (verbose && !reported71)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported71 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][71] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1045: // STATE 76 - _spin_nvr.tmp:1483 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported76 = 0;
			if (verbose && !reported76)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported76 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported76 = 0;
			if (verbose && !reported76)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported76 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][76] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1046: // STATE 78 - _spin_nvr.tmp:1484 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported78 = 0;
			if (verbose && !reported78)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported78 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported78 = 0;
			if (verbose && !reported78)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported78 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][78] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1047: // STATE 80 - _spin_nvr.tmp:1485 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][80] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1048: // STATE 82 - _spin_nvr.tmp:1486 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][82] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1049: // STATE 84 - _spin_nvr.tmp:1487 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][84] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1050: // STATE 86 - _spin_nvr.tmp:1488 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][86] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1051: // STATE 88 - _spin_nvr.tmp:1489 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][88] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1052: // STATE 90 - _spin_nvr.tmp:1490 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][90] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1053: // STATE 92 - _spin_nvr.tmp:1491 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][92] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1054: // STATE 94 - _spin_nvr.tmp:1492 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][94] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1055: // STATE 98 - _spin_nvr.tmp:1494 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][98] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1056: // STATE 100 - _spin_nvr.tmp:1495 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][100] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1057: // STATE 102 - _spin_nvr.tmp:1496 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported102 = 0;
			if (verbose && !reported102)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported102 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported102 = 0;
			if (verbose && !reported102)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported102 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][102] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1058: // STATE 107 - _spin_nvr.tmp:1500 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][107] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1059: // STATE 109 - _spin_nvr.tmp:1501 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][109] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1060: // STATE 111 - _spin_nvr.tmp:1502 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][111] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1061: // STATE 113 - _spin_nvr.tmp:1503 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][113] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1062: // STATE 115 - _spin_nvr.tmp:1504 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][115] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1063: // STATE 117 - _spin_nvr.tmp:1505 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][117] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1064: // STATE 119 - _spin_nvr.tmp:1506 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][119] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1065: // STATE 121 - _spin_nvr.tmp:1507 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][121] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1066: // STATE 123 - _spin_nvr.tmp:1508 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][123] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1067: // STATE 125 - _spin_nvr.tmp:1509 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][125] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1068: // STATE 129 - _spin_nvr.tmp:1511 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][129] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1069: // STATE 131 - _spin_nvr.tmp:1512 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][131] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1070: // STATE 136 - _spin_nvr.tmp:1516 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported136 = 0;
			if (verbose && !reported136)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported136 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported136 = 0;
			if (verbose && !reported136)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported136 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][136] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1071: // STATE 138 - _spin_nvr.tmp:1517 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported138 = 0;
			if (verbose && !reported138)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported138 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported138 = 0;
			if (verbose && !reported138)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported138 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][138] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1072: // STATE 140 - _spin_nvr.tmp:1518 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][140] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1073: // STATE 142 - _spin_nvr.tmp:1519 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][142] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1074: // STATE 144 - _spin_nvr.tmp:1520 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][144] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1075: // STATE 146 - _spin_nvr.tmp:1521 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][146] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1076: // STATE 148 - _spin_nvr.tmp:1522 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][148] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1077: // STATE 150 - _spin_nvr.tmp:1523 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][150] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1078: // STATE 152 - _spin_nvr.tmp:1524 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][152] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1079: // STATE 154 - _spin_nvr.tmp:1525 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][154] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1080: // STATE 156 - _spin_nvr.tmp:1526 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][156] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1081: // STATE 160 - _spin_nvr.tmp:1528 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][160] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1082: // STATE 162 - _spin_nvr.tmp:1529 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][162] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1083: // STATE 167 - _spin_nvr.tmp:1533 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported167 = 0;
			if (verbose && !reported167)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported167 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported167 = 0;
			if (verbose && !reported167)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported167 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][167] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1084: // STATE 169 - _spin_nvr.tmp:1534 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported169 = 0;
			if (verbose && !reported169)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported169 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported169 = 0;
			if (verbose && !reported169)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported169 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][169] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1085: // STATE 171 - _spin_nvr.tmp:1535 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][171] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1086: // STATE 173 - _spin_nvr.tmp:1536 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][173] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1087: // STATE 175 - _spin_nvr.tmp:1537 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][175] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1088: // STATE 177 - _spin_nvr.tmp:1538 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][177] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1089: // STATE 179 - _spin_nvr.tmp:1539 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][179] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1090: // STATE 181 - _spin_nvr.tmp:1540 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][181] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1091: // STATE 183 - _spin_nvr.tmp:1541 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][183] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1092: // STATE 185 - _spin_nvr.tmp:1542 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][185] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1093: // STATE 187 - _spin_nvr.tmp:1543 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][187] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1094: // STATE 189 - _spin_nvr.tmp:1544 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][189] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1095: // STATE 193 - _spin_nvr.tmp:1546 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][193] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1096: // STATE 195 - _spin_nvr.tmp:1547 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][195] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1097: // STATE 200 - _spin_nvr.tmp:1551 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported200 = 0;
			if (verbose && !reported200)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported200 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported200 = 0;
			if (verbose && !reported200)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported200 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][200] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1098: // STATE 202 - _spin_nvr.tmp:1552 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported202 = 0;
			if (verbose && !reported202)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported202 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported202 = 0;
			if (verbose && !reported202)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported202 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][202] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1099: // STATE 204 - _spin_nvr.tmp:1553 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported204 = 0;
			if (verbose && !reported204)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported204 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported204 = 0;
			if (verbose && !reported204)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported204 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][204] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1100: // STATE 206 - _spin_nvr.tmp:1554 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported206 = 0;
			if (verbose && !reported206)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported206 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported206 = 0;
			if (verbose && !reported206)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported206 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][206] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1101: // STATE 208 - _spin_nvr.tmp:1555 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][208] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1102: // STATE 210 - _spin_nvr.tmp:1556 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][210] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1103: // STATE 212 - _spin_nvr.tmp:1557 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][212] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1104: // STATE 214 - _spin_nvr.tmp:1558 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][214] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1105: // STATE 216 - _spin_nvr.tmp:1559 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][216] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1106: // STATE 218 - _spin_nvr.tmp:1560 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][218] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1107: // STATE 220 - _spin_nvr.tmp:1561 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][220] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1108: // STATE 222 - _spin_nvr.tmp:1562 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][222] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1109: // STATE 224 - _spin_nvr.tmp:1563 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][224] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1110: // STATE 228 - _spin_nvr.tmp:1565 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][228] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1111: // STATE 230 - _spin_nvr.tmp:1566 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][230] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1112: // STATE 235 - _spin_nvr.tmp:1570 - [((((!(!(pumpOn))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported235 = 0;
			if (verbose && !reported235)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported235 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported235 = 0;
			if (verbose && !reported235)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported235 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][235] = 1;
		if (!(((( !( !(((int)now.pumpOn)))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1113: // STATE 237 - _spin_nvr.tmp:1571 - [((!(!(pumpOn))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][237] = 1;
		if (!(( !( !(((int)now.pumpOn)))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1114: // STATE 239 - _spin_nvr.tmp:1572 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][239] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1115: // STATE 241 - _spin_nvr.tmp:1573 - [(((!(!(pumpOn))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][241] = 1;
		if (!((( !( !(((int)now.pumpOn)))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1116: // STATE 246 - _spin_nvr.tmp:1577 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported246 = 0;
			if (verbose && !reported246)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported246 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported246 = 0;
			if (verbose && !reported246)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported246 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][246] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1117: // STATE 248 - _spin_nvr.tmp:1578 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported248 = 0;
			if (verbose && !reported248)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported248 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported248 = 0;
			if (verbose && !reported248)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported248 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][248] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1118: // STATE 250 - _spin_nvr.tmp:1579 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported250 = 0;
			if (verbose && !reported250)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported250 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported250 = 0;
			if (verbose && !reported250)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported250 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][250] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1119: // STATE 252 - _spin_nvr.tmp:1580 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported252 = 0;
			if (verbose && !reported252)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported252 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported252 = 0;
			if (verbose && !reported252)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported252 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][252] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1120: // STATE 254 - _spin_nvr.tmp:1581 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported254 = 0;
			if (verbose && !reported254)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported254 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported254 = 0;
			if (verbose && !reported254)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported254 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][254] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1121: // STATE 256 - _spin_nvr.tmp:1582 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported256 = 0;
			if (verbose && !reported256)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported256 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported256 = 0;
			if (verbose && !reported256)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported256 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][256] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1122: // STATE 258 - _spin_nvr.tmp:1583 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported258 = 0;
			if (verbose && !reported258)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported258 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported258 = 0;
			if (verbose && !reported258)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported258 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][258] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1123: // STATE 260 - _spin_nvr.tmp:1584 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported260 = 0;
			if (verbose && !reported260)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported260 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported260 = 0;
			if (verbose && !reported260)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported260 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][260] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1124: // STATE 262 - _spin_nvr.tmp:1585 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported262 = 0;
			if (verbose && !reported262)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported262 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported262 = 0;
			if (verbose && !reported262)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported262 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][262] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1125: // STATE 264 - _spin_nvr.tmp:1586 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported264 = 0;
			if (verbose && !reported264)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported264 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported264 = 0;
			if (verbose && !reported264)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported264 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][264] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1126: // STATE 268 - _spin_nvr.tmp:1588 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported268 = 0;
			if (verbose && !reported268)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported268 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported268 = 0;
			if (verbose && !reported268)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported268 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][268] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1127: // STATE 273 - _spin_nvr.tmp:1592 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported273 = 0;
			if (verbose && !reported273)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported273 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported273 = 0;
			if (verbose && !reported273)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported273 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][273] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1128: // STATE 275 - _spin_nvr.tmp:1593 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported275 = 0;
			if (verbose && !reported275)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported275 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported275 = 0;
			if (verbose && !reported275)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported275 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][275] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1129: // STATE 277 - _spin_nvr.tmp:1594 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported277 = 0;
			if (verbose && !reported277)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported277 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported277 = 0;
			if (verbose && !reported277)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported277 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][277] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1130: // STATE 279 - _spin_nvr.tmp:1595 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported279 = 0;
			if (verbose && !reported279)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported279 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported279 = 0;
			if (verbose && !reported279)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported279 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][279] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1131: // STATE 281 - _spin_nvr.tmp:1596 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported281 = 0;
			if (verbose && !reported281)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported281 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported281 = 0;
			if (verbose && !reported281)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported281 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][281] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1132: // STATE 283 - _spin_nvr.tmp:1597 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported283 = 0;
			if (verbose && !reported283)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported283 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported283 = 0;
			if (verbose && !reported283)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported283 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][283] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1133: // STATE 285 - _spin_nvr.tmp:1598 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported285 = 0;
			if (verbose && !reported285)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported285 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported285 = 0;
			if (verbose && !reported285)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported285 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][285] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1134: // STATE 287 - _spin_nvr.tmp:1599 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported287 = 0;
			if (verbose && !reported287)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported287 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported287 = 0;
			if (verbose && !reported287)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported287 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][287] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1135: // STATE 289 - _spin_nvr.tmp:1600 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported289 = 0;
			if (verbose && !reported289)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported289 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported289 = 0;
			if (verbose && !reported289)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported289 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][289] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1136: // STATE 291 - _spin_nvr.tmp:1601 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported291 = 0;
			if (verbose && !reported291)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported291 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported291 = 0;
			if (verbose && !reported291)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported291 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][291] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1137: // STATE 293 - _spin_nvr.tmp:1602 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported293 = 0;
			if (verbose && !reported293)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported293 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported293 = 0;
			if (verbose && !reported293)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported293 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][293] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1138: // STATE 295 - _spin_nvr.tmp:1603 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported295 = 0;
			if (verbose && !reported295)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported295 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported295 = 0;
			if (verbose && !reported295)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported295 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][295] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1139: // STATE 297 - _spin_nvr.tmp:1604 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported297 = 0;
			if (verbose && !reported297)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported297 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported297 = 0;
			if (verbose && !reported297)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported297 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][297] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1140: // STATE 301 - _spin_nvr.tmp:1606 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported301 = 0;
			if (verbose && !reported301)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported301 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported301 = 0;
			if (verbose && !reported301)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported301 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][301] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1141: // STATE 303 - _spin_nvr.tmp:1607 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported303 = 0;
			if (verbose && !reported303)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported303 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported303 = 0;
			if (verbose && !reported303)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported303 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][303] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1142: // STATE 305 - _spin_nvr.tmp:1608 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported305 = 0;
			if (verbose && !reported305)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported305 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported305 = 0;
			if (verbose && !reported305)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported305 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][305] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1143: // STATE 310 - _spin_nvr.tmp:1612 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported310 = 0;
			if (verbose && !reported310)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported310 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported310 = 0;
			if (verbose && !reported310)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported310 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][310] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1144: // STATE 312 - _spin_nvr.tmp:1613 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported312 = 0;
			if (verbose && !reported312)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported312 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported312 = 0;
			if (verbose && !reported312)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported312 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][312] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1145: // STATE 314 - _spin_nvr.tmp:1614 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported314 = 0;
			if (verbose && !reported314)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported314 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported314 = 0;
			if (verbose && !reported314)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported314 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][314] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1146: // STATE 316 - _spin_nvr.tmp:1615 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported316 = 0;
			if (verbose && !reported316)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported316 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported316 = 0;
			if (verbose && !reported316)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported316 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][316] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1147: // STATE 318 - _spin_nvr.tmp:1616 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported318 = 0;
			if (verbose && !reported318)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported318 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported318 = 0;
			if (verbose && !reported318)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported318 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][318] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1148: // STATE 320 - _spin_nvr.tmp:1617 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported320 = 0;
			if (verbose && !reported320)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported320 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported320 = 0;
			if (verbose && !reported320)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported320 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][320] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1149: // STATE 322 - _spin_nvr.tmp:1618 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported322 = 0;
			if (verbose && !reported322)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported322 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported322 = 0;
			if (verbose && !reported322)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported322 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][322] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1150: // STATE 324 - _spin_nvr.tmp:1619 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported324 = 0;
			if (verbose && !reported324)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported324 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported324 = 0;
			if (verbose && !reported324)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported324 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][324] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1151: // STATE 326 - _spin_nvr.tmp:1620 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported326 = 0;
			if (verbose && !reported326)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported326 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported326 = 0;
			if (verbose && !reported326)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported326 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][326] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1152: // STATE 328 - _spin_nvr.tmp:1621 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported328 = 0;
			if (verbose && !reported328)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported328 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported328 = 0;
			if (verbose && !reported328)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported328 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][328] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1153: // STATE 330 - _spin_nvr.tmp:1622 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported330 = 0;
			if (verbose && !reported330)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported330 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported330 = 0;
			if (verbose && !reported330)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported330 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][330] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1154: // STATE 334 - _spin_nvr.tmp:1624 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported334 = 0;
			if (verbose && !reported334)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported334 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported334 = 0;
			if (verbose && !reported334)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported334 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][334] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1155: // STATE 339 - _spin_nvr.tmp:1628 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported339 = 0;
			if (verbose && !reported339)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported339 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported339 = 0;
			if (verbose && !reported339)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported339 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][339] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1156: // STATE 341 - _spin_nvr.tmp:1629 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported341 = 0;
			if (verbose && !reported341)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported341 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported341 = 0;
			if (verbose && !reported341)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported341 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][341] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1157: // STATE 343 - _spin_nvr.tmp:1630 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported343 = 0;
			if (verbose && !reported343)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported343 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported343 = 0;
			if (verbose && !reported343)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported343 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][343] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1158: // STATE 345 - _spin_nvr.tmp:1631 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported345 = 0;
			if (verbose && !reported345)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported345 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported345 = 0;
			if (verbose && !reported345)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported345 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][345] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1159: // STATE 347 - _spin_nvr.tmp:1632 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported347 = 0;
			if (verbose && !reported347)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported347 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported347 = 0;
			if (verbose && !reported347)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported347 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][347] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1160: // STATE 349 - _spin_nvr.tmp:1633 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported349 = 0;
			if (verbose && !reported349)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported349 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported349 = 0;
			if (verbose && !reported349)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported349 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][349] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1161: // STATE 351 - _spin_nvr.tmp:1634 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported351 = 0;
			if (verbose && !reported351)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported351 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported351 = 0;
			if (verbose && !reported351)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported351 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][351] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1162: // STATE 353 - _spin_nvr.tmp:1635 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported353 = 0;
			if (verbose && !reported353)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported353 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported353 = 0;
			if (verbose && !reported353)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported353 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][353] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1163: // STATE 355 - _spin_nvr.tmp:1636 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported355 = 0;
			if (verbose && !reported355)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported355 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported355 = 0;
			if (verbose && !reported355)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported355 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][355] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1164: // STATE 357 - _spin_nvr.tmp:1637 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported357 = 0;
			if (verbose && !reported357)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported357 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported357 = 0;
			if (verbose && !reported357)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported357 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][357] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1165: // STATE 359 - _spin_nvr.tmp:1638 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported359 = 0;
			if (verbose && !reported359)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported359 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported359 = 0;
			if (verbose && !reported359)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported359 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][359] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1166: // STATE 361 - _spin_nvr.tmp:1639 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported361 = 0;
			if (verbose && !reported361)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported361 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported361 = 0;
			if (verbose && !reported361)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported361 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][361] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1167: // STATE 365 - _spin_nvr.tmp:1641 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported365 = 0;
			if (verbose && !reported365)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported365 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported365 = 0;
			if (verbose && !reported365)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported365 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][365] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1168: // STATE 367 - _spin_nvr.tmp:1642 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported367 = 0;
			if (verbose && !reported367)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported367 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported367 = 0;
			if (verbose && !reported367)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported367 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][367] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1169: // STATE 372 - _spin_nvr.tmp:1646 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][372] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1170: // STATE 374 - _spin_nvr.tmp:1647 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][374] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1171: // STATE 376 - _spin_nvr.tmp:1648 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported376 = 0;
			if (verbose && !reported376)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported376 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported376 = 0;
			if (verbose && !reported376)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported376 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][376] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1172: // STATE 378 - _spin_nvr.tmp:1649 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported378 = 0;
			if (verbose && !reported378)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported378 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported378 = 0;
			if (verbose && !reported378)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported378 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][378] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1173: // STATE 380 - _spin_nvr.tmp:1650 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported380 = 0;
			if (verbose && !reported380)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported380 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported380 = 0;
			if (verbose && !reported380)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported380 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][380] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1174: // STATE 382 - _spin_nvr.tmp:1651 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported382 = 0;
			if (verbose && !reported382)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported382 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported382 = 0;
			if (verbose && !reported382)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported382 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][382] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1175: // STATE 384 - _spin_nvr.tmp:1652 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported384 = 0;
			if (verbose && !reported384)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported384 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported384 = 0;
			if (verbose && !reported384)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported384 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][384] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1176: // STATE 386 - _spin_nvr.tmp:1653 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported386 = 0;
			if (verbose && !reported386)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported386 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported386 = 0;
			if (verbose && !reported386)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported386 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][386] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1177: // STATE 388 - _spin_nvr.tmp:1654 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported388 = 0;
			if (verbose && !reported388)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported388 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported388 = 0;
			if (verbose && !reported388)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported388 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][388] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1178: // STATE 390 - _spin_nvr.tmp:1655 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported390 = 0;
			if (verbose && !reported390)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported390 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported390 = 0;
			if (verbose && !reported390)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported390 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][390] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1179: // STATE 392 - _spin_nvr.tmp:1656 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported392 = 0;
			if (verbose && !reported392)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported392 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported392 = 0;
			if (verbose && !reported392)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported392 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][392] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1180: // STATE 394 - _spin_nvr.tmp:1657 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported394 = 0;
			if (verbose && !reported394)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported394 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported394 = 0;
			if (verbose && !reported394)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported394 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][394] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1181: // STATE 401 - _spin_nvr.tmp:1662 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][401] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1182: // STATE 403 - _spin_nvr.tmp:1663 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported403 = 0;
			if (verbose && !reported403)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported403 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported403 = 0;
			if (verbose && !reported403)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported403 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][403] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1183: // STATE 405 - _spin_nvr.tmp:1664 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][405] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1184: // STATE 407 - _spin_nvr.tmp:1665 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][407] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1185: // STATE 409 - _spin_nvr.tmp:1666 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][409] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1186: // STATE 411 - _spin_nvr.tmp:1667 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][411] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1187: // STATE 413 - _spin_nvr.tmp:1668 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported413 = 0;
			if (verbose && !reported413)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported413 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported413 = 0;
			if (verbose && !reported413)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported413 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][413] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1188: // STATE 415 - _spin_nvr.tmp:1669 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported415 = 0;
			if (verbose && !reported415)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported415 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported415 = 0;
			if (verbose && !reported415)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported415 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][415] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1189: // STATE 417 - _spin_nvr.tmp:1670 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported417 = 0;
			if (verbose && !reported417)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported417 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported417 = 0;
			if (verbose && !reported417)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported417 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][417] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1190: // STATE 419 - _spin_nvr.tmp:1671 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported419 = 0;
			if (verbose && !reported419)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported419 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported419 = 0;
			if (verbose && !reported419)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported419 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][419] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1191: // STATE 421 - _spin_nvr.tmp:1672 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported421 = 0;
			if (verbose && !reported421)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported421 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported421 = 0;
			if (verbose && !reported421)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported421 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][421] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1192: // STATE 423 - _spin_nvr.tmp:1673 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported423 = 0;
			if (verbose && !reported423)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported423 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported423 = 0;
			if (verbose && !reported423)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported423 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][423] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1193: // STATE 427 - _spin_nvr.tmp:1675 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported427 = 0;
			if (verbose && !reported427)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported427 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported427 = 0;
			if (verbose && !reported427)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported427 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][427] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1194: // STATE 429 - _spin_nvr.tmp:1676 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported429 = 0;
			if (verbose && !reported429)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported429 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported429 = 0;
			if (verbose && !reported429)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported429 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][429] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1195: // STATE 431 - _spin_nvr.tmp:1677 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported431 = 0;
			if (verbose && !reported431)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported431 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported431 = 0;
			if (verbose && !reported431)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported431 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][431] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1196: // STATE 436 - _spin_nvr.tmp:1681 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][436] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1197: // STATE 438 - _spin_nvr.tmp:1682 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][438] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1198: // STATE 440 - _spin_nvr.tmp:1683 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported440 = 0;
			if (verbose && !reported440)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported440 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported440 = 0;
			if (verbose && !reported440)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported440 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][440] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1199: // STATE 442 - _spin_nvr.tmp:1684 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][442] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1200: // STATE 444 - _spin_nvr.tmp:1685 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][444] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1201: // STATE 446 - _spin_nvr.tmp:1686 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][446] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1202: // STATE 448 - _spin_nvr.tmp:1687 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][448] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1203: // STATE 450 - _spin_nvr.tmp:1688 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported450 = 0;
			if (verbose && !reported450)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported450 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported450 = 0;
			if (verbose && !reported450)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported450 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][450] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1204: // STATE 452 - _spin_nvr.tmp:1689 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported452 = 0;
			if (verbose && !reported452)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported452 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported452 = 0;
			if (verbose && !reported452)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported452 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][452] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1205: // STATE 454 - _spin_nvr.tmp:1690 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported454 = 0;
			if (verbose && !reported454)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported454 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported454 = 0;
			if (verbose && !reported454)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported454 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][454] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1206: // STATE 456 - _spin_nvr.tmp:1691 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported456 = 0;
			if (verbose && !reported456)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported456 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported456 = 0;
			if (verbose && !reported456)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported456 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][456] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1207: // STATE 460 - _spin_nvr.tmp:1693 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported460 = 0;
			if (verbose && !reported460)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported460 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported460 = 0;
			if (verbose && !reported460)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported460 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][460] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1208: // STATE 462 - _spin_nvr.tmp:1694 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported462 = 0;
			if (verbose && !reported462)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported462 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported462 = 0;
			if (verbose && !reported462)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported462 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][462] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1209: // STATE 467 - _spin_nvr.tmp:1698 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][467] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1210: // STATE 469 - _spin_nvr.tmp:1699 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][469] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1211: // STATE 471 - _spin_nvr.tmp:1700 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][471] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1212: // STATE 473 - _spin_nvr.tmp:1701 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][473] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1213: // STATE 475 - _spin_nvr.tmp:1702 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported475 = 0;
			if (verbose && !reported475)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported475 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported475 = 0;
			if (verbose && !reported475)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported475 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][475] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1214: // STATE 477 - _spin_nvr.tmp:1703 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][477] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1215: // STATE 479 - _spin_nvr.tmp:1704 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][479] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1216: // STATE 481 - _spin_nvr.tmp:1705 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][481] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1217: // STATE 483 - _spin_nvr.tmp:1706 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][483] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1218: // STATE 485 - _spin_nvr.tmp:1707 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][485] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1219: // STATE 487 - _spin_nvr.tmp:1708 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][487] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1220: // STATE 491 - _spin_nvr.tmp:1710 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][491] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1221: // STATE 493 - _spin_nvr.tmp:1711 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][493] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1222: // STATE 495 - _spin_nvr.tmp:1712 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][495] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1223: // STATE 500 - _spin_nvr.tmp:1716 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported500 = 0;
			if (verbose && !reported500)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported500 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported500 = 0;
			if (verbose && !reported500)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported500 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][500] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1224: // STATE 502 - _spin_nvr.tmp:1717 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][502] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1225: // STATE 504 - _spin_nvr.tmp:1718 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][504] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1226: // STATE 506 - _spin_nvr.tmp:1719 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][506] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1227: // STATE 508 - _spin_nvr.tmp:1720 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][508] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1228: // STATE 510 - _spin_nvr.tmp:1721 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][510] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1229: // STATE 512 - _spin_nvr.tmp:1722 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][512] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1230: // STATE 514 - _spin_nvr.tmp:1723 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][514] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1231: // STATE 516 - _spin_nvr.tmp:1724 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][516] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1232: // STATE 518 - _spin_nvr.tmp:1725 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][518] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1233: // STATE 520 - _spin_nvr.tmp:1726 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][520] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1234: // STATE 522 - _spin_nvr.tmp:1727 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][522] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1235: // STATE 526 - _spin_nvr.tmp:1729 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][526] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1236: // STATE 528 - _spin_nvr.tmp:1730 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][528] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1237: // STATE 533 - _spin_nvr.tmp:1734 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported533 = 0;
			if (verbose && !reported533)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported533 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported533 = 0;
			if (verbose && !reported533)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported533 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][533] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1238: // STATE 535 - _spin_nvr.tmp:1735 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported535 = 0;
			if (verbose && !reported535)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported535 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported535 = 0;
			if (verbose && !reported535)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported535 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][535] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1239: // STATE 537 - _spin_nvr.tmp:1736 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported537 = 0;
			if (verbose && !reported537)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported537 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported537 = 0;
			if (verbose && !reported537)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported537 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][537] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1240: // STATE 539 - _spin_nvr.tmp:1737 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][539] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1241: // STATE 541 - _spin_nvr.tmp:1738 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][541] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1242: // STATE 543 - _spin_nvr.tmp:1739 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][543] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1243: // STATE 545 - _spin_nvr.tmp:1740 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][545] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1244: // STATE 547 - _spin_nvr.tmp:1741 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][547] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1245: // STATE 549 - _spin_nvr.tmp:1742 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][549] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1246: // STATE 551 - _spin_nvr.tmp:1743 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][551] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1247: // STATE 555 - _spin_nvr.tmp:1745 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][555] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1248: // STATE 557 - _spin_nvr.tmp:1746 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][557] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1249: // STATE 559 - _spin_nvr.tmp:1747 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][559] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1250: // STATE 561 - _spin_nvr.tmp:1748 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported561 = 0;
			if (verbose && !reported561)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported561 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported561 = 0;
			if (verbose && !reported561)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported561 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][561] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1251: // STATE 566 - _spin_nvr.tmp:1752 - [((!(!((waterLevel==low)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported566 = 0;
			if (verbose && !reported566)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported566 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported566 = 0;
			if (verbose && !reported566)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported566 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][566] = 1;
		if (!(( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1252: // STATE 568 - _spin_nvr.tmp:1753 - [(((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported568 = 0;
			if (verbose && !reported568)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported568 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported568 = 0;
			if (verbose && !reported568)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported568 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][568] = 1;
		if (!((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1253: // STATE 570 - _spin_nvr.tmp:1754 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported570 = 0;
			if (verbose && !reported570)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported570 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported570 = 0;
			if (verbose && !reported570)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported570 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][570] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1254: // STATE 572 - _spin_nvr.tmp:1755 - [(((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported572 = 0;
			if (verbose && !reported572)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported572 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported572 = 0;
			if (verbose && !reported572)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported572 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][572] = 1;
		if (!((((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1255: // STATE 574 - _spin_nvr.tmp:1756 - [((((!(!((waterLevel==low)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported574 = 0;
			if (verbose && !reported574)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported574 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported574 = 0;
			if (verbose && !reported574)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported574 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][574] = 1;
		if (!(((( !( !((now.waterLevel==5)))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1256: // STATE 576 - _spin_nvr.tmp:1757 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported576 = 0;
			if (verbose && !reported576)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported576 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported576 = 0;
			if (verbose && !reported576)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported576 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][576] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1257: // STATE 578 - _spin_nvr.tmp:1758 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][578] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1258: // STATE 580 - _spin_nvr.tmp:1759 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][580] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1259: // STATE 582 - _spin_nvr.tmp:1760 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][582] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1260: // STATE 584 - _spin_nvr.tmp:1761 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][584] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1261: // STATE 586 - _spin_nvr.tmp:1762 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][586] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1262: // STATE 588 - _spin_nvr.tmp:1763 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][588] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1263: // STATE 592 - _spin_nvr.tmp:1765 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][592] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1264: // STATE 594 - _spin_nvr.tmp:1766 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][594] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1265: // STATE 596 - _spin_nvr.tmp:1767 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][596] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1266: // STATE 598 - _spin_nvr.tmp:1768 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][598] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1267: // STATE 600 - _spin_nvr.tmp:1769 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported600 = 0;
			if (verbose && !reported600)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported600 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported600 = 0;
			if (verbose && !reported600)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported600 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][600] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1268: // STATE 602 - _spin_nvr.tmp:1770 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][602] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1269: // STATE 607 - _spin_nvr.tmp:1772 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[16][607] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_methane_safetyness_light */
	case 1270: // STATE 1 - _spin_nvr.tmp:1403 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][1] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1271: // STATE 3 - _spin_nvr.tmp:1404 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][3] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1272: // STATE 5 - _spin_nvr.tmp:1405 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][5] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1273: // STATE 12 - _spin_nvr.tmp:1410 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][12] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1274: // STATE 14 - _spin_nvr.tmp:1411 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported14 = 0;
			if (verbose && !reported14)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported14 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported14 = 0;
			if (verbose && !reported14)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported14 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][14] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1275: // STATE 19 - _spin_nvr.tmp:1415 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][19] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1276: // STATE 24 - _spin_nvr.tmp:1419 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported24 = 0;
			if (verbose && !reported24)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported24 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported24 = 0;
			if (verbose && !reported24)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported24 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][24] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1277: // STATE 26 - _spin_nvr.tmp:1420 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][26] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1278: // STATE 31 - _spin_nvr.tmp:1424 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported31 = 0;
			if (verbose && !reported31)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported31 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported31 = 0;
			if (verbose && !reported31)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported31 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][31] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1279: // STATE 33 - _spin_nvr.tmp:1425 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][33] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1280: // STATE 38 - _spin_nvr.tmp:1429 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported38 = 0;
			if (verbose && !reported38)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported38 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported38 = 0;
			if (verbose && !reported38)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported38 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][38] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1281: // STATE 40 - _spin_nvr.tmp:1430 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][40] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1282: // STATE 44 - _spin_nvr.tmp:1432 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][44] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1283: // STATE 49 - _spin_nvr.tmp:1434 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[15][49] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM methane_sensor_liveness_light */
	case 1284: // STATE 1 - _spin_nvr.tmp:1368 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][1] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1285: // STATE 3 - _spin_nvr.tmp:1369 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][3] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1286: // STATE 5 - _spin_nvr.tmp:1370 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][5] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1287: // STATE 12 - _spin_nvr.tmp:1375 - [((!(!((pstate==running)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][12] = 1;
		if (!(( !( !((now.pstate==10)))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1288: // STATE 14 - _spin_nvr.tmp:1376 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported14 = 0;
			if (verbose && !reported14)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported14 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported14 = 0;
			if (verbose && !reported14)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported14 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][14] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1289: // STATE 19 - _spin_nvr.tmp:1380 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][19] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1290: // STATE 24 - _spin_nvr.tmp:1384 - [((!(!((pstate==running)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported24 = 0;
			if (verbose && !reported24)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported24 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported24 = 0;
			if (verbose && !reported24)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported24 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][24] = 1;
		if (!(( !( !((now.pstate==10)))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1291: // STATE 26 - _spin_nvr.tmp:1385 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][26] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1292: // STATE 31 - _spin_nvr.tmp:1389 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported31 = 0;
			if (verbose && !reported31)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported31 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported31 = 0;
			if (verbose && !reported31)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported31 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][31] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1293: // STATE 33 - _spin_nvr.tmp:1390 - [((!(!((pstate==running)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][33] = 1;
		if (!(( !( !((now.pstate==10)))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1294: // STATE 38 - _spin_nvr.tmp:1394 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported38 = 0;
			if (verbose && !reported38)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported38 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported38 = 0;
			if (verbose && !reported38)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported38 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][38] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1295: // STATE 40 - _spin_nvr.tmp:1395 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][40] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1296: // STATE 44 - _spin_nvr.tmp:1397 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][44] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1297: // STATE 49 - _spin_nvr.tmp:1399 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[14][49] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM methane_sensor_liveness */
	case 1298: // STATE 1 - _spin_nvr.tmp:1030 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][1] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1299: // STATE 3 - _spin_nvr.tmp:1031 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][3] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1300: // STATE 5 - _spin_nvr.tmp:1032 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][5] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1301: // STATE 7 - _spin_nvr.tmp:1033 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][7] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1302: // STATE 9 - _spin_nvr.tmp:1034 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][9] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1303: // STATE 11 - _spin_nvr.tmp:1035 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][11] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1304: // STATE 13 - _spin_nvr.tmp:1036 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][13] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1305: // STATE 15 - _spin_nvr.tmp:1037 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][15] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1306: // STATE 19 - _spin_nvr.tmp:1039 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][19] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1307: // STATE 21 - _spin_nvr.tmp:1040 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][21] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1308: // STATE 23 - _spin_nvr.tmp:1041 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported23 = 0;
			if (verbose && !reported23)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported23 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported23 = 0;
			if (verbose && !reported23)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported23 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][23] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1309: // STATE 28 - _spin_nvr.tmp:1045 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][28] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1310: // STATE 33 - _spin_nvr.tmp:1049 - [((!(!((pstate==running)))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][33] = 1;
		if (!(( !( !((now.pstate==10)))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1311: // STATE 35 - _spin_nvr.tmp:1050 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][35] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1312: // STATE 40 - _spin_nvr.tmp:1054 - [(((!(!((pstate==running)))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][40] = 1;
		if (!((( !( !((now.pstate==10)))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1313: // STATE 42 - _spin_nvr.tmp:1055 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][42] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1314: // STATE 44 - _spin_nvr.tmp:1056 - [((!(!((pstate==running)))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][44] = 1;
		if (!(( !( !((now.pstate==10)))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1315: // STATE 49 - _spin_nvr.tmp:1060 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][49] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1316: // STATE 51 - _spin_nvr.tmp:1061 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][51] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1317: // STATE 53 - _spin_nvr.tmp:1062 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][53] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1318: // STATE 55 - _spin_nvr.tmp:1063 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][55] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1319: // STATE 57 - _spin_nvr.tmp:1064 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][57] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1320: // STATE 59 - _spin_nvr.tmp:1065 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][59] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1321: // STATE 61 - _spin_nvr.tmp:1066 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][61] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1322: // STATE 63 - _spin_nvr.tmp:1067 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][63] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1323: // STATE 65 - _spin_nvr.tmp:1068 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][65] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1324: // STATE 69 - _spin_nvr.tmp:1070 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][69] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1325: // STATE 71 - _spin_nvr.tmp:1071 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported71 = 0;
			if (verbose && !reported71)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported71 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported71 = 0;
			if (verbose && !reported71)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported71 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][71] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1326: // STATE 76 - _spin_nvr.tmp:1075 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported76 = 0;
			if (verbose && !reported76)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported76 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported76 = 0;
			if (verbose && !reported76)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported76 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][76] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1327: // STATE 78 - _spin_nvr.tmp:1076 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported78 = 0;
			if (verbose && !reported78)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported78 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported78 = 0;
			if (verbose && !reported78)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported78 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][78] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1328: // STATE 80 - _spin_nvr.tmp:1077 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][80] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1329: // STATE 82 - _spin_nvr.tmp:1078 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][82] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1330: // STATE 84 - _spin_nvr.tmp:1079 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][84] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1331: // STATE 86 - _spin_nvr.tmp:1080 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][86] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1332: // STATE 88 - _spin_nvr.tmp:1081 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][88] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1333: // STATE 90 - _spin_nvr.tmp:1082 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][90] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1334: // STATE 92 - _spin_nvr.tmp:1083 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][92] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1335: // STATE 94 - _spin_nvr.tmp:1084 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][94] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1336: // STATE 98 - _spin_nvr.tmp:1086 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][98] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1337: // STATE 100 - _spin_nvr.tmp:1087 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][100] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1338: // STATE 102 - _spin_nvr.tmp:1088 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported102 = 0;
			if (verbose && !reported102)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported102 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported102 = 0;
			if (verbose && !reported102)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported102 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][102] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1339: // STATE 107 - _spin_nvr.tmp:1092 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][107] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1340: // STATE 109 - _spin_nvr.tmp:1093 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][109] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1341: // STATE 111 - _spin_nvr.tmp:1094 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][111] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1342: // STATE 113 - _spin_nvr.tmp:1095 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][113] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1343: // STATE 115 - _spin_nvr.tmp:1096 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][115] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1344: // STATE 117 - _spin_nvr.tmp:1097 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][117] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1345: // STATE 119 - _spin_nvr.tmp:1098 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][119] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1346: // STATE 121 - _spin_nvr.tmp:1099 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][121] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1347: // STATE 123 - _spin_nvr.tmp:1100 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][123] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1348: // STATE 125 - _spin_nvr.tmp:1101 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][125] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1349: // STATE 129 - _spin_nvr.tmp:1103 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][129] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1350: // STATE 131 - _spin_nvr.tmp:1104 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][131] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1351: // STATE 136 - _spin_nvr.tmp:1108 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported136 = 0;
			if (verbose && !reported136)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported136 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported136 = 0;
			if (verbose && !reported136)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported136 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][136] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1352: // STATE 138 - _spin_nvr.tmp:1109 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported138 = 0;
			if (verbose && !reported138)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported138 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported138 = 0;
			if (verbose && !reported138)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported138 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][138] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1353: // STATE 140 - _spin_nvr.tmp:1110 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][140] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1354: // STATE 142 - _spin_nvr.tmp:1111 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][142] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1355: // STATE 144 - _spin_nvr.tmp:1112 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][144] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1356: // STATE 146 - _spin_nvr.tmp:1113 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][146] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1357: // STATE 148 - _spin_nvr.tmp:1114 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][148] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1358: // STATE 150 - _spin_nvr.tmp:1115 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][150] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1359: // STATE 152 - _spin_nvr.tmp:1116 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][152] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1360: // STATE 154 - _spin_nvr.tmp:1117 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][154] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1361: // STATE 156 - _spin_nvr.tmp:1118 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][156] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1362: // STATE 160 - _spin_nvr.tmp:1120 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][160] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1363: // STATE 162 - _spin_nvr.tmp:1121 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][162] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1364: // STATE 167 - _spin_nvr.tmp:1125 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported167 = 0;
			if (verbose && !reported167)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported167 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported167 = 0;
			if (verbose && !reported167)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported167 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][167] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1365: // STATE 169 - _spin_nvr.tmp:1126 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported169 = 0;
			if (verbose && !reported169)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported169 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported169 = 0;
			if (verbose && !reported169)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported169 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][169] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1366: // STATE 171 - _spin_nvr.tmp:1127 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][171] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1367: // STATE 173 - _spin_nvr.tmp:1128 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][173] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1368: // STATE 175 - _spin_nvr.tmp:1129 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][175] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1369: // STATE 177 - _spin_nvr.tmp:1130 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][177] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1370: // STATE 179 - _spin_nvr.tmp:1131 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][179] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1371: // STATE 181 - _spin_nvr.tmp:1132 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][181] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1372: // STATE 183 - _spin_nvr.tmp:1133 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][183] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1373: // STATE 185 - _spin_nvr.tmp:1134 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][185] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1374: // STATE 187 - _spin_nvr.tmp:1135 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][187] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1375: // STATE 189 - _spin_nvr.tmp:1136 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][189] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1376: // STATE 193 - _spin_nvr.tmp:1138 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][193] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1377: // STATE 195 - _spin_nvr.tmp:1139 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][195] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1378: // STATE 200 - _spin_nvr.tmp:1143 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported200 = 0;
			if (verbose && !reported200)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported200 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported200 = 0;
			if (verbose && !reported200)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported200 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][200] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1379: // STATE 202 - _spin_nvr.tmp:1144 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported202 = 0;
			if (verbose && !reported202)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported202 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported202 = 0;
			if (verbose && !reported202)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported202 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][202] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1380: // STATE 204 - _spin_nvr.tmp:1145 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported204 = 0;
			if (verbose && !reported204)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported204 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported204 = 0;
			if (verbose && !reported204)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported204 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][204] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1381: // STATE 206 - _spin_nvr.tmp:1146 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported206 = 0;
			if (verbose && !reported206)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported206 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported206 = 0;
			if (verbose && !reported206)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported206 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][206] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1382: // STATE 208 - _spin_nvr.tmp:1147 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][208] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1383: // STATE 210 - _spin_nvr.tmp:1148 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][210] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1384: // STATE 212 - _spin_nvr.tmp:1149 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][212] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1385: // STATE 214 - _spin_nvr.tmp:1150 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][214] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1386: // STATE 216 - _spin_nvr.tmp:1151 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][216] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1387: // STATE 218 - _spin_nvr.tmp:1152 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][218] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1388: // STATE 220 - _spin_nvr.tmp:1153 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][220] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1389: // STATE 222 - _spin_nvr.tmp:1154 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][222] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1390: // STATE 224 - _spin_nvr.tmp:1155 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][224] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1391: // STATE 228 - _spin_nvr.tmp:1157 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][228] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1392: // STATE 230 - _spin_nvr.tmp:1158 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][230] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1393: // STATE 235 - _spin_nvr.tmp:1162 - [((((!(!((pstate==running)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported235 = 0;
			if (verbose && !reported235)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported235 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported235 = 0;
			if (verbose && !reported235)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported235 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][235] = 1;
		if (!(((( !( !((now.pstate==10)))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1394: // STATE 237 - _spin_nvr.tmp:1163 - [((!(!((pstate==running)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][237] = 1;
		if (!(( !( !((now.pstate==10)))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1395: // STATE 239 - _spin_nvr.tmp:1164 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][239] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1396: // STATE 241 - _spin_nvr.tmp:1165 - [(((!(!((pstate==running)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][241] = 1;
		if (!((( !( !((now.pstate==10)))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1397: // STATE 246 - _spin_nvr.tmp:1169 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported246 = 0;
			if (verbose && !reported246)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported246 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported246 = 0;
			if (verbose && !reported246)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported246 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][246] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1398: // STATE 248 - _spin_nvr.tmp:1170 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported248 = 0;
			if (verbose && !reported248)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported248 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported248 = 0;
			if (verbose && !reported248)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported248 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][248] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1399: // STATE 250 - _spin_nvr.tmp:1171 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported250 = 0;
			if (verbose && !reported250)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported250 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported250 = 0;
			if (verbose && !reported250)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported250 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][250] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1400: // STATE 252 - _spin_nvr.tmp:1172 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported252 = 0;
			if (verbose && !reported252)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported252 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported252 = 0;
			if (verbose && !reported252)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported252 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][252] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1401: // STATE 254 - _spin_nvr.tmp:1173 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported254 = 0;
			if (verbose && !reported254)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported254 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported254 = 0;
			if (verbose && !reported254)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported254 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][254] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1402: // STATE 256 - _spin_nvr.tmp:1174 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported256 = 0;
			if (verbose && !reported256)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported256 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported256 = 0;
			if (verbose && !reported256)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported256 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][256] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1403: // STATE 258 - _spin_nvr.tmp:1175 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported258 = 0;
			if (verbose && !reported258)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported258 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported258 = 0;
			if (verbose && !reported258)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported258 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][258] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1404: // STATE 260 - _spin_nvr.tmp:1176 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported260 = 0;
			if (verbose && !reported260)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported260 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported260 = 0;
			if (verbose && !reported260)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported260 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][260] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1405: // STATE 262 - _spin_nvr.tmp:1177 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported262 = 0;
			if (verbose && !reported262)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported262 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported262 = 0;
			if (verbose && !reported262)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported262 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][262] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1406: // STATE 264 - _spin_nvr.tmp:1178 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported264 = 0;
			if (verbose && !reported264)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported264 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported264 = 0;
			if (verbose && !reported264)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported264 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][264] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1407: // STATE 268 - _spin_nvr.tmp:1180 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported268 = 0;
			if (verbose && !reported268)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported268 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported268 = 0;
			if (verbose && !reported268)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported268 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][268] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1408: // STATE 273 - _spin_nvr.tmp:1184 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported273 = 0;
			if (verbose && !reported273)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported273 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported273 = 0;
			if (verbose && !reported273)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported273 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][273] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1409: // STATE 275 - _spin_nvr.tmp:1185 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported275 = 0;
			if (verbose && !reported275)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported275 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported275 = 0;
			if (verbose && !reported275)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported275 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][275] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1410: // STATE 277 - _spin_nvr.tmp:1186 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported277 = 0;
			if (verbose && !reported277)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported277 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported277 = 0;
			if (verbose && !reported277)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported277 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][277] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1411: // STATE 279 - _spin_nvr.tmp:1187 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported279 = 0;
			if (verbose && !reported279)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported279 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported279 = 0;
			if (verbose && !reported279)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported279 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][279] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1412: // STATE 281 - _spin_nvr.tmp:1188 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported281 = 0;
			if (verbose && !reported281)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported281 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported281 = 0;
			if (verbose && !reported281)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported281 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][281] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1413: // STATE 283 - _spin_nvr.tmp:1189 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported283 = 0;
			if (verbose && !reported283)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported283 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported283 = 0;
			if (verbose && !reported283)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported283 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][283] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1414: // STATE 285 - _spin_nvr.tmp:1190 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported285 = 0;
			if (verbose && !reported285)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported285 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported285 = 0;
			if (verbose && !reported285)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported285 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][285] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1415: // STATE 287 - _spin_nvr.tmp:1191 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported287 = 0;
			if (verbose && !reported287)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported287 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported287 = 0;
			if (verbose && !reported287)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported287 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][287] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1416: // STATE 289 - _spin_nvr.tmp:1192 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported289 = 0;
			if (verbose && !reported289)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported289 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported289 = 0;
			if (verbose && !reported289)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported289 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][289] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1417: // STATE 291 - _spin_nvr.tmp:1193 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported291 = 0;
			if (verbose && !reported291)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported291 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported291 = 0;
			if (verbose && !reported291)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported291 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][291] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1418: // STATE 293 - _spin_nvr.tmp:1194 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported293 = 0;
			if (verbose && !reported293)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported293 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported293 = 0;
			if (verbose && !reported293)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported293 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][293] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1419: // STATE 295 - _spin_nvr.tmp:1195 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported295 = 0;
			if (verbose && !reported295)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported295 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported295 = 0;
			if (verbose && !reported295)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported295 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][295] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1420: // STATE 297 - _spin_nvr.tmp:1196 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported297 = 0;
			if (verbose && !reported297)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported297 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported297 = 0;
			if (verbose && !reported297)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported297 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][297] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1421: // STATE 301 - _spin_nvr.tmp:1198 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported301 = 0;
			if (verbose && !reported301)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported301 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported301 = 0;
			if (verbose && !reported301)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported301 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][301] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1422: // STATE 303 - _spin_nvr.tmp:1199 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported303 = 0;
			if (verbose && !reported303)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported303 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported303 = 0;
			if (verbose && !reported303)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported303 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][303] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1423: // STATE 305 - _spin_nvr.tmp:1200 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported305 = 0;
			if (verbose && !reported305)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported305 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported305 = 0;
			if (verbose && !reported305)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported305 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][305] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1424: // STATE 310 - _spin_nvr.tmp:1204 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported310 = 0;
			if (verbose && !reported310)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported310 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported310 = 0;
			if (verbose && !reported310)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported310 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][310] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1425: // STATE 312 - _spin_nvr.tmp:1205 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported312 = 0;
			if (verbose && !reported312)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported312 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported312 = 0;
			if (verbose && !reported312)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported312 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][312] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1426: // STATE 314 - _spin_nvr.tmp:1206 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported314 = 0;
			if (verbose && !reported314)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported314 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported314 = 0;
			if (verbose && !reported314)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported314 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][314] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1427: // STATE 316 - _spin_nvr.tmp:1207 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported316 = 0;
			if (verbose && !reported316)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported316 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported316 = 0;
			if (verbose && !reported316)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported316 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][316] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1428: // STATE 318 - _spin_nvr.tmp:1208 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported318 = 0;
			if (verbose && !reported318)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported318 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported318 = 0;
			if (verbose && !reported318)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported318 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][318] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1429: // STATE 320 - _spin_nvr.tmp:1209 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported320 = 0;
			if (verbose && !reported320)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported320 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported320 = 0;
			if (verbose && !reported320)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported320 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][320] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1430: // STATE 322 - _spin_nvr.tmp:1210 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported322 = 0;
			if (verbose && !reported322)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported322 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported322 = 0;
			if (verbose && !reported322)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported322 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][322] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1431: // STATE 324 - _spin_nvr.tmp:1211 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported324 = 0;
			if (verbose && !reported324)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported324 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported324 = 0;
			if (verbose && !reported324)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported324 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][324] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1432: // STATE 326 - _spin_nvr.tmp:1212 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported326 = 0;
			if (verbose && !reported326)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported326 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported326 = 0;
			if (verbose && !reported326)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported326 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][326] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1433: // STATE 328 - _spin_nvr.tmp:1213 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported328 = 0;
			if (verbose && !reported328)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported328 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported328 = 0;
			if (verbose && !reported328)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported328 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][328] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1434: // STATE 330 - _spin_nvr.tmp:1214 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported330 = 0;
			if (verbose && !reported330)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported330 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported330 = 0;
			if (verbose && !reported330)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported330 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][330] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1435: // STATE 334 - _spin_nvr.tmp:1216 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported334 = 0;
			if (verbose && !reported334)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported334 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported334 = 0;
			if (verbose && !reported334)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported334 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][334] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1436: // STATE 339 - _spin_nvr.tmp:1220 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported339 = 0;
			if (verbose && !reported339)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported339 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported339 = 0;
			if (verbose && !reported339)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported339 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][339] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1437: // STATE 341 - _spin_nvr.tmp:1221 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported341 = 0;
			if (verbose && !reported341)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported341 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported341 = 0;
			if (verbose && !reported341)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported341 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][341] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1438: // STATE 343 - _spin_nvr.tmp:1222 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported343 = 0;
			if (verbose && !reported343)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported343 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported343 = 0;
			if (verbose && !reported343)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported343 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][343] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1439: // STATE 345 - _spin_nvr.tmp:1223 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported345 = 0;
			if (verbose && !reported345)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported345 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported345 = 0;
			if (verbose && !reported345)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported345 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][345] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1440: // STATE 347 - _spin_nvr.tmp:1224 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported347 = 0;
			if (verbose && !reported347)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported347 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported347 = 0;
			if (verbose && !reported347)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported347 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][347] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1441: // STATE 349 - _spin_nvr.tmp:1225 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported349 = 0;
			if (verbose && !reported349)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported349 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported349 = 0;
			if (verbose && !reported349)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported349 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][349] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1442: // STATE 351 - _spin_nvr.tmp:1226 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported351 = 0;
			if (verbose && !reported351)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported351 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported351 = 0;
			if (verbose && !reported351)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported351 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][351] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1443: // STATE 353 - _spin_nvr.tmp:1227 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported353 = 0;
			if (verbose && !reported353)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported353 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported353 = 0;
			if (verbose && !reported353)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported353 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][353] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1444: // STATE 355 - _spin_nvr.tmp:1228 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported355 = 0;
			if (verbose && !reported355)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported355 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported355 = 0;
			if (verbose && !reported355)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported355 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][355] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1445: // STATE 357 - _spin_nvr.tmp:1229 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported357 = 0;
			if (verbose && !reported357)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported357 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported357 = 0;
			if (verbose && !reported357)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported357 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][357] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1446: // STATE 359 - _spin_nvr.tmp:1230 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported359 = 0;
			if (verbose && !reported359)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported359 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported359 = 0;
			if (verbose && !reported359)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported359 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][359] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1447: // STATE 361 - _spin_nvr.tmp:1231 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported361 = 0;
			if (verbose && !reported361)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported361 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported361 = 0;
			if (verbose && !reported361)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported361 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][361] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1448: // STATE 365 - _spin_nvr.tmp:1233 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported365 = 0;
			if (verbose && !reported365)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported365 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported365 = 0;
			if (verbose && !reported365)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported365 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][365] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1449: // STATE 367 - _spin_nvr.tmp:1234 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported367 = 0;
			if (verbose && !reported367)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported367 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported367 = 0;
			if (verbose && !reported367)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported367 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][367] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1450: // STATE 372 - _spin_nvr.tmp:1238 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][372] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1451: // STATE 374 - _spin_nvr.tmp:1239 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][374] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1452: // STATE 376 - _spin_nvr.tmp:1240 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported376 = 0;
			if (verbose && !reported376)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported376 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported376 = 0;
			if (verbose && !reported376)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported376 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][376] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1453: // STATE 378 - _spin_nvr.tmp:1241 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported378 = 0;
			if (verbose && !reported378)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported378 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported378 = 0;
			if (verbose && !reported378)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported378 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][378] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1454: // STATE 380 - _spin_nvr.tmp:1242 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported380 = 0;
			if (verbose && !reported380)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported380 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported380 = 0;
			if (verbose && !reported380)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported380 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][380] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1455: // STATE 382 - _spin_nvr.tmp:1243 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported382 = 0;
			if (verbose && !reported382)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported382 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported382 = 0;
			if (verbose && !reported382)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported382 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][382] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1456: // STATE 384 - _spin_nvr.tmp:1244 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported384 = 0;
			if (verbose && !reported384)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported384 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported384 = 0;
			if (verbose && !reported384)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported384 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][384] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1457: // STATE 386 - _spin_nvr.tmp:1245 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported386 = 0;
			if (verbose && !reported386)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported386 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported386 = 0;
			if (verbose && !reported386)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported386 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][386] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1458: // STATE 388 - _spin_nvr.tmp:1246 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported388 = 0;
			if (verbose && !reported388)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported388 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported388 = 0;
			if (verbose && !reported388)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported388 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][388] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1459: // STATE 390 - _spin_nvr.tmp:1247 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported390 = 0;
			if (verbose && !reported390)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported390 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported390 = 0;
			if (verbose && !reported390)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported390 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][390] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1460: // STATE 392 - _spin_nvr.tmp:1248 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported392 = 0;
			if (verbose && !reported392)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported392 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported392 = 0;
			if (verbose && !reported392)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported392 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][392] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1461: // STATE 394 - _spin_nvr.tmp:1249 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported394 = 0;
			if (verbose && !reported394)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported394 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported394 = 0;
			if (verbose && !reported394)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported394 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][394] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1462: // STATE 401 - _spin_nvr.tmp:1254 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][401] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1463: // STATE 403 - _spin_nvr.tmp:1255 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported403 = 0;
			if (verbose && !reported403)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported403 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported403 = 0;
			if (verbose && !reported403)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported403 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][403] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1464: // STATE 405 - _spin_nvr.tmp:1256 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][405] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1465: // STATE 407 - _spin_nvr.tmp:1257 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][407] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1466: // STATE 409 - _spin_nvr.tmp:1258 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][409] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1467: // STATE 411 - _spin_nvr.tmp:1259 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][411] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1468: // STATE 413 - _spin_nvr.tmp:1260 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported413 = 0;
			if (verbose && !reported413)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported413 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported413 = 0;
			if (verbose && !reported413)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported413 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][413] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1469: // STATE 415 - _spin_nvr.tmp:1261 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported415 = 0;
			if (verbose && !reported415)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported415 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported415 = 0;
			if (verbose && !reported415)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported415 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][415] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1470: // STATE 417 - _spin_nvr.tmp:1262 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported417 = 0;
			if (verbose && !reported417)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported417 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported417 = 0;
			if (verbose && !reported417)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported417 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][417] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1471: // STATE 419 - _spin_nvr.tmp:1263 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported419 = 0;
			if (verbose && !reported419)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported419 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported419 = 0;
			if (verbose && !reported419)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported419 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][419] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1472: // STATE 421 - _spin_nvr.tmp:1264 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported421 = 0;
			if (verbose && !reported421)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported421 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported421 = 0;
			if (verbose && !reported421)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported421 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][421] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1473: // STATE 423 - _spin_nvr.tmp:1265 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported423 = 0;
			if (verbose && !reported423)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported423 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported423 = 0;
			if (verbose && !reported423)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported423 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][423] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1474: // STATE 427 - _spin_nvr.tmp:1267 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported427 = 0;
			if (verbose && !reported427)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported427 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported427 = 0;
			if (verbose && !reported427)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported427 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][427] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1475: // STATE 429 - _spin_nvr.tmp:1268 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported429 = 0;
			if (verbose && !reported429)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported429 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported429 = 0;
			if (verbose && !reported429)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported429 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][429] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1476: // STATE 431 - _spin_nvr.tmp:1269 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported431 = 0;
			if (verbose && !reported431)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported431 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported431 = 0;
			if (verbose && !reported431)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported431 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][431] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1477: // STATE 436 - _spin_nvr.tmp:1273 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][436] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1478: // STATE 438 - _spin_nvr.tmp:1274 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][438] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1479: // STATE 440 - _spin_nvr.tmp:1275 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported440 = 0;
			if (verbose && !reported440)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported440 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported440 = 0;
			if (verbose && !reported440)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported440 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][440] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1480: // STATE 442 - _spin_nvr.tmp:1276 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][442] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1481: // STATE 444 - _spin_nvr.tmp:1277 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][444] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1482: // STATE 446 - _spin_nvr.tmp:1278 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][446] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1483: // STATE 448 - _spin_nvr.tmp:1279 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][448] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1484: // STATE 450 - _spin_nvr.tmp:1280 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported450 = 0;
			if (verbose && !reported450)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported450 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported450 = 0;
			if (verbose && !reported450)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported450 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][450] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1485: // STATE 452 - _spin_nvr.tmp:1281 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported452 = 0;
			if (verbose && !reported452)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported452 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported452 = 0;
			if (verbose && !reported452)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported452 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][452] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1486: // STATE 454 - _spin_nvr.tmp:1282 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported454 = 0;
			if (verbose && !reported454)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported454 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported454 = 0;
			if (verbose && !reported454)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported454 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][454] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1487: // STATE 456 - _spin_nvr.tmp:1283 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported456 = 0;
			if (verbose && !reported456)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported456 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported456 = 0;
			if (verbose && !reported456)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported456 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][456] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1488: // STATE 460 - _spin_nvr.tmp:1285 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported460 = 0;
			if (verbose && !reported460)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported460 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported460 = 0;
			if (verbose && !reported460)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported460 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][460] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1489: // STATE 462 - _spin_nvr.tmp:1286 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported462 = 0;
			if (verbose && !reported462)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported462 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported462 = 0;
			if (verbose && !reported462)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported462 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][462] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1490: // STATE 467 - _spin_nvr.tmp:1290 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][467] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1491: // STATE 469 - _spin_nvr.tmp:1291 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][469] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1492: // STATE 471 - _spin_nvr.tmp:1292 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][471] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1493: // STATE 473 - _spin_nvr.tmp:1293 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][473] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1494: // STATE 475 - _spin_nvr.tmp:1294 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported475 = 0;
			if (verbose && !reported475)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported475 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported475 = 0;
			if (verbose && !reported475)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported475 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][475] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1495: // STATE 477 - _spin_nvr.tmp:1295 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][477] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1496: // STATE 479 - _spin_nvr.tmp:1296 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][479] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1497: // STATE 481 - _spin_nvr.tmp:1297 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][481] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1498: // STATE 483 - _spin_nvr.tmp:1298 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][483] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1499: // STATE 485 - _spin_nvr.tmp:1299 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][485] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1500: // STATE 487 - _spin_nvr.tmp:1300 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][487] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1501: // STATE 491 - _spin_nvr.tmp:1302 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][491] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1502: // STATE 493 - _spin_nvr.tmp:1303 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][493] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1503: // STATE 495 - _spin_nvr.tmp:1304 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][495] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1504: // STATE 500 - _spin_nvr.tmp:1308 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported500 = 0;
			if (verbose && !reported500)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported500 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported500 = 0;
			if (verbose && !reported500)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported500 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][500] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1505: // STATE 502 - _spin_nvr.tmp:1309 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][502] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1506: // STATE 504 - _spin_nvr.tmp:1310 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][504] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1507: // STATE 506 - _spin_nvr.tmp:1311 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][506] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1508: // STATE 508 - _spin_nvr.tmp:1312 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][508] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1509: // STATE 510 - _spin_nvr.tmp:1313 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][510] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1510: // STATE 512 - _spin_nvr.tmp:1314 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][512] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1511: // STATE 514 - _spin_nvr.tmp:1315 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][514] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1512: // STATE 516 - _spin_nvr.tmp:1316 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][516] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1513: // STATE 518 - _spin_nvr.tmp:1317 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][518] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1514: // STATE 520 - _spin_nvr.tmp:1318 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][520] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1515: // STATE 522 - _spin_nvr.tmp:1319 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][522] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1516: // STATE 526 - _spin_nvr.tmp:1321 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][526] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1517: // STATE 528 - _spin_nvr.tmp:1322 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][528] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1518: // STATE 533 - _spin_nvr.tmp:1326 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported533 = 0;
			if (verbose && !reported533)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported533 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported533 = 0;
			if (verbose && !reported533)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported533 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][533] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1519: // STATE 535 - _spin_nvr.tmp:1327 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported535 = 0;
			if (verbose && !reported535)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported535 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported535 = 0;
			if (verbose && !reported535)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported535 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][535] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1520: // STATE 537 - _spin_nvr.tmp:1328 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported537 = 0;
			if (verbose && !reported537)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported537 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported537 = 0;
			if (verbose && !reported537)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported537 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][537] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1521: // STATE 539 - _spin_nvr.tmp:1329 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][539] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1522: // STATE 541 - _spin_nvr.tmp:1330 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][541] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1523: // STATE 543 - _spin_nvr.tmp:1331 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][543] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1524: // STATE 545 - _spin_nvr.tmp:1332 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][545] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1525: // STATE 547 - _spin_nvr.tmp:1333 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][547] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1526: // STATE 549 - _spin_nvr.tmp:1334 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][549] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1527: // STATE 551 - _spin_nvr.tmp:1335 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][551] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1528: // STATE 555 - _spin_nvr.tmp:1337 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][555] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1529: // STATE 557 - _spin_nvr.tmp:1338 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][557] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1530: // STATE 559 - _spin_nvr.tmp:1339 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][559] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1531: // STATE 561 - _spin_nvr.tmp:1340 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported561 = 0;
			if (verbose && !reported561)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported561 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported561 = 0;
			if (verbose && !reported561)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported561 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][561] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1532: // STATE 566 - _spin_nvr.tmp:1344 - [((!(!((pstate==running)))&&!(!(methane))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported566 = 0;
			if (verbose && !reported566)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported566 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported566 = 0;
			if (verbose && !reported566)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported566 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][566] = 1;
		if (!(( !( !((now.pstate==10)))&& !( !(((int)now.methane))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1533: // STATE 568 - _spin_nvr.tmp:1345 - [(((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported568 = 0;
			if (verbose && !reported568)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported568 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported568 = 0;
			if (verbose && !reported568)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported568 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][568] = 1;
		if (!((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1534: // STATE 570 - _spin_nvr.tmp:1346 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported570 = 0;
			if (verbose && !reported570)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported570 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported570 = 0;
			if (verbose && !reported570)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported570 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][570] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1535: // STATE 572 - _spin_nvr.tmp:1347 - [(((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported572 = 0;
			if (verbose && !reported572)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported572 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported572 = 0;
			if (verbose && !reported572)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported572 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][572] = 1;
		if (!((((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1536: // STATE 574 - _spin_nvr.tmp:1348 - [((((!(!((pstate==running)))&&!(!(methane)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported574 = 0;
			if (verbose && !reported574)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported574 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported574 = 0;
			if (verbose && !reported574)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported574 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][574] = 1;
		if (!(((( !( !((now.pstate==10)))&& !( !(((int)now.methane))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1537: // STATE 576 - _spin_nvr.tmp:1349 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported576 = 0;
			if (verbose && !reported576)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported576 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported576 = 0;
			if (verbose && !reported576)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported576 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][576] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1538: // STATE 578 - _spin_nvr.tmp:1350 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][578] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1539: // STATE 580 - _spin_nvr.tmp:1351 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][580] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1540: // STATE 582 - _spin_nvr.tmp:1352 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][582] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1541: // STATE 584 - _spin_nvr.tmp:1353 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][584] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1542: // STATE 586 - _spin_nvr.tmp:1354 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][586] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1543: // STATE 588 - _spin_nvr.tmp:1355 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][588] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1544: // STATE 592 - _spin_nvr.tmp:1357 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][592] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1545: // STATE 594 - _spin_nvr.tmp:1358 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][594] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1546: // STATE 596 - _spin_nvr.tmp:1359 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][596] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1547: // STATE 598 - _spin_nvr.tmp:1360 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][598] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1548: // STATE 600 - _spin_nvr.tmp:1361 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported600 = 0;
			if (verbose && !reported600)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported600 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported600 = 0;
			if (verbose && !reported600)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported600 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][600] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1549: // STATE 602 - _spin_nvr.tmp:1362 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][602] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1550: // STATE 607 - _spin_nvr.tmp:1364 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[13][607] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_safe_methane_starting */
	case 1551: // STATE 1 - _spin_nvr.tmp:1010 - [((!(!(methane))&&(!(pumpOn)&&methane)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[12][1] = 1;
		if (!(( !( !(((int)now.methane)))&&( !(((int)now.pumpOn))&&((int)now.methane)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1552: // STATE 3 - _spin_nvr.tmp:1011 - [(((!(!(methane))&&!(!(pumpOn)))&&(!(pumpOn)&&methane)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[12][3] = 1;
		if (!((( !( !(((int)now.methane)))&& !( !(((int)now.pumpOn))))&&( !(((int)now.pumpOn))&&((int)now.methane)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1553: // STATE 10 - _spin_nvr.tmp:1016 - [(!(!(methane)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[12][10] = 1;
		if (!( !( !(((int)now.methane)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1554: // STATE 12 - _spin_nvr.tmp:1017 - [((!(!(methane))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported12 = 0;
			if (verbose && !reported12)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported12 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[12][12] = 1;
		if (!(( !( !(((int)now.methane)))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1555: // STATE 17 - _spin_nvr.tmp:1021 - [(!(methane))] (22:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[12][17] = 1;
		if (!( !(((int)now.methane))))
			continue;
		/* merge: assert(!(!(methane)))(0, 18, 22) */
		reached[12][18] = 1;
		spin_assert( !( !(((int)now.methane))), " !( !(methane))", II, tt, t);
		/* merge: .(goto)(0, 23, 22) */
		reached[12][23] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 1556: // STATE 26 - _spin_nvr.tmp:1026 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported26 = 0;
			if (verbose && !reported26)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported26 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[12][26] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_methane_safetyness */
	case 1557: // STATE 1 - _spin_nvr.tmp:388 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1558: // STATE 3 - _spin_nvr.tmp:389 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][3] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1559: // STATE 5 - _spin_nvr.tmp:390 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][5] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1560: // STATE 7 - _spin_nvr.tmp:391 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][7] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1561: // STATE 9 - _spin_nvr.tmp:392 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][9] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1562: // STATE 11 - _spin_nvr.tmp:393 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][11] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1563: // STATE 13 - _spin_nvr.tmp:394 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][13] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1564: // STATE 15 - _spin_nvr.tmp:395 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][15] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1565: // STATE 17 - _spin_nvr.tmp:396 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported17 = 0;
			if (verbose && !reported17)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported17 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][17] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1566: // STATE 19 - _spin_nvr.tmp:397 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][19] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1567: // STATE 21 - _spin_nvr.tmp:398 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][21] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1568: // STATE 28 - _spin_nvr.tmp:403 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][28] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1569: // STATE 33 - _spin_nvr.tmp:407 - [(((pumpOn&&methane)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][33] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1570: // STATE 35 - _spin_nvr.tmp:408 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][35] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1571: // STATE 40 - _spin_nvr.tmp:412 - [((((pumpOn&&methane)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][40] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1572: // STATE 42 - _spin_nvr.tmp:413 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][42] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1573: // STATE 44 - _spin_nvr.tmp:414 - [(((pumpOn&&methane)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][44] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1574: // STATE 49 - _spin_nvr.tmp:418 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][49] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1575: // STATE 51 - _spin_nvr.tmp:419 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][51] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1576: // STATE 53 - _spin_nvr.tmp:420 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][53] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1577: // STATE 55 - _spin_nvr.tmp:421 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][55] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1578: // STATE 57 - _spin_nvr.tmp:422 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][57] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1579: // STATE 59 - _spin_nvr.tmp:423 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][59] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1580: // STATE 61 - _spin_nvr.tmp:424 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][61] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1581: // STATE 63 - _spin_nvr.tmp:425 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][63] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1582: // STATE 65 - _spin_nvr.tmp:426 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][65] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1583: // STATE 67 - _spin_nvr.tmp:427 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported67 = 0;
			if (verbose && !reported67)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported67 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported67 = 0;
			if (verbose && !reported67)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported67 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][67] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1584: // STATE 69 - _spin_nvr.tmp:428 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][69] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1585: // STATE 73 - _spin_nvr.tmp:430 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported73 = 0;
			if (verbose && !reported73)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported73 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported73 = 0;
			if (verbose && !reported73)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported73 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][73] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1586: // STATE 75 - _spin_nvr.tmp:431 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported75 = 0;
			if (verbose && !reported75)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported75 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported75 = 0;
			if (verbose && !reported75)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported75 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][75] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1587: // STATE 80 - _spin_nvr.tmp:435 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][80] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1588: // STATE 82 - _spin_nvr.tmp:436 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][82] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1589: // STATE 84 - _spin_nvr.tmp:437 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][84] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1590: // STATE 86 - _spin_nvr.tmp:438 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][86] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1591: // STATE 88 - _spin_nvr.tmp:439 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][88] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1592: // STATE 90 - _spin_nvr.tmp:440 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][90] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1593: // STATE 92 - _spin_nvr.tmp:441 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][92] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1594: // STATE 94 - _spin_nvr.tmp:442 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][94] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1595: // STATE 96 - _spin_nvr.tmp:443 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported96 = 0;
			if (verbose && !reported96)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported96 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported96 = 0;
			if (verbose && !reported96)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported96 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][96] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1596: // STATE 98 - _spin_nvr.tmp:444 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][98] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1597: // STATE 100 - _spin_nvr.tmp:445 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][100] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1598: // STATE 107 - _spin_nvr.tmp:450 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][107] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1599: // STATE 109 - _spin_nvr.tmp:451 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][109] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1600: // STATE 111 - _spin_nvr.tmp:452 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][111] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1601: // STATE 113 - _spin_nvr.tmp:453 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][113] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1602: // STATE 115 - _spin_nvr.tmp:454 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][115] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1603: // STATE 117 - _spin_nvr.tmp:455 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][117] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1604: // STATE 119 - _spin_nvr.tmp:456 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][119] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1605: // STATE 121 - _spin_nvr.tmp:457 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][121] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1606: // STATE 123 - _spin_nvr.tmp:458 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][123] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1607: // STATE 125 - _spin_nvr.tmp:459 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][125] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1608: // STATE 127 - _spin_nvr.tmp:460 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported127 = 0;
			if (verbose && !reported127)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported127 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported127 = 0;
			if (verbose && !reported127)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported127 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][127] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1609: // STATE 129 - _spin_nvr.tmp:461 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][129] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1610: // STATE 131 - _spin_nvr.tmp:462 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][131] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1611: // STATE 133 - _spin_nvr.tmp:463 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported133 = 0;
			if (verbose && !reported133)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported133 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported133 = 0;
			if (verbose && !reported133)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported133 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][133] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1612: // STATE 140 - _spin_nvr.tmp:468 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][140] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1613: // STATE 142 - _spin_nvr.tmp:469 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][142] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1614: // STATE 144 - _spin_nvr.tmp:470 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][144] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1615: // STATE 146 - _spin_nvr.tmp:471 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][146] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1616: // STATE 148 - _spin_nvr.tmp:472 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][148] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1617: // STATE 150 - _spin_nvr.tmp:473 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][150] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1618: // STATE 152 - _spin_nvr.tmp:474 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][152] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1619: // STATE 154 - _spin_nvr.tmp:475 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][154] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1620: // STATE 156 - _spin_nvr.tmp:476 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][156] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1621: // STATE 158 - _spin_nvr.tmp:477 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported158 = 0;
			if (verbose && !reported158)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported158 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported158 = 0;
			if (verbose && !reported158)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported158 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][158] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1622: // STATE 160 - _spin_nvr.tmp:478 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][160] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1623: // STATE 162 - _spin_nvr.tmp:479 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][162] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1624: // STATE 166 - _spin_nvr.tmp:481 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported166 = 0;
			if (verbose && !reported166)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported166 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported166 = 0;
			if (verbose && !reported166)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported166 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][166] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1625: // STATE 171 - _spin_nvr.tmp:485 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][171] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1626: // STATE 173 - _spin_nvr.tmp:486 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][173] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1627: // STATE 175 - _spin_nvr.tmp:487 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][175] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1628: // STATE 177 - _spin_nvr.tmp:488 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][177] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1629: // STATE 179 - _spin_nvr.tmp:489 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][179] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1630: // STATE 181 - _spin_nvr.tmp:490 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][181] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1631: // STATE 183 - _spin_nvr.tmp:491 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][183] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1632: // STATE 185 - _spin_nvr.tmp:492 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][185] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1633: // STATE 187 - _spin_nvr.tmp:493 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][187] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1634: // STATE 189 - _spin_nvr.tmp:494 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][189] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1635: // STATE 191 - _spin_nvr.tmp:495 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported191 = 0;
			if (verbose && !reported191)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported191 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported191 = 0;
			if (verbose && !reported191)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported191 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][191] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1636: // STATE 193 - _spin_nvr.tmp:496 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][193] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1637: // STATE 195 - _spin_nvr.tmp:497 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][195] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1638: // STATE 197 - _spin_nvr.tmp:498 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported197 = 0;
			if (verbose && !reported197)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported197 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported197 = 0;
			if (verbose && !reported197)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported197 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][197] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1639: // STATE 199 - _spin_nvr.tmp:499 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported199 = 0;
			if (verbose && !reported199)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported199 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported199 = 0;
			if (verbose && !reported199)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported199 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][199] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1640: // STATE 201 - _spin_nvr.tmp:500 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported201 = 0;
			if (verbose && !reported201)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported201 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported201 = 0;
			if (verbose && !reported201)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported201 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][201] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1641: // STATE 208 - _spin_nvr.tmp:505 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][208] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1642: // STATE 210 - _spin_nvr.tmp:506 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][210] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1643: // STATE 212 - _spin_nvr.tmp:507 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][212] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1644: // STATE 214 - _spin_nvr.tmp:508 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][214] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1645: // STATE 216 - _spin_nvr.tmp:509 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][216] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1646: // STATE 218 - _spin_nvr.tmp:510 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][218] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1647: // STATE 220 - _spin_nvr.tmp:511 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][220] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1648: // STATE 222 - _spin_nvr.tmp:512 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][222] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1649: // STATE 224 - _spin_nvr.tmp:513 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][224] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1650: // STATE 226 - _spin_nvr.tmp:514 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported226 = 0;
			if (verbose && !reported226)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported226 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported226 = 0;
			if (verbose && !reported226)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported226 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][226] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1651: // STATE 228 - _spin_nvr.tmp:515 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][228] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1652: // STATE 230 - _spin_nvr.tmp:516 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][230] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1653: // STATE 237 - _spin_nvr.tmp:521 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][237] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1654: // STATE 239 - _spin_nvr.tmp:522 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][239] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1655: // STATE 241 - _spin_nvr.tmp:523 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][241] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1656: // STATE 243 - _spin_nvr.tmp:524 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported243 = 0;
			if (verbose && !reported243)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported243 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported243 = 0;
			if (verbose && !reported243)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported243 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][243] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1657: // STATE 245 - _spin_nvr.tmp:525 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported245 = 0;
			if (verbose && !reported245)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported245 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported245 = 0;
			if (verbose && !reported245)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported245 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][245] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1658: // STATE 247 - _spin_nvr.tmp:526 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported247 = 0;
			if (verbose && !reported247)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported247 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported247 = 0;
			if (verbose && !reported247)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported247 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][247] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1659: // STATE 249 - _spin_nvr.tmp:527 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported249 = 0;
			if (verbose && !reported249)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported249 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported249 = 0;
			if (verbose && !reported249)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported249 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][249] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1660: // STATE 251 - _spin_nvr.tmp:528 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported251 = 0;
			if (verbose && !reported251)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported251 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported251 = 0;
			if (verbose && !reported251)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported251 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][251] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1661: // STATE 253 - _spin_nvr.tmp:529 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported253 = 0;
			if (verbose && !reported253)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported253 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported253 = 0;
			if (verbose && !reported253)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported253 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][253] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1662: // STATE 255 - _spin_nvr.tmp:530 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported255 = 0;
			if (verbose && !reported255)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported255 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported255 = 0;
			if (verbose && !reported255)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported255 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][255] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1663: // STATE 257 - _spin_nvr.tmp:531 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported257 = 0;
			if (verbose && !reported257)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported257 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported257 = 0;
			if (verbose && !reported257)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported257 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][257] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1664: // STATE 261 - _spin_nvr.tmp:533 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported261 = 0;
			if (verbose && !reported261)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported261 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported261 = 0;
			if (verbose && !reported261)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported261 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][261] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1665: // STATE 263 - _spin_nvr.tmp:534 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported263 = 0;
			if (verbose && !reported263)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported263 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported263 = 0;
			if (verbose && !reported263)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported263 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][263] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1666: // STATE 265 - _spin_nvr.tmp:535 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported265 = 0;
			if (verbose && !reported265)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported265 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported265 = 0;
			if (verbose && !reported265)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported265 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][265] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1667: // STATE 267 - _spin_nvr.tmp:536 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported267 = 0;
			if (verbose && !reported267)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported267 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported267 = 0;
			if (verbose && !reported267)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported267 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][267] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1668: // STATE 269 - _spin_nvr.tmp:537 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported269 = 0;
			if (verbose && !reported269)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported269 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported269 = 0;
			if (verbose && !reported269)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported269 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][269] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1669: // STATE 274 - _spin_nvr.tmp:541 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported274 = 0;
			if (verbose && !reported274)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported274 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported274 = 0;
			if (verbose && !reported274)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported274 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][274] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1670: // STATE 276 - _spin_nvr.tmp:542 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported276 = 0;
			if (verbose && !reported276)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported276 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported276 = 0;
			if (verbose && !reported276)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported276 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][276] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1671: // STATE 278 - _spin_nvr.tmp:543 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported278 = 0;
			if (verbose && !reported278)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported278 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported278 = 0;
			if (verbose && !reported278)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported278 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][278] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1672: // STATE 280 - _spin_nvr.tmp:544 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported280 = 0;
			if (verbose && !reported280)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported280 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported280 = 0;
			if (verbose && !reported280)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported280 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][280] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1673: // STATE 282 - _spin_nvr.tmp:545 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported282 = 0;
			if (verbose && !reported282)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported282 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported282 = 0;
			if (verbose && !reported282)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported282 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][282] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1674: // STATE 284 - _spin_nvr.tmp:546 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported284 = 0;
			if (verbose && !reported284)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported284 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported284 = 0;
			if (verbose && !reported284)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported284 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][284] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1675: // STATE 286 - _spin_nvr.tmp:547 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported286 = 0;
			if (verbose && !reported286)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported286 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported286 = 0;
			if (verbose && !reported286)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported286 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][286] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1676: // STATE 288 - _spin_nvr.tmp:548 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported288 = 0;
			if (verbose && !reported288)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported288 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported288 = 0;
			if (verbose && !reported288)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported288 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][288] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1677: // STATE 290 - _spin_nvr.tmp:549 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported290 = 0;
			if (verbose && !reported290)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported290 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported290 = 0;
			if (verbose && !reported290)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported290 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][290] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1678: // STATE 292 - _spin_nvr.tmp:550 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported292 = 0;
			if (verbose && !reported292)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported292 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported292 = 0;
			if (verbose && !reported292)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported292 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][292] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1679: // STATE 294 - _spin_nvr.tmp:551 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported294 = 0;
			if (verbose && !reported294)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported294 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported294 = 0;
			if (verbose && !reported294)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported294 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][294] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1680: // STATE 296 - _spin_nvr.tmp:552 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported296 = 0;
			if (verbose && !reported296)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported296 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported296 = 0;
			if (verbose && !reported296)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported296 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][296] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1681: // STATE 298 - _spin_nvr.tmp:553 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported298 = 0;
			if (verbose && !reported298)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported298 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported298 = 0;
			if (verbose && !reported298)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported298 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][298] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1682: // STATE 300 - _spin_nvr.tmp:554 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported300 = 0;
			if (verbose && !reported300)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported300 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported300 = 0;
			if (verbose && !reported300)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported300 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][300] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1683: // STATE 302 - _spin_nvr.tmp:555 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported302 = 0;
			if (verbose && !reported302)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported302 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported302 = 0;
			if (verbose && !reported302)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported302 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][302] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1684: // STATE 309 - _spin_nvr.tmp:560 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported309 = 0;
			if (verbose && !reported309)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported309 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported309 = 0;
			if (verbose && !reported309)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported309 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][309] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1685: // STATE 311 - _spin_nvr.tmp:561 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported311 = 0;
			if (verbose && !reported311)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported311 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported311 = 0;
			if (verbose && !reported311)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported311 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][311] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1686: // STATE 313 - _spin_nvr.tmp:562 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported313 = 0;
			if (verbose && !reported313)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported313 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported313 = 0;
			if (verbose && !reported313)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported313 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][313] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1687: // STATE 315 - _spin_nvr.tmp:563 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported315 = 0;
			if (verbose && !reported315)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported315 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported315 = 0;
			if (verbose && !reported315)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported315 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][315] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1688: // STATE 317 - _spin_nvr.tmp:564 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported317 = 0;
			if (verbose && !reported317)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported317 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported317 = 0;
			if (verbose && !reported317)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported317 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][317] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1689: // STATE 319 - _spin_nvr.tmp:565 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported319 = 0;
			if (verbose && !reported319)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported319 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported319 = 0;
			if (verbose && !reported319)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported319 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][319] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1690: // STATE 321 - _spin_nvr.tmp:566 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported321 = 0;
			if (verbose && !reported321)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported321 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported321 = 0;
			if (verbose && !reported321)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported321 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][321] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1691: // STATE 323 - _spin_nvr.tmp:567 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported323 = 0;
			if (verbose && !reported323)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported323 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported323 = 0;
			if (verbose && !reported323)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported323 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][323] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1692: // STATE 325 - _spin_nvr.tmp:568 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported325 = 0;
			if (verbose && !reported325)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported325 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported325 = 0;
			if (verbose && !reported325)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported325 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][325] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1693: // STATE 327 - _spin_nvr.tmp:569 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported327 = 0;
			if (verbose && !reported327)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported327 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported327 = 0;
			if (verbose && !reported327)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported327 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][327] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1694: // STATE 329 - _spin_nvr.tmp:570 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported329 = 0;
			if (verbose && !reported329)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported329 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported329 = 0;
			if (verbose && !reported329)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported329 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][329] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1695: // STATE 333 - _spin_nvr.tmp:572 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported333 = 0;
			if (verbose && !reported333)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported333 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported333 = 0;
			if (verbose && !reported333)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported333 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][333] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1696: // STATE 335 - _spin_nvr.tmp:573 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported335 = 0;
			if (verbose && !reported335)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported335 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported335 = 0;
			if (verbose && !reported335)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported335 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][335] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1697: // STATE 337 - _spin_nvr.tmp:574 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported337 = 0;
			if (verbose && !reported337)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported337 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported337 = 0;
			if (verbose && !reported337)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported337 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][337] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1698: // STATE 342 - _spin_nvr.tmp:578 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported342 = 0;
			if (verbose && !reported342)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported342 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported342 = 0;
			if (verbose && !reported342)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported342 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][342] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1699: // STATE 344 - _spin_nvr.tmp:579 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported344 = 0;
			if (verbose && !reported344)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported344 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported344 = 0;
			if (verbose && !reported344)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported344 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][344] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1700: // STATE 346 - _spin_nvr.tmp:580 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported346 = 0;
			if (verbose && !reported346)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported346 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported346 = 0;
			if (verbose && !reported346)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported346 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][346] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1701: // STATE 348 - _spin_nvr.tmp:581 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported348 = 0;
			if (verbose && !reported348)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported348 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported348 = 0;
			if (verbose && !reported348)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported348 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][348] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1702: // STATE 350 - _spin_nvr.tmp:582 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported350 = 0;
			if (verbose && !reported350)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported350 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported350 = 0;
			if (verbose && !reported350)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported350 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][350] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1703: // STATE 352 - _spin_nvr.tmp:583 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported352 = 0;
			if (verbose && !reported352)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported352 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported352 = 0;
			if (verbose && !reported352)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported352 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][352] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1704: // STATE 354 - _spin_nvr.tmp:584 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported354 = 0;
			if (verbose && !reported354)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported354 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported354 = 0;
			if (verbose && !reported354)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported354 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][354] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1705: // STATE 356 - _spin_nvr.tmp:585 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported356 = 0;
			if (verbose && !reported356)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported356 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported356 = 0;
			if (verbose && !reported356)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported356 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][356] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1706: // STATE 358 - _spin_nvr.tmp:586 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported358 = 0;
			if (verbose && !reported358)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported358 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported358 = 0;
			if (verbose && !reported358)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported358 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][358] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1707: // STATE 360 - _spin_nvr.tmp:587 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported360 = 0;
			if (verbose && !reported360)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported360 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported360 = 0;
			if (verbose && !reported360)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported360 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][360] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1708: // STATE 362 - _spin_nvr.tmp:588 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported362 = 0;
			if (verbose && !reported362)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported362 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported362 = 0;
			if (verbose && !reported362)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported362 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][362] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1709: // STATE 364 - _spin_nvr.tmp:589 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported364 = 0;
			if (verbose && !reported364)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported364 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported364 = 0;
			if (verbose && !reported364)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported364 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][364] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1710: // STATE 366 - _spin_nvr.tmp:590 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported366 = 0;
			if (verbose && !reported366)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported366 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported366 = 0;
			if (verbose && !reported366)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported366 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][366] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1711: // STATE 368 - _spin_nvr.tmp:591 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported368 = 0;
			if (verbose && !reported368)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported368 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported368 = 0;
			if (verbose && !reported368)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported368 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][368] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1712: // STATE 370 - _spin_nvr.tmp:592 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported370 = 0;
			if (verbose && !reported370)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported370 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported370 = 0;
			if (verbose && !reported370)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported370 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][370] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1713: // STATE 372 - _spin_nvr.tmp:593 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][372] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1714: // STATE 374 - _spin_nvr.tmp:594 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][374] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1715: // STATE 381 - _spin_nvr.tmp:599 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported381 = 0;
			if (verbose && !reported381)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported381 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported381 = 0;
			if (verbose && !reported381)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported381 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][381] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1716: // STATE 383 - _spin_nvr.tmp:600 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported383 = 0;
			if (verbose && !reported383)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported383 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported383 = 0;
			if (verbose && !reported383)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported383 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][383] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1717: // STATE 385 - _spin_nvr.tmp:601 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported385 = 0;
			if (verbose && !reported385)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported385 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported385 = 0;
			if (verbose && !reported385)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported385 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][385] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1718: // STATE 387 - _spin_nvr.tmp:602 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported387 = 0;
			if (verbose && !reported387)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported387 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported387 = 0;
			if (verbose && !reported387)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported387 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][387] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1719: // STATE 389 - _spin_nvr.tmp:603 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported389 = 0;
			if (verbose && !reported389)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported389 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported389 = 0;
			if (verbose && !reported389)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported389 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][389] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1720: // STATE 391 - _spin_nvr.tmp:604 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported391 = 0;
			if (verbose && !reported391)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported391 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported391 = 0;
			if (verbose && !reported391)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported391 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][391] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1721: // STATE 393 - _spin_nvr.tmp:605 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported393 = 0;
			if (verbose && !reported393)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported393 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported393 = 0;
			if (verbose && !reported393)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported393 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][393] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1722: // STATE 395 - _spin_nvr.tmp:606 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported395 = 0;
			if (verbose && !reported395)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported395 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported395 = 0;
			if (verbose && !reported395)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported395 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][395] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1723: // STATE 397 - _spin_nvr.tmp:607 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported397 = 0;
			if (verbose && !reported397)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported397 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported397 = 0;
			if (verbose && !reported397)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported397 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][397] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1724: // STATE 399 - _spin_nvr.tmp:608 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported399 = 0;
			if (verbose && !reported399)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported399 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported399 = 0;
			if (verbose && !reported399)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported399 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][399] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1725: // STATE 401 - _spin_nvr.tmp:609 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][401] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1726: // STATE 405 - _spin_nvr.tmp:611 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][405] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1727: // STATE 407 - _spin_nvr.tmp:612 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][407] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1728: // STATE 409 - _spin_nvr.tmp:613 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][409] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1729: // STATE 411 - _spin_nvr.tmp:614 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][411] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1730: // STATE 416 - _spin_nvr.tmp:618 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported416 = 0;
			if (verbose && !reported416)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported416 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported416 = 0;
			if (verbose && !reported416)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported416 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][416] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1731: // STATE 418 - _spin_nvr.tmp:619 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported418 = 0;
			if (verbose && !reported418)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported418 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported418 = 0;
			if (verbose && !reported418)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported418 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][418] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1732: // STATE 420 - _spin_nvr.tmp:620 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported420 = 0;
			if (verbose && !reported420)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported420 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported420 = 0;
			if (verbose && !reported420)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported420 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][420] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1733: // STATE 422 - _spin_nvr.tmp:621 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported422 = 0;
			if (verbose && !reported422)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported422 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported422 = 0;
			if (verbose && !reported422)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported422 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][422] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1734: // STATE 424 - _spin_nvr.tmp:622 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported424 = 0;
			if (verbose && !reported424)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported424 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported424 = 0;
			if (verbose && !reported424)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported424 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][424] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1735: // STATE 426 - _spin_nvr.tmp:623 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported426 = 0;
			if (verbose && !reported426)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported426 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported426 = 0;
			if (verbose && !reported426)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported426 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][426] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1736: // STATE 428 - _spin_nvr.tmp:624 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported428 = 0;
			if (verbose && !reported428)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported428 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported428 = 0;
			if (verbose && !reported428)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported428 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][428] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1737: // STATE 430 - _spin_nvr.tmp:625 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported430 = 0;
			if (verbose && !reported430)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported430 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported430 = 0;
			if (verbose && !reported430)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported430 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][430] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1738: // STATE 432 - _spin_nvr.tmp:626 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported432 = 0;
			if (verbose && !reported432)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported432 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported432 = 0;
			if (verbose && !reported432)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported432 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][432] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1739: // STATE 434 - _spin_nvr.tmp:627 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported434 = 0;
			if (verbose && !reported434)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported434 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported434 = 0;
			if (verbose && !reported434)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported434 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][434] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1740: // STATE 436 - _spin_nvr.tmp:628 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][436] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1741: // STATE 438 - _spin_nvr.tmp:629 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][438] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1742: // STATE 442 - _spin_nvr.tmp:631 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][442] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1743: // STATE 444 - _spin_nvr.tmp:632 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][444] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1744: // STATE 446 - _spin_nvr.tmp:633 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][446] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1745: // STATE 448 - _spin_nvr.tmp:634 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][448] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1746: // STATE 453 - _spin_nvr.tmp:638 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported453 = 0;
			if (verbose && !reported453)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported453 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported453 = 0;
			if (verbose && !reported453)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported453 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][453] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1747: // STATE 455 - _spin_nvr.tmp:639 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported455 = 0;
			if (verbose && !reported455)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported455 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported455 = 0;
			if (verbose && !reported455)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported455 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][455] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1748: // STATE 457 - _spin_nvr.tmp:640 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported457 = 0;
			if (verbose && !reported457)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported457 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported457 = 0;
			if (verbose && !reported457)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported457 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][457] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1749: // STATE 459 - _spin_nvr.tmp:641 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported459 = 0;
			if (verbose && !reported459)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported459 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported459 = 0;
			if (verbose && !reported459)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported459 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][459] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1750: // STATE 461 - _spin_nvr.tmp:642 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported461 = 0;
			if (verbose && !reported461)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported461 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported461 = 0;
			if (verbose && !reported461)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported461 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][461] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1751: // STATE 463 - _spin_nvr.tmp:643 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported463 = 0;
			if (verbose && !reported463)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported463 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported463 = 0;
			if (verbose && !reported463)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported463 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][463] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1752: // STATE 465 - _spin_nvr.tmp:644 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported465 = 0;
			if (verbose && !reported465)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported465 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported465 = 0;
			if (verbose && !reported465)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported465 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][465] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1753: // STATE 467 - _spin_nvr.tmp:645 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][467] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1754: // STATE 469 - _spin_nvr.tmp:646 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][469] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1755: // STATE 471 - _spin_nvr.tmp:647 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][471] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1756: // STATE 473 - _spin_nvr.tmp:648 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][473] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1757: // STATE 477 - _spin_nvr.tmp:650 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][477] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1758: // STATE 479 - _spin_nvr.tmp:651 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][479] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1759: // STATE 481 - _spin_nvr.tmp:652 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][481] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1760: // STATE 483 - _spin_nvr.tmp:653 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][483] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1761: // STATE 485 - _spin_nvr.tmp:654 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][485] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1762: // STATE 487 - _spin_nvr.tmp:655 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][487] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1763: // STATE 489 - _spin_nvr.tmp:656 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported489 = 0;
			if (verbose && !reported489)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported489 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported489 = 0;
			if (verbose && !reported489)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported489 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][489] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1764: // STATE 491 - _spin_nvr.tmp:657 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][491] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1765: // STATE 493 - _spin_nvr.tmp:658 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][493] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1766: // STATE 495 - _spin_nvr.tmp:659 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][495] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1767: // STATE 497 - _spin_nvr.tmp:660 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported497 = 0;
			if (verbose && !reported497)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported497 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported497 = 0;
			if (verbose && !reported497)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported497 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][497] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1768: // STATE 502 - _spin_nvr.tmp:664 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][502] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1769: // STATE 504 - _spin_nvr.tmp:665 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][504] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1770: // STATE 506 - _spin_nvr.tmp:666 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][506] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1771: // STATE 508 - _spin_nvr.tmp:667 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][508] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1772: // STATE 510 - _spin_nvr.tmp:668 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][510] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1773: // STATE 512 - _spin_nvr.tmp:669 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][512] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1774: // STATE 514 - _spin_nvr.tmp:670 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][514] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1775: // STATE 516 - _spin_nvr.tmp:671 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][516] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1776: // STATE 518 - _spin_nvr.tmp:672 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][518] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1777: // STATE 520 - _spin_nvr.tmp:673 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][520] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1778: // STATE 522 - _spin_nvr.tmp:674 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][522] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1779: // STATE 526 - _spin_nvr.tmp:676 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][526] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1780: // STATE 528 - _spin_nvr.tmp:677 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][528] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1781: // STATE 530 - _spin_nvr.tmp:678 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported530 = 0;
			if (verbose && !reported530)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported530 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported530 = 0;
			if (verbose && !reported530)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported530 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][530] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1782: // STATE 532 - _spin_nvr.tmp:679 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported532 = 0;
			if (verbose && !reported532)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported532 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported532 = 0;
			if (verbose && !reported532)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported532 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][532] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1783: // STATE 534 - _spin_nvr.tmp:680 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported534 = 0;
			if (verbose && !reported534)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported534 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported534 = 0;
			if (verbose && !reported534)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported534 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][534] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1784: // STATE 539 - _spin_nvr.tmp:684 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][539] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1785: // STATE 541 - _spin_nvr.tmp:685 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][541] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1786: // STATE 543 - _spin_nvr.tmp:686 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][543] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1787: // STATE 545 - _spin_nvr.tmp:687 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][545] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1788: // STATE 547 - _spin_nvr.tmp:688 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][547] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1789: // STATE 549 - _spin_nvr.tmp:689 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][549] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1790: // STATE 551 - _spin_nvr.tmp:690 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][551] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1791: // STATE 553 - _spin_nvr.tmp:691 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported553 = 0;
			if (verbose && !reported553)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported553 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported553 = 0;
			if (verbose && !reported553)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported553 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][553] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1792: // STATE 555 - _spin_nvr.tmp:692 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][555] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1793: // STATE 557 - _spin_nvr.tmp:693 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][557] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1794: // STATE 559 - _spin_nvr.tmp:694 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][559] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1795: // STATE 563 - _spin_nvr.tmp:696 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported563 = 0;
			if (verbose && !reported563)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported563 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported563 = 0;
			if (verbose && !reported563)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported563 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][563] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1796: // STATE 565 - _spin_nvr.tmp:697 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported565 = 0;
			if (verbose && !reported565)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported565 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported565 = 0;
			if (verbose && !reported565)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported565 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][565] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1797: // STATE 567 - _spin_nvr.tmp:698 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported567 = 0;
			if (verbose && !reported567)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported567 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported567 = 0;
			if (verbose && !reported567)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported567 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][567] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1798: // STATE 569 - _spin_nvr.tmp:699 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported569 = 0;
			if (verbose && !reported569)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported569 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported569 = 0;
			if (verbose && !reported569)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported569 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][569] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1799: // STATE 571 - _spin_nvr.tmp:700 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported571 = 0;
			if (verbose && !reported571)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported571 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported571 = 0;
			if (verbose && !reported571)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported571 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][571] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1800: // STATE 573 - _spin_nvr.tmp:701 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported573 = 0;
			if (verbose && !reported573)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported573 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported573 = 0;
			if (verbose && !reported573)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported573 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][573] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1801: // STATE 578 - _spin_nvr.tmp:705 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][578] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1802: // STATE 580 - _spin_nvr.tmp:706 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][580] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1803: // STATE 582 - _spin_nvr.tmp:707 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][582] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1804: // STATE 584 - _spin_nvr.tmp:708 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][584] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1805: // STATE 586 - _spin_nvr.tmp:709 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][586] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1806: // STATE 588 - _spin_nvr.tmp:710 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][588] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1807: // STATE 590 - _spin_nvr.tmp:711 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported590 = 0;
			if (verbose && !reported590)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported590 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported590 = 0;
			if (verbose && !reported590)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported590 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][590] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1808: // STATE 592 - _spin_nvr.tmp:712 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][592] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1809: // STATE 594 - _spin_nvr.tmp:713 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][594] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1810: // STATE 596 - _spin_nvr.tmp:714 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][596] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1811: // STATE 598 - _spin_nvr.tmp:715 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][598] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1812: // STATE 602 - _spin_nvr.tmp:717 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][602] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1813: // STATE 607 - _spin_nvr.tmp:721 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][607] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1814: // STATE 609 - _spin_nvr.tmp:722 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported609 = 0;
			if (verbose && !reported609)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported609 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported609 = 0;
			if (verbose && !reported609)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported609 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][609] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1815: // STATE 611 - _spin_nvr.tmp:723 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported611 = 0;
			if (verbose && !reported611)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported611 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported611 = 0;
			if (verbose && !reported611)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported611 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][611] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1816: // STATE 613 - _spin_nvr.tmp:724 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported613 = 0;
			if (verbose && !reported613)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported613 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported613 = 0;
			if (verbose && !reported613)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported613 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][613] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1817: // STATE 615 - _spin_nvr.tmp:725 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported615 = 0;
			if (verbose && !reported615)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported615 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported615 = 0;
			if (verbose && !reported615)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported615 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][615] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1818: // STATE 617 - _spin_nvr.tmp:726 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported617 = 0;
			if (verbose && !reported617)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported617 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported617 = 0;
			if (verbose && !reported617)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported617 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][617] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1819: // STATE 619 - _spin_nvr.tmp:727 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported619 = 0;
			if (verbose && !reported619)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported619 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported619 = 0;
			if (verbose && !reported619)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported619 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][619] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1820: // STATE 621 - _spin_nvr.tmp:728 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported621 = 0;
			if (verbose && !reported621)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported621 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported621 = 0;
			if (verbose && !reported621)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported621 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][621] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1821: // STATE 623 - _spin_nvr.tmp:729 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported623 = 0;
			if (verbose && !reported623)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported623 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported623 = 0;
			if (verbose && !reported623)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported623 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][623] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1822: // STATE 625 - _spin_nvr.tmp:730 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported625 = 0;
			if (verbose && !reported625)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported625 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported625 = 0;
			if (verbose && !reported625)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported625 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][625] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1823: // STATE 627 - _spin_nvr.tmp:731 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported627 = 0;
			if (verbose && !reported627)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported627 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported627 = 0;
			if (verbose && !reported627)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported627 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][627] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1824: // STATE 631 - _spin_nvr.tmp:733 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported631 = 0;
			if (verbose && !reported631)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported631 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported631 = 0;
			if (verbose && !reported631)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported631 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][631] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1825: // STATE 633 - _spin_nvr.tmp:734 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported633 = 0;
			if (verbose && !reported633)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported633 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported633 = 0;
			if (verbose && !reported633)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported633 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][633] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1826: // STATE 635 - _spin_nvr.tmp:735 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported635 = 0;
			if (verbose && !reported635)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported635 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported635 = 0;
			if (verbose && !reported635)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported635 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][635] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1827: // STATE 637 - _spin_nvr.tmp:736 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported637 = 0;
			if (verbose && !reported637)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported637 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported637 = 0;
			if (verbose && !reported637)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported637 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][637] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1828: // STATE 639 - _spin_nvr.tmp:737 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported639 = 0;
			if (verbose && !reported639)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported639 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported639 = 0;
			if (verbose && !reported639)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported639 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][639] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1829: // STATE 641 - _spin_nvr.tmp:738 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported641 = 0;
			if (verbose && !reported641)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported641 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported641 = 0;
			if (verbose && !reported641)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported641 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][641] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1830: // STATE 643 - _spin_nvr.tmp:739 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported643 = 0;
			if (verbose && !reported643)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported643 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported643 = 0;
			if (verbose && !reported643)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported643 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][643] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1831: // STATE 645 - _spin_nvr.tmp:740 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported645 = 0;
			if (verbose && !reported645)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported645 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported645 = 0;
			if (verbose && !reported645)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported645 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][645] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1832: // STATE 647 - _spin_nvr.tmp:741 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported647 = 0;
			if (verbose && !reported647)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported647 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported647 = 0;
			if (verbose && !reported647)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported647 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][647] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1833: // STATE 649 - _spin_nvr.tmp:742 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported649 = 0;
			if (verbose && !reported649)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported649 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported649 = 0;
			if (verbose && !reported649)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported649 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][649] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1834: // STATE 651 - _spin_nvr.tmp:743 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported651 = 0;
			if (verbose && !reported651)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported651 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported651 = 0;
			if (verbose && !reported651)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported651 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][651] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1835: // STATE 653 - _spin_nvr.tmp:744 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported653 = 0;
			if (verbose && !reported653)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported653 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported653 = 0;
			if (verbose && !reported653)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported653 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][653] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1836: // STATE 658 - _spin_nvr.tmp:748 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported658 = 0;
			if (verbose && !reported658)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported658 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported658 = 0;
			if (verbose && !reported658)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported658 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][658] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1837: // STATE 660 - _spin_nvr.tmp:749 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported660 = 0;
			if (verbose && !reported660)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported660 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported660 = 0;
			if (verbose && !reported660)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported660 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][660] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1838: // STATE 662 - _spin_nvr.tmp:750 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported662 = 0;
			if (verbose && !reported662)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported662 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported662 = 0;
			if (verbose && !reported662)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported662 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][662] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1839: // STATE 664 - _spin_nvr.tmp:751 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported664 = 0;
			if (verbose && !reported664)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported664 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported664 = 0;
			if (verbose && !reported664)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported664 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][664] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1840: // STATE 666 - _spin_nvr.tmp:752 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported666 = 0;
			if (verbose && !reported666)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported666 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported666 = 0;
			if (verbose && !reported666)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported666 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][666] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1841: // STATE 668 - _spin_nvr.tmp:753 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported668 = 0;
			if (verbose && !reported668)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported668 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported668 = 0;
			if (verbose && !reported668)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported668 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][668] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1842: // STATE 670 - _spin_nvr.tmp:754 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported670 = 0;
			if (verbose && !reported670)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported670 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported670 = 0;
			if (verbose && !reported670)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported670 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][670] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1843: // STATE 672 - _spin_nvr.tmp:755 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported672 = 0;
			if (verbose && !reported672)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported672 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported672 = 0;
			if (verbose && !reported672)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported672 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][672] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1844: // STATE 674 - _spin_nvr.tmp:756 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported674 = 0;
			if (verbose && !reported674)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported674 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported674 = 0;
			if (verbose && !reported674)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported674 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][674] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1845: // STATE 676 - _spin_nvr.tmp:757 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported676 = 0;
			if (verbose && !reported676)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported676 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported676 = 0;
			if (verbose && !reported676)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported676 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][676] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1846: // STATE 678 - _spin_nvr.tmp:758 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported678 = 0;
			if (verbose && !reported678)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported678 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported678 = 0;
			if (verbose && !reported678)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported678 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][678] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1847: // STATE 682 - _spin_nvr.tmp:760 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported682 = 0;
			if (verbose && !reported682)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported682 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported682 = 0;
			if (verbose && !reported682)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported682 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][682] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1848: // STATE 684 - _spin_nvr.tmp:761 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported684 = 0;
			if (verbose && !reported684)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported684 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported684 = 0;
			if (verbose && !reported684)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported684 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][684] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1849: // STATE 686 - _spin_nvr.tmp:762 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported686 = 0;
			if (verbose && !reported686)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported686 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported686 = 0;
			if (verbose && !reported686)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported686 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][686] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1850: // STATE 688 - _spin_nvr.tmp:763 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported688 = 0;
			if (verbose && !reported688)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported688 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported688 = 0;
			if (verbose && !reported688)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported688 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][688] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1851: // STATE 690 - _spin_nvr.tmp:764 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported690 = 0;
			if (verbose && !reported690)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported690 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported690 = 0;
			if (verbose && !reported690)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported690 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][690] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1852: // STATE 692 - _spin_nvr.tmp:765 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported692 = 0;
			if (verbose && !reported692)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported692 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported692 = 0;
			if (verbose && !reported692)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported692 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][692] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1853: // STATE 694 - _spin_nvr.tmp:766 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported694 = 0;
			if (verbose && !reported694)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported694 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported694 = 0;
			if (verbose && !reported694)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported694 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][694] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1854: // STATE 696 - _spin_nvr.tmp:767 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported696 = 0;
			if (verbose && !reported696)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported696 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported696 = 0;
			if (verbose && !reported696)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported696 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][696] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1855: // STATE 698 - _spin_nvr.tmp:768 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported698 = 0;
			if (verbose && !reported698)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported698 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported698 = 0;
			if (verbose && !reported698)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported698 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][698] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1856: // STATE 700 - _spin_nvr.tmp:769 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported700 = 0;
			if (verbose && !reported700)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported700 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported700 = 0;
			if (verbose && !reported700)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported700 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][700] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1857: // STATE 702 - _spin_nvr.tmp:770 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported702 = 0;
			if (verbose && !reported702)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported702 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported702 = 0;
			if (verbose && !reported702)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported702 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][702] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1858: // STATE 704 - _spin_nvr.tmp:771 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported704 = 0;
			if (verbose && !reported704)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported704 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported704 = 0;
			if (verbose && !reported704)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported704 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][704] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1859: // STATE 706 - _spin_nvr.tmp:772 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported706 = 0;
			if (verbose && !reported706)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported706 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported706 = 0;
			if (verbose && !reported706)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported706 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][706] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1860: // STATE 711 - _spin_nvr.tmp:776 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported711 = 0;
			if (verbose && !reported711)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported711 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported711 = 0;
			if (verbose && !reported711)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported711 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][711] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1861: // STATE 713 - _spin_nvr.tmp:777 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported713 = 0;
			if (verbose && !reported713)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported713 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported713 = 0;
			if (verbose && !reported713)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported713 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][713] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1862: // STATE 715 - _spin_nvr.tmp:778 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported715 = 0;
			if (verbose && !reported715)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported715 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported715 = 0;
			if (verbose && !reported715)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported715 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][715] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1863: // STATE 717 - _spin_nvr.tmp:779 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported717 = 0;
			if (verbose && !reported717)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported717 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported717 = 0;
			if (verbose && !reported717)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported717 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][717] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1864: // STATE 719 - _spin_nvr.tmp:780 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported719 = 0;
			if (verbose && !reported719)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported719 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported719 = 0;
			if (verbose && !reported719)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported719 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][719] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1865: // STATE 721 - _spin_nvr.tmp:781 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported721 = 0;
			if (verbose && !reported721)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported721 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported721 = 0;
			if (verbose && !reported721)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported721 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][721] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1866: // STATE 723 - _spin_nvr.tmp:782 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported723 = 0;
			if (verbose && !reported723)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported723 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported723 = 0;
			if (verbose && !reported723)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported723 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][723] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1867: // STATE 725 - _spin_nvr.tmp:783 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported725 = 0;
			if (verbose && !reported725)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported725 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported725 = 0;
			if (verbose && !reported725)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported725 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][725] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1868: // STATE 727 - _spin_nvr.tmp:784 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported727 = 0;
			if (verbose && !reported727)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported727 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported727 = 0;
			if (verbose && !reported727)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported727 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][727] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1869: // STATE 729 - _spin_nvr.tmp:785 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported729 = 0;
			if (verbose && !reported729)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported729 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported729 = 0;
			if (verbose && !reported729)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported729 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][729] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1870: // STATE 731 - _spin_nvr.tmp:786 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported731 = 0;
			if (verbose && !reported731)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported731 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported731 = 0;
			if (verbose && !reported731)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported731 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][731] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1871: // STATE 735 - _spin_nvr.tmp:788 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported735 = 0;
			if (verbose && !reported735)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported735 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported735 = 0;
			if (verbose && !reported735)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported735 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][735] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1872: // STATE 737 - _spin_nvr.tmp:789 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported737 = 0;
			if (verbose && !reported737)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported737 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported737 = 0;
			if (verbose && !reported737)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported737 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][737] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1873: // STATE 739 - _spin_nvr.tmp:790 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported739 = 0;
			if (verbose && !reported739)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported739 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported739 = 0;
			if (verbose && !reported739)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported739 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][739] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1874: // STATE 741 - _spin_nvr.tmp:791 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported741 = 0;
			if (verbose && !reported741)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported741 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported741 = 0;
			if (verbose && !reported741)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported741 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][741] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1875: // STATE 743 - _spin_nvr.tmp:792 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported743 = 0;
			if (verbose && !reported743)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported743 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported743 = 0;
			if (verbose && !reported743)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported743 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][743] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1876: // STATE 745 - _spin_nvr.tmp:793 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported745 = 0;
			if (verbose && !reported745)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported745 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported745 = 0;
			if (verbose && !reported745)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported745 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][745] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1877: // STATE 747 - _spin_nvr.tmp:794 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported747 = 0;
			if (verbose && !reported747)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported747 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported747 = 0;
			if (verbose && !reported747)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported747 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][747] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1878: // STATE 749 - _spin_nvr.tmp:795 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported749 = 0;
			if (verbose && !reported749)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported749 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported749 = 0;
			if (verbose && !reported749)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported749 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][749] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1879: // STATE 751 - _spin_nvr.tmp:796 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported751 = 0;
			if (verbose && !reported751)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported751 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported751 = 0;
			if (verbose && !reported751)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported751 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][751] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1880: // STATE 753 - _spin_nvr.tmp:797 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported753 = 0;
			if (verbose && !reported753)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported753 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported753 = 0;
			if (verbose && !reported753)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported753 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][753] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1881: // STATE 755 - _spin_nvr.tmp:798 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported755 = 0;
			if (verbose && !reported755)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported755 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported755 = 0;
			if (verbose && !reported755)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported755 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][755] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1882: // STATE 757 - _spin_nvr.tmp:799 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported757 = 0;
			if (verbose && !reported757)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported757 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported757 = 0;
			if (verbose && !reported757)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported757 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][757] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1883: // STATE 759 - _spin_nvr.tmp:800 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported759 = 0;
			if (verbose && !reported759)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported759 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported759 = 0;
			if (verbose && !reported759)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported759 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][759] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1884: // STATE 761 - _spin_nvr.tmp:801 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported761 = 0;
			if (verbose && !reported761)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported761 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported761 = 0;
			if (verbose && !reported761)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported761 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][761] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1885: // STATE 766 - _spin_nvr.tmp:805 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported766 = 0;
			if (verbose && !reported766)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported766 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported766 = 0;
			if (verbose && !reported766)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported766 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][766] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1886: // STATE 768 - _spin_nvr.tmp:806 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported768 = 0;
			if (verbose && !reported768)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported768 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported768 = 0;
			if (verbose && !reported768)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported768 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][768] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1887: // STATE 770 - _spin_nvr.tmp:807 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported770 = 0;
			if (verbose && !reported770)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported770 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported770 = 0;
			if (verbose && !reported770)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported770 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][770] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1888: // STATE 772 - _spin_nvr.tmp:808 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported772 = 0;
			if (verbose && !reported772)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported772 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported772 = 0;
			if (verbose && !reported772)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported772 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][772] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1889: // STATE 774 - _spin_nvr.tmp:809 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported774 = 0;
			if (verbose && !reported774)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported774 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported774 = 0;
			if (verbose && !reported774)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported774 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][774] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1890: // STATE 776 - _spin_nvr.tmp:810 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported776 = 0;
			if (verbose && !reported776)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported776 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported776 = 0;
			if (verbose && !reported776)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported776 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][776] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1891: // STATE 778 - _spin_nvr.tmp:811 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported778 = 0;
			if (verbose && !reported778)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported778 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported778 = 0;
			if (verbose && !reported778)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported778 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][778] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1892: // STATE 780 - _spin_nvr.tmp:812 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported780 = 0;
			if (verbose && !reported780)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported780 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported780 = 0;
			if (verbose && !reported780)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported780 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][780] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1893: // STATE 782 - _spin_nvr.tmp:813 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported782 = 0;
			if (verbose && !reported782)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported782 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported782 = 0;
			if (verbose && !reported782)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported782 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][782] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1894: // STATE 784 - _spin_nvr.tmp:814 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported784 = 0;
			if (verbose && !reported784)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported784 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported784 = 0;
			if (verbose && !reported784)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported784 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][784] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1895: // STATE 786 - _spin_nvr.tmp:815 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported786 = 0;
			if (verbose && !reported786)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported786 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported786 = 0;
			if (verbose && !reported786)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported786 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][786] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1896: // STATE 788 - _spin_nvr.tmp:816 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported788 = 0;
			if (verbose && !reported788)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported788 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported788 = 0;
			if (verbose && !reported788)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported788 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][788] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1897: // STATE 792 - _spin_nvr.tmp:818 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported792 = 0;
			if (verbose && !reported792)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported792 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported792 = 0;
			if (verbose && !reported792)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported792 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][792] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1898: // STATE 794 - _spin_nvr.tmp:819 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported794 = 0;
			if (verbose && !reported794)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported794 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported794 = 0;
			if (verbose && !reported794)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported794 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][794] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1899: // STATE 796 - _spin_nvr.tmp:820 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported796 = 0;
			if (verbose && !reported796)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported796 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported796 = 0;
			if (verbose && !reported796)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported796 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][796] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1900: // STATE 798 - _spin_nvr.tmp:821 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported798 = 0;
			if (verbose && !reported798)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported798 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported798 = 0;
			if (verbose && !reported798)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported798 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][798] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1901: // STATE 800 - _spin_nvr.tmp:822 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported800 = 0;
			if (verbose && !reported800)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported800 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported800 = 0;
			if (verbose && !reported800)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported800 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][800] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1902: // STATE 805 - _spin_nvr.tmp:826 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported805 = 0;
			if (verbose && !reported805)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported805 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported805 = 0;
			if (verbose && !reported805)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported805 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][805] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1903: // STATE 807 - _spin_nvr.tmp:827 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported807 = 0;
			if (verbose && !reported807)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported807 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported807 = 0;
			if (verbose && !reported807)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported807 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][807] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1904: // STATE 809 - _spin_nvr.tmp:828 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported809 = 0;
			if (verbose && !reported809)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported809 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported809 = 0;
			if (verbose && !reported809)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported809 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][809] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1905: // STATE 811 - _spin_nvr.tmp:829 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported811 = 0;
			if (verbose && !reported811)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported811 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported811 = 0;
			if (verbose && !reported811)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported811 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][811] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1906: // STATE 813 - _spin_nvr.tmp:830 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported813 = 0;
			if (verbose && !reported813)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported813 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported813 = 0;
			if (verbose && !reported813)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported813 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][813] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1907: // STATE 815 - _spin_nvr.tmp:831 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported815 = 0;
			if (verbose && !reported815)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported815 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported815 = 0;
			if (verbose && !reported815)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported815 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][815] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1908: // STATE 817 - _spin_nvr.tmp:832 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported817 = 0;
			if (verbose && !reported817)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported817 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported817 = 0;
			if (verbose && !reported817)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported817 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][817] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1909: // STATE 819 - _spin_nvr.tmp:833 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported819 = 0;
			if (verbose && !reported819)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported819 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported819 = 0;
			if (verbose && !reported819)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported819 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][819] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1910: // STATE 821 - _spin_nvr.tmp:834 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported821 = 0;
			if (verbose && !reported821)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported821 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported821 = 0;
			if (verbose && !reported821)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported821 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][821] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1911: // STATE 823 - _spin_nvr.tmp:835 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported823 = 0;
			if (verbose && !reported823)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported823 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported823 = 0;
			if (verbose && !reported823)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported823 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][823] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1912: // STATE 825 - _spin_nvr.tmp:836 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported825 = 0;
			if (verbose && !reported825)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported825 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported825 = 0;
			if (verbose && !reported825)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported825 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][825] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1913: // STATE 829 - _spin_nvr.tmp:838 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported829 = 0;
			if (verbose && !reported829)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported829 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported829 = 0;
			if (verbose && !reported829)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported829 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][829] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1914: // STATE 831 - _spin_nvr.tmp:839 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported831 = 0;
			if (verbose && !reported831)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported831 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported831 = 0;
			if (verbose && !reported831)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported831 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][831] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1915: // STATE 833 - _spin_nvr.tmp:840 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported833 = 0;
			if (verbose && !reported833)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported833 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported833 = 0;
			if (verbose && !reported833)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported833 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][833] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1916: // STATE 835 - _spin_nvr.tmp:841 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported835 = 0;
			if (verbose && !reported835)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported835 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported835 = 0;
			if (verbose && !reported835)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported835 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][835] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1917: // STATE 837 - _spin_nvr.tmp:842 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported837 = 0;
			if (verbose && !reported837)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported837 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported837 = 0;
			if (verbose && !reported837)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported837 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][837] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1918: // STATE 839 - _spin_nvr.tmp:843 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported839 = 0;
			if (verbose && !reported839)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported839 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported839 = 0;
			if (verbose && !reported839)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported839 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][839] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1919: // STATE 841 - _spin_nvr.tmp:844 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported841 = 0;
			if (verbose && !reported841)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported841 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported841 = 0;
			if (verbose && !reported841)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported841 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][841] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1920: // STATE 843 - _spin_nvr.tmp:845 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported843 = 0;
			if (verbose && !reported843)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported843 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported843 = 0;
			if (verbose && !reported843)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported843 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][843] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1921: // STATE 845 - _spin_nvr.tmp:846 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported845 = 0;
			if (verbose && !reported845)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported845 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported845 = 0;
			if (verbose && !reported845)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported845 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][845] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1922: // STATE 847 - _spin_nvr.tmp:847 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported847 = 0;
			if (verbose && !reported847)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported847 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported847 = 0;
			if (verbose && !reported847)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported847 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][847] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1923: // STATE 849 - _spin_nvr.tmp:848 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported849 = 0;
			if (verbose && !reported849)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported849 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported849 = 0;
			if (verbose && !reported849)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported849 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][849] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1924: // STATE 851 - _spin_nvr.tmp:849 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported851 = 0;
			if (verbose && !reported851)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported851 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported851 = 0;
			if (verbose && !reported851)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported851 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][851] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1925: // STATE 853 - _spin_nvr.tmp:850 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported853 = 0;
			if (verbose && !reported853)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported853 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported853 = 0;
			if (verbose && !reported853)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported853 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][853] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1926: // STATE 855 - _spin_nvr.tmp:851 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported855 = 0;
			if (verbose && !reported855)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported855 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported855 = 0;
			if (verbose && !reported855)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported855 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][855] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1927: // STATE 857 - _spin_nvr.tmp:852 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported857 = 0;
			if (verbose && !reported857)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported857 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported857 = 0;
			if (verbose && !reported857)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported857 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][857] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1928: // STATE 862 - _spin_nvr.tmp:856 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported862 = 0;
			if (verbose && !reported862)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported862 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported862 = 0;
			if (verbose && !reported862)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported862 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][862] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1929: // STATE 864 - _spin_nvr.tmp:857 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported864 = 0;
			if (verbose && !reported864)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported864 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported864 = 0;
			if (verbose && !reported864)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported864 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][864] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1930: // STATE 866 - _spin_nvr.tmp:858 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported866 = 0;
			if (verbose && !reported866)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported866 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported866 = 0;
			if (verbose && !reported866)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported866 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][866] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1931: // STATE 868 - _spin_nvr.tmp:859 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported868 = 0;
			if (verbose && !reported868)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported868 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported868 = 0;
			if (verbose && !reported868)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported868 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][868] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1932: // STATE 870 - _spin_nvr.tmp:860 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported870 = 0;
			if (verbose && !reported870)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported870 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported870 = 0;
			if (verbose && !reported870)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported870 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][870] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1933: // STATE 872 - _spin_nvr.tmp:861 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported872 = 0;
			if (verbose && !reported872)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported872 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported872 = 0;
			if (verbose && !reported872)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported872 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][872] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1934: // STATE 874 - _spin_nvr.tmp:862 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported874 = 0;
			if (verbose && !reported874)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported874 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported874 = 0;
			if (verbose && !reported874)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported874 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][874] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1935: // STATE 876 - _spin_nvr.tmp:863 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported876 = 0;
			if (verbose && !reported876)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported876 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported876 = 0;
			if (verbose && !reported876)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported876 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][876] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1936: // STATE 878 - _spin_nvr.tmp:864 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported878 = 0;
			if (verbose && !reported878)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported878 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported878 = 0;
			if (verbose && !reported878)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported878 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][878] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1937: // STATE 880 - _spin_nvr.tmp:865 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported880 = 0;
			if (verbose && !reported880)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported880 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported880 = 0;
			if (verbose && !reported880)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported880 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][880] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1938: // STATE 882 - _spin_nvr.tmp:866 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported882 = 0;
			if (verbose && !reported882)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported882 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported882 = 0;
			if (verbose && !reported882)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported882 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][882] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1939: // STATE 886 - _spin_nvr.tmp:868 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported886 = 0;
			if (verbose && !reported886)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported886 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported886 = 0;
			if (verbose && !reported886)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported886 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][886] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1940: // STATE 888 - _spin_nvr.tmp:869 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported888 = 0;
			if (verbose && !reported888)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported888 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported888 = 0;
			if (verbose && !reported888)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported888 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][888] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1941: // STATE 890 - _spin_nvr.tmp:870 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported890 = 0;
			if (verbose && !reported890)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported890 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported890 = 0;
			if (verbose && !reported890)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported890 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][890] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1942: // STATE 892 - _spin_nvr.tmp:871 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported892 = 0;
			if (verbose && !reported892)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported892 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported892 = 0;
			if (verbose && !reported892)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported892 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][892] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1943: // STATE 894 - _spin_nvr.tmp:872 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported894 = 0;
			if (verbose && !reported894)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported894 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported894 = 0;
			if (verbose && !reported894)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported894 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][894] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1944: // STATE 896 - _spin_nvr.tmp:873 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported896 = 0;
			if (verbose && !reported896)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported896 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported896 = 0;
			if (verbose && !reported896)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported896 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][896] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1945: // STATE 898 - _spin_nvr.tmp:874 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported898 = 0;
			if (verbose && !reported898)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported898 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported898 = 0;
			if (verbose && !reported898)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported898 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][898] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1946: // STATE 900 - _spin_nvr.tmp:875 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported900 = 0;
			if (verbose && !reported900)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported900 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported900 = 0;
			if (verbose && !reported900)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported900 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][900] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1947: // STATE 902 - _spin_nvr.tmp:876 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported902 = 0;
			if (verbose && !reported902)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported902 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported902 = 0;
			if (verbose && !reported902)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported902 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][902] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1948: // STATE 904 - _spin_nvr.tmp:877 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported904 = 0;
			if (verbose && !reported904)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported904 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported904 = 0;
			if (verbose && !reported904)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported904 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][904] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1949: // STATE 906 - _spin_nvr.tmp:878 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported906 = 0;
			if (verbose && !reported906)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported906 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported906 = 0;
			if (verbose && !reported906)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported906 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][906] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1950: // STATE 908 - _spin_nvr.tmp:879 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported908 = 0;
			if (verbose && !reported908)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported908 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported908 = 0;
			if (verbose && !reported908)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported908 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][908] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1951: // STATE 910 - _spin_nvr.tmp:880 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported910 = 0;
			if (verbose && !reported910)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported910 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported910 = 0;
			if (verbose && !reported910)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported910 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][910] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1952: // STATE 912 - _spin_nvr.tmp:881 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported912 = 0;
			if (verbose && !reported912)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported912 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported912 = 0;
			if (verbose && !reported912)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported912 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][912] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1953: // STATE 914 - _spin_nvr.tmp:882 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported914 = 0;
			if (verbose && !reported914)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported914 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported914 = 0;
			if (verbose && !reported914)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported914 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][914] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1954: // STATE 916 - _spin_nvr.tmp:883 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported916 = 0;
			if (verbose && !reported916)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported916 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported916 = 0;
			if (verbose && !reported916)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported916 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][916] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1955: // STATE 921 - _spin_nvr.tmp:887 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported921 = 0;
			if (verbose && !reported921)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported921 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported921 = 0;
			if (verbose && !reported921)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported921 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][921] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1956: // STATE 923 - _spin_nvr.tmp:888 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported923 = 0;
			if (verbose && !reported923)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported923 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported923 = 0;
			if (verbose && !reported923)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported923 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][923] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1957: // STATE 925 - _spin_nvr.tmp:889 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported925 = 0;
			if (verbose && !reported925)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported925 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported925 = 0;
			if (verbose && !reported925)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported925 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][925] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1958: // STATE 927 - _spin_nvr.tmp:890 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported927 = 0;
			if (verbose && !reported927)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported927 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported927 = 0;
			if (verbose && !reported927)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported927 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][927] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1959: // STATE 932 - _spin_nvr.tmp:894 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported932 = 0;
			if (verbose && !reported932)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported932 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported932 = 0;
			if (verbose && !reported932)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported932 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][932] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1960: // STATE 934 - _spin_nvr.tmp:895 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported934 = 0;
			if (verbose && !reported934)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported934 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported934 = 0;
			if (verbose && !reported934)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported934 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][934] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1961: // STATE 936 - _spin_nvr.tmp:896 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported936 = 0;
			if (verbose && !reported936)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported936 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported936 = 0;
			if (verbose && !reported936)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported936 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][936] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1962: // STATE 938 - _spin_nvr.tmp:897 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported938 = 0;
			if (verbose && !reported938)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported938 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported938 = 0;
			if (verbose && !reported938)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported938 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][938] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1963: // STATE 940 - _spin_nvr.tmp:898 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported940 = 0;
			if (verbose && !reported940)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported940 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported940 = 0;
			if (verbose && !reported940)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported940 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][940] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1964: // STATE 942 - _spin_nvr.tmp:899 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported942 = 0;
			if (verbose && !reported942)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported942 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported942 = 0;
			if (verbose && !reported942)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported942 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][942] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1965: // STATE 944 - _spin_nvr.tmp:900 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported944 = 0;
			if (verbose && !reported944)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported944 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported944 = 0;
			if (verbose && !reported944)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported944 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][944] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1966: // STATE 946 - _spin_nvr.tmp:901 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported946 = 0;
			if (verbose && !reported946)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported946 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported946 = 0;
			if (verbose && !reported946)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported946 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][946] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1967: // STATE 948 - _spin_nvr.tmp:902 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported948 = 0;
			if (verbose && !reported948)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported948 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported948 = 0;
			if (verbose && !reported948)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported948 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][948] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1968: // STATE 950 - _spin_nvr.tmp:903 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported950 = 0;
			if (verbose && !reported950)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported950 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported950 = 0;
			if (verbose && !reported950)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported950 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][950] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1969: // STATE 952 - _spin_nvr.tmp:904 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported952 = 0;
			if (verbose && !reported952)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported952 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported952 = 0;
			if (verbose && !reported952)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported952 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][952] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1970: // STATE 956 - _spin_nvr.tmp:906 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported956 = 0;
			if (verbose && !reported956)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported956 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported956 = 0;
			if (verbose && !reported956)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported956 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][956] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1971: // STATE 958 - _spin_nvr.tmp:907 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported958 = 0;
			if (verbose && !reported958)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported958 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported958 = 0;
			if (verbose && !reported958)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported958 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][958] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1972: // STATE 963 - _spin_nvr.tmp:911 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported963 = 0;
			if (verbose && !reported963)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported963 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported963 = 0;
			if (verbose && !reported963)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported963 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][963] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1973: // STATE 965 - _spin_nvr.tmp:912 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported965 = 0;
			if (verbose && !reported965)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported965 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported965 = 0;
			if (verbose && !reported965)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported965 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][965] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1974: // STATE 967 - _spin_nvr.tmp:913 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported967 = 0;
			if (verbose && !reported967)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported967 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported967 = 0;
			if (verbose && !reported967)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported967 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][967] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1975: // STATE 969 - _spin_nvr.tmp:914 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported969 = 0;
			if (verbose && !reported969)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported969 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported969 = 0;
			if (verbose && !reported969)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported969 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][969] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1976: // STATE 971 - _spin_nvr.tmp:915 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported971 = 0;
			if (verbose && !reported971)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported971 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported971 = 0;
			if (verbose && !reported971)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported971 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][971] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1977: // STATE 973 - _spin_nvr.tmp:916 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported973 = 0;
			if (verbose && !reported973)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported973 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported973 = 0;
			if (verbose && !reported973)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported973 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][973] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1978: // STATE 975 - _spin_nvr.tmp:917 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported975 = 0;
			if (verbose && !reported975)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported975 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported975 = 0;
			if (verbose && !reported975)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported975 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][975] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1979: // STATE 977 - _spin_nvr.tmp:918 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported977 = 0;
			if (verbose && !reported977)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported977 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported977 = 0;
			if (verbose && !reported977)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported977 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][977] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1980: // STATE 979 - _spin_nvr.tmp:919 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported979 = 0;
			if (verbose && !reported979)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported979 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported979 = 0;
			if (verbose && !reported979)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported979 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][979] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1981: // STATE 981 - _spin_nvr.tmp:920 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported981 = 0;
			if (verbose && !reported981)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported981 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported981 = 0;
			if (verbose && !reported981)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported981 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][981] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1982: // STATE 983 - _spin_nvr.tmp:921 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported983 = 0;
			if (verbose && !reported983)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported983 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported983 = 0;
			if (verbose && !reported983)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported983 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][983] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1983: // STATE 987 - _spin_nvr.tmp:923 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported987 = 0;
			if (verbose && !reported987)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported987 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported987 = 0;
			if (verbose && !reported987)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported987 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][987] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1984: // STATE 989 - _spin_nvr.tmp:924 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported989 = 0;
			if (verbose && !reported989)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported989 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported989 = 0;
			if (verbose && !reported989)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported989 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][989] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1985: // STATE 991 - _spin_nvr.tmp:925 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported991 = 0;
			if (verbose && !reported991)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported991 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported991 = 0;
			if (verbose && !reported991)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported991 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][991] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1986: // STATE 993 - _spin_nvr.tmp:926 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported993 = 0;
			if (verbose && !reported993)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported993 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported993 = 0;
			if (verbose && !reported993)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported993 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][993] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1987: // STATE 995 - _spin_nvr.tmp:927 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported995 = 0;
			if (verbose && !reported995)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported995 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported995 = 0;
			if (verbose && !reported995)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported995 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][995] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1988: // STATE 997 - _spin_nvr.tmp:928 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported997 = 0;
			if (verbose && !reported997)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported997 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported997 = 0;
			if (verbose && !reported997)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported997 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][997] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1989: // STATE 999 - _spin_nvr.tmp:929 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported999 = 0;
			if (verbose && !reported999)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported999 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported999 = 0;
			if (verbose && !reported999)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported999 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][999] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1990: // STATE 1001 - _spin_nvr.tmp:930 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1001 = 0;
			if (verbose && !reported1001)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1001 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1001 = 0;
			if (verbose && !reported1001)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1001 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1001] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1991: // STATE 1006 - _spin_nvr.tmp:934 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1006 = 0;
			if (verbose && !reported1006)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1006 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1006 = 0;
			if (verbose && !reported1006)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1006 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1006] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1992: // STATE 1008 - _spin_nvr.tmp:935 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1008 = 0;
			if (verbose && !reported1008)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1008 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1008 = 0;
			if (verbose && !reported1008)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1008 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1008] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1993: // STATE 1010 - _spin_nvr.tmp:936 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1010 = 0;
			if (verbose && !reported1010)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1010 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1010 = 0;
			if (verbose && !reported1010)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1010 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1010] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1994: // STATE 1012 - _spin_nvr.tmp:937 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1012 = 0;
			if (verbose && !reported1012)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1012 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1012 = 0;
			if (verbose && !reported1012)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1012 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1012] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1995: // STATE 1014 - _spin_nvr.tmp:938 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1014 = 0;
			if (verbose && !reported1014)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1014 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1014 = 0;
			if (verbose && !reported1014)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1014 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1014] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1996: // STATE 1016 - _spin_nvr.tmp:939 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1016 = 0;
			if (verbose && !reported1016)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1016 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1016 = 0;
			if (verbose && !reported1016)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1016 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1016] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1997: // STATE 1018 - _spin_nvr.tmp:940 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1018 = 0;
			if (verbose && !reported1018)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1018 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1018 = 0;
			if (verbose && !reported1018)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1018 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1018] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1998: // STATE 1020 - _spin_nvr.tmp:941 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1020 = 0;
			if (verbose && !reported1020)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1020 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1020 = 0;
			if (verbose && !reported1020)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1020 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1020] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 1999: // STATE 1022 - _spin_nvr.tmp:942 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1022 = 0;
			if (verbose && !reported1022)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1022 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1022 = 0;
			if (verbose && !reported1022)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1022 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1022] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2000: // STATE 1024 - _spin_nvr.tmp:943 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1024 = 0;
			if (verbose && !reported1024)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1024 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1024 = 0;
			if (verbose && !reported1024)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1024 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1024] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2001: // STATE 1026 - _spin_nvr.tmp:944 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1026 = 0;
			if (verbose && !reported1026)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1026 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1026 = 0;
			if (verbose && !reported1026)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1026 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1026] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2002: // STATE 1030 - _spin_nvr.tmp:946 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1030 = 0;
			if (verbose && !reported1030)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1030 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1030 = 0;
			if (verbose && !reported1030)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1030 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1030] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2003: // STATE 1032 - _spin_nvr.tmp:947 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1032 = 0;
			if (verbose && !reported1032)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1032 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1032 = 0;
			if (verbose && !reported1032)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1032 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1032] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2004: // STATE 1034 - _spin_nvr.tmp:948 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1034 = 0;
			if (verbose && !reported1034)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1034 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1034 = 0;
			if (verbose && !reported1034)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1034 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1034] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2005: // STATE 1039 - _spin_nvr.tmp:952 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1039 = 0;
			if (verbose && !reported1039)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1039 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1039 = 0;
			if (verbose && !reported1039)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1039 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1039] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2006: // STATE 1041 - _spin_nvr.tmp:953 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1041 = 0;
			if (verbose && !reported1041)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1041 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1041 = 0;
			if (verbose && !reported1041)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1041 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1041] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2007: // STATE 1043 - _spin_nvr.tmp:954 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1043 = 0;
			if (verbose && !reported1043)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1043 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1043 = 0;
			if (verbose && !reported1043)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1043 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1043] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2008: // STATE 1045 - _spin_nvr.tmp:955 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1045 = 0;
			if (verbose && !reported1045)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1045 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1045 = 0;
			if (verbose && !reported1045)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1045 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1045] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2009: // STATE 1047 - _spin_nvr.tmp:956 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1047 = 0;
			if (verbose && !reported1047)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1047 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1047 = 0;
			if (verbose && !reported1047)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1047 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1047] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2010: // STATE 1049 - _spin_nvr.tmp:957 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1049 = 0;
			if (verbose && !reported1049)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1049 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1049 = 0;
			if (verbose && !reported1049)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1049 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1049] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2011: // STATE 1051 - _spin_nvr.tmp:958 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1051 = 0;
			if (verbose && !reported1051)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1051 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1051 = 0;
			if (verbose && !reported1051)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1051 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1051] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2012: // STATE 1053 - _spin_nvr.tmp:959 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1053 = 0;
			if (verbose && !reported1053)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1053 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1053 = 0;
			if (verbose && !reported1053)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1053 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1053] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2013: // STATE 1055 - _spin_nvr.tmp:960 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1055 = 0;
			if (verbose && !reported1055)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1055 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1055 = 0;
			if (verbose && !reported1055)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1055 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1055] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2014: // STATE 1057 - _spin_nvr.tmp:961 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1057 = 0;
			if (verbose && !reported1057)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1057 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1057 = 0;
			if (verbose && !reported1057)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1057 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1057] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2015: // STATE 1059 - _spin_nvr.tmp:962 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1059 = 0;
			if (verbose && !reported1059)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1059 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1059 = 0;
			if (verbose && !reported1059)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1059 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1059] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2016: // STATE 1063 - _spin_nvr.tmp:964 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1063 = 0;
			if (verbose && !reported1063)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1063 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1063 = 0;
			if (verbose && !reported1063)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1063 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1063] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2017: // STATE 1065 - _spin_nvr.tmp:965 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1065 = 0;
			if (verbose && !reported1065)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1065 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1065 = 0;
			if (verbose && !reported1065)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1065 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1065] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2018: // STATE 1067 - _spin_nvr.tmp:966 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1067 = 0;
			if (verbose && !reported1067)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1067 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1067 = 0;
			if (verbose && !reported1067)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1067 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1067] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2019: // STATE 1069 - _spin_nvr.tmp:967 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1069 = 0;
			if (verbose && !reported1069)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1069 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1069 = 0;
			if (verbose && !reported1069)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1069 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1069] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2020: // STATE 1071 - _spin_nvr.tmp:968 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1071 = 0;
			if (verbose && !reported1071)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1071 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1071 = 0;
			if (verbose && !reported1071)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1071 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1071] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2021: // STATE 1073 - _spin_nvr.tmp:969 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1073 = 0;
			if (verbose && !reported1073)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1073 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1073 = 0;
			if (verbose && !reported1073)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1073 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1073] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2022: // STATE 1075 - _spin_nvr.tmp:970 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1075 = 0;
			if (verbose && !reported1075)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1075 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1075 = 0;
			if (verbose && !reported1075)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1075 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1075] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2023: // STATE 1077 - _spin_nvr.tmp:971 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1077 = 0;
			if (verbose && !reported1077)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1077 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1077 = 0;
			if (verbose && !reported1077)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1077 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1077] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2024: // STATE 1079 - _spin_nvr.tmp:972 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1079 = 0;
			if (verbose && !reported1079)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1079 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1079 = 0;
			if (verbose && !reported1079)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1079 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1079] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2025: // STATE 1081 - _spin_nvr.tmp:973 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1081 = 0;
			if (verbose && !reported1081)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1081 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1081 = 0;
			if (verbose && !reported1081)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1081 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1081] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2026: // STATE 1083 - _spin_nvr.tmp:974 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1083 = 0;
			if (verbose && !reported1083)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1083 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1083 = 0;
			if (verbose && !reported1083)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1083 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1083] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2027: // STATE 1085 - _spin_nvr.tmp:975 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1085 = 0;
			if (verbose && !reported1085)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1085 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1085 = 0;
			if (verbose && !reported1085)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1085 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1085] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2028: // STATE 1087 - _spin_nvr.tmp:976 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1087 = 0;
			if (verbose && !reported1087)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1087 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1087 = 0;
			if (verbose && !reported1087)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1087 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1087] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2029: // STATE 1089 - _spin_nvr.tmp:977 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1089 = 0;
			if (verbose && !reported1089)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1089 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1089 = 0;
			if (verbose && !reported1089)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1089 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1089] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2030: // STATE 1091 - _spin_nvr.tmp:978 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1091 = 0;
			if (verbose && !reported1091)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1091 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1091 = 0;
			if (verbose && !reported1091)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1091 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1091] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2031: // STATE 1093 - _spin_nvr.tmp:979 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1093 = 0;
			if (verbose && !reported1093)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1093 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1093 = 0;
			if (verbose && !reported1093)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1093 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1093] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2032: // STATE 1098 - _spin_nvr.tmp:983 - [(((pumpOn&&methane)&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1098 = 0;
			if (verbose && !reported1098)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1098 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1098 = 0;
			if (verbose && !reported1098)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1098 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1098] = 1;
		if (!(((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2033: // STATE 1100 - _spin_nvr.tmp:984 - [((pumpOn&&methane))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1100 = 0;
			if (verbose && !reported1100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1100 = 0;
			if (verbose && !reported1100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1100] = 1;
		if (!((((int)now.pumpOn)&&((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2034: // STATE 1102 - _spin_nvr.tmp:985 - [(((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1102 = 0;
			if (verbose && !reported1102)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1102 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1102 = 0;
			if (verbose && !reported1102)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1102 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1102] = 1;
		if (!(((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2035: // STATE 1104 - _spin_nvr.tmp:986 - [((((pumpOn&&methane)&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1104 = 0;
			if (verbose && !reported1104)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1104 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1104 = 0;
			if (verbose && !reported1104)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1104 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1104] = 1;
		if (!((((((int)now.pumpOn)&&((int)now.methane))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2036: // STATE 1106 - _spin_nvr.tmp:987 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1106 = 0;
			if (verbose && !reported1106)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1106 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1106 = 0;
			if (verbose && !reported1106)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1106 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1106] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2037: // STATE 1108 - _spin_nvr.tmp:988 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1108 = 0;
			if (verbose && !reported1108)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1108 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1108 = 0;
			if (verbose && !reported1108)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1108 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1108] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2038: // STATE 1110 - _spin_nvr.tmp:989 - [((((readMsg==alarmMsg)&&(readMsg==levelMsg))||((readMsg==commandMsg)&&(readMsg==levelMsg))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1110 = 0;
			if (verbose && !reported1110)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1110 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1110 = 0;
			if (verbose && !reported1110)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1110 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1110] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==14))||((now.readMsg==9)&&(now.readMsg==14)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2039: // STATE 1112 - _spin_nvr.tmp:990 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1112 = 0;
			if (verbose && !reported1112)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1112 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1112 = 0;
			if (verbose && !reported1112)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1112 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1112] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2040: // STATE 1114 - _spin_nvr.tmp:991 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1114 = 0;
			if (verbose && !reported1114)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1114 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1114 = 0;
			if (verbose && !reported1114)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1114 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1114] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2041: // STATE 1116 - _spin_nvr.tmp:992 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1116 = 0;
			if (verbose && !reported1116)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1116 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1116 = 0;
			if (verbose && !reported1116)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1116 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1116] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2042: // STATE 1118 - _spin_nvr.tmp:993 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1118 = 0;
			if (verbose && !reported1118)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1118 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1118 = 0;
			if (verbose && !reported1118)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1118 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1118] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2043: // STATE 1120 - _spin_nvr.tmp:994 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1120 = 0;
			if (verbose && !reported1120)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1120 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1120 = 0;
			if (verbose && !reported1120)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1120 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1120] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2044: // STATE 1122 - _spin_nvr.tmp:995 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1122 = 0;
			if (verbose && !reported1122)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1122 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1122 = 0;
			if (verbose && !reported1122)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1122 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1122] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2045: // STATE 1124 - _spin_nvr.tmp:996 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1124 = 0;
			if (verbose && !reported1124)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1124 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1124 = 0;
			if (verbose && !reported1124)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1124 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1124] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2046: // STATE 1126 - _spin_nvr.tmp:997 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1126 = 0;
			if (verbose && !reported1126)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1126 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1126 = 0;
			if (verbose && !reported1126)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1126 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1126] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2047: // STATE 1128 - _spin_nvr.tmp:998 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1128 = 0;
			if (verbose && !reported1128)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1128 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1128 = 0;
			if (verbose && !reported1128)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1128 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1128] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2048: // STATE 1130 - _spin_nvr.tmp:999 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1130 = 0;
			if (verbose && !reported1130)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1130 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1130 = 0;
			if (verbose && !reported1130)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1130 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1130] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2049: // STATE 1132 - _spin_nvr.tmp:1000 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1132 = 0;
			if (verbose && !reported1132)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1132 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1132 = 0;
			if (verbose && !reported1132)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1132 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1132] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2050: // STATE 1134 - _spin_nvr.tmp:1001 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1134 = 0;
			if (verbose && !reported1134)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1134 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1134 = 0;
			if (verbose && !reported1134)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1134 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1134] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2051: // STATE 1136 - _spin_nvr.tmp:1002 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1136 = 0;
			if (verbose && !reported1136)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1136 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1136 = 0;
			if (verbose && !reported1136)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1136 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1136] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2052: // STATE 1138 - _spin_nvr.tmp:1003 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1138 = 0;
			if (verbose && !reported1138)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1138 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1138 = 0;
			if (verbose && !reported1138)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1138 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1138] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2053: // STATE 1145 - _spin_nvr.tmp:1006 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1145 = 0;
			if (verbose && !reported1145)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1145 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1145 = 0;
			if (verbose && !reported1145)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1145 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[11][1145] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_methane_switch_off */
	case 2054: // STATE 1 - _spin_nvr.tmp:50 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][1] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2055: // STATE 3 - _spin_nvr.tmp:51 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported3 = 0;
			if (verbose && !reported3)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported3 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][3] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2056: // STATE 5 - _spin_nvr.tmp:52 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported5 = 0;
			if (verbose && !reported5)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported5 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][5] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2057: // STATE 7 - _spin_nvr.tmp:53 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported7 = 0;
			if (verbose && !reported7)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported7 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][7] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2058: // STATE 9 - _spin_nvr.tmp:54 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported9 = 0;
			if (verbose && !reported9)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported9 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][9] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2059: // STATE 11 - _spin_nvr.tmp:55 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported11 = 0;
			if (verbose && !reported11)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported11 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][11] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2060: // STATE 13 - _spin_nvr.tmp:56 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][13] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2061: // STATE 15 - _spin_nvr.tmp:57 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported15 = 0;
			if (verbose && !reported15)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported15 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][15] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2062: // STATE 19 - _spin_nvr.tmp:59 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported19 = 0;
			if (verbose && !reported19)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported19 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][19] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2063: // STATE 21 - _spin_nvr.tmp:60 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported21 = 0;
			if (verbose && !reported21)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported21 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][21] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2064: // STATE 23 - _spin_nvr.tmp:61 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported23 = 0;
			if (verbose && !reported23)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported23 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported23 = 0;
			if (verbose && !reported23)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported23 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][23] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2065: // STATE 28 - _spin_nvr.tmp:65 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported28 = 0;
			if (verbose && !reported28)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported28 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][28] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2066: // STATE 33 - _spin_nvr.tmp:69 - [((!(!(pumpOn))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported33 = 0;
			if (verbose && !reported33)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported33 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][33] = 1;
		if (!(( !( !(((int)now.pumpOn)))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2067: // STATE 35 - _spin_nvr.tmp:70 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported35 = 0;
			if (verbose && !reported35)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported35 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][35] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2068: // STATE 40 - _spin_nvr.tmp:74 - [(((!(!(pumpOn))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported40 = 0;
			if (verbose && !reported40)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported40 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][40] = 1;
		if (!((( !( !(((int)now.pumpOn)))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2069: // STATE 42 - _spin_nvr.tmp:75 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported42 = 0;
			if (verbose && !reported42)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported42 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][42] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2070: // STATE 44 - _spin_nvr.tmp:76 - [((!(!(pumpOn))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported44 = 0;
			if (verbose && !reported44)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported44 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][44] = 1;
		if (!(( !( !(((int)now.pumpOn)))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2071: // STATE 49 - _spin_nvr.tmp:80 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported49 = 0;
			if (verbose && !reported49)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported49 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][49] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2072: // STATE 51 - _spin_nvr.tmp:81 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported51 = 0;
			if (verbose && !reported51)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported51 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][51] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2073: // STATE 53 - _spin_nvr.tmp:82 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported53 = 0;
			if (verbose && !reported53)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported53 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][53] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2074: // STATE 55 - _spin_nvr.tmp:83 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported55 = 0;
			if (verbose && !reported55)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported55 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][55] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2075: // STATE 57 - _spin_nvr.tmp:84 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported57 = 0;
			if (verbose && !reported57)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported57 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][57] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2076: // STATE 59 - _spin_nvr.tmp:85 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported59 = 0;
			if (verbose && !reported59)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported59 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][59] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2077: // STATE 61 - _spin_nvr.tmp:86 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported61 = 0;
			if (verbose && !reported61)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported61 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][61] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2078: // STATE 63 - _spin_nvr.tmp:87 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported63 = 0;
			if (verbose && !reported63)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported63 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][63] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2079: // STATE 65 - _spin_nvr.tmp:88 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported65 = 0;
			if (verbose && !reported65)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported65 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][65] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2080: // STATE 69 - _spin_nvr.tmp:90 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported69 = 0;
			if (verbose && !reported69)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported69 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][69] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2081: // STATE 71 - _spin_nvr.tmp:91 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported71 = 0;
			if (verbose && !reported71)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported71 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported71 = 0;
			if (verbose && !reported71)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported71 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][71] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2082: // STATE 76 - _spin_nvr.tmp:95 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported76 = 0;
			if (verbose && !reported76)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported76 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported76 = 0;
			if (verbose && !reported76)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported76 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][76] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2083: // STATE 78 - _spin_nvr.tmp:96 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported78 = 0;
			if (verbose && !reported78)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported78 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported78 = 0;
			if (verbose && !reported78)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported78 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][78] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2084: // STATE 80 - _spin_nvr.tmp:97 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported80 = 0;
			if (verbose && !reported80)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported80 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][80] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2085: // STATE 82 - _spin_nvr.tmp:98 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported82 = 0;
			if (verbose && !reported82)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported82 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][82] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2086: // STATE 84 - _spin_nvr.tmp:99 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported84 = 0;
			if (verbose && !reported84)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported84 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][84] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2087: // STATE 86 - _spin_nvr.tmp:100 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported86 = 0;
			if (verbose && !reported86)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported86 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][86] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2088: // STATE 88 - _spin_nvr.tmp:101 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported88 = 0;
			if (verbose && !reported88)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported88 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][88] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2089: // STATE 90 - _spin_nvr.tmp:102 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported90 = 0;
			if (verbose && !reported90)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported90 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][90] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2090: // STATE 92 - _spin_nvr.tmp:103 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported92 = 0;
			if (verbose && !reported92)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported92 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][92] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2091: // STATE 94 - _spin_nvr.tmp:104 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported94 = 0;
			if (verbose && !reported94)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported94 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][94] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2092: // STATE 98 - _spin_nvr.tmp:106 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported98 = 0;
			if (verbose && !reported98)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported98 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][98] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2093: // STATE 100 - _spin_nvr.tmp:107 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported100 = 0;
			if (verbose && !reported100)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported100 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][100] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2094: // STATE 102 - _spin_nvr.tmp:108 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported102 = 0;
			if (verbose && !reported102)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported102 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported102 = 0;
			if (verbose && !reported102)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported102 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][102] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2095: // STATE 107 - _spin_nvr.tmp:112 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported107 = 0;
			if (verbose && !reported107)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported107 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][107] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2096: // STATE 109 - _spin_nvr.tmp:113 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported109 = 0;
			if (verbose && !reported109)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported109 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][109] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2097: // STATE 111 - _spin_nvr.tmp:114 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported111 = 0;
			if (verbose && !reported111)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported111 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][111] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2098: // STATE 113 - _spin_nvr.tmp:115 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported113 = 0;
			if (verbose && !reported113)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported113 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][113] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2099: // STATE 115 - _spin_nvr.tmp:116 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported115 = 0;
			if (verbose && !reported115)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported115 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][115] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2100: // STATE 117 - _spin_nvr.tmp:117 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported117 = 0;
			if (verbose && !reported117)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported117 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][117] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2101: // STATE 119 - _spin_nvr.tmp:118 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported119 = 0;
			if (verbose && !reported119)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported119 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][119] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2102: // STATE 121 - _spin_nvr.tmp:119 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported121 = 0;
			if (verbose && !reported121)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported121 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][121] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2103: // STATE 123 - _spin_nvr.tmp:120 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported123 = 0;
			if (verbose && !reported123)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported123 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][123] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2104: // STATE 125 - _spin_nvr.tmp:121 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported125 = 0;
			if (verbose && !reported125)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported125 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][125] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2105: // STATE 129 - _spin_nvr.tmp:123 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported129 = 0;
			if (verbose && !reported129)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported129 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][129] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2106: // STATE 131 - _spin_nvr.tmp:124 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported131 = 0;
			if (verbose && !reported131)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported131 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][131] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2107: // STATE 136 - _spin_nvr.tmp:128 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported136 = 0;
			if (verbose && !reported136)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported136 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported136 = 0;
			if (verbose && !reported136)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported136 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][136] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2108: // STATE 138 - _spin_nvr.tmp:129 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported138 = 0;
			if (verbose && !reported138)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported138 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported138 = 0;
			if (verbose && !reported138)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported138 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][138] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2109: // STATE 140 - _spin_nvr.tmp:130 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported140 = 0;
			if (verbose && !reported140)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported140 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][140] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2110: // STATE 142 - _spin_nvr.tmp:131 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported142 = 0;
			if (verbose && !reported142)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported142 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][142] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2111: // STATE 144 - _spin_nvr.tmp:132 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported144 = 0;
			if (verbose && !reported144)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported144 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][144] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2112: // STATE 146 - _spin_nvr.tmp:133 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported146 = 0;
			if (verbose && !reported146)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported146 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][146] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2113: // STATE 148 - _spin_nvr.tmp:134 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported148 = 0;
			if (verbose && !reported148)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported148 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][148] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2114: // STATE 150 - _spin_nvr.tmp:135 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported150 = 0;
			if (verbose && !reported150)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported150 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][150] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2115: // STATE 152 - _spin_nvr.tmp:136 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported152 = 0;
			if (verbose && !reported152)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported152 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][152] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2116: // STATE 154 - _spin_nvr.tmp:137 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported154 = 0;
			if (verbose && !reported154)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported154 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][154] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2117: // STATE 156 - _spin_nvr.tmp:138 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported156 = 0;
			if (verbose && !reported156)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported156 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][156] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2118: // STATE 160 - _spin_nvr.tmp:140 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported160 = 0;
			if (verbose && !reported160)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported160 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][160] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2119: // STATE 162 - _spin_nvr.tmp:141 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported162 = 0;
			if (verbose && !reported162)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported162 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][162] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2120: // STATE 167 - _spin_nvr.tmp:145 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported167 = 0;
			if (verbose && !reported167)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported167 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported167 = 0;
			if (verbose && !reported167)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported167 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][167] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2121: // STATE 169 - _spin_nvr.tmp:146 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported169 = 0;
			if (verbose && !reported169)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported169 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported169 = 0;
			if (verbose && !reported169)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported169 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][169] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2122: // STATE 171 - _spin_nvr.tmp:147 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported171 = 0;
			if (verbose && !reported171)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported171 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][171] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2123: // STATE 173 - _spin_nvr.tmp:148 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported173 = 0;
			if (verbose && !reported173)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported173 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][173] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2124: // STATE 175 - _spin_nvr.tmp:149 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported175 = 0;
			if (verbose && !reported175)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported175 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][175] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2125: // STATE 177 - _spin_nvr.tmp:150 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported177 = 0;
			if (verbose && !reported177)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported177 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][177] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2126: // STATE 179 - _spin_nvr.tmp:151 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported179 = 0;
			if (verbose && !reported179)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported179 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][179] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2127: // STATE 181 - _spin_nvr.tmp:152 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported181 = 0;
			if (verbose && !reported181)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported181 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][181] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2128: // STATE 183 - _spin_nvr.tmp:153 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported183 = 0;
			if (verbose && !reported183)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported183 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][183] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2129: // STATE 185 - _spin_nvr.tmp:154 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported185 = 0;
			if (verbose && !reported185)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported185 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][185] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2130: // STATE 187 - _spin_nvr.tmp:155 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported187 = 0;
			if (verbose && !reported187)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported187 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][187] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2131: // STATE 189 - _spin_nvr.tmp:156 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported189 = 0;
			if (verbose && !reported189)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported189 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][189] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2132: // STATE 193 - _spin_nvr.tmp:158 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported193 = 0;
			if (verbose && !reported193)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported193 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][193] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2133: // STATE 195 - _spin_nvr.tmp:159 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported195 = 0;
			if (verbose && !reported195)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported195 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][195] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2134: // STATE 200 - _spin_nvr.tmp:163 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported200 = 0;
			if (verbose && !reported200)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported200 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported200 = 0;
			if (verbose && !reported200)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported200 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][200] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2135: // STATE 202 - _spin_nvr.tmp:164 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported202 = 0;
			if (verbose && !reported202)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported202 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported202 = 0;
			if (verbose && !reported202)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported202 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][202] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2136: // STATE 204 - _spin_nvr.tmp:165 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported204 = 0;
			if (verbose && !reported204)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported204 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported204 = 0;
			if (verbose && !reported204)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported204 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][204] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2137: // STATE 206 - _spin_nvr.tmp:166 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported206 = 0;
			if (verbose && !reported206)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported206 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported206 = 0;
			if (verbose && !reported206)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported206 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][206] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2138: // STATE 208 - _spin_nvr.tmp:167 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported208 = 0;
			if (verbose && !reported208)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported208 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][208] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2139: // STATE 210 - _spin_nvr.tmp:168 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported210 = 0;
			if (verbose && !reported210)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported210 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][210] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2140: // STATE 212 - _spin_nvr.tmp:169 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported212 = 0;
			if (verbose && !reported212)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported212 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][212] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2141: // STATE 214 - _spin_nvr.tmp:170 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported214 = 0;
			if (verbose && !reported214)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported214 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][214] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2142: // STATE 216 - _spin_nvr.tmp:171 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported216 = 0;
			if (verbose && !reported216)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported216 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][216] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2143: // STATE 218 - _spin_nvr.tmp:172 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported218 = 0;
			if (verbose && !reported218)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported218 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][218] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2144: // STATE 220 - _spin_nvr.tmp:173 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported220 = 0;
			if (verbose && !reported220)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported220 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][220] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2145: // STATE 222 - _spin_nvr.tmp:174 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported222 = 0;
			if (verbose && !reported222)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported222 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][222] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2146: // STATE 224 - _spin_nvr.tmp:175 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported224 = 0;
			if (verbose && !reported224)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported224 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][224] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2147: // STATE 228 - _spin_nvr.tmp:177 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported228 = 0;
			if (verbose && !reported228)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported228 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][228] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2148: // STATE 230 - _spin_nvr.tmp:178 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported230 = 0;
			if (verbose && !reported230)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported230 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][230] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2149: // STATE 235 - _spin_nvr.tmp:182 - [((((!(!(pumpOn))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported235 = 0;
			if (verbose && !reported235)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported235 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported235 = 0;
			if (verbose && !reported235)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported235 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][235] = 1;
		if (!(((( !( !(((int)now.pumpOn)))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2150: // STATE 237 - _spin_nvr.tmp:183 - [((!(!(pumpOn))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported237 = 0;
			if (verbose && !reported237)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported237 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][237] = 1;
		if (!(( !( !(((int)now.pumpOn)))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2151: // STATE 239 - _spin_nvr.tmp:184 - [(!(!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported239 = 0;
			if (verbose && !reported239)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported239 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][239] = 1;
		if (!( !( !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2152: // STATE 241 - _spin_nvr.tmp:185 - [(((!(!(pumpOn))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported241 = 0;
			if (verbose && !reported241)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported241 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][241] = 1;
		if (!((( !( !(((int)now.pumpOn)))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2153: // STATE 246 - _spin_nvr.tmp:189 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported246 = 0;
			if (verbose && !reported246)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported246 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported246 = 0;
			if (verbose && !reported246)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported246 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][246] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2154: // STATE 248 - _spin_nvr.tmp:190 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported248 = 0;
			if (verbose && !reported248)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported248 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported248 = 0;
			if (verbose && !reported248)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported248 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][248] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2155: // STATE 250 - _spin_nvr.tmp:191 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported250 = 0;
			if (verbose && !reported250)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported250 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported250 = 0;
			if (verbose && !reported250)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported250 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][250] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2156: // STATE 252 - _spin_nvr.tmp:192 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported252 = 0;
			if (verbose && !reported252)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported252 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported252 = 0;
			if (verbose && !reported252)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported252 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][252] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2157: // STATE 254 - _spin_nvr.tmp:193 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported254 = 0;
			if (verbose && !reported254)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported254 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported254 = 0;
			if (verbose && !reported254)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported254 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][254] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2158: // STATE 256 - _spin_nvr.tmp:194 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported256 = 0;
			if (verbose && !reported256)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported256 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported256 = 0;
			if (verbose && !reported256)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported256 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][256] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2159: // STATE 258 - _spin_nvr.tmp:195 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported258 = 0;
			if (verbose && !reported258)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported258 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported258 = 0;
			if (verbose && !reported258)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported258 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][258] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2160: // STATE 260 - _spin_nvr.tmp:196 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported260 = 0;
			if (verbose && !reported260)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported260 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported260 = 0;
			if (verbose && !reported260)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported260 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][260] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2161: // STATE 262 - _spin_nvr.tmp:197 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported262 = 0;
			if (verbose && !reported262)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported262 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported262 = 0;
			if (verbose && !reported262)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported262 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][262] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2162: // STATE 264 - _spin_nvr.tmp:198 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported264 = 0;
			if (verbose && !reported264)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported264 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported264 = 0;
			if (verbose && !reported264)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported264 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][264] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2163: // STATE 268 - _spin_nvr.tmp:200 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported268 = 0;
			if (verbose && !reported268)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported268 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported268 = 0;
			if (verbose && !reported268)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported268 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][268] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2164: // STATE 273 - _spin_nvr.tmp:204 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported273 = 0;
			if (verbose && !reported273)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported273 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported273 = 0;
			if (verbose && !reported273)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported273 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][273] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2165: // STATE 275 - _spin_nvr.tmp:205 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported275 = 0;
			if (verbose && !reported275)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported275 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported275 = 0;
			if (verbose && !reported275)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported275 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][275] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2166: // STATE 277 - _spin_nvr.tmp:206 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported277 = 0;
			if (verbose && !reported277)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported277 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported277 = 0;
			if (verbose && !reported277)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported277 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][277] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2167: // STATE 279 - _spin_nvr.tmp:207 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported279 = 0;
			if (verbose && !reported279)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported279 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported279 = 0;
			if (verbose && !reported279)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported279 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][279] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2168: // STATE 281 - _spin_nvr.tmp:208 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported281 = 0;
			if (verbose && !reported281)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported281 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported281 = 0;
			if (verbose && !reported281)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported281 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][281] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2169: // STATE 283 - _spin_nvr.tmp:209 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported283 = 0;
			if (verbose && !reported283)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported283 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported283 = 0;
			if (verbose && !reported283)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported283 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][283] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2170: // STATE 285 - _spin_nvr.tmp:210 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported285 = 0;
			if (verbose && !reported285)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported285 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported285 = 0;
			if (verbose && !reported285)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported285 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][285] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2171: // STATE 287 - _spin_nvr.tmp:211 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported287 = 0;
			if (verbose && !reported287)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported287 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported287 = 0;
			if (verbose && !reported287)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported287 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][287] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2172: // STATE 289 - _spin_nvr.tmp:212 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported289 = 0;
			if (verbose && !reported289)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported289 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported289 = 0;
			if (verbose && !reported289)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported289 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][289] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2173: // STATE 291 - _spin_nvr.tmp:213 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported291 = 0;
			if (verbose && !reported291)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported291 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported291 = 0;
			if (verbose && !reported291)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported291 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][291] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2174: // STATE 293 - _spin_nvr.tmp:214 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported293 = 0;
			if (verbose && !reported293)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported293 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported293 = 0;
			if (verbose && !reported293)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported293 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][293] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2175: // STATE 295 - _spin_nvr.tmp:215 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported295 = 0;
			if (verbose && !reported295)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported295 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported295 = 0;
			if (verbose && !reported295)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported295 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][295] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2176: // STATE 297 - _spin_nvr.tmp:216 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported297 = 0;
			if (verbose && !reported297)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported297 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported297 = 0;
			if (verbose && !reported297)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported297 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][297] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2177: // STATE 301 - _spin_nvr.tmp:218 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported301 = 0;
			if (verbose && !reported301)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported301 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported301 = 0;
			if (verbose && !reported301)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported301 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][301] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2178: // STATE 303 - _spin_nvr.tmp:219 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported303 = 0;
			if (verbose && !reported303)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported303 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported303 = 0;
			if (verbose && !reported303)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported303 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][303] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2179: // STATE 305 - _spin_nvr.tmp:220 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported305 = 0;
			if (verbose && !reported305)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported305 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported305 = 0;
			if (verbose && !reported305)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported305 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][305] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2180: // STATE 310 - _spin_nvr.tmp:224 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported310 = 0;
			if (verbose && !reported310)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported310 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported310 = 0;
			if (verbose && !reported310)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported310 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][310] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2181: // STATE 312 - _spin_nvr.tmp:225 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported312 = 0;
			if (verbose && !reported312)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported312 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported312 = 0;
			if (verbose && !reported312)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported312 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][312] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2182: // STATE 314 - _spin_nvr.tmp:226 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported314 = 0;
			if (verbose && !reported314)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported314 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported314 = 0;
			if (verbose && !reported314)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported314 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][314] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2183: // STATE 316 - _spin_nvr.tmp:227 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported316 = 0;
			if (verbose && !reported316)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported316 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported316 = 0;
			if (verbose && !reported316)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported316 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][316] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2184: // STATE 318 - _spin_nvr.tmp:228 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported318 = 0;
			if (verbose && !reported318)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported318 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported318 = 0;
			if (verbose && !reported318)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported318 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][318] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2185: // STATE 320 - _spin_nvr.tmp:229 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported320 = 0;
			if (verbose && !reported320)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported320 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported320 = 0;
			if (verbose && !reported320)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported320 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][320] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2186: // STATE 322 - _spin_nvr.tmp:230 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported322 = 0;
			if (verbose && !reported322)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported322 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported322 = 0;
			if (verbose && !reported322)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported322 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][322] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2187: // STATE 324 - _spin_nvr.tmp:231 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported324 = 0;
			if (verbose && !reported324)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported324 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported324 = 0;
			if (verbose && !reported324)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported324 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][324] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2188: // STATE 326 - _spin_nvr.tmp:232 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported326 = 0;
			if (verbose && !reported326)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported326 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported326 = 0;
			if (verbose && !reported326)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported326 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][326] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2189: // STATE 328 - _spin_nvr.tmp:233 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported328 = 0;
			if (verbose && !reported328)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported328 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported328 = 0;
			if (verbose && !reported328)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported328 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][328] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2190: // STATE 330 - _spin_nvr.tmp:234 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported330 = 0;
			if (verbose && !reported330)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported330 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported330 = 0;
			if (verbose && !reported330)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported330 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][330] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2191: // STATE 334 - _spin_nvr.tmp:236 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported334 = 0;
			if (verbose && !reported334)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported334 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported334 = 0;
			if (verbose && !reported334)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported334 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][334] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2192: // STATE 339 - _spin_nvr.tmp:240 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported339 = 0;
			if (verbose && !reported339)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported339 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported339 = 0;
			if (verbose && !reported339)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported339 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][339] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2193: // STATE 341 - _spin_nvr.tmp:241 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported341 = 0;
			if (verbose && !reported341)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported341 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported341 = 0;
			if (verbose && !reported341)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported341 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][341] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2194: // STATE 343 - _spin_nvr.tmp:242 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported343 = 0;
			if (verbose && !reported343)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported343 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported343 = 0;
			if (verbose && !reported343)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported343 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][343] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2195: // STATE 345 - _spin_nvr.tmp:243 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported345 = 0;
			if (verbose && !reported345)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported345 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported345 = 0;
			if (verbose && !reported345)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported345 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][345] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2196: // STATE 347 - _spin_nvr.tmp:244 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported347 = 0;
			if (verbose && !reported347)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported347 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported347 = 0;
			if (verbose && !reported347)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported347 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][347] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2197: // STATE 349 - _spin_nvr.tmp:245 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported349 = 0;
			if (verbose && !reported349)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported349 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported349 = 0;
			if (verbose && !reported349)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported349 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][349] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2198: // STATE 351 - _spin_nvr.tmp:246 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported351 = 0;
			if (verbose && !reported351)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported351 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported351 = 0;
			if (verbose && !reported351)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported351 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][351] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2199: // STATE 353 - _spin_nvr.tmp:247 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported353 = 0;
			if (verbose && !reported353)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported353 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported353 = 0;
			if (verbose && !reported353)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported353 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][353] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2200: // STATE 355 - _spin_nvr.tmp:248 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported355 = 0;
			if (verbose && !reported355)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported355 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported355 = 0;
			if (verbose && !reported355)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported355 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][355] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2201: // STATE 357 - _spin_nvr.tmp:249 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported357 = 0;
			if (verbose && !reported357)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported357 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported357 = 0;
			if (verbose && !reported357)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported357 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][357] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2202: // STATE 359 - _spin_nvr.tmp:250 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported359 = 0;
			if (verbose && !reported359)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported359 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported359 = 0;
			if (verbose && !reported359)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported359 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][359] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2203: // STATE 361 - _spin_nvr.tmp:251 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported361 = 0;
			if (verbose && !reported361)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported361 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported361 = 0;
			if (verbose && !reported361)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported361 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][361] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2204: // STATE 365 - _spin_nvr.tmp:253 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported365 = 0;
			if (verbose && !reported365)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported365 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported365 = 0;
			if (verbose && !reported365)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported365 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][365] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2205: // STATE 367 - _spin_nvr.tmp:254 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported367 = 0;
			if (verbose && !reported367)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported367 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported367 = 0;
			if (verbose && !reported367)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported367 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][367] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2206: // STATE 372 - _spin_nvr.tmp:258 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported372 = 0;
			if (verbose && !reported372)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported372 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][372] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2207: // STATE 374 - _spin_nvr.tmp:259 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported374 = 0;
			if (verbose && !reported374)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported374 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][374] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2208: // STATE 376 - _spin_nvr.tmp:260 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported376 = 0;
			if (verbose && !reported376)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported376 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported376 = 0;
			if (verbose && !reported376)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported376 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][376] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2209: // STATE 378 - _spin_nvr.tmp:261 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported378 = 0;
			if (verbose && !reported378)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported378 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported378 = 0;
			if (verbose && !reported378)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported378 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][378] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2210: // STATE 380 - _spin_nvr.tmp:262 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported380 = 0;
			if (verbose && !reported380)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported380 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported380 = 0;
			if (verbose && !reported380)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported380 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][380] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2211: // STATE 382 - _spin_nvr.tmp:263 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported382 = 0;
			if (verbose && !reported382)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported382 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported382 = 0;
			if (verbose && !reported382)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported382 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][382] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2212: // STATE 384 - _spin_nvr.tmp:264 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported384 = 0;
			if (verbose && !reported384)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported384 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported384 = 0;
			if (verbose && !reported384)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported384 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][384] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2213: // STATE 386 - _spin_nvr.tmp:265 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported386 = 0;
			if (verbose && !reported386)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported386 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported386 = 0;
			if (verbose && !reported386)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported386 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][386] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2214: // STATE 388 - _spin_nvr.tmp:266 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported388 = 0;
			if (verbose && !reported388)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported388 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported388 = 0;
			if (verbose && !reported388)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported388 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][388] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2215: // STATE 390 - _spin_nvr.tmp:267 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported390 = 0;
			if (verbose && !reported390)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported390 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported390 = 0;
			if (verbose && !reported390)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported390 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][390] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2216: // STATE 392 - _spin_nvr.tmp:268 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported392 = 0;
			if (verbose && !reported392)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported392 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported392 = 0;
			if (verbose && !reported392)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported392 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][392] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2217: // STATE 394 - _spin_nvr.tmp:269 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported394 = 0;
			if (verbose && !reported394)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported394 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported394 = 0;
			if (verbose && !reported394)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported394 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][394] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2218: // STATE 401 - _spin_nvr.tmp:274 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported401 = 0;
			if (verbose && !reported401)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported401 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][401] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2219: // STATE 403 - _spin_nvr.tmp:275 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported403 = 0;
			if (verbose && !reported403)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported403 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported403 = 0;
			if (verbose && !reported403)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported403 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][403] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2220: // STATE 405 - _spin_nvr.tmp:276 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported405 = 0;
			if (verbose && !reported405)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported405 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][405] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2221: // STATE 407 - _spin_nvr.tmp:277 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported407 = 0;
			if (verbose && !reported407)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported407 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][407] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2222: // STATE 409 - _spin_nvr.tmp:278 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported409 = 0;
			if (verbose && !reported409)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported409 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][409] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2223: // STATE 411 - _spin_nvr.tmp:279 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported411 = 0;
			if (verbose && !reported411)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported411 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][411] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2224: // STATE 413 - _spin_nvr.tmp:280 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported413 = 0;
			if (verbose && !reported413)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported413 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported413 = 0;
			if (verbose && !reported413)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported413 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][413] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2225: // STATE 415 - _spin_nvr.tmp:281 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported415 = 0;
			if (verbose && !reported415)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported415 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported415 = 0;
			if (verbose && !reported415)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported415 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][415] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2226: // STATE 417 - _spin_nvr.tmp:282 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported417 = 0;
			if (verbose && !reported417)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported417 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported417 = 0;
			if (verbose && !reported417)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported417 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][417] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2227: // STATE 419 - _spin_nvr.tmp:283 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported419 = 0;
			if (verbose && !reported419)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported419 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported419 = 0;
			if (verbose && !reported419)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported419 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][419] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2228: // STATE 421 - _spin_nvr.tmp:284 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported421 = 0;
			if (verbose && !reported421)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported421 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported421 = 0;
			if (verbose && !reported421)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported421 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][421] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2229: // STATE 423 - _spin_nvr.tmp:285 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported423 = 0;
			if (verbose && !reported423)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported423 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported423 = 0;
			if (verbose && !reported423)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported423 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][423] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2230: // STATE 427 - _spin_nvr.tmp:287 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported427 = 0;
			if (verbose && !reported427)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported427 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported427 = 0;
			if (verbose && !reported427)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported427 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][427] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2231: // STATE 429 - _spin_nvr.tmp:288 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported429 = 0;
			if (verbose && !reported429)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported429 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported429 = 0;
			if (verbose && !reported429)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported429 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][429] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2232: // STATE 431 - _spin_nvr.tmp:289 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported431 = 0;
			if (verbose && !reported431)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported431 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported431 = 0;
			if (verbose && !reported431)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported431 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][431] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2233: // STATE 436 - _spin_nvr.tmp:293 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported436 = 0;
			if (verbose && !reported436)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported436 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][436] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2234: // STATE 438 - _spin_nvr.tmp:294 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported438 = 0;
			if (verbose && !reported438)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported438 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][438] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2235: // STATE 440 - _spin_nvr.tmp:295 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported440 = 0;
			if (verbose && !reported440)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported440 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported440 = 0;
			if (verbose && !reported440)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported440 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][440] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2236: // STATE 442 - _spin_nvr.tmp:296 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported442 = 0;
			if (verbose && !reported442)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported442 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][442] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2237: // STATE 444 - _spin_nvr.tmp:297 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported444 = 0;
			if (verbose && !reported444)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported444 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][444] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2238: // STATE 446 - _spin_nvr.tmp:298 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported446 = 0;
			if (verbose && !reported446)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported446 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][446] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2239: // STATE 448 - _spin_nvr.tmp:299 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported448 = 0;
			if (verbose && !reported448)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported448 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][448] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2240: // STATE 450 - _spin_nvr.tmp:300 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported450 = 0;
			if (verbose && !reported450)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported450 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported450 = 0;
			if (verbose && !reported450)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported450 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][450] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2241: // STATE 452 - _spin_nvr.tmp:301 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported452 = 0;
			if (verbose && !reported452)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported452 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported452 = 0;
			if (verbose && !reported452)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported452 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][452] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2242: // STATE 454 - _spin_nvr.tmp:302 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported454 = 0;
			if (verbose && !reported454)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported454 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported454 = 0;
			if (verbose && !reported454)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported454 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][454] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2243: // STATE 456 - _spin_nvr.tmp:303 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported456 = 0;
			if (verbose && !reported456)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported456 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported456 = 0;
			if (verbose && !reported456)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported456 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][456] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2244: // STATE 460 - _spin_nvr.tmp:305 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported460 = 0;
			if (verbose && !reported460)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported460 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported460 = 0;
			if (verbose && !reported460)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported460 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][460] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2245: // STATE 462 - _spin_nvr.tmp:306 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported462 = 0;
			if (verbose && !reported462)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported462 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported462 = 0;
			if (verbose && !reported462)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported462 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][462] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2246: // STATE 467 - _spin_nvr.tmp:310 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported467 = 0;
			if (verbose && !reported467)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported467 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][467] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2247: // STATE 469 - _spin_nvr.tmp:311 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported469 = 0;
			if (verbose && !reported469)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported469 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][469] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2248: // STATE 471 - _spin_nvr.tmp:312 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported471 = 0;
			if (verbose && !reported471)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported471 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][471] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2249: // STATE 473 - _spin_nvr.tmp:313 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported473 = 0;
			if (verbose && !reported473)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported473 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][473] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2250: // STATE 475 - _spin_nvr.tmp:314 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported475 = 0;
			if (verbose && !reported475)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported475 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported475 = 0;
			if (verbose && !reported475)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported475 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][475] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2251: // STATE 477 - _spin_nvr.tmp:315 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported477 = 0;
			if (verbose && !reported477)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported477 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][477] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2252: // STATE 479 - _spin_nvr.tmp:316 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported479 = 0;
			if (verbose && !reported479)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported479 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][479] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2253: // STATE 481 - _spin_nvr.tmp:317 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported481 = 0;
			if (verbose && !reported481)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported481 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][481] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2254: // STATE 483 - _spin_nvr.tmp:318 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported483 = 0;
			if (verbose && !reported483)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported483 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][483] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2255: // STATE 485 - _spin_nvr.tmp:319 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported485 = 0;
			if (verbose && !reported485)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported485 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][485] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2256: // STATE 487 - _spin_nvr.tmp:320 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported487 = 0;
			if (verbose && !reported487)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported487 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][487] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2257: // STATE 491 - _spin_nvr.tmp:322 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported491 = 0;
			if (verbose && !reported491)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported491 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][491] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2258: // STATE 493 - _spin_nvr.tmp:323 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported493 = 0;
			if (verbose && !reported493)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported493 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][493] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2259: // STATE 495 - _spin_nvr.tmp:324 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported495 = 0;
			if (verbose && !reported495)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported495 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][495] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2260: // STATE 500 - _spin_nvr.tmp:328 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported500 = 0;
			if (verbose && !reported500)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported500 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported500 = 0;
			if (verbose && !reported500)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported500 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][500] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2261: // STATE 502 - _spin_nvr.tmp:329 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported502 = 0;
			if (verbose && !reported502)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported502 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][502] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2262: // STATE 504 - _spin_nvr.tmp:330 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported504 = 0;
			if (verbose && !reported504)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported504 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][504] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2263: // STATE 506 - _spin_nvr.tmp:331 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported506 = 0;
			if (verbose && !reported506)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported506 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][506] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2264: // STATE 508 - _spin_nvr.tmp:332 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported508 = 0;
			if (verbose && !reported508)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported508 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][508] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2265: // STATE 510 - _spin_nvr.tmp:333 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported510 = 0;
			if (verbose && !reported510)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported510 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][510] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2266: // STATE 512 - _spin_nvr.tmp:334 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported512 = 0;
			if (verbose && !reported512)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported512 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][512] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2267: // STATE 514 - _spin_nvr.tmp:335 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported514 = 0;
			if (verbose && !reported514)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported514 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][514] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2268: // STATE 516 - _spin_nvr.tmp:336 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported516 = 0;
			if (verbose && !reported516)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported516 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][516] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2269: // STATE 518 - _spin_nvr.tmp:337 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported518 = 0;
			if (verbose && !reported518)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported518 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][518] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2270: // STATE 520 - _spin_nvr.tmp:338 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported520 = 0;
			if (verbose && !reported520)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported520 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][520] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2271: // STATE 522 - _spin_nvr.tmp:339 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported522 = 0;
			if (verbose && !reported522)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported522 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][522] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2272: // STATE 526 - _spin_nvr.tmp:341 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported526 = 0;
			if (verbose && !reported526)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported526 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][526] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2273: // STATE 528 - _spin_nvr.tmp:342 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported528 = 0;
			if (verbose && !reported528)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported528 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][528] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2274: // STATE 533 - _spin_nvr.tmp:346 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported533 = 0;
			if (verbose && !reported533)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported533 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported533 = 0;
			if (verbose && !reported533)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported533 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][533] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2275: // STATE 535 - _spin_nvr.tmp:347 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported535 = 0;
			if (verbose && !reported535)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported535 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported535 = 0;
			if (verbose && !reported535)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported535 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][535] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2276: // STATE 537 - _spin_nvr.tmp:348 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported537 = 0;
			if (verbose && !reported537)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported537 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported537 = 0;
			if (verbose && !reported537)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported537 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][537] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2277: // STATE 539 - _spin_nvr.tmp:349 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported539 = 0;
			if (verbose && !reported539)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported539 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][539] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2278: // STATE 541 - _spin_nvr.tmp:350 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported541 = 0;
			if (verbose && !reported541)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported541 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][541] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2279: // STATE 543 - _spin_nvr.tmp:351 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported543 = 0;
			if (verbose && !reported543)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported543 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][543] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2280: // STATE 545 - _spin_nvr.tmp:352 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported545 = 0;
			if (verbose && !reported545)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported545 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][545] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2281: // STATE 547 - _spin_nvr.tmp:353 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported547 = 0;
			if (verbose && !reported547)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported547 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][547] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2282: // STATE 549 - _spin_nvr.tmp:354 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported549 = 0;
			if (verbose && !reported549)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported549 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][549] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2283: // STATE 551 - _spin_nvr.tmp:355 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported551 = 0;
			if (verbose && !reported551)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported551 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][551] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2284: // STATE 555 - _spin_nvr.tmp:357 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported555 = 0;
			if (verbose && !reported555)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported555 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][555] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2285: // STATE 557 - _spin_nvr.tmp:358 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported557 = 0;
			if (verbose && !reported557)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported557 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][557] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2286: // STATE 559 - _spin_nvr.tmp:359 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported559 = 0;
			if (verbose && !reported559)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported559 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][559] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2287: // STATE 561 - _spin_nvr.tmp:360 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported561 = 0;
			if (verbose && !reported561)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported561 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported561 = 0;
			if (verbose && !reported561)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported561 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][561] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2288: // STATE 566 - _spin_nvr.tmp:364 - [((!(!((pumpOn&&methane)))&&!(!(pumpOn))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported566 = 0;
			if (verbose && !reported566)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported566 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported566 = 0;
			if (verbose && !reported566)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported566 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][566] = 1;
		if (!(( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2289: // STATE 568 - _spin_nvr.tmp:365 - [(((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported568 = 0;
			if (verbose && !reported568)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported568 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported568 = 0;
			if (verbose && !reported568)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported568 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][568] = 1;
		if (!((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2290: // STATE 570 - _spin_nvr.tmp:366 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported570 = 0;
			if (verbose && !reported570)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported570 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported570 = 0;
			if (verbose && !reported570)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported570 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][570] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2291: // STATE 572 - _spin_nvr.tmp:367 - [(((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported572 = 0;
			if (verbose && !reported572)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported572 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported572 = 0;
			if (verbose && !reported572)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported572 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][572] = 1;
		if (!((((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2292: // STATE 574 - _spin_nvr.tmp:368 - [((((!(!((pumpOn&&methane)))&&!(!(pumpOn)))&&(readMsg==alarmMsg))&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported574 = 0;
			if (verbose && !reported574)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported574 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported574 = 0;
			if (verbose && !reported574)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported574 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][574] = 1;
		if (!(((( !( !((((int)now.pumpOn)&&((int)now.methane))))&& !( !(((int)now.pumpOn))))&&(now.readMsg==7))&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2293: // STATE 576 - _spin_nvr.tmp:369 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported576 = 0;
			if (verbose && !reported576)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported576 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported576 = 0;
			if (verbose && !reported576)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported576 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][576] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2294: // STATE 578 - _spin_nvr.tmp:370 - [((readMsg==alarmMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported578 = 0;
			if (verbose && !reported578)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported578 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][578] = 1;
		if (!((now.readMsg==7)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2295: // STATE 580 - _spin_nvr.tmp:371 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported580 = 0;
			if (verbose && !reported580)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported580 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][580] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2296: // STATE 582 - _spin_nvr.tmp:372 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported582 = 0;
			if (verbose && !reported582)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported582 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][582] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2297: // STATE 584 - _spin_nvr.tmp:373 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported584 = 0;
			if (verbose && !reported584)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported584 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][584] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2298: // STATE 586 - _spin_nvr.tmp:374 - [(((readMsg==alarmMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported586 = 0;
			if (verbose && !reported586)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported586 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][586] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2299: // STATE 588 - _spin_nvr.tmp:375 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported588 = 0;
			if (verbose && !reported588)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported588 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][588] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2300: // STATE 592 - _spin_nvr.tmp:377 - [(((readMsg==alarmMsg)&&(readMsg==commandMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported592 = 0;
			if (verbose && !reported592)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported592 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][592] = 1;
		if (!(((now.readMsg==7)&&(now.readMsg==9))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2301: // STATE 594 - _spin_nvr.tmp:378 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported594 = 0;
			if (verbose && !reported594)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported594 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][594] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2302: // STATE 596 - _spin_nvr.tmp:379 - [(((readMsg==commandMsg)&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported596 = 0;
			if (verbose && !reported596)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported596 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][596] = 1;
		if (!(((now.readMsg==9)&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2303: // STATE 598 - _spin_nvr.tmp:380 - [((((readMsg==alarmMsg)&&(readMsg==commandMsg))&&(readMsg==levelMsg)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported598 = 0;
			if (verbose && !reported598)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported598 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][598] = 1;
		if (!((((now.readMsg==7)&&(now.readMsg==9))&&(now.readMsg==14))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2304: // STATE 600 - _spin_nvr.tmp:381 - [((readMsg==levelMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported600 = 0;
			if (verbose && !reported600)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported600 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported600 = 0;
			if (verbose && !reported600)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported600 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][600] = 1;
		if (!((now.readMsg==14)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2305: // STATE 602 - _spin_nvr.tmp:382 - [((readMsg==commandMsg))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported602 = 0;
			if (verbose && !reported602)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported602 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][602] = 1;
		if (!((now.readMsg==9)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2306: // STATE 607 - _spin_nvr.tmp:384 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported607 = 0;
			if (verbose && !reported607)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported607 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[10][607] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_strong_synch_off */
	case 2307: // STATE 1 - _spin_nvr.tmp:41 - [(!((!(!((pstate==running)))||!(pumpOn))))] (6:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][1] = 1;
		if (!( !(( !( !((now.pstate==10)))|| !(((int)now.pumpOn))))))
			continue;
		/* merge: assert(!(!((!(!((pstate==running)))||!(pumpOn)))))(0, 2, 6) */
		reached[9][2] = 1;
		spin_assert( !( !(( !( !((now.pstate==10)))|| !(((int)now.pumpOn))))), " !( !(( !( !((pstate==10)))|| !(pumpOn))))", II, tt, t);
		/* merge: .(goto)(0, 7, 6) */
		reached[9][7] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2308: // STATE 10 - _spin_nvr.tmp:46 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[9][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_weak_synch_off */
	case 2309: // STATE 1 - _spin_nvr.tmp:30 - [((!(!((pstate==running)))&&!(pumpOn)))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[8][1] = 1;
		if (!(( !( !((now.pstate==10)))&& !(((int)now.pumpOn)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2310: // STATE 8 - _spin_nvr.tmp:35 - [(!(!((pstate==running))))] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported8 = 0;
			if (verbose && !reported8)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported8 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[8][8] = 1;
		if (!( !( !((now.pstate==10)))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2311: // STATE 13 - _spin_nvr.tmp:37 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported13 = 0;
			if (verbose && !reported13)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported13 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[8][13] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_state_consistency */
	case 2312: // STATE 1 - _spin_nvr.tmp:21 - [(!((((((pstate==ready)||(pstate==running))||(pstate==stopped))||(pstate==methanestop))||(pstate==lowstop))))] (6:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[7][1] = 1;
		if (!( !((((((now.pstate==2)||(now.pstate==10))||(now.pstate==4))||(now.pstate==12))||(now.pstate==1)))))
			continue;
		/* merge: assert(!(!((((((pstate==ready)||(pstate==running))||(pstate==stopped))||(pstate==methanestop))||(pstate==lowstop)))))(0, 2, 6) */
		reached[7][2] = 1;
		spin_assert( !( !((((((now.pstate==2)||(now.pstate==10))||(now.pstate==4))||(now.pstate==12))||(now.pstate==1)))), " !( !((((((pstate==2)||(pstate==10))||(pstate==4))||(pstate==12))||(pstate==1))))", II, tt, t);
		/* merge: .(goto)(0, 7, 6) */
		reached[7][7] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2313: // STATE 10 - _spin_nvr.tmp:26 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[7][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM read_msg_consistency */
	case 2314: // STATE 1 - _spin_nvr.tmp:12 - [(!((((readMsg==commandMsg)||(readMsg==alarmMsg))||(readMsg==levelMsg))))] (6:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[6][1] = 1;
		if (!( !((((now.readMsg==9)||(now.readMsg==7))||(now.readMsg==14)))))
			continue;
		/* merge: assert(!(!((((readMsg==commandMsg)||(readMsg==alarmMsg))||(readMsg==levelMsg)))))(0, 2, 6) */
		reached[6][2] = 1;
		spin_assert( !( !((((now.readMsg==9)||(now.readMsg==7))||(now.readMsg==14)))), " !( !((((readMsg==9)||(readMsg==7))||(readMsg==14))))", II, tt, t);
		/* merge: .(goto)(0, 7, 6) */
		reached[6][7] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2315: // STATE 10 - _spin_nvr.tmp:17 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[6][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* CLAIM pump_synch_on */
	case 2316: // STATE 1 - _spin_nvr.tmp:3 - [(!((!(pumpOn)||(pstate==running))))] (6:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported1 = 0;
			if (verbose && !reported1)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported1 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[5][1] = 1;
		if (!( !(( !(((int)now.pumpOn))||(now.pstate==10)))))
			continue;
		/* merge: assert(!(!((!(pumpOn)||(pstate==running)))))(0, 2, 6) */
		reached[5][2] = 1;
		spin_assert( !( !(( !(((int)now.pumpOn))||(now.pstate==10)))), " !( !(( !(pumpOn)||(pstate==10))))", II, tt, t);
		/* merge: .(goto)(0, 7, 6) */
		reached[5][7] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2317: // STATE 10 - _spin_nvr.tmp:8 - [-end-] (0:0:0 - 1)
		
#if defined(VERI) && !defined(NP)
#if NCLAIMS>1
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	int nn = (int) ((Pclaim *)pptr(0))->_n;
				printf("depth %ld: Claim %s (%d), state %d (line %d)\n",
					depth, procname[spin_c_typ[nn]], nn, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#else
		{	static int reported10 = 0;
			if (verbose && !reported10)
			{	printf("depth %d: Claim, state %d (line %d)\n",
					(int) depth, (int) ((Pclaim *)pptr(0))->_p, src_claim[ (int) ((Pclaim *)pptr(0))->_p ]);
				reported10 = 1;
				fflush(stdout);
		}	}
#endif
#endif
		reached[5][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC watersensor */
	case 2318: // STATE 1 - mutant_58.pml:129 - [((waterLevel==low))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][1] = 1;
		if (!((now.waterLevel==5)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2319: // STATE 2 - mutant_58.pml:131 - [waterLevel = low] (0:19:1 - 1)
		IfNotBlocked
		reached[4][2] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 5;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 5, 19) */
		reached[4][5] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2320: // STATE 3 - mutant_58.pml:132 - [waterLevel = medium] (0:19:1 - 1)
		IfNotBlocked
		reached[4][3] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 3;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 5, 19) */
		reached[4][5] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2321: // STATE 18 - mutant_58.pml:146 - [.(goto)] (0:19:0 - 10)
		IfNotBlocked
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 0 */
	case 2322: // STATE 6 - mutant_58.pml:134 - [((waterLevel==medium))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][6] = 1;
		if (!((now.waterLevel==3)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2323: // STATE 7 - mutant_58.pml:136 - [waterLevel = low] (0:19:1 - 1)
		IfNotBlocked
		reached[4][7] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 5;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 11, 19) */
		reached[4][11] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2324: // STATE 8 - mutant_58.pml:137 - [waterLevel = medium] (0:19:1 - 1)
		IfNotBlocked
		reached[4][8] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 3;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 11, 19) */
		reached[4][11] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2325: // STATE 9 - mutant_58.pml:138 - [waterLevel = high] (0:19:1 - 1)
		IfNotBlocked
		reached[4][9] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 6;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 11, 19) */
		reached[4][11] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2326: // STATE 12 - mutant_58.pml:140 - [((waterLevel==high))] (0:0:0 - 1)
		IfNotBlocked
		reached[4][12] = 1;
		if (!((now.waterLevel==6)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2327: // STATE 13 - mutant_58.pml:142 - [waterLevel = medium] (0:19:1 - 1)
		IfNotBlocked
		reached[4][13] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 3;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 16, 19) */
		reached[4][16] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2328: // STATE 14 - mutant_58.pml:143 - [waterLevel = high] (0:19:1 - 1)
		IfNotBlocked
		reached[4][14] = 1;
		(trpt+1)->bup.oval = now.waterLevel;
		now.waterLevel = 6;
#ifdef VAR_RANGES
		logval("waterLevel", now.waterLevel);
#endif
		;
		/* merge: .(goto)(19, 16, 19) */
		reached[4][16] = 1;
		;
		/* merge: .(goto)(19, 18, 19) */
		reached[4][18] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2329: // STATE 19 - mutant_58.pml:146 - [cLevel!waterLevel] (0:0:0 - 1)
		IfNotBlocked
		reached[4][19] = 1;
		if (q_len(now.cLevel))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cLevel);
		sprintf(simtmp, "%d", now.waterLevel); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cLevel, 0, now.waterLevel, 1);
		{ boq = now.cLevel; };
		_m = 2; goto P999; /* 0 */
	case 2330: // STATE 24 - mutant_58.pml:149 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[4][24] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC methanesensor */
	case 2331: // STATE 1 - mutant_58.pml:115 - [cMethane?_] (0:0:1 - 1)
		reached[3][1] = 1;
		if (boq != now.cMethane) continue;
		if (q_len(now.cMethane) == 0) continue;

		XX=1;
		(trpt+1)->bup.oval = qrecv(now.cMethane, XX-1, 0, 0);
		;
		qrecv(now.cMethane, XX-1, 0, 1);
		
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[32];
			sprintf(simvals, "%d?", now.cMethane);
		sprintf(simtmp, "%d", ((int)_)); strcat(simvals, simtmp);		}
#endif
		if (q_zero(now.cMethane))
		{	boq = -1;
#ifndef NOFAIR
			if (fairness
			&& !(trpt->o_pm&32)
			&& (now._a_t&2)
			&&  now._cnt[now._a_t&1] == II+2)
			{	now._cnt[now._a_t&1] -= 1;
#ifdef VERI
				if (II == 1)
					now._cnt[now._a_t&1] = 1;
#endif
#ifdef DEBUG
			printf("%3ld: proc %d fairness ", depth, II);
			printf("Rule 2: --cnt to %d (%d)\n",
				now._cnt[now._a_t&1], now._a_t);
#endif
				trpt->o_pm |= (32|64);
			}
#endif

		};
		_m = 4; goto P999; /* 0 */
	case 2332: // STATE 2 - mutant_58.pml:117 - [(methane)] (0:0:0 - 1)
		IfNotBlocked
		reached[3][2] = 1;
		if (!(((int)now.methane)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2333: // STATE 3 - mutant_58.pml:118 - [cMethane!methanestop] (0:0:0 - 1)
		IfNotBlocked
		reached[3][3] = 1;
		if (q_len(now.cMethane))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cMethane);
		sprintf(simtmp, "%d", 12); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cMethane, 0, 12, 1);
		{ boq = now.cMethane; };
		_m = 2; goto P999; /* 0 */
	case 2334: // STATE 4 - mutant_58.pml:119 - [(!(methane))] (0:0:0 - 1)
		IfNotBlocked
		reached[3][4] = 1;
		if (!( !(((int)now.methane))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2335: // STATE 5 - mutant_58.pml:120 - [cMethane!ready] (0:0:0 - 1)
		IfNotBlocked
		reached[3][5] = 1;
		if (q_len(now.cMethane))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cMethane);
		sprintf(simtmp, "%d", 2); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cMethane, 0, 2, 1);
		{ boq = now.cMethane; };
		_m = 2; goto P999; /* 0 */
	case 2336: // STATE 12 - mutant_58.pml:124 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[3][12] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC methanealarm */
	case 2337: // STATE 1 - mutant_58.pml:107 - [methane = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[2][1] = 1;
		(trpt+1)->bup.oval = ((int)now.methane);
		now.methane = 1;
#ifdef VAR_RANGES
		logval("methane", ((int)now.methane));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 2338: // STATE 2 - mutant_58.pml:108 - [cAlarm!alarm] (0:0:0 - 1)
		IfNotBlocked
		reached[2][2] = 1;
		if (q_len(now.cAlarm))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cAlarm);
		sprintf(simtmp, "%d", 11); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cAlarm, 0, 11, 1);
		{ boq = now.cAlarm; };
		_m = 2; goto P999; /* 0 */
	case 2339: // STATE 3 - mutant_58.pml:109 - [methane = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[2][3] = 1;
		(trpt+1)->bup.oval = ((int)now.methane);
		now.methane = 0;
#ifdef VAR_RANGES
		logval("methane", ((int)now.methane));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 2340: // STATE 7 - mutant_58.pml:111 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[2][7] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC user */
	case 2341: // STATE 1 - mutant_58.pml:98 - [uwants = start] (0:0:1 - 1)
		IfNotBlocked
		reached[1][1] = 1;
		(trpt+1)->bup.oval = now.uwants;
		now.uwants = 8;
#ifdef VAR_RANGES
		logval("uwants", now.uwants);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 2342: // STATE 2 - mutant_58.pml:99 - [uwants = stop] (0:0:1 - 1)
		IfNotBlocked
		reached[1][2] = 1;
		(trpt+1)->bup.oval = now.uwants;
		now.uwants = 13;
#ifdef VAR_RANGES
		logval("uwants", now.uwants);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 2343: // STATE 5 - mutant_58.pml:101 - [cCmd!uwants] (0:0:0 - 3)
		IfNotBlocked
		reached[1][5] = 1;
		if (q_len(now.cCmd))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cCmd);
		sprintf(simtmp, "%d", now.uwants); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cCmd, 0, now.uwants, 1);
		{ boq = now.cCmd; };
		_m = 2; goto P999; /* 0 */
	case 2344: // STATE 6 - mutant_58.pml:102 - [cCmd?_] (0:0:1 - 1)
		reached[1][6] = 1;
		if (boq != now.cCmd) continue;
		if (q_len(now.cCmd) == 0) continue;

		XX=1;
		(trpt+1)->bup.oval = qrecv(now.cCmd, XX-1, 0, 0);
		;
		qrecv(now.cCmd, XX-1, 0, 1);
		
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[32];
			sprintf(simvals, "%d?", now.cCmd);
		sprintf(simtmp, "%d", ((int)_)); strcat(simvals, simtmp);		}
#endif
		if (q_zero(now.cCmd))
		{	boq = -1;
#ifndef NOFAIR
			if (fairness
			&& !(trpt->o_pm&32)
			&& (now._a_t&2)
			&&  now._cnt[now._a_t&1] == II+2)
			{	now._cnt[now._a_t&1] -= 1;
#ifdef VERI
				if (II == 1)
					now._cnt[now._a_t&1] = 1;
#endif
#ifdef DEBUG
			printf("%3ld: proc %d fairness ", depth, II);
			printf("Rule 2: --cnt to %d (%d)\n",
				now._cnt[now._a_t&1], now._a_t);
#endif
				trpt->o_pm |= (32|64);
			}
#endif

		};
		_m = 4; goto P999; /* 0 */
	case 2345: // STATE 10 - mutant_58.pml:104 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[1][10] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC controller */
	case 2346: // STATE 1 - mutant_58.pml:18 - [cCmd?pcommand] (23:0:2 - 1)
		reached[0][1] = 1;
		if (boq != now.cCmd) continue;
		if (q_len(now.cCmd) == 0) continue;

		XX=1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->pcommand;
		;
		((P0 *)_this)->pcommand = qrecv(now.cCmd, XX-1, 0, 1);
#ifdef VAR_RANGES
		logval("controller:pcommand", ((P0 *)_this)->pcommand);
#endif
		;
		
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[32];
			sprintf(simvals, "%d?", now.cCmd);
		sprintf(simtmp, "%d", ((P0 *)_this)->pcommand); strcat(simvals, simtmp);		}
#endif
		if (q_zero(now.cCmd))
		{	boq = -1;
#ifndef NOFAIR
			if (fairness
			&& !(trpt->o_pm&32)
			&& (now._a_t&2)
			&&  now._cnt[now._a_t&1] == II+2)
			{	now._cnt[now._a_t&1] -= 1;
#ifdef VERI
				if (II == 1)
					now._cnt[now._a_t&1] = 1;
#endif
#ifdef DEBUG
			printf("%3ld: proc %d fairness ", depth, II);
			printf("Rule 2: --cnt to %d (%d)\n",
				now._cnt[now._a_t&1], now._a_t);
#endif
				trpt->o_pm |= (32|64);
			}
#endif

		};
		/* merge: readMsg = commandMsg(0, 2, 23) */
		reached[0][2] = 1;
		(trpt+1)->bup.ovals[1] = now.readMsg;
		now.readMsg = 9;
#ifdef VAR_RANGES
		logval("readMsg", now.readMsg);
#endif
		;
		_m = 4; goto P999; /* 1 */
	case 2347: // STATE 4 - mutant_58.pml:22 - [((pcommand==stop))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][4] = 1;
		if (!((((P0 *)_this)->pcommand==13)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: pcommand */  (trpt+1)->bup.oval = ((P0 *)_this)->pcommand;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->pcommand = 0;
		_m = 3; goto P999; /* 0 */
	case 2348: // STATE 5 - mutant_58.pml:25 - [((pstate==running))] (12:0:1 - 1)
		IfNotBlocked
		reached[0][5] = 1;
		if (!((now.pstate==10)))
			continue;
		/* merge: pumpOn = 0(0, 6, 12) */
		reached[0][6] = 1;
		(trpt+1)->bup.oval = ((int)now.pumpOn);
		now.pumpOn = 0;
#ifdef VAR_RANGES
		logval("pumpOn", ((int)now.pumpOn));
#endif
		;
		/* merge: .(goto)(0, 11, 12) */
		reached[0][11] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2349: // STATE 12 - mutant_58.pml:31 - [pstate = stopped] (0:0:1 - 3)
		IfNotBlocked
		reached[0][12] = 1;
		(trpt+1)->bup.oval = now.pstate;
		now.pstate = 4;
#ifdef VAR_RANGES
		logval("pstate", now.pstate);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 2350: // STATE 13 - mutant_58.pml:32 - [((pcommand==start))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][13] = 1;
		if (!((((P0 *)_this)->pcommand==8)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: pcommand */  (trpt+1)->bup.oval = ((P0 *)_this)->pcommand;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->pcommand = 0;
		_m = 3; goto P999; /* 0 */
	case 2351: // STATE 14 - mutant_58.pml:35 - [((pstate!=running))] (25:0:1 - 1)
		IfNotBlocked
		reached[0][14] = 1;
		if (!((now.pstate!=10)))
			continue;
		/* merge: pstate = ready(0, 15, 25) */
		reached[0][15] = 1;
		(trpt+1)->bup.oval = now.pstate;
		now.pstate = 2;
#ifdef VAR_RANGES
		logval("pstate", now.pstate);
#endif
		;
		/* merge: .(goto)(0, 20, 25) */
		reached[0][20] = 1;
		;
		/* merge: .(goto)(0, 24, 25) */
		reached[0][24] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 2352: // STATE 22 - mutant_58.pml:42 - [assert(0)] (0:0:0 - 1)
		IfNotBlocked
		reached[0][22] = 1;
		spin_assert(0, "0", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 2353: // STATE 25 - mutant_58.pml:44 - [cCmd!pstate] (0:0:0 - 6)
		IfNotBlocked
		reached[0][25] = 1;
		if (q_len(now.cCmd))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cCmd);
		sprintf(simtmp, "%d", now.pstate); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cCmd, 0, now.pstate, 1);
		{ boq = now.cCmd; };
		_m = 2; goto P999; /* 0 */
	case 2354: // STATE 26 - mutant_58.pml:46 - [cAlarm?_] (34:0:2 - 1)
		reached[0][26] = 1;
		if (boq != now.cAlarm) continue;
		if (q_len(now.cAlarm) == 0) continue;

		XX=1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = qrecv(now.cAlarm, XX-1, 0, 0);
		;
		qrecv(now.cAlarm, XX-1, 0, 1);
		
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[32];
			sprintf(simvals, "%d?", now.cAlarm);
		sprintf(simtmp, "%d", ((int)_)); strcat(simvals, simtmp);		}
#endif
		if (q_zero(now.cAlarm))
		{	boq = -1;
#ifndef NOFAIR
			if (fairness
			&& !(trpt->o_pm&32)
			&& (now._a_t&2)
			&&  now._cnt[now._a_t&1] == II+2)
			{	now._cnt[now._a_t&1] -= 1;
#ifdef VERI
				if (II == 1)
					now._cnt[now._a_t&1] = 1;
#endif
#ifdef DEBUG
			printf("%3ld: proc %d fairness ", depth, II);
			printf("Rule 2: --cnt to %d (%d)\n",
				now._cnt[now._a_t&1], now._a_t);
#endif
				trpt->o_pm |= (32|64);
			}
#endif

		};
		/* merge: readMsg = alarmMsg(0, 27, 34) */
		reached[0][27] = 1;
		(trpt+1)->bup.ovals[1] = now.readMsg;
		now.readMsg = 7;
#ifdef VAR_RANGES
		logval("readMsg", now.readMsg);
#endif
		;
		_m = 4; goto P999; /* 1 */
	case 2355: // STATE 29 - mutant_58.pml:51 - [((pstate==running))] (36:0:1 - 1)
		IfNotBlocked
		reached[0][29] = 1;
		if (!((now.pstate==10)))
			continue;
		/* merge: pumpOn = 0(0, 30, 36) */
		reached[0][30] = 1;
		(trpt+1)->bup.oval = ((int)now.pumpOn);
		now.pumpOn = 0;
#ifdef VAR_RANGES
		logval("pumpOn", ((int)now.pumpOn));
#endif
		;
		/* merge: .(goto)(0, 35, 36) */
		reached[0][35] = 1;
		;
		_m = 3; goto P999; /* 2 */
	case 2356: // STATE 36 - mutant_58.pml:57 - [pstate = methanestop] (0:0:1 - 3)
		IfNotBlocked
		reached[0][36] = 1;
		(trpt+1)->bup.oval = now.pstate;
		now.pstate = 12;
#ifdef VAR_RANGES
		logval("pstate", now.pstate);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 2357: // STATE 37 - mutant_58.pml:59 - [cLevel?level] (67:0:2 - 1)
		reached[0][37] = 1;
		if (boq != now.cLevel) continue;
		if (q_len(now.cLevel) == 0) continue;

		XX=1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->level;
		;
		((P0 *)_this)->level = qrecv(now.cLevel, XX-1, 0, 1);
#ifdef VAR_RANGES
		logval("controller:level", ((P0 *)_this)->level);
#endif
		;
		
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[32];
			sprintf(simvals, "%d?", now.cLevel);
		sprintf(simtmp, "%d", ((P0 *)_this)->level); strcat(simvals, simtmp);		}
#endif
		if (q_zero(now.cLevel))
		{	boq = -1;
#ifndef NOFAIR
			if (fairness
			&& !(trpt->o_pm&32)
			&& (now._a_t&2)
			&&  now._cnt[now._a_t&1] == II+2)
			{	now._cnt[now._a_t&1] -= 1;
#ifdef VERI
				if (II == 1)
					now._cnt[now._a_t&1] = 1;
#endif
#ifdef DEBUG
			printf("%3ld: proc %d fairness ", depth, II);
			printf("Rule 2: --cnt to %d (%d)\n",
				now._cnt[now._a_t&1], now._a_t);
#endif
				trpt->o_pm |= (32|64);
			}
#endif

		};
		/* merge: readMsg = levelMsg(0, 38, 67) */
		reached[0][38] = 1;
		(trpt+1)->bup.ovals[1] = now.readMsg;
		now.readMsg = 14;
#ifdef VAR_RANGES
		logval("readMsg", now.readMsg);
#endif
		;
		_m = 4; goto P999; /* 1 */
	case 2358: // STATE 40 - mutant_58.pml:63 - [((level==high))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][40] = 1;
		if (!((((P0 *)_this)->level==6)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: level */  (trpt+1)->bup.oval = ((P0 *)_this)->level;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->level = 0;
		_m = 3; goto P999; /* 0 */
	case 2359: // STATE 41 - mutant_58.pml:65 - [(((pstate==ready)||(pstate==lowstop)))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][41] = 1;
		if (!(((now.pstate==2)||(now.pstate==1))))
			continue;
		_m = 3; goto P999; /* 0 */
	case 2360: // STATE 42 - mutant_58.pml:67 - [cMethane!pstate] (0:0:0 - 1)
		IfNotBlocked
		reached[0][42] = 1;
		if (q_len(now.cMethane))
			continue;
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[64];
			sprintf(simvals, "%d!", now.cMethane);
		sprintf(simtmp, "%d", now.pstate); strcat(simvals, simtmp);		}
#endif
		
		qsend(now.cMethane, 0, now.pstate, 1);
		{ boq = now.cMethane; };
		_m = 2; goto P999; /* 0 */
	case 2361: // STATE 43 - mutant_58.pml:68 - [cMethane?pstate] (0:0:1 - 1)
		reached[0][43] = 1;
		if (boq != now.cMethane) continue;
		if (q_len(now.cMethane) == 0) continue;

		XX=1;
		(trpt+1)->bup.oval = now.pstate;
		;
		now.pstate = qrecv(now.cMethane, XX-1, 0, 1);
#ifdef VAR_RANGES
		logval("pstate", now.pstate);
#endif
		;
		
#ifdef HAS_CODE
		if (readtrail && gui) {
			char simtmp[32];
			sprintf(simvals, "%d?", now.cMethane);
		sprintf(simtmp, "%d", now.pstate); strcat(simvals, simtmp);		}
#endif
		if (q_zero(now.cMethane))
		{	boq = -1;
#ifndef NOFAIR
			if (fairness
			&& !(trpt->o_pm&32)
			&& (now._a_t&2)
			&&  now._cnt[now._a_t&1] == II+2)
			{	now._cnt[now._a_t&1] -= 1;
#ifdef VERI
				if (II == 1)
					now._cnt[now._a_t&1] = 1;
#endif
#ifdef DEBUG
			printf("%3ld: proc %d fairness ", depth, II);
			printf("Rule 2: --cnt to %d (%d)\n",
				now._cnt[now._a_t&1], now._a_t);
#endif
				trpt->o_pm |= (32|64);
			}
#endif

		};
		_m = 4; goto P999; /* 0 */
	case 2362: // STATE 44 - mutant_58.pml:70 - [((pstate==ready))] (69:0:2 - 1)
		IfNotBlocked
		reached[0][44] = 1;
		if (!((now.pstate==2)))
			continue;
		/* merge: pstate = running(69, 45, 69) */
		reached[0][45] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = now.pstate;
		now.pstate = 10;
#ifdef VAR_RANGES
		logval("pstate", now.pstate);
#endif
		;
		/* merge: pumpOn = 1(69, 46, 69) */
		reached[0][46] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.pumpOn);
		now.pumpOn = 1;
#ifdef VAR_RANGES
		logval("pumpOn", ((int)now.pumpOn));
#endif
		;
		/* merge: .(goto)(69, 50, 69) */
		reached[0][50] = 1;
		;
		/* merge: .(goto)(0, 55, 69) */
		reached[0][55] = 1;
		;
		/* merge: .(goto)(0, 68, 69) */
		reached[0][68] = 1;
		;
		/* merge: .(goto)(0, 70, 69) */
		reached[0][70] = 1;
		;
		_m = 3; goto P999; /* 6 */
	case 2363: // STATE 50 - mutant_58.pml:76 - [.(goto)] (0:69:0 - 2)
		IfNotBlocked
		reached[0][50] = 1;
		;
		/* merge: .(goto)(0, 55, 69) */
		reached[0][55] = 1;
		;
		/* merge: .(goto)(0, 68, 69) */
		reached[0][68] = 1;
		;
		/* merge: .(goto)(0, 70, 69) */
		reached[0][70] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 2364: // STATE 48 - mutant_58.pml:74 - [(1)] (69:0:0 - 1)
		IfNotBlocked
		reached[0][48] = 1;
		if (!(1))
			continue;
		/* merge: .(goto)(69, 50, 69) */
		reached[0][50] = 1;
		;
		/* merge: .(goto)(0, 55, 69) */
		reached[0][55] = 1;
		;
		/* merge: .(goto)(0, 68, 69) */
		reached[0][68] = 1;
		;
		/* merge: .(goto)(0, 70, 69) */
		reached[0][70] = 1;
		;
		_m = 3; goto P999; /* 4 */
	case 2365: // STATE 56 - mutant_58.pml:80 - [((level==low))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][56] = 1;
		if (!((((P0 *)_this)->level==5)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: level */  (trpt+1)->bup.oval = ((P0 *)_this)->level;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->level = 0;
		_m = 3; goto P999; /* 0 */
	case 2366: // STATE 57 - mutant_58.pml:83 - [((pstate==running))] (69:0:2 - 1)
		IfNotBlocked
		reached[0][57] = 1;
		if (!((now.pstate==10)))
			continue;
		/* merge: methane = 0(69, 58, 69) */
		reached[0][58] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.methane);
		now.methane = 0;
#ifdef VAR_RANGES
		logval("methane", ((int)now.methane));
#endif
		;
		/* merge: pstate = lowstop(69, 59, 69) */
		reached[0][59] = 1;
		(trpt+1)->bup.ovals[1] = now.pstate;
		now.pstate = 1;
#ifdef VAR_RANGES
		logval("pstate", now.pstate);
#endif
		;
		/* merge: .(goto)(0, 64, 69) */
		reached[0][64] = 1;
		;
		/* merge: .(goto)(0, 68, 69) */
		reached[0][68] = 1;
		;
		/* merge: .(goto)(0, 70, 69) */
		reached[0][70] = 1;
		;
		_m = 3; goto P999; /* 5 */
	case 2367: // STATE 65 - mutant_58.pml:90 - [((level==medium))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][65] = 1;
		if (!((((P0 *)_this)->level==3)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: level */  (trpt+1)->bup.oval = ((P0 *)_this)->level;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->level = 0;
		_m = 3; goto P999; /* 0 */
	case 2368: // STATE 72 - mutant_58.pml:94 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[0][72] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */
	case  _T5:	/* np_ */
		if (!((!(trpt->o_pm&4) && !(trpt->tau&128))))
			continue;
		/* else fall through */
	case  _T2:	/* true */
		_m = 3; goto P999;
#undef rand
	}

