#ifdef PEG
struct T_SRC {
	char *fl; int ln;
} T_SRC[NTRANS];

void
tr_2_src(int m, char *file, int ln)
{	T_SRC[m].fl = file;
	T_SRC[m].ln = ln;
}

void
putpeg(int n, int m)
{	printf("%5d	trans %4d ", m, n);
	printf("%s:%d\n",
		T_SRC[n].fl, T_SRC[n].ln);
}
#endif

void
settable(void)
{	Trans *T;
	Trans *settr(int, int, int, int, int, char *, int, int, int);

	trans = (Trans ***) emalloc(21*sizeof(Trans **));

	/* proctype 19: fairness */

	trans[19] = (Trans **) emalloc(128*sizeof(Trans *));

	trans[19][20]	= settr(13900,0,19,1,0,".(goto)", 0, 2, 0);
	T = trans[19][19] = settr(13899,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,7,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,9,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,11,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,13,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13899,0,15,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13899,0,17,0,0,"DO", 0, 2, 0);
	trans[19][1]	= settr(13881,0,26,3,0,"((!(executing[2])&&((states[2]==RUNNING)&&(commands[2]==CONTINUE))))", 1, 2, 0);
	trans[19][2]	= settr(13882,0,26,1,0,"goto accept_S9", 0, 2, 0);
	trans[19][3]	= settr(13883,0,69,4,0,"(!(executing[2]))", 1, 2, 0);
	trans[19][4]	= settr(13884,0,69,1,0,"goto T0_S94", 0, 2, 0);
	trans[19][5]	= settr(13885,0,78,1,0,"(1)", 0, 2, 0);
	trans[19][6]	= settr(13886,0,78,1,0,"goto T0_S62", 0, 2, 0);
	trans[19][7]	= settr(13887,0,38,5,0,"((!(executing[1])&&((states[1]==RUNNING)&&(commands[1]==CONTINUE))))", 1, 2, 0);
	trans[19][8]	= settr(13888,0,38,1,0,"goto accept_S178", 0, 2, 0);
	trans[19][9]	= settr(13889,0,92,6,0,"(!(executing[1]))", 1, 2, 0);
	trans[19][10]	= settr(13890,0,92,1,0,"goto T0_S263", 0, 2, 0);
	trans[19][11]	= settr(13891,0,101,1,0,"(1)", 0, 2, 0);
	trans[19][12]	= settr(13892,0,101,1,0,"goto T0_S231", 0, 2, 0);
	trans[19][13]	= settr(13893,0,50,7,0,"((!(executing[0])&&((states[0]==RUNNING)&&(commands[0]==CONTINUE))))", 1, 2, 0);
	trans[19][14]	= settr(13894,0,50,1,0,"goto accept_S347", 0, 2, 0);
	trans[19][15]	= settr(13895,0,115,8,0,"(!(executing[0]))", 1, 2, 0);
	trans[19][16]	= settr(13896,0,115,1,0,"goto T0_S432", 0, 2, 0);
	trans[19][17]	= settr(13897,0,124,1,0,"(1)", 0, 2, 0);
	trans[19][18]	= settr(13898,0,124,1,0,"goto T0_S400", 0, 2, 0);
	trans[19][21]	= settr(13901,0,26,1,0,"break", 0, 2, 0);
	trans[19][27]	= settr(13907,0,26,1,0,".(goto)", 0, 2, 0);
	T = trans[19][26] = settr(13906,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13906,0,22,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13906,0,24,0,0,"DO", 0, 2, 0);
	trans[19][22]	= settr(13902,0,62,9,0,"((!(executing[2])&&((states[2]==RUNNING)&&(commands[2]==CONTINUE))))", 1, 2, 0);
	trans[19][23]	= settr(13903,0,62,1,0,"goto T0_S9", 0, 2, 0);
	trans[19][24]	= settr(13904,0,69,10,0,"(!(executing[2]))", 1, 2, 0);
	trans[19][25]	= settr(13905,0,69,1,0,"goto T0_S94", 0, 2, 0);
	trans[19][28]	= settr(13908,0,31,1,0,"break", 0, 2, 0);
	trans[19][32]	= settr(13912,0,31,1,0,".(goto)", 0, 2, 0);
	T = trans[19][31] = settr(13911,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13911,0,29,0,0,"DO", 0, 2, 0);
	trans[19][29]	= settr(13909,0,69,11,0,"(!(executing[2]))", 1, 2, 0);
	trans[19][30]	= settr(13910,0,69,1,0,"goto T0_S94", 0, 2, 0);
	trans[19][33]	= settr(13913,0,38,1,0,"break", 0, 2, 0);
	trans[19][39]	= settr(13919,0,38,1,0,".(goto)", 0, 2, 0);
	T = trans[19][38] = settr(13918,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13918,0,34,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13918,0,36,0,0,"DO", 0, 2, 0);
	trans[19][34]	= settr(13914,0,85,12,0,"((!(executing[1])&&((states[1]==RUNNING)&&(commands[1]==CONTINUE))))", 1, 2, 0);
	trans[19][35]	= settr(13915,0,85,1,0,"goto T0_S178", 0, 2, 0);
	trans[19][36]	= settr(13916,0,92,13,0,"(!(executing[1]))", 1, 2, 0);
	trans[19][37]	= settr(13917,0,92,1,0,"goto T0_S263", 0, 2, 0);
	trans[19][40]	= settr(13920,0,43,1,0,"break", 0, 2, 0);
	trans[19][44]	= settr(13924,0,43,1,0,".(goto)", 0, 2, 0);
	T = trans[19][43] = settr(13923,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13923,0,41,0,0,"DO", 0, 2, 0);
	trans[19][41]	= settr(13921,0,92,14,0,"(!(executing[1]))", 1, 2, 0);
	trans[19][42]	= settr(13922,0,92,1,0,"goto T0_S263", 0, 2, 0);
	trans[19][45]	= settr(13925,0,50,1,0,"break", 0, 2, 0);
	trans[19][51]	= settr(13931,0,50,1,0,".(goto)", 0, 2, 0);
	T = trans[19][50] = settr(13930,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13930,0,46,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13930,0,48,0,0,"DO", 0, 2, 0);
	trans[19][46]	= settr(13926,0,108,15,0,"((!(executing[0])&&((states[0]==RUNNING)&&(commands[0]==CONTINUE))))", 1, 2, 0);
	trans[19][47]	= settr(13927,0,108,1,0,"goto T0_S347", 0, 2, 0);
	trans[19][48]	= settr(13928,0,115,16,0,"(!(executing[0]))", 1, 2, 0);
	trans[19][49]	= settr(13929,0,115,1,0,"goto T0_S432", 0, 2, 0);
	trans[19][52]	= settr(13932,0,55,1,0,"break", 0, 2, 0);
	trans[19][56]	= settr(13936,0,55,1,0,".(goto)", 0, 2, 0);
	T = trans[19][55] = settr(13935,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13935,0,53,0,0,"DO", 0, 2, 0);
	trans[19][53]	= settr(13933,0,115,17,0,"(!(executing[0]))", 1, 2, 0);
	trans[19][54]	= settr(13934,0,115,1,0,"goto T0_S432", 0, 2, 0);
	trans[19][57]	= settr(13937,0,62,1,0,"break", 0, 2, 0);
	trans[19][63]	= settr(13943,0,62,1,0,".(goto)", 0, 2, 0);
	T = trans[19][62] = settr(13942,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13942,0,58,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13942,0,60,0,0,"DO", 0, 2, 0);
	trans[19][58]	= settr(13938,0,26,18,0,"((!(executing[2])&&((states[2]==RUNNING)&&(commands[2]==CONTINUE))))", 1, 2, 0);
	trans[19][59]	= settr(13939,0,26,1,0,"goto accept_S9", 0, 2, 0);
	trans[19][60]	= settr(13940,0,69,19,0,"(!(executing[2]))", 1, 2, 0);
	trans[19][61]	= settr(13941,0,69,1,0,"goto T0_S94", 0, 2, 0);
	trans[19][64]	= settr(13944,0,69,1,0,"break", 0, 2, 0);
	trans[19][70]	= settr(13950,0,69,1,0,".(goto)", 0, 2, 0);
	T = trans[19][69] = settr(13949,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13949,0,65,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13949,0,67,0,0,"DO", 0, 2, 0);
	trans[19][65]	= settr(13945,0,69,20,0,"(!(executing[2]))", 1, 2, 0);
	trans[19][66]	= settr(13946,0,69,1,0,"goto T0_S94", 0, 2, 0);
	trans[19][67]	= settr(13947,0,31,21,0,"((!(executing[2])&&((states[2]==RUNNING)&&(commands[2]==CONTINUE))))", 1, 2, 0);
	trans[19][68]	= settr(13948,0,31,1,0,"goto accept_S94", 0, 2, 0);
	trans[19][71]	= settr(13951,0,78,1,0,"break", 0, 2, 0);
	trans[19][79]	= settr(13959,0,78,1,0,".(goto)", 0, 2, 0);
	T = trans[19][78] = settr(13958,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13958,0,72,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13958,0,74,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13958,0,76,0,0,"DO", 0, 2, 0);
	trans[19][72]	= settr(13952,0,69,22,0,"(!(executing[2]))", 1, 2, 0);
	trans[19][73]	= settr(13953,0,69,1,0,"goto T0_S94", 0, 2, 0);
	trans[19][74]	= settr(13954,0,78,1,0,"(1)", 0, 2, 0);
	trans[19][75]	= settr(13955,0,78,1,0,"goto T0_S62", 0, 2, 0);
	trans[19][76]	= settr(13956,0,31,23,0,"((!(executing[2])&&((states[2]==RUNNING)&&(commands[2]==CONTINUE))))", 1, 2, 0);
	trans[19][77]	= settr(13957,0,31,1,0,"goto accept_S94", 0, 2, 0);
	trans[19][80]	= settr(13960,0,85,1,0,"break", 0, 2, 0);
	trans[19][86]	= settr(13966,0,85,1,0,".(goto)", 0, 2, 0);
	T = trans[19][85] = settr(13965,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13965,0,81,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13965,0,83,0,0,"DO", 0, 2, 0);
	trans[19][81]	= settr(13961,0,38,24,0,"((!(executing[1])&&((states[1]==RUNNING)&&(commands[1]==CONTINUE))))", 1, 2, 0);
	trans[19][82]	= settr(13962,0,38,1,0,"goto accept_S178", 0, 2, 0);
	trans[19][83]	= settr(13963,0,92,25,0,"(!(executing[1]))", 1, 2, 0);
	trans[19][84]	= settr(13964,0,92,1,0,"goto T0_S263", 0, 2, 0);
	trans[19][87]	= settr(13967,0,92,1,0,"break", 0, 2, 0);
	trans[19][93]	= settr(13973,0,92,1,0,".(goto)", 0, 2, 0);
	T = trans[19][92] = settr(13972,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13972,0,88,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13972,0,90,0,0,"DO", 0, 2, 0);
	trans[19][88]	= settr(13968,0,92,26,0,"(!(executing[1]))", 1, 2, 0);
	trans[19][89]	= settr(13969,0,92,1,0,"goto T0_S263", 0, 2, 0);
	trans[19][90]	= settr(13970,0,43,27,0,"((!(executing[1])&&((states[1]==RUNNING)&&(commands[1]==CONTINUE))))", 1, 2, 0);
	trans[19][91]	= settr(13971,0,43,1,0,"goto accept_S263", 0, 2, 0);
	trans[19][94]	= settr(13974,0,101,1,0,"break", 0, 2, 0);
	trans[19][102]	= settr(13982,0,101,1,0,".(goto)", 0, 2, 0);
	T = trans[19][101] = settr(13981,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13981,0,95,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13981,0,97,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13981,0,99,0,0,"DO", 0, 2, 0);
	trans[19][95]	= settr(13975,0,92,28,0,"(!(executing[1]))", 1, 2, 0);
	trans[19][96]	= settr(13976,0,92,1,0,"goto T0_S263", 0, 2, 0);
	trans[19][97]	= settr(13977,0,101,1,0,"(1)", 0, 2, 0);
	trans[19][98]	= settr(13978,0,101,1,0,"goto T0_S231", 0, 2, 0);
	trans[19][99]	= settr(13979,0,43,29,0,"((!(executing[1])&&((states[1]==RUNNING)&&(commands[1]==CONTINUE))))", 1, 2, 0);
	trans[19][100]	= settr(13980,0,43,1,0,"goto accept_S263", 0, 2, 0);
	trans[19][103]	= settr(13983,0,108,1,0,"break", 0, 2, 0);
	trans[19][109]	= settr(13989,0,108,1,0,".(goto)", 0, 2, 0);
	T = trans[19][108] = settr(13988,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13988,0,104,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13988,0,106,0,0,"DO", 0, 2, 0);
	trans[19][104]	= settr(13984,0,50,30,0,"((!(executing[0])&&((states[0]==RUNNING)&&(commands[0]==CONTINUE))))", 1, 2, 0);
	trans[19][105]	= settr(13985,0,50,1,0,"goto accept_S347", 0, 2, 0);
	trans[19][106]	= settr(13986,0,115,31,0,"(!(executing[0]))", 1, 2, 0);
	trans[19][107]	= settr(13987,0,115,1,0,"goto T0_S432", 0, 2, 0);
	trans[19][110]	= settr(13990,0,115,1,0,"break", 0, 2, 0);
	trans[19][116]	= settr(13996,0,115,1,0,".(goto)", 0, 2, 0);
	T = trans[19][115] = settr(13995,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13995,0,111,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13995,0,113,0,0,"DO", 0, 2, 0);
	trans[19][111]	= settr(13991,0,115,32,0,"(!(executing[0]))", 1, 2, 0);
	trans[19][112]	= settr(13992,0,115,1,0,"goto T0_S432", 0, 2, 0);
	trans[19][113]	= settr(13993,0,55,33,0,"((!(executing[0])&&((states[0]==RUNNING)&&(commands[0]==CONTINUE))))", 1, 2, 0);
	trans[19][114]	= settr(13994,0,55,1,0,"goto accept_S432", 0, 2, 0);
	trans[19][117]	= settr(13997,0,124,1,0,"break", 0, 2, 0);
	trans[19][125]	= settr(14005,0,124,1,0,".(goto)", 0, 2, 0);
	T = trans[19][124] = settr(14004,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(14004,0,118,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(14004,0,120,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(14004,0,122,0,0,"DO", 0, 2, 0);
	trans[19][118]	= settr(13998,0,115,34,0,"(!(executing[0]))", 1, 2, 0);
	trans[19][119]	= settr(13999,0,115,1,0,"goto T0_S432", 0, 2, 0);
	trans[19][120]	= settr(14000,0,124,1,0,"(1)", 0, 2, 0);
	trans[19][121]	= settr(14001,0,124,1,0,"goto T0_S400", 0, 2, 0);
	trans[19][122]	= settr(14002,0,55,35,0,"((!(executing[0])&&((states[0]==RUNNING)&&(commands[0]==CONTINUE))))", 1, 2, 0);
	trans[19][123]	= settr(14003,0,55,1,0,"goto accept_S432", 0, 2, 0);
	trans[19][126]	= settr(14006,0,127,1,0,"break", 0, 2, 0);
	trans[19][127]	= settr(14007,0,0,36,36,"-end-", 0, 3500, 0);

	/* proctype 18: liveness */

	trans[18] = (Trans **) emalloc(188*sizeof(Trans *));

	trans[18][24]	= settr(13717,0,23,1,0,".(goto)", 0, 2, 0);
	T = trans[18][23] = settr(13716,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,7,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,9,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,11,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,13,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,15,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,17,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13716,0,19,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13716,0,21,0,0,"DO", 0, 2, 0);
	trans[18][1]	= settr(13694,0,36,37,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][2]	= settr(13695,0,36,1,0,"goto accept_S8", 0, 2, 0);
	trans[18][3]	= settr(13696,0,51,38,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][4]	= settr(13697,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][5]	= settr(13698,0,79,39,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][6]	= settr(13699,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][7]	= settr(13700,0,56,40,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][8]	= settr(13701,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][9]	= settr(13702,0,137,41,0,"(!(((states[0]==STOPPING)||(states[0]==ABORTING))))", 1, 2, 0);
	trans[18][10]	= settr(13703,0,137,1,0,"goto T0_S84", 0, 2, 0);
	trans[18][11]	= settr(13704,0,69,42,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][12]	= settr(13705,0,69,1,0,"goto accept_S112", 0, 2, 0);
	trans[18][13]	= settr(13706,0,92,43,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][14]	= settr(13707,0,92,1,0,"goto accept_S149", 0, 2, 0);
	trans[18][15]	= settr(13708,0,99,44,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][16]	= settr(13709,0,99,1,0,"goto accept_S181", 0, 2, 0);
	trans[18][17]	= settr(13710,0,106,45,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][18]	= settr(13711,0,106,1,0,"goto accept_S186", 0, 2, 0);
	trans[18][19]	= settr(13712,0,113,46,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][20]	= settr(13713,0,113,1,0,"goto accept_S191", 0, 2, 0);
	trans[18][21]	= settr(13714,0,23,47,0,"(!(((states[0]==STOPPING)||(states[0]==ABORTING))))", 1, 2, 0);
	trans[18][22]	= settr(13715,0,23,1,0,"goto T0_init", 0, 2, 0);
	trans[18][25]	= settr(13718,0,36,1,0,"break", 0, 2, 0);
	trans[18][37]	= settr(13730,0,36,1,0,".(goto)", 0, 2, 0);
	T = trans[18][36] = settr(13729,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13729,0,26,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13729,0,28,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13729,0,30,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13729,0,32,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13729,0,34,0,0,"DO", 0, 2, 0);
	trans[18][26]	= settr(13719,0,126,48,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][27]	= settr(13720,0,126,1,0,"goto T0_S8", 0, 2, 0);
	trans[18][28]	= settr(13721,0,51,49,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][29]	= settr(13722,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][30]	= settr(13723,0,41,50,0,"(((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][31]	= settr(13724,0,41,1,0,"goto accept_S25", 0, 2, 0);
	trans[18][32]	= settr(13725,0,46,51,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][33]	= settr(13726,0,46,1,0,"goto accept_S36", 0, 2, 0);
	trans[18][34]	= settr(13727,0,170,52,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][35]	= settr(13728,0,170,1,0,"goto T0_S181", 0, 2, 0);
	trans[18][38]	= settr(13731,0,41,1,0,"break", 0, 2, 0);
	trans[18][42]	= settr(13735,0,41,1,0,".(goto)", 0, 2, 0);
	T = trans[18][41] = settr(13734,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13734,0,39,0,0,"DO", 0, 2, 0);
	trans[18][39]	= settr(13732,0,41,53,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))))", 1, 2, 0);
	trans[18][40]	= settr(13733,0,41,1,0,"goto accept_S25", 0, 2, 0);
	trans[18][43]	= settr(13736,0,46,1,0,"break", 0, 2, 0);
	trans[18][47]	= settr(13740,0,46,1,0,".(goto)", 0, 2, 0);
	T = trans[18][46] = settr(13739,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13739,0,44,0,0,"DO", 0, 2, 0);
	trans[18][44]	= settr(13737,0,46,54,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))))", 1, 2, 0);
	trans[18][45]	= settr(13738,0,46,1,0,"goto accept_S36", 0, 2, 0);
	trans[18][48]	= settr(13741,0,51,1,0,"break", 0, 2, 0);
	trans[18][52]	= settr(13745,0,51,1,0,".(goto)", 0, 2, 0);
	T = trans[18][51] = settr(13744,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13744,0,49,0,0,"DO", 0, 2, 0);
	trans[18][49]	= settr(13742,0,51,55,0,"(!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))", 1, 2, 0);
	trans[18][50]	= settr(13743,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][53]	= settr(13746,0,56,1,0,"break", 0, 2, 0);
	trans[18][57]	= settr(13750,0,56,1,0,".(goto)", 0, 2, 0);
	T = trans[18][56] = settr(13749,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13749,0,54,0,0,"DO", 0, 2, 0);
	trans[18][54]	= settr(13747,0,56,56,0,"(!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0])))", 1, 2, 0);
	trans[18][55]	= settr(13748,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][58]	= settr(13751,0,69,1,0,"break", 0, 2, 0);
	trans[18][70]	= settr(13763,0,69,1,0,".(goto)", 0, 2, 0);
	T = trans[18][69] = settr(13762,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13762,0,59,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13762,0,61,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13762,0,63,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13762,0,65,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13762,0,67,0,0,"DO", 0, 2, 0);
	trans[18][59]	= settr(13752,0,41,57,0,"(((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][60]	= settr(13753,0,41,1,0,"goto accept_S25", 0, 2, 0);
	trans[18][61]	= settr(13754,0,150,58,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][62]	= settr(13755,0,150,1,0,"goto T0_S112", 0, 2, 0);
	trans[18][63]	= settr(13756,0,79,59,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][64]	= settr(13757,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][65]	= settr(13758,0,74,60,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][66]	= settr(13759,0,74,1,0,"goto accept_S126", 0, 2, 0);
	trans[18][67]	= settr(13760,0,177,61,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][68]	= settr(13761,0,177,1,0,"goto T0_S186", 0, 2, 0);
	trans[18][71]	= settr(13764,0,74,1,0,"break", 0, 2, 0);
	trans[18][75]	= settr(13768,0,74,1,0,".(goto)", 0, 2, 0);
	T = trans[18][74] = settr(13767,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13767,0,72,0,0,"DO", 0, 2, 0);
	trans[18][72]	= settr(13765,0,74,62,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))))", 1, 2, 0);
	trans[18][73]	= settr(13766,0,74,1,0,"goto accept_S126", 0, 2, 0);
	trans[18][76]	= settr(13769,0,79,1,0,"break", 0, 2, 0);
	trans[18][80]	= settr(13773,0,79,1,0,".(goto)", 0, 2, 0);
	T = trans[18][79] = settr(13772,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13772,0,77,0,0,"DO", 0, 2, 0);
	trans[18][77]	= settr(13770,0,79,63,0,"(!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))", 1, 2, 0);
	trans[18][78]	= settr(13771,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][81]	= settr(13774,0,92,1,0,"break", 0, 2, 0);
	trans[18][93]	= settr(13786,0,92,1,0,".(goto)", 0, 2, 0);
	T = trans[18][92] = settr(13785,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13785,0,82,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13785,0,84,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13785,0,86,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13785,0,88,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13785,0,90,0,0,"DO", 0, 2, 0);
	trans[18][82]	= settr(13775,0,46,64,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][83]	= settr(13776,0,46,1,0,"goto accept_S36", 0, 2, 0);
	trans[18][84]	= settr(13777,0,56,65,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][85]	= settr(13778,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][86]	= settr(13779,0,74,66,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][87]	= settr(13780,0,74,1,0,"goto accept_S126", 0, 2, 0);
	trans[18][88]	= settr(13781,0,163,67,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][89]	= settr(13782,0,163,1,0,"goto T0_S149", 0, 2, 0);
	trans[18][90]	= settr(13783,0,184,68,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][91]	= settr(13784,0,184,1,0,"goto T0_S191", 0, 2, 0);
	trans[18][94]	= settr(13787,0,99,1,0,"break", 0, 2, 0);
	trans[18][100]	= settr(13793,0,99,1,0,".(goto)", 0, 2, 0);
	T = trans[18][99] = settr(13792,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13792,0,95,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13792,0,97,0,0,"DO", 0, 2, 0);
	trans[18][95]	= settr(13788,0,51,69,0,"(!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))", 1, 2, 0);
	trans[18][96]	= settr(13789,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][97]	= settr(13790,0,170,70,0,"(!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))", 1, 2, 0);
	trans[18][98]	= settr(13791,0,170,1,0,"goto T0_S181", 0, 2, 0);
	trans[18][101]	= settr(13794,0,106,1,0,"break", 0, 2, 0);
	trans[18][107]	= settr(13800,0,106,1,0,".(goto)", 0, 2, 0);
	T = trans[18][106] = settr(13799,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13799,0,102,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13799,0,104,0,0,"DO", 0, 2, 0);
	trans[18][102]	= settr(13795,0,79,71,0,"(!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))", 1, 2, 0);
	trans[18][103]	= settr(13796,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][104]	= settr(13797,0,177,72,0,"(!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))", 1, 2, 0);
	trans[18][105]	= settr(13798,0,177,1,0,"goto T0_S186", 0, 2, 0);
	trans[18][108]	= settr(13801,0,113,1,0,"break", 0, 2, 0);
	trans[18][114]	= settr(13807,0,113,1,0,".(goto)", 0, 2, 0);
	T = trans[18][113] = settr(13806,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13806,0,109,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13806,0,111,0,0,"DO", 0, 2, 0);
	trans[18][109]	= settr(13802,0,56,73,0,"(!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0])))", 1, 2, 0);
	trans[18][110]	= settr(13803,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][111]	= settr(13804,0,184,74,0,"(!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0])))", 1, 2, 0);
	trans[18][112]	= settr(13805,0,184,1,0,"goto T0_S191", 0, 2, 0);
	trans[18][115]	= settr(13808,0,126,1,0,"break", 0, 2, 0);
	trans[18][127]	= settr(13820,0,126,1,0,".(goto)", 0, 2, 0);
	T = trans[18][126] = settr(13819,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13819,0,116,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13819,0,118,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13819,0,120,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13819,0,122,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13819,0,124,0,0,"DO", 0, 2, 0);
	trans[18][116]	= settr(13809,0,36,75,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][117]	= settr(13810,0,36,1,0,"goto accept_S8", 0, 2, 0);
	trans[18][118]	= settr(13811,0,51,76,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][119]	= settr(13812,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][120]	= settr(13813,0,41,77,0,"(((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][121]	= settr(13814,0,41,1,0,"goto accept_S25", 0, 2, 0);
	trans[18][122]	= settr(13815,0,46,78,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][123]	= settr(13816,0,46,1,0,"goto accept_S36", 0, 2, 0);
	trans[18][124]	= settr(13817,0,99,79,0,"((!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][125]	= settr(13818,0,99,1,0,"goto accept_S181", 0, 2, 0);
	trans[18][128]	= settr(13821,0,137,1,0,"break", 0, 2, 0);
	trans[18][138]	= settr(13831,0,137,1,0,".(goto)", 0, 2, 0);
	T = trans[18][137] = settr(13830,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13830,0,129,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13830,0,131,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13830,0,133,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13830,0,135,0,0,"DO", 0, 2, 0);
	trans[18][129]	= settr(13822,0,51,80,0,"(!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))", 1, 2, 0);
	trans[18][130]	= settr(13823,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][131]	= settr(13824,0,79,81,0,"(!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))", 1, 2, 0);
	trans[18][132]	= settr(13825,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][133]	= settr(13826,0,56,82,0,"(!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0])))", 1, 2, 0);
	trans[18][134]	= settr(13827,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][135]	= settr(13828,0,137,1,0,"(1)", 0, 2, 0);
	trans[18][136]	= settr(13829,0,137,1,0,"goto T0_S84", 0, 2, 0);
	trans[18][139]	= settr(13832,0,150,1,0,"break", 0, 2, 0);
	trans[18][151]	= settr(13844,0,150,1,0,".(goto)", 0, 2, 0);
	T = trans[18][150] = settr(13843,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13843,0,140,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13843,0,142,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13843,0,144,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13843,0,146,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13843,0,148,0,0,"DO", 0, 2, 0);
	trans[18][140]	= settr(13833,0,41,83,0,"(((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][141]	= settr(13834,0,41,1,0,"goto accept_S25", 0, 2, 0);
	trans[18][142]	= settr(13835,0,69,84,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][143]	= settr(13836,0,69,1,0,"goto accept_S112", 0, 2, 0);
	trans[18][144]	= settr(13837,0,79,85,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][145]	= settr(13838,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][146]	= settr(13839,0,74,86,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][147]	= settr(13840,0,74,1,0,"goto accept_S126", 0, 2, 0);
	trans[18][148]	= settr(13841,0,106,87,0,"((!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][149]	= settr(13842,0,106,1,0,"goto accept_S186", 0, 2, 0);
	trans[18][152]	= settr(13845,0,163,1,0,"break", 0, 2, 0);
	trans[18][164]	= settr(13857,0,163,1,0,".(goto)", 0, 2, 0);
	T = trans[18][163] = settr(13856,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13856,0,153,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13856,0,155,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13856,0,157,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13856,0,159,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13856,0,161,0,0,"DO", 0, 2, 0);
	trans[18][153]	= settr(13846,0,46,88,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][154]	= settr(13847,0,46,1,0,"goto accept_S36", 0, 2, 0);
	trans[18][155]	= settr(13848,0,56,89,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][156]	= settr(13849,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][157]	= settr(13850,0,74,90,0,"(((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][158]	= settr(13851,0,74,1,0,"goto accept_S126", 0, 2, 0);
	trans[18][159]	= settr(13852,0,92,91,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][160]	= settr(13853,0,92,1,0,"goto accept_S149", 0, 2, 0);
	trans[18][161]	= settr(13854,0,113,92,0,"((!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0]))&&!(((states[0]==STOPPING)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[18][162]	= settr(13855,0,113,1,0,"goto accept_S191", 0, 2, 0);
	trans[18][165]	= settr(13858,0,170,1,0,"break", 0, 2, 0);
	trans[18][171]	= settr(13864,0,170,1,0,".(goto)", 0, 2, 0);
	T = trans[18][170] = settr(13863,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13863,0,166,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13863,0,168,0,0,"DO", 0, 2, 0);
	trans[18][166]	= settr(13859,0,51,93,0,"(!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))", 1, 2, 0);
	trans[18][167]	= settr(13860,0,51,1,0,"goto accept_S87", 0, 2, 0);
	trans[18][168]	= settr(13861,0,99,94,0,"(!((!(((states[2]==RUNNING)&&(commands[2]==CONTINUE)))||executing[2])))", 1, 2, 0);
	trans[18][169]	= settr(13862,0,99,1,0,"goto accept_S181", 0, 2, 0);
	trans[18][172]	= settr(13865,0,177,1,0,"break", 0, 2, 0);
	trans[18][178]	= settr(13871,0,177,1,0,".(goto)", 0, 2, 0);
	T = trans[18][177] = settr(13870,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13870,0,173,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13870,0,175,0,0,"DO", 0, 2, 0);
	trans[18][173]	= settr(13866,0,79,95,0,"(!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))", 1, 2, 0);
	trans[18][174]	= settr(13867,0,79,1,0,"goto accept_S132", 0, 2, 0);
	trans[18][175]	= settr(13868,0,106,96,0,"(!((!(((states[1]==RUNNING)&&(commands[1]==CONTINUE)))||executing[1])))", 1, 2, 0);
	trans[18][176]	= settr(13869,0,106,1,0,"goto accept_S186", 0, 2, 0);
	trans[18][179]	= settr(13872,0,184,1,0,"break", 0, 2, 0);
	trans[18][185]	= settr(13878,0,184,1,0,".(goto)", 0, 2, 0);
	T = trans[18][184] = settr(13877,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13877,0,180,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13877,0,182,0,0,"DO", 0, 2, 0);
	trans[18][180]	= settr(13873,0,56,97,0,"(!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0])))", 1, 2, 0);
	trans[18][181]	= settr(13874,0,56,1,0,"goto accept_S93", 0, 2, 0);
	trans[18][182]	= settr(13875,0,113,98,0,"(!((!(((states[0]==RUNNING)&&(commands[0]==CONTINUE)))||executing[0])))", 1, 2, 0);
	trans[18][183]	= settr(13876,0,113,1,0,"goto accept_S191", 0, 2, 0);
	trans[18][186]	= settr(13879,0,187,1,0,"break", 0, 2, 0);
	trans[18][187]	= settr(13880,0,0,99,99,"-end-", 0, 3500, 0);

	/* proctype 17: supervisor_halts_last */

	trans[17] = (Trans **) emalloc(14*sizeof(Trans *));

	trans[17][6]	= settr(13686,0,5,1,0,".(goto)", 0, 2, 0);
	T = trans[17][5] = settr(13685,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13685,0,1,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13685,0,3,0,0,"DO", 0, 2, 0);
	trans[17][1]	= settr(13681,0,10,100,0,"((!(!(((states[0]==STOPPING)||(states[0]==ABORTING))))&&!(((((states[1]==STOPPED)||(states[1]==ABORTED))||(states[1]==0))&&(((states[2]==STOPPED)||(states[2]==ABORTED))||(states[2]==0))))))", 1, 2, 0);
	trans[17][2]	= settr(13682,0,10,1,0,"goto accept_S4", 0, 2, 0);
	trans[17][3]	= settr(13683,0,5,1,0,"(1)", 0, 2, 0);
	trans[17][4]	= settr(13684,0,5,1,0,"goto T0_init", 0, 2, 0);
	trans[17][7]	= settr(13687,0,10,1,0,"break", 0, 2, 0);
	trans[17][11]	= settr(13691,0,10,1,0,".(goto)", 0, 2, 0);
	T = trans[17][10] = settr(13690,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13690,0,8,0,0,"DO", 0, 2, 0);
	trans[17][8]	= settr(13688,0,10,101,0,"(!(((((states[1]==STOPPED)||(states[1]==ABORTED))||(states[1]==0))&&(((states[2]==STOPPED)||(states[2]==ABORTED))||(states[2]==0)))))", 1, 2, 0);
	trans[17][9]	= settr(13689,0,10,1,0,"goto accept_S4", 0, 2, 0);
	trans[17][12]	= settr(13692,0,13,1,0,"break", 0, 2, 0);
	trans[17][13]	= settr(13693,0,0,102,102,"-end-", 0, 3500, 0);

	/* proctype 16: supervisor_never_aborts */

	trans[16] = (Trans **) emalloc(11*sizeof(Trans *));

	trans[16][7]	= settr(13677,0,6,1,0,".(goto)", 0, 2, 0);
	T = trans[16][6] = settr(13676,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13676,0,3,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13676,0,4,0,0,"DO", 0, 2, 0);
	T = trans[ 16][3] = settr(13673,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13673,2,1,0,0,"ATOMIC", 1, 2, 0);
	trans[16][1]	= settr(13671,0,6,103,103,"(((states[0]==ABORTED)||(commands[0]==ABORT)))", 1, 2, 0); /* m: 2 -> 6,0 */
	reached16[2] = 1;
	trans[16][2]	= settr(0,0,0,0,0,"assert(!(((states[0]==ABORTED)||(commands[0]==ABORT))))",0,0,0);
	trans[16][4]	= settr(13674,0,6,1,0,"(1)", 0, 2, 0);
	trans[16][5]	= settr(13675,0,6,1,0,"goto T0_init", 0, 2, 0);
	trans[16][8]	= settr(13678,0,9,1,0,"break", 0, 2, 0);
	trans[16][9]	= settr(13679,0,10,1,0,"(1)", 0, 2, 0);
	trans[16][10]	= settr(13680,0,0,104,104,"-end-", 0, 3500, 0);

	/* proctype 15: supervisor_stops_after_some_workers_abort */

	trans[15] = (Trans **) emalloc(23*sizeof(Trans *));

	trans[15][8]	= settr(13656,0,7,1,0,".(goto)", 0, 2, 0);
	T = trans[15][7] = settr(13655,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13655,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13655,0,3,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13655,0,5,0,0,"DO", 0, 2, 0);
	trans[15][1]	= settr(13649,0,12,105,0,"(((!(!(((states[1]==ABORTED)||(states[2]==ABORTED))))&&!((states[0]==PAUSED)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[15][2]	= settr(13650,0,12,1,0,"goto accept_S19", 0, 2, 0);
	trans[15][3]	= settr(13651,0,19,106,0,"((!(!(((states[1]==ABORTED)||(states[2]==ABORTED))))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[15][4]	= settr(13652,0,19,1,0,"goto T0_S23", 0, 2, 0);
	trans[15][5]	= settr(13653,0,7,1,0,"(1)", 0, 2, 0);
	trans[15][6]	= settr(13654,0,7,1,0,"goto T0_init", 0, 2, 0);
	trans[15][9]	= settr(13657,0,12,1,0,"break", 0, 2, 0);
	trans[15][13]	= settr(13661,0,12,1,0,".(goto)", 0, 2, 0);
	T = trans[15][12] = settr(13660,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13660,0,10,0,0,"DO", 0, 2, 0);
	trans[15][10]	= settr(13658,0,12,107,0,"((!((states[0]==PAUSED))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[15][11]	= settr(13659,0,12,1,0,"goto accept_S19", 0, 2, 0);
	trans[15][14]	= settr(13662,0,19,1,0,"break", 0, 2, 0);
	trans[15][20]	= settr(13668,0,19,1,0,".(goto)", 0, 2, 0);
	T = trans[15][19] = settr(13667,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13667,0,15,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13667,0,17,0,0,"DO", 0, 2, 0);
	trans[15][15]	= settr(13663,0,12,108,0,"((!((states[0]==PAUSED))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[15][16]	= settr(13664,0,12,1,0,"goto accept_S19", 0, 2, 0);
	trans[15][17]	= settr(13665,0,19,109,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[15][18]	= settr(13666,0,19,1,0,"goto T0_S23", 0, 2, 0);
	trans[15][21]	= settr(13669,0,22,1,0,"break", 0, 2, 0);
	trans[15][22]	= settr(13670,0,0,110,110,"-end-", 0, 3500, 0);

	/* proctype 14: supervisor_stops_after_all_workers_stop */

	trans[14] = (Trans **) emalloc(23*sizeof(Trans *));

	trans[14][8]	= settr(13634,0,7,1,0,".(goto)", 0, 2, 0);
	T = trans[14][7] = settr(13633,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13633,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13633,0,3,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13633,0,5,0,0,"DO", 0, 2, 0);
	trans[14][1]	= settr(13627,0,12,111,0,"(((!(!(((states[1]==STOPPED)&&(states[2]==STOPPED))))&&!((states[0]==PAUSED)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[14][2]	= settr(13628,0,12,1,0,"goto accept_S19", 0, 2, 0);
	trans[14][3]	= settr(13629,0,19,112,0,"((!(!(((states[1]==STOPPED)&&(states[2]==STOPPED))))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[14][4]	= settr(13630,0,19,1,0,"goto T0_S23", 0, 2, 0);
	trans[14][5]	= settr(13631,0,7,1,0,"(1)", 0, 2, 0);
	trans[14][6]	= settr(13632,0,7,1,0,"goto T0_init", 0, 2, 0);
	trans[14][9]	= settr(13635,0,12,1,0,"break", 0, 2, 0);
	trans[14][13]	= settr(13639,0,12,1,0,".(goto)", 0, 2, 0);
	T = trans[14][12] = settr(13638,0,0,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13638,0,10,0,0,"DO", 0, 2, 0);
	trans[14][10]	= settr(13636,0,12,113,0,"((!((states[0]==PAUSED))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[14][11]	= settr(13637,0,12,1,0,"goto accept_S19", 0, 2, 0);
	trans[14][14]	= settr(13640,0,19,1,0,"break", 0, 2, 0);
	trans[14][20]	= settr(13646,0,19,1,0,".(goto)", 0, 2, 0);
	T = trans[14][19] = settr(13645,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13645,0,15,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13645,0,17,0,0,"DO", 0, 2, 0);
	trans[14][15]	= settr(13641,0,12,114,0,"((!((states[0]==PAUSED))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[14][16]	= settr(13642,0,12,1,0,"goto accept_S19", 0, 2, 0);
	trans[14][17]	= settr(13643,0,19,115,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[14][18]	= settr(13644,0,19,1,0,"goto T0_S23", 0, 2, 0);
	trans[14][21]	= settr(13647,0,22,1,0,"break", 0, 2, 0);
	trans[14][22]	= settr(13648,0,0,116,116,"-end-", 0, 3500, 0);

	/* proctype 13: supervisor_constructs_workers */

	trans[13] = (Trans **) emalloc(11*sizeof(Trans *));

	trans[13][7]	= settr(13623,0,6,1,0,".(goto)", 0, 2, 0);
	T = trans[13][6] = settr(13622,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13622,0,3,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13622,0,4,0,0,"DO", 0, 2, 0);
	T = trans[ 13][3] = settr(13619,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13619,2,1,0,0,"ATOMIC", 1, 2, 0);
	trans[13][1]	= settr(13617,0,6,117,117,"(!((!(((states[1]==READY)||(states[2]==READY)))||!((states[0]==0)))))", 1, 2, 0); /* m: 2 -> 6,0 */
	reached13[2] = 1;
	trans[13][2]	= settr(0,0,0,0,0,"assert(!(!((!(((states[1]==READY)||(states[2]==READY)))||!((states[0]==0))))))",0,0,0);
	trans[13][4]	= settr(13620,0,6,1,0,"(1)", 0, 2, 0);
	trans[13][5]	= settr(13621,0,6,1,0,"goto T0_init", 0, 2, 0);
	trans[13][8]	= settr(13624,0,9,1,0,"break", 0, 2, 0);
	trans[13][9]	= settr(13625,0,10,1,0,"(1)", 0, 2, 0);
	trans[13][10]	= settr(13626,0,0,118,118,"-end-", 0, 3500, 0);

	/* proctype 12: supervisor_is_the_first_thread */

	trans[12] = (Trans **) emalloc(11*sizeof(Trans *));

	trans[12][7]	= settr(13613,0,6,1,0,".(goto)", 0, 2, 0);
	T = trans[12][6] = settr(13612,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13612,0,3,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13612,0,4,0,0,"DO", 0, 2, 0);
	T = trans[ 12][3] = settr(13609,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13609,2,1,0,0,"ATOMIC", 1, 2, 0);
	trans[12][1]	= settr(13607,0,6,119,119,"(!((!((states[0]==0))||((states[1]==0)&&(states[2]==0)))))", 1, 2, 0); /* m: 2 -> 6,0 */
	reached12[2] = 1;
	trans[12][2]	= settr(0,0,0,0,0,"assert(!(!((!((states[0]==0))||((states[1]==0)&&(states[2]==0))))))",0,0,0);
	trans[12][4]	= settr(13610,0,6,1,0,"(1)", 0, 2, 0);
	trans[12][5]	= settr(13611,0,6,1,0,"goto T0_init", 0, 2, 0);
	trans[12][8]	= settr(13614,0,9,1,0,"break", 0, 2, 0);
	trans[12][9]	= settr(13615,0,10,1,0,"(1)", 0, 2, 0);
	trans[12][10]	= settr(13616,0,0,120,120,"-end-", 0, 3500, 0);

	/* proctype 11: abort_is_undoable */

	trans[11] = (Trans **) emalloc(503*sizeof(Trans *));

	trans[11][49]	= settr(13153,0,48,1,0,".(goto)", 0, 2, 0);
	T = trans[11][48] = settr(13152,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,7,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,8,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,10,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,12,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,20,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,22,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,24,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,26,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,28,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,30,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,32,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,34,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,36,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,38,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,40,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,42,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13152,0,44,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13152,0,46,0,0,"DO", 0, 2, 0);
	trans[11][1]	= settr(13105,0,60,121,0,"(((!(!((commands[2]==ABORT)))&&!((commands[2]==0)))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][2]	= settr(13106,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[11][3]	= settr(13107,0,250,122,0,"((!(!((commands[2]==ABORT)))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][4]	= settr(13108,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 11][7] = settr(13111,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13111,2,5,0,0,"ATOMIC", 1, 2, 0);
	trans[11][5]	= settr(13109,0,48,123,123,"((((!(!((commands[0]==ABORT)))&&!((commands[0]==0)))&&!((commands[0]==ABORT)))||(((!(!((commands[1]==ABORT)))&&!((commands[1]==0)))&&!((commands[1]==ABORT)))||((!(!((commands[2]==ABORT)))&&!((commands[2]==0)))&&!((commands[2]==ABORT))))))", 1, 2, 0); /* m: 6 -> 48,0 */
	reached11[6] = 1;
	trans[11][6]	= settr(0,0,0,0,0,"assert(!((((!(!((commands[0]==ABORT)))&&!((commands[0]==0)))&&!((commands[0]==ABORT)))||(((!(!((commands[1]==ABORT)))&&!((commands[1]==0)))&&!((commands[1]==ABORT)))||((!(!((commands[2]==ABORT)))&&!((commands[2]==0)))&&!((commands[2]==ABORT)))))))",0,0,0);
	trans[11][8]	= settr(13112,0,258,124,0,"((!(!((commands[2]==ABORT)))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][9]	= settr(13113,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][10]	= settr(13114,0,236,125,0,"((!(!((commands[2]==ABORT)))&&!((commands[2]==0))))", 1, 2, 0);
	trans[11][11]	= settr(13115,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[11][12]	= settr(13116,0,282,126,0,"(!(!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][13]	= settr(13117,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[11][14]	= settr(13118,0,76,127,0,"(((!(!((commands[2]==ABORT)))&&!((commands[2]==0)))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][15]	= settr(13119,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[11][16]	= settr(13120,0,180,128,0,"((!(!((commands[2]==ABORT)))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][17]	= settr(13121,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[11][18]	= settr(13122,0,100,129,0,"(((!(!((commands[1]==ABORT)))&&!((commands[1]==0)))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][19]	= settr(13123,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[11][20]	= settr(13124,0,348,130,0,"((!(!((commands[1]==ABORT)))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][21]	= settr(13125,0,348,1,0,"goto T0_S243", 0, 2, 0);
	trans[11][22]	= settr(13126,0,356,131,0,"((!(!((commands[1]==ABORT)))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][23]	= settr(13127,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][24]	= settr(13128,0,334,132,0,"((!(!((commands[1]==ABORT)))&&!((commands[1]==0))))", 1, 2, 0);
	trans[11][25]	= settr(13129,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[11][26]	= settr(13130,0,380,133,0,"(!(!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][27]	= settr(13131,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[11][28]	= settr(13132,0,116,134,0,"(((!(!((commands[1]==ABORT)))&&!((commands[1]==0)))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][29]	= settr(13133,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[11][30]	= settr(13134,0,192,135,0,"((!(!((commands[1]==ABORT)))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][31]	= settr(13135,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[11][32]	= settr(13136,0,140,136,0,"(((!(!((commands[0]==ABORT)))&&!((commands[0]==0)))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][33]	= settr(13137,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[11][34]	= settr(13138,0,446,137,0,"((!(!((commands[0]==ABORT)))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][35]	= settr(13139,0,446,1,0,"goto T0_S404", 0, 2, 0);
	trans[11][36]	= settr(13140,0,454,138,0,"((!(!((commands[0]==ABORT)))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][37]	= settr(13141,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][38]	= settr(13142,0,432,139,0,"((!(!((commands[0]==ABORT)))&&!((commands[0]==0))))", 1, 2, 0);
	trans[11][39]	= settr(13143,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[11][40]	= settr(13144,0,478,140,0,"(!(!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][41]	= settr(13145,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[11][42]	= settr(13146,0,156,141,0,"(((!(!((commands[0]==ABORT)))&&!((commands[0]==0)))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][43]	= settr(13147,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[11][44]	= settr(13148,0,204,142,0,"((!(!((commands[0]==ABORT)))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][45]	= settr(13149,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[11][46]	= settr(13150,0,48,1,0,"(1)", 0, 2, 0);
	trans[11][47]	= settr(13151,0,48,1,0,"goto T0_init", 0, 2, 0);
	trans[11][50]	= settr(13154,0,60,1,0,"break", 0, 2, 0);
	trans[11][61]	= settr(13165,0,60,1,0,".(goto)", 0, 2, 0);
	T = trans[11][60] = settr(13164,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13164,0,51,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13164,0,53,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13164,0,57,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13164,0,58,0,0,"DO", 0, 2, 0);
	trans[11][51]	= settr(13155,0,216,143,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][52]	= settr(13156,0,216,1,0,"goto T0_S52", 0, 2, 0);
	trans[11][53]	= settr(13157,0,250,1,0,"(1)", 0, 2, 0);
	trans[11][54]	= settr(13158,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 11][57] = settr(13161,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13161,2,55,0,0,"ATOMIC", 1, 2, 0);
	trans[11][55]	= settr(13159,0,60,144,144,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 56 -> 60,0 */
	reached11[56] = 1;
	trans[11][56]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][58]	= settr(13162,0,258,145,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][59]	= settr(13163,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][62]	= settr(13166,0,68,1,0,"break", 0, 2, 0);
	trans[11][69]	= settr(13173,0,68,1,0,".(goto)", 0, 2, 0);
	T = trans[11][68] = settr(13172,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13172,0,65,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13172,0,66,0,0,"DO", 0, 2, 0);
	T = trans[ 11][65] = settr(13169,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13169,2,63,0,0,"ATOMIC", 1, 2, 0);
	trans[11][63]	= settr(13167,0,68,146,146,"(!((commands[2]==0)))", 1, 2, 0); /* m: 64 -> 68,0 */
	reached11[64] = 1;
	trans[11][64]	= settr(0,0,0,0,0,"assert(!(!((commands[2]==0))))",0,0,0);
	trans[11][66]	= settr(13170,0,258,1,0,"(1)", 0, 2, 0);
	trans[11][67]	= settr(13171,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][70]	= settr(13174,0,76,1,0,"break", 0, 2, 0);
	trans[11][77]	= settr(13181,0,76,1,0,".(goto)", 0, 2, 0);
	T = trans[11][76] = settr(13180,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13180,0,73,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13180,0,74,0,0,"DO", 0, 2, 0);
	T = trans[ 11][73] = settr(13177,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13177,2,71,0,0,"ATOMIC", 1, 2, 0);
	trans[11][71]	= settr(13175,0,76,147,147,"(!((commands[2]==ABORT)))", 1, 2, 0); /* m: 72 -> 76,0 */
	reached11[72] = 1;
	trans[11][72]	= settr(0,0,0,0,0,"assert(!(!((commands[2]==ABORT))))",0,0,0);
	trans[11][74]	= settr(13178,0,290,1,0,"(1)", 0, 2, 0);
	trans[11][75]	= settr(13179,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[11][78]	= settr(13182,0,88,1,0,"break", 0, 2, 0);
	trans[11][89]	= settr(13193,0,88,1,0,".(goto)", 0, 2, 0);
	T = trans[11][88] = settr(13192,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13192,0,81,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13192,0,82,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13192,0,84,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13192,0,86,0,0,"DO", 0, 2, 0);
	T = trans[ 11][81] = settr(13185,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13185,2,79,0,0,"ATOMIC", 1, 2, 0);
	trans[11][79]	= settr(13183,0,88,148,148,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 80 -> 88,0 */
	reached11[80] = 1;
	trans[11][80]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][82]	= settr(13186,0,290,149,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][83]	= settr(13187,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[11][84]	= settr(13188,0,258,150,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][85]	= settr(13189,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][86]	= settr(13190,0,302,1,0,"(1)", 0, 2, 0);
	trans[11][87]	= settr(13191,0,302,1,0,"goto T0_S158", 0, 2, 0);
	trans[11][90]	= settr(13194,0,100,1,0,"break", 0, 2, 0);
	trans[11][101]	= settr(13205,0,100,1,0,".(goto)", 0, 2, 0);
	T = trans[11][100] = settr(13204,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13204,0,91,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13204,0,93,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13204,0,97,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13204,0,98,0,0,"DO", 0, 2, 0);
	trans[11][91]	= settr(13195,0,314,151,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][92]	= settr(13196,0,314,1,0,"goto T0_S213", 0, 2, 0);
	trans[11][93]	= settr(13197,0,348,1,0,"(1)", 0, 2, 0);
	trans[11][94]	= settr(13198,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 11][97] = settr(13201,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13201,2,95,0,0,"ATOMIC", 1, 2, 0);
	trans[11][95]	= settr(13199,0,100,152,152,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 96 -> 100,0 */
	reached11[96] = 1;
	trans[11][96]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][98]	= settr(13202,0,356,153,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][99]	= settr(13203,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][102]	= settr(13206,0,108,1,0,"break", 0, 2, 0);
	trans[11][109]	= settr(13213,0,108,1,0,".(goto)", 0, 2, 0);
	T = trans[11][108] = settr(13212,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13212,0,105,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13212,0,106,0,0,"DO", 0, 2, 0);
	T = trans[ 11][105] = settr(13209,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13209,2,103,0,0,"ATOMIC", 1, 2, 0);
	trans[11][103]	= settr(13207,0,108,154,154,"(!((commands[1]==0)))", 1, 2, 0); /* m: 104 -> 108,0 */
	reached11[104] = 1;
	trans[11][104]	= settr(0,0,0,0,0,"assert(!(!((commands[1]==0))))",0,0,0);
	trans[11][106]	= settr(13210,0,356,1,0,"(1)", 0, 2, 0);
	trans[11][107]	= settr(13211,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][110]	= settr(13214,0,116,1,0,"break", 0, 2, 0);
	trans[11][117]	= settr(13221,0,116,1,0,".(goto)", 0, 2, 0);
	T = trans[11][116] = settr(13220,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13220,0,113,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13220,0,114,0,0,"DO", 0, 2, 0);
	T = trans[ 11][113] = settr(13217,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13217,2,111,0,0,"ATOMIC", 1, 2, 0);
	trans[11][111]	= settr(13215,0,116,155,155,"(!((commands[1]==ABORT)))", 1, 2, 0); /* m: 112 -> 116,0 */
	reached11[112] = 1;
	trans[11][112]	= settr(0,0,0,0,0,"assert(!(!((commands[1]==ABORT))))",0,0,0);
	trans[11][114]	= settr(13218,0,388,1,0,"(1)", 0, 2, 0);
	trans[11][115]	= settr(13219,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[11][118]	= settr(13222,0,128,1,0,"break", 0, 2, 0);
	trans[11][129]	= settr(13233,0,128,1,0,".(goto)", 0, 2, 0);
	T = trans[11][128] = settr(13232,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13232,0,121,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13232,0,122,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13232,0,124,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13232,0,126,0,0,"DO", 0, 2, 0);
	T = trans[ 11][121] = settr(13225,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13225,2,119,0,0,"ATOMIC", 1, 2, 0);
	trans[11][119]	= settr(13223,0,128,156,156,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 120 -> 128,0 */
	reached11[120] = 1;
	trans[11][120]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][122]	= settr(13226,0,388,157,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][123]	= settr(13227,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[11][124]	= settr(13228,0,356,158,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][125]	= settr(13229,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][126]	= settr(13230,0,400,1,0,"(1)", 0, 2, 0);
	trans[11][127]	= settr(13231,0,400,1,0,"goto T0_S319", 0, 2, 0);
	trans[11][130]	= settr(13234,0,140,1,0,"break", 0, 2, 0);
	trans[11][141]	= settr(13245,0,140,1,0,".(goto)", 0, 2, 0);
	T = trans[11][140] = settr(13244,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13244,0,131,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13244,0,133,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13244,0,137,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13244,0,138,0,0,"DO", 0, 2, 0);
	trans[11][131]	= settr(13235,0,412,159,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][132]	= settr(13236,0,412,1,0,"goto T0_S374", 0, 2, 0);
	trans[11][133]	= settr(13237,0,446,1,0,"(1)", 0, 2, 0);
	trans[11][134]	= settr(13238,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 11][137] = settr(13241,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13241,2,135,0,0,"ATOMIC", 1, 2, 0);
	trans[11][135]	= settr(13239,0,140,160,160,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 136 -> 140,0 */
	reached11[136] = 1;
	trans[11][136]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][138]	= settr(13242,0,454,161,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][139]	= settr(13243,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][142]	= settr(13246,0,148,1,0,"break", 0, 2, 0);
	trans[11][149]	= settr(13253,0,148,1,0,".(goto)", 0, 2, 0);
	T = trans[11][148] = settr(13252,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13252,0,145,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13252,0,146,0,0,"DO", 0, 2, 0);
	T = trans[ 11][145] = settr(13249,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13249,2,143,0,0,"ATOMIC", 1, 2, 0);
	trans[11][143]	= settr(13247,0,148,162,162,"(!((commands[0]==0)))", 1, 2, 0); /* m: 144 -> 148,0 */
	reached11[144] = 1;
	trans[11][144]	= settr(0,0,0,0,0,"assert(!(!((commands[0]==0))))",0,0,0);
	trans[11][146]	= settr(13250,0,454,1,0,"(1)", 0, 2, 0);
	trans[11][147]	= settr(13251,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][150]	= settr(13254,0,156,1,0,"break", 0, 2, 0);
	trans[11][157]	= settr(13261,0,156,1,0,".(goto)", 0, 2, 0);
	T = trans[11][156] = settr(13260,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13260,0,153,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13260,0,154,0,0,"DO", 0, 2, 0);
	T = trans[ 11][153] = settr(13257,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13257,2,151,0,0,"ATOMIC", 1, 2, 0);
	trans[11][151]	= settr(13255,0,156,163,163,"(!((commands[0]==ABORT)))", 1, 2, 0); /* m: 152 -> 156,0 */
	reached11[152] = 1;
	trans[11][152]	= settr(0,0,0,0,0,"assert(!(!((commands[0]==ABORT))))",0,0,0);
	trans[11][154]	= settr(13258,0,486,1,0,"(1)", 0, 2, 0);
	trans[11][155]	= settr(13259,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[11][158]	= settr(13262,0,168,1,0,"break", 0, 2, 0);
	trans[11][169]	= settr(13273,0,168,1,0,".(goto)", 0, 2, 0);
	T = trans[11][168] = settr(13272,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13272,0,161,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13272,0,162,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13272,0,164,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13272,0,166,0,0,"DO", 0, 2, 0);
	T = trans[ 11][161] = settr(13265,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13265,2,159,0,0,"ATOMIC", 1, 2, 0);
	trans[11][159]	= settr(13263,0,168,164,164,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 160 -> 168,0 */
	reached11[160] = 1;
	trans[11][160]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][162]	= settr(13266,0,486,165,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][163]	= settr(13267,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[11][164]	= settr(13268,0,454,166,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][165]	= settr(13269,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][166]	= settr(13270,0,498,1,0,"(1)", 0, 2, 0);
	trans[11][167]	= settr(13271,0,498,1,0,"goto T0_S480", 0, 2, 0);
	trans[11][170]	= settr(13274,0,180,1,0,"break", 0, 2, 0);
	trans[11][181]	= settr(13285,0,180,1,0,".(goto)", 0, 2, 0);
	T = trans[11][180] = settr(13284,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13284,0,173,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13284,0,174,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13284,0,176,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13284,0,178,0,0,"DO", 0, 2, 0);
	T = trans[ 11][173] = settr(13277,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13277,2,171,0,0,"ATOMIC", 1, 2, 0);
	trans[11][171]	= settr(13275,0,180,167,167,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 172 -> 180,0 */
	reached11[172] = 1;
	trans[11][172]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][174]	= settr(13278,0,76,168,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][175]	= settr(13279,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[11][176]	= settr(13280,0,258,169,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][177]	= settr(13281,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][178]	= settr(13282,0,180,1,0,"(1)", 0, 2, 0);
	trans[11][179]	= settr(13283,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[11][182]	= settr(13286,0,192,1,0,"break", 0, 2, 0);
	trans[11][193]	= settr(13297,0,192,1,0,".(goto)", 0, 2, 0);
	T = trans[11][192] = settr(13296,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13296,0,185,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13296,0,186,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13296,0,188,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13296,0,190,0,0,"DO", 0, 2, 0);
	T = trans[ 11][185] = settr(13289,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13289,2,183,0,0,"ATOMIC", 1, 2, 0);
	trans[11][183]	= settr(13287,0,192,170,170,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 184 -> 192,0 */
	reached11[184] = 1;
	trans[11][184]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][186]	= settr(13290,0,116,171,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][187]	= settr(13291,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[11][188]	= settr(13292,0,356,172,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][189]	= settr(13293,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][190]	= settr(13294,0,192,1,0,"(1)", 0, 2, 0);
	trans[11][191]	= settr(13295,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[11][194]	= settr(13298,0,204,1,0,"break", 0, 2, 0);
	trans[11][205]	= settr(13309,0,204,1,0,".(goto)", 0, 2, 0);
	T = trans[11][204] = settr(13308,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13308,0,197,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13308,0,198,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13308,0,200,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13308,0,202,0,0,"DO", 0, 2, 0);
	T = trans[ 11][197] = settr(13301,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13301,2,195,0,0,"ATOMIC", 1, 2, 0);
	trans[11][195]	= settr(13299,0,204,173,173,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 196 -> 204,0 */
	reached11[196] = 1;
	trans[11][196]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][198]	= settr(13302,0,156,174,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][199]	= settr(13303,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[11][200]	= settr(13304,0,454,175,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][201]	= settr(13305,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][202]	= settr(13306,0,204,1,0,"(1)", 0, 2, 0);
	trans[11][203]	= settr(13307,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[11][206]	= settr(13310,0,216,1,0,"break", 0, 2, 0);
	trans[11][217]	= settr(13321,0,216,1,0,".(goto)", 0, 2, 0);
	T = trans[11][216] = settr(13320,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13320,0,207,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13320,0,209,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13320,0,213,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13320,0,214,0,0,"DO", 0, 2, 0);
	trans[11][207]	= settr(13311,0,60,176,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][208]	= settr(13312,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[11][209]	= settr(13313,0,250,1,0,"(1)", 0, 2, 0);
	trans[11][210]	= settr(13314,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 11][213] = settr(13317,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13317,2,211,0,0,"ATOMIC", 1, 2, 0);
	trans[11][211]	= settr(13315,0,216,177,177,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 212 -> 216,0 */
	reached11[212] = 1;
	trans[11][212]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][214]	= settr(13318,0,258,178,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][215]	= settr(13319,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][218]	= settr(13322,0,236,1,0,"break", 0, 2, 0);
	trans[11][237]	= settr(13341,0,236,1,0,".(goto)", 0, 2, 0);
	T = trans[11][236] = settr(13340,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,219,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,221,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,225,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,226,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,228,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,230,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13340,0,232,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13340,0,234,0,0,"DO", 0, 2, 0);
	trans[11][219]	= settr(13323,0,60,179,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][220]	= settr(13324,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[11][221]	= settr(13325,0,250,180,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][222]	= settr(13326,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 11][225] = settr(13329,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13329,2,223,0,0,"ATOMIC", 1, 2, 0);
	trans[11][223]	= settr(13327,0,236,181,181,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 224 -> 236,0 */
	reached11[224] = 1;
	trans[11][224]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][226]	= settr(13330,0,258,182,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][227]	= settr(13331,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][228]	= settr(13332,0,236,183,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][229]	= settr(13333,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[11][230]	= settr(13334,0,282,1,0,"(1)", 0, 2, 0);
	trans[11][231]	= settr(13335,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[11][232]	= settr(13336,0,76,184,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][233]	= settr(13337,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[11][234]	= settr(13338,0,180,185,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][235]	= settr(13339,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[11][238]	= settr(13342,0,250,1,0,"break", 0, 2, 0);
	trans[11][251]	= settr(13355,0,250,1,0,".(goto)", 0, 2, 0);
	T = trans[11][250] = settr(13354,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13354,0,239,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13354,0,241,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13354,0,245,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13354,0,246,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13354,0,248,0,0,"DO", 0, 2, 0);
	trans[11][239]	= settr(13343,0,60,186,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][240]	= settr(13344,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[11][241]	= settr(13345,0,250,1,0,"(1)", 0, 2, 0);
	trans[11][242]	= settr(13346,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 11][245] = settr(13349,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13349,2,243,0,0,"ATOMIC", 1, 2, 0);
	trans[11][243]	= settr(13347,0,250,187,187,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 244 -> 250,0 */
	reached11[244] = 1;
	trans[11][244]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][246]	= settr(13350,0,68,188,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][247]	= settr(13351,0,68,1,0,"goto accept_S110", 0, 2, 0);
	trans[11][248]	= settr(13352,0,258,189,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][249]	= settr(13353,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][252]	= settr(13356,0,258,1,0,"break", 0, 2, 0);
	trans[11][259]	= settr(13363,0,258,1,0,".(goto)", 0, 2, 0);
	T = trans[11][258] = settr(13362,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13362,0,255,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13362,0,256,0,0,"DO", 0, 2, 0);
	T = trans[ 11][255] = settr(13359,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13359,2,253,0,0,"ATOMIC", 1, 2, 0);
	trans[11][253]	= settr(13357,0,258,190,190,"(!((commands[2]==0)))", 1, 2, 0); /* m: 254 -> 258,0 */
	reached11[254] = 1;
	trans[11][254]	= settr(0,0,0,0,0,"assert(!(!((commands[2]==0))))",0,0,0);
	trans[11][256]	= settr(13360,0,258,1,0,"(1)", 0, 2, 0);
	trans[11][257]	= settr(13361,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][260]	= settr(13364,0,282,1,0,"break", 0, 2, 0);
	trans[11][283]	= settr(13387,0,282,1,0,".(goto)", 0, 2, 0);
	T = trans[11][282] = settr(13386,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,261,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,263,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,267,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,268,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,270,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,272,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,274,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,276,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13386,0,278,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13386,0,280,0,0,"DO", 0, 2, 0);
	trans[11][261]	= settr(13365,0,60,191,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][262]	= settr(13366,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[11][263]	= settr(13367,0,250,192,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][264]	= settr(13368,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 11][267] = settr(13371,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13371,2,265,0,0,"ATOMIC", 1, 2, 0);
	trans[11][265]	= settr(13369,0,282,193,193,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 266 -> 282,0 */
	reached11[266] = 1;
	trans[11][266]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][268]	= settr(13372,0,258,194,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][269]	= settr(13373,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][270]	= settr(13374,0,236,195,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][271]	= settr(13375,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[11][272]	= settr(13376,0,282,1,0,"(1)", 0, 2, 0);
	trans[11][273]	= settr(13377,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[11][274]	= settr(13378,0,68,196,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][275]	= settr(13379,0,68,1,0,"goto accept_S110", 0, 2, 0);
	trans[11][276]	= settr(13380,0,76,197,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][277]	= settr(13381,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[11][278]	= settr(13382,0,88,198,0,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0);
	trans[11][279]	= settr(13383,0,88,1,0,"goto accept_S158", 0, 2, 0);
	trans[11][280]	= settr(13384,0,180,199,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][281]	= settr(13385,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[11][284]	= settr(13388,0,290,1,0,"break", 0, 2, 0);
	trans[11][291]	= settr(13395,0,290,1,0,".(goto)", 0, 2, 0);
	T = trans[11][290] = settr(13394,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13394,0,287,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13394,0,288,0,0,"DO", 0, 2, 0);
	T = trans[ 11][287] = settr(13391,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13391,2,285,0,0,"ATOMIC", 1, 2, 0);
	trans[11][285]	= settr(13389,0,290,200,200,"(!((commands[2]==ABORT)))", 1, 2, 0); /* m: 286 -> 290,0 */
	reached11[286] = 1;
	trans[11][286]	= settr(0,0,0,0,0,"assert(!(!((commands[2]==ABORT))))",0,0,0);
	trans[11][288]	= settr(13392,0,290,1,0,"(1)", 0, 2, 0);
	trans[11][289]	= settr(13393,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[11][292]	= settr(13396,0,302,1,0,"break", 0, 2, 0);
	trans[11][303]	= settr(13407,0,302,1,0,".(goto)", 0, 2, 0);
	T = trans[11][302] = settr(13406,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13406,0,295,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13406,0,296,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13406,0,298,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13406,0,300,0,0,"DO", 0, 2, 0);
	T = trans[ 11][295] = settr(13399,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13399,2,293,0,0,"ATOMIC", 1, 2, 0);
	trans[11][293]	= settr(13397,0,302,201,201,"((!((commands[2]==0))&&!((commands[2]==ABORT))))", 1, 2, 0); /* m: 294 -> 302,0 */
	reached11[294] = 1;
	trans[11][294]	= settr(0,0,0,0,0,"assert(!((!((commands[2]==0))&&!((commands[2]==ABORT)))))",0,0,0);
	trans[11][296]	= settr(13400,0,290,202,0,"(!((commands[2]==0)))", 1, 2, 0);
	trans[11][297]	= settr(13401,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[11][298]	= settr(13402,0,258,203,0,"(!((commands[2]==ABORT)))", 1, 2, 0);
	trans[11][299]	= settr(13403,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[11][300]	= settr(13404,0,302,1,0,"(1)", 0, 2, 0);
	trans[11][301]	= settr(13405,0,302,1,0,"goto T0_S158", 0, 2, 0);
	trans[11][304]	= settr(13408,0,314,1,0,"break", 0, 2, 0);
	trans[11][315]	= settr(13419,0,314,1,0,".(goto)", 0, 2, 0);
	T = trans[11][314] = settr(13418,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13418,0,305,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13418,0,307,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13418,0,311,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13418,0,312,0,0,"DO", 0, 2, 0);
	trans[11][305]	= settr(13409,0,100,204,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][306]	= settr(13410,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[11][307]	= settr(13411,0,348,1,0,"(1)", 0, 2, 0);
	trans[11][308]	= settr(13412,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 11][311] = settr(13415,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13415,2,309,0,0,"ATOMIC", 1, 2, 0);
	trans[11][309]	= settr(13413,0,314,205,205,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 310 -> 314,0 */
	reached11[310] = 1;
	trans[11][310]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][312]	= settr(13416,0,356,206,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][313]	= settr(13417,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][316]	= settr(13420,0,334,1,0,"break", 0, 2, 0);
	trans[11][335]	= settr(13439,0,334,1,0,".(goto)", 0, 2, 0);
	T = trans[11][334] = settr(13438,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,317,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,319,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,323,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,324,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,326,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,328,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13438,0,330,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13438,0,332,0,0,"DO", 0, 2, 0);
	trans[11][317]	= settr(13421,0,100,207,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][318]	= settr(13422,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[11][319]	= settr(13423,0,348,208,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][320]	= settr(13424,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 11][323] = settr(13427,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13427,2,321,0,0,"ATOMIC", 1, 2, 0);
	trans[11][321]	= settr(13425,0,334,209,209,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 322 -> 334,0 */
	reached11[322] = 1;
	trans[11][322]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][324]	= settr(13428,0,356,210,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][325]	= settr(13429,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][326]	= settr(13430,0,334,211,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][327]	= settr(13431,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[11][328]	= settr(13432,0,380,1,0,"(1)", 0, 2, 0);
	trans[11][329]	= settr(13433,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[11][330]	= settr(13434,0,116,212,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][331]	= settr(13435,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[11][332]	= settr(13436,0,192,213,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][333]	= settr(13437,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[11][336]	= settr(13440,0,348,1,0,"break", 0, 2, 0);
	trans[11][349]	= settr(13453,0,348,1,0,".(goto)", 0, 2, 0);
	T = trans[11][348] = settr(13452,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13452,0,337,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13452,0,339,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13452,0,343,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13452,0,344,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13452,0,346,0,0,"DO", 0, 2, 0);
	trans[11][337]	= settr(13441,0,100,214,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][338]	= settr(13442,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[11][339]	= settr(13443,0,348,1,0,"(1)", 0, 2, 0);
	trans[11][340]	= settr(13444,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 11][343] = settr(13447,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13447,2,341,0,0,"ATOMIC", 1, 2, 0);
	trans[11][341]	= settr(13445,0,348,215,215,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 342 -> 348,0 */
	reached11[342] = 1;
	trans[11][342]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][344]	= settr(13448,0,108,216,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][345]	= settr(13449,0,108,1,0,"goto accept_S271", 0, 2, 0);
	trans[11][346]	= settr(13450,0,356,217,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][347]	= settr(13451,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][350]	= settr(13454,0,356,1,0,"break", 0, 2, 0);
	trans[11][357]	= settr(13461,0,356,1,0,".(goto)", 0, 2, 0);
	T = trans[11][356] = settr(13460,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13460,0,353,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13460,0,354,0,0,"DO", 0, 2, 0);
	T = trans[ 11][353] = settr(13457,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13457,2,351,0,0,"ATOMIC", 1, 2, 0);
	trans[11][351]	= settr(13455,0,356,218,218,"(!((commands[1]==0)))", 1, 2, 0); /* m: 352 -> 356,0 */
	reached11[352] = 1;
	trans[11][352]	= settr(0,0,0,0,0,"assert(!(!((commands[1]==0))))",0,0,0);
	trans[11][354]	= settr(13458,0,356,1,0,"(1)", 0, 2, 0);
	trans[11][355]	= settr(13459,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][358]	= settr(13462,0,380,1,0,"break", 0, 2, 0);
	trans[11][381]	= settr(13485,0,380,1,0,".(goto)", 0, 2, 0);
	T = trans[11][380] = settr(13484,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,359,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,361,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,365,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,366,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,368,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,370,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,372,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,374,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13484,0,376,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13484,0,378,0,0,"DO", 0, 2, 0);
	trans[11][359]	= settr(13463,0,100,219,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][360]	= settr(13464,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[11][361]	= settr(13465,0,348,220,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][362]	= settr(13466,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 11][365] = settr(13469,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13469,2,363,0,0,"ATOMIC", 1, 2, 0);
	trans[11][363]	= settr(13467,0,380,221,221,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 364 -> 380,0 */
	reached11[364] = 1;
	trans[11][364]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][366]	= settr(13470,0,356,222,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][367]	= settr(13471,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][368]	= settr(13472,0,334,223,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][369]	= settr(13473,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[11][370]	= settr(13474,0,380,1,0,"(1)", 0, 2, 0);
	trans[11][371]	= settr(13475,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[11][372]	= settr(13476,0,108,224,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][373]	= settr(13477,0,108,1,0,"goto accept_S271", 0, 2, 0);
	trans[11][374]	= settr(13478,0,116,225,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][375]	= settr(13479,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[11][376]	= settr(13480,0,128,226,0,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0);
	trans[11][377]	= settr(13481,0,128,1,0,"goto accept_S319", 0, 2, 0);
	trans[11][378]	= settr(13482,0,192,227,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][379]	= settr(13483,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[11][382]	= settr(13486,0,388,1,0,"break", 0, 2, 0);
	trans[11][389]	= settr(13493,0,388,1,0,".(goto)", 0, 2, 0);
	T = trans[11][388] = settr(13492,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13492,0,385,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13492,0,386,0,0,"DO", 0, 2, 0);
	T = trans[ 11][385] = settr(13489,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13489,2,383,0,0,"ATOMIC", 1, 2, 0);
	trans[11][383]	= settr(13487,0,388,228,228,"(!((commands[1]==ABORT)))", 1, 2, 0); /* m: 384 -> 388,0 */
	reached11[384] = 1;
	trans[11][384]	= settr(0,0,0,0,0,"assert(!(!((commands[1]==ABORT))))",0,0,0);
	trans[11][386]	= settr(13490,0,388,1,0,"(1)", 0, 2, 0);
	trans[11][387]	= settr(13491,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[11][390]	= settr(13494,0,400,1,0,"break", 0, 2, 0);
	trans[11][401]	= settr(13505,0,400,1,0,".(goto)", 0, 2, 0);
	T = trans[11][400] = settr(13504,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13504,0,393,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13504,0,394,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13504,0,396,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13504,0,398,0,0,"DO", 0, 2, 0);
	T = trans[ 11][393] = settr(13497,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13497,2,391,0,0,"ATOMIC", 1, 2, 0);
	trans[11][391]	= settr(13495,0,400,229,229,"((!((commands[1]==0))&&!((commands[1]==ABORT))))", 1, 2, 0); /* m: 392 -> 400,0 */
	reached11[392] = 1;
	trans[11][392]	= settr(0,0,0,0,0,"assert(!((!((commands[1]==0))&&!((commands[1]==ABORT)))))",0,0,0);
	trans[11][394]	= settr(13498,0,388,230,0,"(!((commands[1]==0)))", 1, 2, 0);
	trans[11][395]	= settr(13499,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[11][396]	= settr(13500,0,356,231,0,"(!((commands[1]==ABORT)))", 1, 2, 0);
	trans[11][397]	= settr(13501,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[11][398]	= settr(13502,0,400,1,0,"(1)", 0, 2, 0);
	trans[11][399]	= settr(13503,0,400,1,0,"goto T0_S319", 0, 2, 0);
	trans[11][402]	= settr(13506,0,412,1,0,"break", 0, 2, 0);
	trans[11][413]	= settr(13517,0,412,1,0,".(goto)", 0, 2, 0);
	T = trans[11][412] = settr(13516,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13516,0,403,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13516,0,405,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13516,0,409,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13516,0,410,0,0,"DO", 0, 2, 0);
	trans[11][403]	= settr(13507,0,140,232,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][404]	= settr(13508,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[11][405]	= settr(13509,0,446,1,0,"(1)", 0, 2, 0);
	trans[11][406]	= settr(13510,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 11][409] = settr(13513,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13513,2,407,0,0,"ATOMIC", 1, 2, 0);
	trans[11][407]	= settr(13511,0,412,233,233,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 408 -> 412,0 */
	reached11[408] = 1;
	trans[11][408]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][410]	= settr(13514,0,454,234,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][411]	= settr(13515,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][414]	= settr(13518,0,432,1,0,"break", 0, 2, 0);
	trans[11][433]	= settr(13537,0,432,1,0,".(goto)", 0, 2, 0);
	T = trans[11][432] = settr(13536,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,415,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,417,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,421,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,422,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,424,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,426,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13536,0,428,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13536,0,430,0,0,"DO", 0, 2, 0);
	trans[11][415]	= settr(13519,0,140,235,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][416]	= settr(13520,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[11][417]	= settr(13521,0,446,236,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][418]	= settr(13522,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 11][421] = settr(13525,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13525,2,419,0,0,"ATOMIC", 1, 2, 0);
	trans[11][419]	= settr(13523,0,432,237,237,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 420 -> 432,0 */
	reached11[420] = 1;
	trans[11][420]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][422]	= settr(13526,0,454,238,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][423]	= settr(13527,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][424]	= settr(13528,0,432,239,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][425]	= settr(13529,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[11][426]	= settr(13530,0,478,1,0,"(1)", 0, 2, 0);
	trans[11][427]	= settr(13531,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[11][428]	= settr(13532,0,156,240,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][429]	= settr(13533,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[11][430]	= settr(13534,0,204,241,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][431]	= settr(13535,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[11][434]	= settr(13538,0,446,1,0,"break", 0, 2, 0);
	trans[11][447]	= settr(13551,0,446,1,0,".(goto)", 0, 2, 0);
	T = trans[11][446] = settr(13550,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13550,0,435,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13550,0,437,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13550,0,441,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13550,0,442,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13550,0,444,0,0,"DO", 0, 2, 0);
	trans[11][435]	= settr(13539,0,140,242,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][436]	= settr(13540,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[11][437]	= settr(13541,0,446,1,0,"(1)", 0, 2, 0);
	trans[11][438]	= settr(13542,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 11][441] = settr(13545,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13545,2,439,0,0,"ATOMIC", 1, 2, 0);
	trans[11][439]	= settr(13543,0,446,243,243,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 440 -> 446,0 */
	reached11[440] = 1;
	trans[11][440]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][442]	= settr(13546,0,148,244,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][443]	= settr(13547,0,148,1,0,"goto accept_S432", 0, 2, 0);
	trans[11][444]	= settr(13548,0,454,245,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][445]	= settr(13549,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][448]	= settr(13552,0,454,1,0,"break", 0, 2, 0);
	trans[11][455]	= settr(13559,0,454,1,0,".(goto)", 0, 2, 0);
	T = trans[11][454] = settr(13558,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13558,0,451,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13558,0,452,0,0,"DO", 0, 2, 0);
	T = trans[ 11][451] = settr(13555,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13555,2,449,0,0,"ATOMIC", 1, 2, 0);
	trans[11][449]	= settr(13553,0,454,246,246,"(!((commands[0]==0)))", 1, 2, 0); /* m: 450 -> 454,0 */
	reached11[450] = 1;
	trans[11][450]	= settr(0,0,0,0,0,"assert(!(!((commands[0]==0))))",0,0,0);
	trans[11][452]	= settr(13556,0,454,1,0,"(1)", 0, 2, 0);
	trans[11][453]	= settr(13557,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][456]	= settr(13560,0,478,1,0,"break", 0, 2, 0);
	trans[11][479]	= settr(13583,0,478,1,0,".(goto)", 0, 2, 0);
	T = trans[11][478] = settr(13582,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,457,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,459,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,463,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,464,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,466,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,468,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,470,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,472,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13582,0,474,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13582,0,476,0,0,"DO", 0, 2, 0);
	trans[11][457]	= settr(13561,0,140,247,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][458]	= settr(13562,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[11][459]	= settr(13563,0,446,248,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][460]	= settr(13564,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 11][463] = settr(13567,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13567,2,461,0,0,"ATOMIC", 1, 2, 0);
	trans[11][461]	= settr(13565,0,478,249,249,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 462 -> 478,0 */
	reached11[462] = 1;
	trans[11][462]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][464]	= settr(13568,0,454,250,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][465]	= settr(13569,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][466]	= settr(13570,0,432,251,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][467]	= settr(13571,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[11][468]	= settr(13572,0,478,1,0,"(1)", 0, 2, 0);
	trans[11][469]	= settr(13573,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[11][470]	= settr(13574,0,148,252,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][471]	= settr(13575,0,148,1,0,"goto accept_S432", 0, 2, 0);
	trans[11][472]	= settr(13576,0,156,253,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][473]	= settr(13577,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[11][474]	= settr(13578,0,168,254,0,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0);
	trans[11][475]	= settr(13579,0,168,1,0,"goto accept_S480", 0, 2, 0);
	trans[11][476]	= settr(13580,0,204,255,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][477]	= settr(13581,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[11][480]	= settr(13584,0,486,1,0,"break", 0, 2, 0);
	trans[11][487]	= settr(13591,0,486,1,0,".(goto)", 0, 2, 0);
	T = trans[11][486] = settr(13590,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13590,0,483,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13590,0,484,0,0,"DO", 0, 2, 0);
	T = trans[ 11][483] = settr(13587,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13587,2,481,0,0,"ATOMIC", 1, 2, 0);
	trans[11][481]	= settr(13585,0,486,256,256,"(!((commands[0]==ABORT)))", 1, 2, 0); /* m: 482 -> 486,0 */
	reached11[482] = 1;
	trans[11][482]	= settr(0,0,0,0,0,"assert(!(!((commands[0]==ABORT))))",0,0,0);
	trans[11][484]	= settr(13588,0,486,1,0,"(1)", 0, 2, 0);
	trans[11][485]	= settr(13589,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[11][488]	= settr(13592,0,498,1,0,"break", 0, 2, 0);
	trans[11][499]	= settr(13603,0,498,1,0,".(goto)", 0, 2, 0);
	T = trans[11][498] = settr(13602,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13602,0,491,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13602,0,492,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13602,0,494,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13602,0,496,0,0,"DO", 0, 2, 0);
	T = trans[ 11][491] = settr(13595,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13595,2,489,0,0,"ATOMIC", 1, 2, 0);
	trans[11][489]	= settr(13593,0,498,257,257,"((!((commands[0]==0))&&!((commands[0]==ABORT))))", 1, 2, 0); /* m: 490 -> 498,0 */
	reached11[490] = 1;
	trans[11][490]	= settr(0,0,0,0,0,"assert(!((!((commands[0]==0))&&!((commands[0]==ABORT)))))",0,0,0);
	trans[11][492]	= settr(13596,0,486,258,0,"(!((commands[0]==0)))", 1, 2, 0);
	trans[11][493]	= settr(13597,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[11][494]	= settr(13598,0,454,259,0,"(!((commands[0]==ABORT)))", 1, 2, 0);
	trans[11][495]	= settr(13599,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[11][496]	= settr(13600,0,498,1,0,"(1)", 0, 2, 0);
	trans[11][497]	= settr(13601,0,498,1,0,"goto T0_S480", 0, 2, 0);
	trans[11][500]	= settr(13604,0,501,1,0,"break", 0, 2, 0);
	trans[11][501]	= settr(13605,0,502,1,0,"(1)", 0, 2, 0);
	trans[11][502]	= settr(13606,0,0,260,260,"-end-", 0, 3500, 0);

	/* proctype 10: fsm_aborted */

	trans[10] = (Trans **) emalloc(503*sizeof(Trans *));

	trans[10][49]	= settr(12651,0,48,1,0,".(goto)", 0, 2, 0);
	T = trans[10][48] = settr(12650,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,7,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,8,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,10,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,12,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,20,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,22,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,24,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,26,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,28,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,30,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,32,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,34,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,36,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,38,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,40,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,42,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12650,0,44,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12650,0,46,0,0,"DO", 0, 2, 0);
	trans[10][1]	= settr(12603,0,60,261,0,"(((!(!((states[2]==ABORTED)))&&!((states[2]==0)))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][2]	= settr(12604,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[10][3]	= settr(12605,0,250,262,0,"((!(!((states[2]==ABORTED)))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][4]	= settr(12606,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 10][7] = settr(12609,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12609,2,5,0,0,"ATOMIC", 1, 2, 0);
	trans[10][5]	= settr(12607,0,48,263,263,"((((!(!((states[0]==ABORTED)))&&!((states[0]==0)))&&!((states[0]==ABORTED)))||(((!(!((states[1]==ABORTED)))&&!((states[1]==0)))&&!((states[1]==ABORTED)))||((!(!((states[2]==ABORTED)))&&!((states[2]==0)))&&!((states[2]==ABORTED))))))", 1, 2, 0); /* m: 6 -> 48,0 */
	reached10[6] = 1;
	trans[10][6]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==ABORTED)))&&!((states[0]==0)))&&!((states[0]==ABORTED)))||(((!(!((states[1]==ABORTED)))&&!((states[1]==0)))&&!((states[1]==ABORTED)))||((!(!((states[2]==ABORTED)))&&!((states[2]==0)))&&!((states[2]==ABORTED)))))))",0,0,0);
	trans[10][8]	= settr(12610,0,258,264,0,"((!(!((states[2]==ABORTED)))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][9]	= settr(12611,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][10]	= settr(12612,0,236,265,0,"((!(!((states[2]==ABORTED)))&&!((states[2]==0))))", 1, 2, 0);
	trans[10][11]	= settr(12613,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[10][12]	= settr(12614,0,282,266,0,"(!(!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][13]	= settr(12615,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[10][14]	= settr(12616,0,76,267,0,"(((!(!((states[2]==ABORTED)))&&!((states[2]==0)))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][15]	= settr(12617,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[10][16]	= settr(12618,0,180,268,0,"((!(!((states[2]==ABORTED)))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][17]	= settr(12619,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[10][18]	= settr(12620,0,100,269,0,"(((!(!((states[1]==ABORTED)))&&!((states[1]==0)))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][19]	= settr(12621,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[10][20]	= settr(12622,0,348,270,0,"((!(!((states[1]==ABORTED)))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][21]	= settr(12623,0,348,1,0,"goto T0_S243", 0, 2, 0);
	trans[10][22]	= settr(12624,0,356,271,0,"((!(!((states[1]==ABORTED)))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][23]	= settr(12625,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][24]	= settr(12626,0,334,272,0,"((!(!((states[1]==ABORTED)))&&!((states[1]==0))))", 1, 2, 0);
	trans[10][25]	= settr(12627,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[10][26]	= settr(12628,0,380,273,0,"(!(!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][27]	= settr(12629,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[10][28]	= settr(12630,0,116,274,0,"(((!(!((states[1]==ABORTED)))&&!((states[1]==0)))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][29]	= settr(12631,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[10][30]	= settr(12632,0,192,275,0,"((!(!((states[1]==ABORTED)))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][31]	= settr(12633,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[10][32]	= settr(12634,0,140,276,0,"(((!(!((states[0]==ABORTED)))&&!((states[0]==0)))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][33]	= settr(12635,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[10][34]	= settr(12636,0,446,277,0,"((!(!((states[0]==ABORTED)))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][35]	= settr(12637,0,446,1,0,"goto T0_S404", 0, 2, 0);
	trans[10][36]	= settr(12638,0,454,278,0,"((!(!((states[0]==ABORTED)))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][37]	= settr(12639,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][38]	= settr(12640,0,432,279,0,"((!(!((states[0]==ABORTED)))&&!((states[0]==0))))", 1, 2, 0);
	trans[10][39]	= settr(12641,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[10][40]	= settr(12642,0,478,280,0,"(!(!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][41]	= settr(12643,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[10][42]	= settr(12644,0,156,281,0,"(((!(!((states[0]==ABORTED)))&&!((states[0]==0)))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][43]	= settr(12645,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[10][44]	= settr(12646,0,204,282,0,"((!(!((states[0]==ABORTED)))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][45]	= settr(12647,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[10][46]	= settr(12648,0,48,1,0,"(1)", 0, 2, 0);
	trans[10][47]	= settr(12649,0,48,1,0,"goto T0_init", 0, 2, 0);
	trans[10][50]	= settr(12652,0,60,1,0,"break", 0, 2, 0);
	trans[10][61]	= settr(12663,0,60,1,0,".(goto)", 0, 2, 0);
	T = trans[10][60] = settr(12662,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12662,0,51,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12662,0,53,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12662,0,57,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12662,0,58,0,0,"DO", 0, 2, 0);
	trans[10][51]	= settr(12653,0,216,283,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][52]	= settr(12654,0,216,1,0,"goto T0_S52", 0, 2, 0);
	trans[10][53]	= settr(12655,0,250,1,0,"(1)", 0, 2, 0);
	trans[10][54]	= settr(12656,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 10][57] = settr(12659,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12659,2,55,0,0,"ATOMIC", 1, 2, 0);
	trans[10][55]	= settr(12657,0,60,284,284,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 56 -> 60,0 */
	reached10[56] = 1;
	trans[10][56]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][58]	= settr(12660,0,258,285,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][59]	= settr(12661,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][62]	= settr(12664,0,68,1,0,"break", 0, 2, 0);
	trans[10][69]	= settr(12671,0,68,1,0,".(goto)", 0, 2, 0);
	T = trans[10][68] = settr(12670,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12670,0,65,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12670,0,66,0,0,"DO", 0, 2, 0);
	T = trans[ 10][65] = settr(12667,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12667,2,63,0,0,"ATOMIC", 1, 2, 0);
	trans[10][63]	= settr(12665,0,68,286,286,"(!((states[2]==0)))", 1, 2, 0); /* m: 64 -> 68,0 */
	reached10[64] = 1;
	trans[10][64]	= settr(0,0,0,0,0,"assert(!(!((states[2]==0))))",0,0,0);
	trans[10][66]	= settr(12668,0,258,1,0,"(1)", 0, 2, 0);
	trans[10][67]	= settr(12669,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][70]	= settr(12672,0,76,1,0,"break", 0, 2, 0);
	trans[10][77]	= settr(12679,0,76,1,0,".(goto)", 0, 2, 0);
	T = trans[10][76] = settr(12678,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12678,0,73,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12678,0,74,0,0,"DO", 0, 2, 0);
	T = trans[ 10][73] = settr(12675,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12675,2,71,0,0,"ATOMIC", 1, 2, 0);
	trans[10][71]	= settr(12673,0,76,287,287,"(!((states[2]==ABORTED)))", 1, 2, 0); /* m: 72 -> 76,0 */
	reached10[72] = 1;
	trans[10][72]	= settr(0,0,0,0,0,"assert(!(!((states[2]==ABORTED))))",0,0,0);
	trans[10][74]	= settr(12676,0,290,1,0,"(1)", 0, 2, 0);
	trans[10][75]	= settr(12677,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[10][78]	= settr(12680,0,88,1,0,"break", 0, 2, 0);
	trans[10][89]	= settr(12691,0,88,1,0,".(goto)", 0, 2, 0);
	T = trans[10][88] = settr(12690,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12690,0,81,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12690,0,82,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12690,0,84,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12690,0,86,0,0,"DO", 0, 2, 0);
	T = trans[ 10][81] = settr(12683,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12683,2,79,0,0,"ATOMIC", 1, 2, 0);
	trans[10][79]	= settr(12681,0,88,288,288,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 80 -> 88,0 */
	reached10[80] = 1;
	trans[10][80]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][82]	= settr(12684,0,290,289,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][83]	= settr(12685,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[10][84]	= settr(12686,0,258,290,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][85]	= settr(12687,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][86]	= settr(12688,0,302,1,0,"(1)", 0, 2, 0);
	trans[10][87]	= settr(12689,0,302,1,0,"goto T0_S158", 0, 2, 0);
	trans[10][90]	= settr(12692,0,100,1,0,"break", 0, 2, 0);
	trans[10][101]	= settr(12703,0,100,1,0,".(goto)", 0, 2, 0);
	T = trans[10][100] = settr(12702,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12702,0,91,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12702,0,93,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12702,0,97,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12702,0,98,0,0,"DO", 0, 2, 0);
	trans[10][91]	= settr(12693,0,314,291,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][92]	= settr(12694,0,314,1,0,"goto T0_S213", 0, 2, 0);
	trans[10][93]	= settr(12695,0,348,1,0,"(1)", 0, 2, 0);
	trans[10][94]	= settr(12696,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 10][97] = settr(12699,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12699,2,95,0,0,"ATOMIC", 1, 2, 0);
	trans[10][95]	= settr(12697,0,100,292,292,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 96 -> 100,0 */
	reached10[96] = 1;
	trans[10][96]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][98]	= settr(12700,0,356,293,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][99]	= settr(12701,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][102]	= settr(12704,0,108,1,0,"break", 0, 2, 0);
	trans[10][109]	= settr(12711,0,108,1,0,".(goto)", 0, 2, 0);
	T = trans[10][108] = settr(12710,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12710,0,105,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12710,0,106,0,0,"DO", 0, 2, 0);
	T = trans[ 10][105] = settr(12707,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12707,2,103,0,0,"ATOMIC", 1, 2, 0);
	trans[10][103]	= settr(12705,0,108,294,294,"(!((states[1]==0)))", 1, 2, 0); /* m: 104 -> 108,0 */
	reached10[104] = 1;
	trans[10][104]	= settr(0,0,0,0,0,"assert(!(!((states[1]==0))))",0,0,0);
	trans[10][106]	= settr(12708,0,356,1,0,"(1)", 0, 2, 0);
	trans[10][107]	= settr(12709,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][110]	= settr(12712,0,116,1,0,"break", 0, 2, 0);
	trans[10][117]	= settr(12719,0,116,1,0,".(goto)", 0, 2, 0);
	T = trans[10][116] = settr(12718,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12718,0,113,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12718,0,114,0,0,"DO", 0, 2, 0);
	T = trans[ 10][113] = settr(12715,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12715,2,111,0,0,"ATOMIC", 1, 2, 0);
	trans[10][111]	= settr(12713,0,116,295,295,"(!((states[1]==ABORTED)))", 1, 2, 0); /* m: 112 -> 116,0 */
	reached10[112] = 1;
	trans[10][112]	= settr(0,0,0,0,0,"assert(!(!((states[1]==ABORTED))))",0,0,0);
	trans[10][114]	= settr(12716,0,388,1,0,"(1)", 0, 2, 0);
	trans[10][115]	= settr(12717,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[10][118]	= settr(12720,0,128,1,0,"break", 0, 2, 0);
	trans[10][129]	= settr(12731,0,128,1,0,".(goto)", 0, 2, 0);
	T = trans[10][128] = settr(12730,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12730,0,121,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12730,0,122,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12730,0,124,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12730,0,126,0,0,"DO", 0, 2, 0);
	T = trans[ 10][121] = settr(12723,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12723,2,119,0,0,"ATOMIC", 1, 2, 0);
	trans[10][119]	= settr(12721,0,128,296,296,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 120 -> 128,0 */
	reached10[120] = 1;
	trans[10][120]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][122]	= settr(12724,0,388,297,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][123]	= settr(12725,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[10][124]	= settr(12726,0,356,298,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][125]	= settr(12727,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][126]	= settr(12728,0,400,1,0,"(1)", 0, 2, 0);
	trans[10][127]	= settr(12729,0,400,1,0,"goto T0_S319", 0, 2, 0);
	trans[10][130]	= settr(12732,0,140,1,0,"break", 0, 2, 0);
	trans[10][141]	= settr(12743,0,140,1,0,".(goto)", 0, 2, 0);
	T = trans[10][140] = settr(12742,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12742,0,131,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12742,0,133,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12742,0,137,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12742,0,138,0,0,"DO", 0, 2, 0);
	trans[10][131]	= settr(12733,0,412,299,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][132]	= settr(12734,0,412,1,0,"goto T0_S374", 0, 2, 0);
	trans[10][133]	= settr(12735,0,446,1,0,"(1)", 0, 2, 0);
	trans[10][134]	= settr(12736,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 10][137] = settr(12739,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12739,2,135,0,0,"ATOMIC", 1, 2, 0);
	trans[10][135]	= settr(12737,0,140,300,300,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 136 -> 140,0 */
	reached10[136] = 1;
	trans[10][136]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][138]	= settr(12740,0,454,301,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][139]	= settr(12741,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][142]	= settr(12744,0,148,1,0,"break", 0, 2, 0);
	trans[10][149]	= settr(12751,0,148,1,0,".(goto)", 0, 2, 0);
	T = trans[10][148] = settr(12750,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12750,0,145,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12750,0,146,0,0,"DO", 0, 2, 0);
	T = trans[ 10][145] = settr(12747,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12747,2,143,0,0,"ATOMIC", 1, 2, 0);
	trans[10][143]	= settr(12745,0,148,302,302,"(!((states[0]==0)))", 1, 2, 0); /* m: 144 -> 148,0 */
	reached10[144] = 1;
	trans[10][144]	= settr(0,0,0,0,0,"assert(!(!((states[0]==0))))",0,0,0);
	trans[10][146]	= settr(12748,0,454,1,0,"(1)", 0, 2, 0);
	trans[10][147]	= settr(12749,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][150]	= settr(12752,0,156,1,0,"break", 0, 2, 0);
	trans[10][157]	= settr(12759,0,156,1,0,".(goto)", 0, 2, 0);
	T = trans[10][156] = settr(12758,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12758,0,153,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12758,0,154,0,0,"DO", 0, 2, 0);
	T = trans[ 10][153] = settr(12755,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12755,2,151,0,0,"ATOMIC", 1, 2, 0);
	trans[10][151]	= settr(12753,0,156,303,303,"(!((states[0]==ABORTED)))", 1, 2, 0); /* m: 152 -> 156,0 */
	reached10[152] = 1;
	trans[10][152]	= settr(0,0,0,0,0,"assert(!(!((states[0]==ABORTED))))",0,0,0);
	trans[10][154]	= settr(12756,0,486,1,0,"(1)", 0, 2, 0);
	trans[10][155]	= settr(12757,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[10][158]	= settr(12760,0,168,1,0,"break", 0, 2, 0);
	trans[10][169]	= settr(12771,0,168,1,0,".(goto)", 0, 2, 0);
	T = trans[10][168] = settr(12770,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12770,0,161,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12770,0,162,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12770,0,164,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12770,0,166,0,0,"DO", 0, 2, 0);
	T = trans[ 10][161] = settr(12763,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12763,2,159,0,0,"ATOMIC", 1, 2, 0);
	trans[10][159]	= settr(12761,0,168,304,304,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 160 -> 168,0 */
	reached10[160] = 1;
	trans[10][160]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][162]	= settr(12764,0,486,305,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][163]	= settr(12765,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[10][164]	= settr(12766,0,454,306,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][165]	= settr(12767,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][166]	= settr(12768,0,498,1,0,"(1)", 0, 2, 0);
	trans[10][167]	= settr(12769,0,498,1,0,"goto T0_S480", 0, 2, 0);
	trans[10][170]	= settr(12772,0,180,1,0,"break", 0, 2, 0);
	trans[10][181]	= settr(12783,0,180,1,0,".(goto)", 0, 2, 0);
	T = trans[10][180] = settr(12782,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12782,0,173,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12782,0,174,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12782,0,176,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12782,0,178,0,0,"DO", 0, 2, 0);
	T = trans[ 10][173] = settr(12775,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12775,2,171,0,0,"ATOMIC", 1, 2, 0);
	trans[10][171]	= settr(12773,0,180,307,307,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 172 -> 180,0 */
	reached10[172] = 1;
	trans[10][172]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][174]	= settr(12776,0,76,308,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][175]	= settr(12777,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[10][176]	= settr(12778,0,258,309,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][177]	= settr(12779,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][178]	= settr(12780,0,180,1,0,"(1)", 0, 2, 0);
	trans[10][179]	= settr(12781,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[10][182]	= settr(12784,0,192,1,0,"break", 0, 2, 0);
	trans[10][193]	= settr(12795,0,192,1,0,".(goto)", 0, 2, 0);
	T = trans[10][192] = settr(12794,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12794,0,185,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12794,0,186,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12794,0,188,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12794,0,190,0,0,"DO", 0, 2, 0);
	T = trans[ 10][185] = settr(12787,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12787,2,183,0,0,"ATOMIC", 1, 2, 0);
	trans[10][183]	= settr(12785,0,192,310,310,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 184 -> 192,0 */
	reached10[184] = 1;
	trans[10][184]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][186]	= settr(12788,0,116,311,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][187]	= settr(12789,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[10][188]	= settr(12790,0,356,312,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][189]	= settr(12791,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][190]	= settr(12792,0,192,1,0,"(1)", 0, 2, 0);
	trans[10][191]	= settr(12793,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[10][194]	= settr(12796,0,204,1,0,"break", 0, 2, 0);
	trans[10][205]	= settr(12807,0,204,1,0,".(goto)", 0, 2, 0);
	T = trans[10][204] = settr(12806,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12806,0,197,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12806,0,198,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12806,0,200,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12806,0,202,0,0,"DO", 0, 2, 0);
	T = trans[ 10][197] = settr(12799,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12799,2,195,0,0,"ATOMIC", 1, 2, 0);
	trans[10][195]	= settr(12797,0,204,313,313,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 196 -> 204,0 */
	reached10[196] = 1;
	trans[10][196]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][198]	= settr(12800,0,156,314,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][199]	= settr(12801,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[10][200]	= settr(12802,0,454,315,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][201]	= settr(12803,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][202]	= settr(12804,0,204,1,0,"(1)", 0, 2, 0);
	trans[10][203]	= settr(12805,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[10][206]	= settr(12808,0,216,1,0,"break", 0, 2, 0);
	trans[10][217]	= settr(12819,0,216,1,0,".(goto)", 0, 2, 0);
	T = trans[10][216] = settr(12818,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12818,0,207,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12818,0,209,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12818,0,213,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12818,0,214,0,0,"DO", 0, 2, 0);
	trans[10][207]	= settr(12809,0,60,316,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][208]	= settr(12810,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[10][209]	= settr(12811,0,250,1,0,"(1)", 0, 2, 0);
	trans[10][210]	= settr(12812,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 10][213] = settr(12815,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12815,2,211,0,0,"ATOMIC", 1, 2, 0);
	trans[10][211]	= settr(12813,0,216,317,317,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 212 -> 216,0 */
	reached10[212] = 1;
	trans[10][212]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][214]	= settr(12816,0,258,318,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][215]	= settr(12817,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][218]	= settr(12820,0,236,1,0,"break", 0, 2, 0);
	trans[10][237]	= settr(12839,0,236,1,0,".(goto)", 0, 2, 0);
	T = trans[10][236] = settr(12838,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,219,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,221,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,225,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,226,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,228,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,230,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12838,0,232,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12838,0,234,0,0,"DO", 0, 2, 0);
	trans[10][219]	= settr(12821,0,60,319,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][220]	= settr(12822,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[10][221]	= settr(12823,0,250,320,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][222]	= settr(12824,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 10][225] = settr(12827,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12827,2,223,0,0,"ATOMIC", 1, 2, 0);
	trans[10][223]	= settr(12825,0,236,321,321,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 224 -> 236,0 */
	reached10[224] = 1;
	trans[10][224]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][226]	= settr(12828,0,258,322,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][227]	= settr(12829,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][228]	= settr(12830,0,236,323,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][229]	= settr(12831,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[10][230]	= settr(12832,0,282,1,0,"(1)", 0, 2, 0);
	trans[10][231]	= settr(12833,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[10][232]	= settr(12834,0,76,324,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][233]	= settr(12835,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[10][234]	= settr(12836,0,180,325,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][235]	= settr(12837,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[10][238]	= settr(12840,0,250,1,0,"break", 0, 2, 0);
	trans[10][251]	= settr(12853,0,250,1,0,".(goto)", 0, 2, 0);
	T = trans[10][250] = settr(12852,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12852,0,239,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12852,0,241,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12852,0,245,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12852,0,246,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12852,0,248,0,0,"DO", 0, 2, 0);
	trans[10][239]	= settr(12841,0,60,326,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][240]	= settr(12842,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[10][241]	= settr(12843,0,250,1,0,"(1)", 0, 2, 0);
	trans[10][242]	= settr(12844,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 10][245] = settr(12847,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12847,2,243,0,0,"ATOMIC", 1, 2, 0);
	trans[10][243]	= settr(12845,0,250,327,327,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 244 -> 250,0 */
	reached10[244] = 1;
	trans[10][244]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][246]	= settr(12848,0,68,328,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][247]	= settr(12849,0,68,1,0,"goto accept_S110", 0, 2, 0);
	trans[10][248]	= settr(12850,0,258,329,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][249]	= settr(12851,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][252]	= settr(12854,0,258,1,0,"break", 0, 2, 0);
	trans[10][259]	= settr(12861,0,258,1,0,".(goto)", 0, 2, 0);
	T = trans[10][258] = settr(12860,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12860,0,255,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12860,0,256,0,0,"DO", 0, 2, 0);
	T = trans[ 10][255] = settr(12857,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12857,2,253,0,0,"ATOMIC", 1, 2, 0);
	trans[10][253]	= settr(12855,0,258,330,330,"(!((states[2]==0)))", 1, 2, 0); /* m: 254 -> 258,0 */
	reached10[254] = 1;
	trans[10][254]	= settr(0,0,0,0,0,"assert(!(!((states[2]==0))))",0,0,0);
	trans[10][256]	= settr(12858,0,258,1,0,"(1)", 0, 2, 0);
	trans[10][257]	= settr(12859,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][260]	= settr(12862,0,282,1,0,"break", 0, 2, 0);
	trans[10][283]	= settr(12885,0,282,1,0,".(goto)", 0, 2, 0);
	T = trans[10][282] = settr(12884,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,261,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,263,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,267,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,268,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,270,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,272,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,274,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,276,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12884,0,278,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12884,0,280,0,0,"DO", 0, 2, 0);
	trans[10][261]	= settr(12863,0,60,331,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][262]	= settr(12864,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[10][263]	= settr(12865,0,250,332,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][264]	= settr(12866,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 10][267] = settr(12869,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12869,2,265,0,0,"ATOMIC", 1, 2, 0);
	trans[10][265]	= settr(12867,0,282,333,333,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 266 -> 282,0 */
	reached10[266] = 1;
	trans[10][266]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][268]	= settr(12870,0,258,334,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][269]	= settr(12871,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][270]	= settr(12872,0,236,335,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][271]	= settr(12873,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[10][272]	= settr(12874,0,282,1,0,"(1)", 0, 2, 0);
	trans[10][273]	= settr(12875,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[10][274]	= settr(12876,0,68,336,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][275]	= settr(12877,0,68,1,0,"goto accept_S110", 0, 2, 0);
	trans[10][276]	= settr(12878,0,76,337,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][277]	= settr(12879,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[10][278]	= settr(12880,0,88,338,0,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[10][279]	= settr(12881,0,88,1,0,"goto accept_S158", 0, 2, 0);
	trans[10][280]	= settr(12882,0,180,339,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][281]	= settr(12883,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[10][284]	= settr(12886,0,290,1,0,"break", 0, 2, 0);
	trans[10][291]	= settr(12893,0,290,1,0,".(goto)", 0, 2, 0);
	T = trans[10][290] = settr(12892,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12892,0,287,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12892,0,288,0,0,"DO", 0, 2, 0);
	T = trans[ 10][287] = settr(12889,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12889,2,285,0,0,"ATOMIC", 1, 2, 0);
	trans[10][285]	= settr(12887,0,290,340,340,"(!((states[2]==ABORTED)))", 1, 2, 0); /* m: 286 -> 290,0 */
	reached10[286] = 1;
	trans[10][286]	= settr(0,0,0,0,0,"assert(!(!((states[2]==ABORTED))))",0,0,0);
	trans[10][288]	= settr(12890,0,290,1,0,"(1)", 0, 2, 0);
	trans[10][289]	= settr(12891,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[10][292]	= settr(12894,0,302,1,0,"break", 0, 2, 0);
	trans[10][303]	= settr(12905,0,302,1,0,".(goto)", 0, 2, 0);
	T = trans[10][302] = settr(12904,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12904,0,295,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12904,0,296,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12904,0,298,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12904,0,300,0,0,"DO", 0, 2, 0);
	T = trans[ 10][295] = settr(12897,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12897,2,293,0,0,"ATOMIC", 1, 2, 0);
	trans[10][293]	= settr(12895,0,302,341,341,"((!((states[2]==0))&&!((states[2]==ABORTED))))", 1, 2, 0); /* m: 294 -> 302,0 */
	reached10[294] = 1;
	trans[10][294]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==ABORTED)))))",0,0,0);
	trans[10][296]	= settr(12898,0,290,342,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[10][297]	= settr(12899,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[10][298]	= settr(12900,0,258,343,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[10][299]	= settr(12901,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[10][300]	= settr(12902,0,302,1,0,"(1)", 0, 2, 0);
	trans[10][301]	= settr(12903,0,302,1,0,"goto T0_S158", 0, 2, 0);
	trans[10][304]	= settr(12906,0,314,1,0,"break", 0, 2, 0);
	trans[10][315]	= settr(12917,0,314,1,0,".(goto)", 0, 2, 0);
	T = trans[10][314] = settr(12916,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12916,0,305,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12916,0,307,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12916,0,311,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12916,0,312,0,0,"DO", 0, 2, 0);
	trans[10][305]	= settr(12907,0,100,344,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][306]	= settr(12908,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[10][307]	= settr(12909,0,348,1,0,"(1)", 0, 2, 0);
	trans[10][308]	= settr(12910,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 10][311] = settr(12913,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12913,2,309,0,0,"ATOMIC", 1, 2, 0);
	trans[10][309]	= settr(12911,0,314,345,345,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 310 -> 314,0 */
	reached10[310] = 1;
	trans[10][310]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][312]	= settr(12914,0,356,346,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][313]	= settr(12915,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][316]	= settr(12918,0,334,1,0,"break", 0, 2, 0);
	trans[10][335]	= settr(12937,0,334,1,0,".(goto)", 0, 2, 0);
	T = trans[10][334] = settr(12936,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,317,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,319,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,323,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,324,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,326,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,328,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12936,0,330,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12936,0,332,0,0,"DO", 0, 2, 0);
	trans[10][317]	= settr(12919,0,100,347,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][318]	= settr(12920,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[10][319]	= settr(12921,0,348,348,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][320]	= settr(12922,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 10][323] = settr(12925,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12925,2,321,0,0,"ATOMIC", 1, 2, 0);
	trans[10][321]	= settr(12923,0,334,349,349,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 322 -> 334,0 */
	reached10[322] = 1;
	trans[10][322]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][324]	= settr(12926,0,356,350,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][325]	= settr(12927,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][326]	= settr(12928,0,334,351,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][327]	= settr(12929,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[10][328]	= settr(12930,0,380,1,0,"(1)", 0, 2, 0);
	trans[10][329]	= settr(12931,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[10][330]	= settr(12932,0,116,352,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][331]	= settr(12933,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[10][332]	= settr(12934,0,192,353,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][333]	= settr(12935,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[10][336]	= settr(12938,0,348,1,0,"break", 0, 2, 0);
	trans[10][349]	= settr(12951,0,348,1,0,".(goto)", 0, 2, 0);
	T = trans[10][348] = settr(12950,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12950,0,337,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12950,0,339,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12950,0,343,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12950,0,344,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12950,0,346,0,0,"DO", 0, 2, 0);
	trans[10][337]	= settr(12939,0,100,354,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][338]	= settr(12940,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[10][339]	= settr(12941,0,348,1,0,"(1)", 0, 2, 0);
	trans[10][340]	= settr(12942,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 10][343] = settr(12945,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12945,2,341,0,0,"ATOMIC", 1, 2, 0);
	trans[10][341]	= settr(12943,0,348,355,355,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 342 -> 348,0 */
	reached10[342] = 1;
	trans[10][342]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][344]	= settr(12946,0,108,356,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][345]	= settr(12947,0,108,1,0,"goto accept_S271", 0, 2, 0);
	trans[10][346]	= settr(12948,0,356,357,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][347]	= settr(12949,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][350]	= settr(12952,0,356,1,0,"break", 0, 2, 0);
	trans[10][357]	= settr(12959,0,356,1,0,".(goto)", 0, 2, 0);
	T = trans[10][356] = settr(12958,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12958,0,353,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12958,0,354,0,0,"DO", 0, 2, 0);
	T = trans[ 10][353] = settr(12955,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12955,2,351,0,0,"ATOMIC", 1, 2, 0);
	trans[10][351]	= settr(12953,0,356,358,358,"(!((states[1]==0)))", 1, 2, 0); /* m: 352 -> 356,0 */
	reached10[352] = 1;
	trans[10][352]	= settr(0,0,0,0,0,"assert(!(!((states[1]==0))))",0,0,0);
	trans[10][354]	= settr(12956,0,356,1,0,"(1)", 0, 2, 0);
	trans[10][355]	= settr(12957,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][358]	= settr(12960,0,380,1,0,"break", 0, 2, 0);
	trans[10][381]	= settr(12983,0,380,1,0,".(goto)", 0, 2, 0);
	T = trans[10][380] = settr(12982,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,359,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,361,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,365,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,366,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,368,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,370,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,372,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,374,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12982,0,376,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12982,0,378,0,0,"DO", 0, 2, 0);
	trans[10][359]	= settr(12961,0,100,359,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][360]	= settr(12962,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[10][361]	= settr(12963,0,348,360,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][362]	= settr(12964,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 10][365] = settr(12967,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12967,2,363,0,0,"ATOMIC", 1, 2, 0);
	trans[10][363]	= settr(12965,0,380,361,361,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 364 -> 380,0 */
	reached10[364] = 1;
	trans[10][364]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][366]	= settr(12968,0,356,362,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][367]	= settr(12969,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][368]	= settr(12970,0,334,363,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][369]	= settr(12971,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[10][370]	= settr(12972,0,380,1,0,"(1)", 0, 2, 0);
	trans[10][371]	= settr(12973,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[10][372]	= settr(12974,0,108,364,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][373]	= settr(12975,0,108,1,0,"goto accept_S271", 0, 2, 0);
	trans[10][374]	= settr(12976,0,116,365,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][375]	= settr(12977,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[10][376]	= settr(12978,0,128,366,0,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[10][377]	= settr(12979,0,128,1,0,"goto accept_S319", 0, 2, 0);
	trans[10][378]	= settr(12980,0,192,367,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][379]	= settr(12981,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[10][382]	= settr(12984,0,388,1,0,"break", 0, 2, 0);
	trans[10][389]	= settr(12991,0,388,1,0,".(goto)", 0, 2, 0);
	T = trans[10][388] = settr(12990,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12990,0,385,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12990,0,386,0,0,"DO", 0, 2, 0);
	T = trans[ 10][385] = settr(12987,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12987,2,383,0,0,"ATOMIC", 1, 2, 0);
	trans[10][383]	= settr(12985,0,388,368,368,"(!((states[1]==ABORTED)))", 1, 2, 0); /* m: 384 -> 388,0 */
	reached10[384] = 1;
	trans[10][384]	= settr(0,0,0,0,0,"assert(!(!((states[1]==ABORTED))))",0,0,0);
	trans[10][386]	= settr(12988,0,388,1,0,"(1)", 0, 2, 0);
	trans[10][387]	= settr(12989,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[10][390]	= settr(12992,0,400,1,0,"break", 0, 2, 0);
	trans[10][401]	= settr(13003,0,400,1,0,".(goto)", 0, 2, 0);
	T = trans[10][400] = settr(13002,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13002,0,393,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13002,0,394,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13002,0,396,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13002,0,398,0,0,"DO", 0, 2, 0);
	T = trans[ 10][393] = settr(12995,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12995,2,391,0,0,"ATOMIC", 1, 2, 0);
	trans[10][391]	= settr(12993,0,400,369,369,"((!((states[1]==0))&&!((states[1]==ABORTED))))", 1, 2, 0); /* m: 392 -> 400,0 */
	reached10[392] = 1;
	trans[10][392]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==ABORTED)))))",0,0,0);
	trans[10][394]	= settr(12996,0,388,370,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[10][395]	= settr(12997,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[10][396]	= settr(12998,0,356,371,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[10][397]	= settr(12999,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[10][398]	= settr(13000,0,400,1,0,"(1)", 0, 2, 0);
	trans[10][399]	= settr(13001,0,400,1,0,"goto T0_S319", 0, 2, 0);
	trans[10][402]	= settr(13004,0,412,1,0,"break", 0, 2, 0);
	trans[10][413]	= settr(13015,0,412,1,0,".(goto)", 0, 2, 0);
	T = trans[10][412] = settr(13014,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13014,0,403,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13014,0,405,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13014,0,409,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13014,0,410,0,0,"DO", 0, 2, 0);
	trans[10][403]	= settr(13005,0,140,372,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][404]	= settr(13006,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[10][405]	= settr(13007,0,446,1,0,"(1)", 0, 2, 0);
	trans[10][406]	= settr(13008,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 10][409] = settr(13011,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13011,2,407,0,0,"ATOMIC", 1, 2, 0);
	trans[10][407]	= settr(13009,0,412,373,373,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 408 -> 412,0 */
	reached10[408] = 1;
	trans[10][408]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][410]	= settr(13012,0,454,374,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][411]	= settr(13013,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][414]	= settr(13016,0,432,1,0,"break", 0, 2, 0);
	trans[10][433]	= settr(13035,0,432,1,0,".(goto)", 0, 2, 0);
	T = trans[10][432] = settr(13034,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,415,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,417,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,421,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,422,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,424,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,426,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13034,0,428,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13034,0,430,0,0,"DO", 0, 2, 0);
	trans[10][415]	= settr(13017,0,140,375,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][416]	= settr(13018,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[10][417]	= settr(13019,0,446,376,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][418]	= settr(13020,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 10][421] = settr(13023,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13023,2,419,0,0,"ATOMIC", 1, 2, 0);
	trans[10][419]	= settr(13021,0,432,377,377,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 420 -> 432,0 */
	reached10[420] = 1;
	trans[10][420]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][422]	= settr(13024,0,454,378,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][423]	= settr(13025,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][424]	= settr(13026,0,432,379,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][425]	= settr(13027,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[10][426]	= settr(13028,0,478,1,0,"(1)", 0, 2, 0);
	trans[10][427]	= settr(13029,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[10][428]	= settr(13030,0,156,380,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][429]	= settr(13031,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[10][430]	= settr(13032,0,204,381,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][431]	= settr(13033,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[10][434]	= settr(13036,0,446,1,0,"break", 0, 2, 0);
	trans[10][447]	= settr(13049,0,446,1,0,".(goto)", 0, 2, 0);
	T = trans[10][446] = settr(13048,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13048,0,435,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13048,0,437,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13048,0,441,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13048,0,442,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13048,0,444,0,0,"DO", 0, 2, 0);
	trans[10][435]	= settr(13037,0,140,382,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][436]	= settr(13038,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[10][437]	= settr(13039,0,446,1,0,"(1)", 0, 2, 0);
	trans[10][438]	= settr(13040,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 10][441] = settr(13043,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13043,2,439,0,0,"ATOMIC", 1, 2, 0);
	trans[10][439]	= settr(13041,0,446,383,383,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 440 -> 446,0 */
	reached10[440] = 1;
	trans[10][440]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][442]	= settr(13044,0,148,384,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][443]	= settr(13045,0,148,1,0,"goto accept_S432", 0, 2, 0);
	trans[10][444]	= settr(13046,0,454,385,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][445]	= settr(13047,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][448]	= settr(13050,0,454,1,0,"break", 0, 2, 0);
	trans[10][455]	= settr(13057,0,454,1,0,".(goto)", 0, 2, 0);
	T = trans[10][454] = settr(13056,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13056,0,451,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13056,0,452,0,0,"DO", 0, 2, 0);
	T = trans[ 10][451] = settr(13053,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13053,2,449,0,0,"ATOMIC", 1, 2, 0);
	trans[10][449]	= settr(13051,0,454,386,386,"(!((states[0]==0)))", 1, 2, 0); /* m: 450 -> 454,0 */
	reached10[450] = 1;
	trans[10][450]	= settr(0,0,0,0,0,"assert(!(!((states[0]==0))))",0,0,0);
	trans[10][452]	= settr(13054,0,454,1,0,"(1)", 0, 2, 0);
	trans[10][453]	= settr(13055,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][456]	= settr(13058,0,478,1,0,"break", 0, 2, 0);
	trans[10][479]	= settr(13081,0,478,1,0,".(goto)", 0, 2, 0);
	T = trans[10][478] = settr(13080,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,457,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,459,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,463,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,464,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,466,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,468,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,470,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,472,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13080,0,474,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13080,0,476,0,0,"DO", 0, 2, 0);
	trans[10][457]	= settr(13059,0,140,387,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][458]	= settr(13060,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[10][459]	= settr(13061,0,446,388,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][460]	= settr(13062,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 10][463] = settr(13065,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13065,2,461,0,0,"ATOMIC", 1, 2, 0);
	trans[10][461]	= settr(13063,0,478,389,389,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 462 -> 478,0 */
	reached10[462] = 1;
	trans[10][462]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][464]	= settr(13066,0,454,390,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][465]	= settr(13067,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][466]	= settr(13068,0,432,391,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][467]	= settr(13069,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[10][468]	= settr(13070,0,478,1,0,"(1)", 0, 2, 0);
	trans[10][469]	= settr(13071,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[10][470]	= settr(13072,0,148,392,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][471]	= settr(13073,0,148,1,0,"goto accept_S432", 0, 2, 0);
	trans[10][472]	= settr(13074,0,156,393,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][473]	= settr(13075,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[10][474]	= settr(13076,0,168,394,0,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[10][475]	= settr(13077,0,168,1,0,"goto accept_S480", 0, 2, 0);
	trans[10][476]	= settr(13078,0,204,395,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][477]	= settr(13079,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[10][480]	= settr(13082,0,486,1,0,"break", 0, 2, 0);
	trans[10][487]	= settr(13089,0,486,1,0,".(goto)", 0, 2, 0);
	T = trans[10][486] = settr(13088,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13088,0,483,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13088,0,484,0,0,"DO", 0, 2, 0);
	T = trans[ 10][483] = settr(13085,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13085,2,481,0,0,"ATOMIC", 1, 2, 0);
	trans[10][481]	= settr(13083,0,486,396,396,"(!((states[0]==ABORTED)))", 1, 2, 0); /* m: 482 -> 486,0 */
	reached10[482] = 1;
	trans[10][482]	= settr(0,0,0,0,0,"assert(!(!((states[0]==ABORTED))))",0,0,0);
	trans[10][484]	= settr(13086,0,486,1,0,"(1)", 0, 2, 0);
	trans[10][485]	= settr(13087,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[10][488]	= settr(13090,0,498,1,0,"break", 0, 2, 0);
	trans[10][499]	= settr(13101,0,498,1,0,".(goto)", 0, 2, 0);
	T = trans[10][498] = settr(13100,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13100,0,491,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13100,0,492,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(13100,0,494,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(13100,0,496,0,0,"DO", 0, 2, 0);
	T = trans[ 10][491] = settr(13093,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(13093,2,489,0,0,"ATOMIC", 1, 2, 0);
	trans[10][489]	= settr(13091,0,498,397,397,"((!((states[0]==0))&&!((states[0]==ABORTED))))", 1, 2, 0); /* m: 490 -> 498,0 */
	reached10[490] = 1;
	trans[10][490]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==ABORTED)))))",0,0,0);
	trans[10][492]	= settr(13094,0,486,398,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[10][493]	= settr(13095,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[10][494]	= settr(13096,0,454,399,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[10][495]	= settr(13097,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[10][496]	= settr(13098,0,498,1,0,"(1)", 0, 2, 0);
	trans[10][497]	= settr(13099,0,498,1,0,"goto T0_S480", 0, 2, 0);
	trans[10][500]	= settr(13102,0,501,1,0,"break", 0, 2, 0);
	trans[10][501]	= settr(13103,0,502,1,0,"(1)", 0, 2, 0);
	trans[10][502]	= settr(13104,0,0,400,400,"-end-", 0, 3500, 0);

	/* proctype 9: fsm_aborting */

	trans[9] = (Trans **) emalloc(41*sizeof(Trans *));

	trans[9][13]	= settr(12575,0,12,1,0,".(goto)", 0, 2, 0);
	T = trans[9][12] = settr(12574,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12574,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12574,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12574,0,6,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12574,0,8,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12574,0,10,0,0,"DO", 0, 2, 0);
	trans[9][1]	= settr(12563,0,20,401,0,"((!(!((states[2]==ABORTING)))&&!((states[2]==ABORTED))))", 1, 2, 0);
	trans[9][2]	= settr(12564,0,20,1,0,"goto accept_S6", 0, 2, 0);
	T = trans[ 9][5] = settr(12567,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12567,2,3,0,0,"ATOMIC", 1, 2, 0);
	trans[9][3]	= settr(12565,0,12,402,402,"((((!(!((states[0]==ABORTING)))&&!((states[0]==ABORTED)))&&!((states[0]==ABORTING)))||(((!(!((states[1]==ABORTING)))&&!((states[1]==ABORTED)))&&!((states[1]==ABORTING)))||((!(!((states[2]==ABORTING)))&&!((states[2]==ABORTED)))&&!((states[2]==ABORTING))))))", 1, 2, 0); /* m: 4 -> 12,0 */
	reached9[4] = 1;
	trans[9][4]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==ABORTING)))&&!((states[0]==ABORTED)))&&!((states[0]==ABORTING)))||(((!(!((states[1]==ABORTING)))&&!((states[1]==ABORTED)))&&!((states[1]==ABORTING)))||((!(!((states[2]==ABORTING)))&&!((states[2]==ABORTED)))&&!((states[2]==ABORTING)))))))",0,0,0);
	trans[9][6]	= settr(12568,0,28,403,0,"((!(!((states[1]==ABORTING)))&&!((states[1]==ABORTED))))", 1, 2, 0);
	trans[9][7]	= settr(12569,0,28,1,0,"goto accept_S11", 0, 2, 0);
	trans[9][8]	= settr(12570,0,36,404,0,"((!(!((states[0]==ABORTING)))&&!((states[0]==ABORTED))))", 1, 2, 0);
	trans[9][9]	= settr(12571,0,36,1,0,"goto accept_S16", 0, 2, 0);
	trans[9][10]	= settr(12572,0,12,1,0,"(1)", 0, 2, 0);
	trans[9][11]	= settr(12573,0,12,1,0,"goto T0_init", 0, 2, 0);
	trans[9][14]	= settr(12576,0,20,1,0,"break", 0, 2, 0);
	trans[9][21]	= settr(12583,0,20,1,0,".(goto)", 0, 2, 0);
	T = trans[9][20] = settr(12582,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12582,0,15,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12582,0,19,0,0,"DO", 0, 2, 0);
	trans[9][15]	= settr(12577,0,20,405,0,"(!((states[2]==ABORTED)))", 1, 2, 0);
	trans[9][16]	= settr(12578,0,20,1,0,"goto accept_S6", 0, 2, 0);
	T = trans[ 9][19] = settr(12581,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12581,2,17,0,0,"ATOMIC", 1, 2, 0);
	trans[9][17]	= settr(12579,0,20,406,406,"((!((states[2]==ABORTED))&&!((states[2]==ABORTING))))", 1, 2, 0); /* m: 18 -> 20,0 */
	reached9[18] = 1;
	trans[9][18]	= settr(0,0,0,0,0,"assert(!((!((states[2]==ABORTED))&&!((states[2]==ABORTING)))))",0,0,0);
	trans[9][22]	= settr(12584,0,28,1,0,"break", 0, 2, 0);
	trans[9][29]	= settr(12591,0,28,1,0,".(goto)", 0, 2, 0);
	T = trans[9][28] = settr(12590,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12590,0,23,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12590,0,27,0,0,"DO", 0, 2, 0);
	trans[9][23]	= settr(12585,0,28,407,0,"(!((states[1]==ABORTED)))", 1, 2, 0);
	trans[9][24]	= settr(12586,0,28,1,0,"goto accept_S11", 0, 2, 0);
	T = trans[ 9][27] = settr(12589,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12589,2,25,0,0,"ATOMIC", 1, 2, 0);
	trans[9][25]	= settr(12587,0,28,408,408,"((!((states[1]==ABORTED))&&!((states[1]==ABORTING))))", 1, 2, 0); /* m: 26 -> 28,0 */
	reached9[26] = 1;
	trans[9][26]	= settr(0,0,0,0,0,"assert(!((!((states[1]==ABORTED))&&!((states[1]==ABORTING)))))",0,0,0);
	trans[9][30]	= settr(12592,0,36,1,0,"break", 0, 2, 0);
	trans[9][37]	= settr(12599,0,36,1,0,".(goto)", 0, 2, 0);
	T = trans[9][36] = settr(12598,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12598,0,31,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12598,0,35,0,0,"DO", 0, 2, 0);
	trans[9][31]	= settr(12593,0,36,409,0,"(!((states[0]==ABORTED)))", 1, 2, 0);
	trans[9][32]	= settr(12594,0,36,1,0,"goto accept_S16", 0, 2, 0);
	T = trans[ 9][35] = settr(12597,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12597,2,33,0,0,"ATOMIC", 1, 2, 0);
	trans[9][33]	= settr(12595,0,36,410,410,"((!((states[0]==ABORTED))&&!((states[0]==ABORTING))))", 1, 2, 0); /* m: 34 -> 36,0 */
	reached9[34] = 1;
	trans[9][34]	= settr(0,0,0,0,0,"assert(!((!((states[0]==ABORTED))&&!((states[0]==ABORTING)))))",0,0,0);
	trans[9][38]	= settr(12600,0,39,1,0,"break", 0, 2, 0);
	trans[9][39]	= settr(12601,0,40,1,0,"(1)", 0, 2, 0);
	trans[9][40]	= settr(12602,0,0,411,411,"-end-", 0, 3500, 0);

	/* proctype 8: fsm_stopped */

	trans[8] = (Trans **) emalloc(503*sizeof(Trans *));

	trans[8][49]	= settr(12109,0,48,1,0,".(goto)", 0, 2, 0);
	T = trans[8][48] = settr(12108,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,7,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,8,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,10,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,12,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,20,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,22,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,24,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,26,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,28,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,30,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,32,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,34,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,36,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,38,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,40,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,42,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12108,0,44,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12108,0,46,0,0,"DO", 0, 2, 0);
	trans[8][1]	= settr(12061,0,60,412,0,"(((!(!((states[2]==STOPPED)))&&!((states[2]==0)))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][2]	= settr(12062,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[8][3]	= settr(12063,0,250,413,0,"((!(!((states[2]==STOPPED)))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][4]	= settr(12064,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 8][7] = settr(12067,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12067,2,5,0,0,"ATOMIC", 1, 2, 0);
	trans[8][5]	= settr(12065,0,48,414,414,"((((!(!((states[0]==STOPPED)))&&!((states[0]==0)))&&!((states[0]==STOPPED)))||(((!(!((states[1]==STOPPED)))&&!((states[1]==0)))&&!((states[1]==STOPPED)))||((!(!((states[2]==STOPPED)))&&!((states[2]==0)))&&!((states[2]==STOPPED))))))", 1, 2, 0); /* m: 6 -> 48,0 */
	reached8[6] = 1;
	trans[8][6]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==STOPPED)))&&!((states[0]==0)))&&!((states[0]==STOPPED)))||(((!(!((states[1]==STOPPED)))&&!((states[1]==0)))&&!((states[1]==STOPPED)))||((!(!((states[2]==STOPPED)))&&!((states[2]==0)))&&!((states[2]==STOPPED)))))))",0,0,0);
	trans[8][8]	= settr(12068,0,258,415,0,"((!(!((states[2]==STOPPED)))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][9]	= settr(12069,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][10]	= settr(12070,0,236,416,0,"((!(!((states[2]==STOPPED)))&&!((states[2]==0))))", 1, 2, 0);
	trans[8][11]	= settr(12071,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[8][12]	= settr(12072,0,282,417,0,"(!(!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][13]	= settr(12073,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[8][14]	= settr(12074,0,76,418,0,"(((!(!((states[2]==STOPPED)))&&!((states[2]==0)))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][15]	= settr(12075,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[8][16]	= settr(12076,0,180,419,0,"((!(!((states[2]==STOPPED)))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][17]	= settr(12077,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[8][18]	= settr(12078,0,100,420,0,"(((!(!((states[1]==STOPPED)))&&!((states[1]==0)))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][19]	= settr(12079,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[8][20]	= settr(12080,0,348,421,0,"((!(!((states[1]==STOPPED)))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][21]	= settr(12081,0,348,1,0,"goto T0_S243", 0, 2, 0);
	trans[8][22]	= settr(12082,0,356,422,0,"((!(!((states[1]==STOPPED)))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][23]	= settr(12083,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][24]	= settr(12084,0,334,423,0,"((!(!((states[1]==STOPPED)))&&!((states[1]==0))))", 1, 2, 0);
	trans[8][25]	= settr(12085,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[8][26]	= settr(12086,0,380,424,0,"(!(!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][27]	= settr(12087,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[8][28]	= settr(12088,0,116,425,0,"(((!(!((states[1]==STOPPED)))&&!((states[1]==0)))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][29]	= settr(12089,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[8][30]	= settr(12090,0,192,426,0,"((!(!((states[1]==STOPPED)))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][31]	= settr(12091,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[8][32]	= settr(12092,0,140,427,0,"(((!(!((states[0]==STOPPED)))&&!((states[0]==0)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][33]	= settr(12093,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[8][34]	= settr(12094,0,446,428,0,"((!(!((states[0]==STOPPED)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][35]	= settr(12095,0,446,1,0,"goto T0_S404", 0, 2, 0);
	trans[8][36]	= settr(12096,0,454,429,0,"((!(!((states[0]==STOPPED)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][37]	= settr(12097,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][38]	= settr(12098,0,432,430,0,"((!(!((states[0]==STOPPED)))&&!((states[0]==0))))", 1, 2, 0);
	trans[8][39]	= settr(12099,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[8][40]	= settr(12100,0,478,431,0,"(!(!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][41]	= settr(12101,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[8][42]	= settr(12102,0,156,432,0,"(((!(!((states[0]==STOPPED)))&&!((states[0]==0)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][43]	= settr(12103,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[8][44]	= settr(12104,0,204,433,0,"((!(!((states[0]==STOPPED)))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][45]	= settr(12105,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[8][46]	= settr(12106,0,48,1,0,"(1)", 0, 2, 0);
	trans[8][47]	= settr(12107,0,48,1,0,"goto T0_init", 0, 2, 0);
	trans[8][50]	= settr(12110,0,60,1,0,"break", 0, 2, 0);
	trans[8][61]	= settr(12121,0,60,1,0,".(goto)", 0, 2, 0);
	T = trans[8][60] = settr(12120,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12120,0,51,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12120,0,53,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12120,0,57,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12120,0,58,0,0,"DO", 0, 2, 0);
	trans[8][51]	= settr(12111,0,216,434,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][52]	= settr(12112,0,216,1,0,"goto T0_S52", 0, 2, 0);
	trans[8][53]	= settr(12113,0,250,1,0,"(1)", 0, 2, 0);
	trans[8][54]	= settr(12114,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 8][57] = settr(12117,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12117,2,55,0,0,"ATOMIC", 1, 2, 0);
	trans[8][55]	= settr(12115,0,60,435,435,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 56 -> 60,0 */
	reached8[56] = 1;
	trans[8][56]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][58]	= settr(12118,0,258,436,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][59]	= settr(12119,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][62]	= settr(12122,0,68,1,0,"break", 0, 2, 0);
	trans[8][69]	= settr(12129,0,68,1,0,".(goto)", 0, 2, 0);
	T = trans[8][68] = settr(12128,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12128,0,65,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12128,0,66,0,0,"DO", 0, 2, 0);
	T = trans[ 8][65] = settr(12125,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12125,2,63,0,0,"ATOMIC", 1, 2, 0);
	trans[8][63]	= settr(12123,0,68,437,437,"(!((states[2]==0)))", 1, 2, 0); /* m: 64 -> 68,0 */
	reached8[64] = 1;
	trans[8][64]	= settr(0,0,0,0,0,"assert(!(!((states[2]==0))))",0,0,0);
	trans[8][66]	= settr(12126,0,258,1,0,"(1)", 0, 2, 0);
	trans[8][67]	= settr(12127,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][70]	= settr(12130,0,76,1,0,"break", 0, 2, 0);
	trans[8][77]	= settr(12137,0,76,1,0,".(goto)", 0, 2, 0);
	T = trans[8][76] = settr(12136,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12136,0,73,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12136,0,74,0,0,"DO", 0, 2, 0);
	T = trans[ 8][73] = settr(12133,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12133,2,71,0,0,"ATOMIC", 1, 2, 0);
	trans[8][71]	= settr(12131,0,76,438,438,"(!((states[2]==STOPPED)))", 1, 2, 0); /* m: 72 -> 76,0 */
	reached8[72] = 1;
	trans[8][72]	= settr(0,0,0,0,0,"assert(!(!((states[2]==STOPPED))))",0,0,0);
	trans[8][74]	= settr(12134,0,290,1,0,"(1)", 0, 2, 0);
	trans[8][75]	= settr(12135,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[8][78]	= settr(12138,0,88,1,0,"break", 0, 2, 0);
	trans[8][89]	= settr(12149,0,88,1,0,".(goto)", 0, 2, 0);
	T = trans[8][88] = settr(12148,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12148,0,81,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12148,0,82,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12148,0,84,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12148,0,86,0,0,"DO", 0, 2, 0);
	T = trans[ 8][81] = settr(12141,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12141,2,79,0,0,"ATOMIC", 1, 2, 0);
	trans[8][79]	= settr(12139,0,88,439,439,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 80 -> 88,0 */
	reached8[80] = 1;
	trans[8][80]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][82]	= settr(12142,0,290,440,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][83]	= settr(12143,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[8][84]	= settr(12144,0,258,441,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][85]	= settr(12145,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][86]	= settr(12146,0,302,1,0,"(1)", 0, 2, 0);
	trans[8][87]	= settr(12147,0,302,1,0,"goto T0_S158", 0, 2, 0);
	trans[8][90]	= settr(12150,0,100,1,0,"break", 0, 2, 0);
	trans[8][101]	= settr(12161,0,100,1,0,".(goto)", 0, 2, 0);
	T = trans[8][100] = settr(12160,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12160,0,91,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12160,0,93,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12160,0,97,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12160,0,98,0,0,"DO", 0, 2, 0);
	trans[8][91]	= settr(12151,0,314,442,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][92]	= settr(12152,0,314,1,0,"goto T0_S213", 0, 2, 0);
	trans[8][93]	= settr(12153,0,348,1,0,"(1)", 0, 2, 0);
	trans[8][94]	= settr(12154,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 8][97] = settr(12157,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12157,2,95,0,0,"ATOMIC", 1, 2, 0);
	trans[8][95]	= settr(12155,0,100,443,443,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 96 -> 100,0 */
	reached8[96] = 1;
	trans[8][96]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][98]	= settr(12158,0,356,444,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][99]	= settr(12159,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][102]	= settr(12162,0,108,1,0,"break", 0, 2, 0);
	trans[8][109]	= settr(12169,0,108,1,0,".(goto)", 0, 2, 0);
	T = trans[8][108] = settr(12168,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12168,0,105,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12168,0,106,0,0,"DO", 0, 2, 0);
	T = trans[ 8][105] = settr(12165,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12165,2,103,0,0,"ATOMIC", 1, 2, 0);
	trans[8][103]	= settr(12163,0,108,445,445,"(!((states[1]==0)))", 1, 2, 0); /* m: 104 -> 108,0 */
	reached8[104] = 1;
	trans[8][104]	= settr(0,0,0,0,0,"assert(!(!((states[1]==0))))",0,0,0);
	trans[8][106]	= settr(12166,0,356,1,0,"(1)", 0, 2, 0);
	trans[8][107]	= settr(12167,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][110]	= settr(12170,0,116,1,0,"break", 0, 2, 0);
	trans[8][117]	= settr(12177,0,116,1,0,".(goto)", 0, 2, 0);
	T = trans[8][116] = settr(12176,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12176,0,113,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12176,0,114,0,0,"DO", 0, 2, 0);
	T = trans[ 8][113] = settr(12173,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12173,2,111,0,0,"ATOMIC", 1, 2, 0);
	trans[8][111]	= settr(12171,0,116,446,446,"(!((states[1]==STOPPED)))", 1, 2, 0); /* m: 112 -> 116,0 */
	reached8[112] = 1;
	trans[8][112]	= settr(0,0,0,0,0,"assert(!(!((states[1]==STOPPED))))",0,0,0);
	trans[8][114]	= settr(12174,0,388,1,0,"(1)", 0, 2, 0);
	trans[8][115]	= settr(12175,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[8][118]	= settr(12178,0,128,1,0,"break", 0, 2, 0);
	trans[8][129]	= settr(12189,0,128,1,0,".(goto)", 0, 2, 0);
	T = trans[8][128] = settr(12188,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12188,0,121,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12188,0,122,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12188,0,124,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12188,0,126,0,0,"DO", 0, 2, 0);
	T = trans[ 8][121] = settr(12181,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12181,2,119,0,0,"ATOMIC", 1, 2, 0);
	trans[8][119]	= settr(12179,0,128,447,447,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 120 -> 128,0 */
	reached8[120] = 1;
	trans[8][120]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][122]	= settr(12182,0,388,448,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][123]	= settr(12183,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[8][124]	= settr(12184,0,356,449,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][125]	= settr(12185,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][126]	= settr(12186,0,400,1,0,"(1)", 0, 2, 0);
	trans[8][127]	= settr(12187,0,400,1,0,"goto T0_S319", 0, 2, 0);
	trans[8][130]	= settr(12190,0,140,1,0,"break", 0, 2, 0);
	trans[8][141]	= settr(12201,0,140,1,0,".(goto)", 0, 2, 0);
	T = trans[8][140] = settr(12200,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12200,0,131,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12200,0,133,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12200,0,137,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12200,0,138,0,0,"DO", 0, 2, 0);
	trans[8][131]	= settr(12191,0,412,450,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][132]	= settr(12192,0,412,1,0,"goto T0_S374", 0, 2, 0);
	trans[8][133]	= settr(12193,0,446,1,0,"(1)", 0, 2, 0);
	trans[8][134]	= settr(12194,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 8][137] = settr(12197,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12197,2,135,0,0,"ATOMIC", 1, 2, 0);
	trans[8][135]	= settr(12195,0,140,451,451,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 136 -> 140,0 */
	reached8[136] = 1;
	trans[8][136]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][138]	= settr(12198,0,454,452,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][139]	= settr(12199,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][142]	= settr(12202,0,148,1,0,"break", 0, 2, 0);
	trans[8][149]	= settr(12209,0,148,1,0,".(goto)", 0, 2, 0);
	T = trans[8][148] = settr(12208,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12208,0,145,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12208,0,146,0,0,"DO", 0, 2, 0);
	T = trans[ 8][145] = settr(12205,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12205,2,143,0,0,"ATOMIC", 1, 2, 0);
	trans[8][143]	= settr(12203,0,148,453,453,"(!((states[0]==0)))", 1, 2, 0); /* m: 144 -> 148,0 */
	reached8[144] = 1;
	trans[8][144]	= settr(0,0,0,0,0,"assert(!(!((states[0]==0))))",0,0,0);
	trans[8][146]	= settr(12206,0,454,1,0,"(1)", 0, 2, 0);
	trans[8][147]	= settr(12207,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][150]	= settr(12210,0,156,1,0,"break", 0, 2, 0);
	trans[8][157]	= settr(12217,0,156,1,0,".(goto)", 0, 2, 0);
	T = trans[8][156] = settr(12216,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12216,0,153,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12216,0,154,0,0,"DO", 0, 2, 0);
	T = trans[ 8][153] = settr(12213,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12213,2,151,0,0,"ATOMIC", 1, 2, 0);
	trans[8][151]	= settr(12211,0,156,454,454,"(!((states[0]==STOPPED)))", 1, 2, 0); /* m: 152 -> 156,0 */
	reached8[152] = 1;
	trans[8][152]	= settr(0,0,0,0,0,"assert(!(!((states[0]==STOPPED))))",0,0,0);
	trans[8][154]	= settr(12214,0,486,1,0,"(1)", 0, 2, 0);
	trans[8][155]	= settr(12215,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[8][158]	= settr(12218,0,168,1,0,"break", 0, 2, 0);
	trans[8][169]	= settr(12229,0,168,1,0,".(goto)", 0, 2, 0);
	T = trans[8][168] = settr(12228,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12228,0,161,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12228,0,162,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12228,0,164,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12228,0,166,0,0,"DO", 0, 2, 0);
	T = trans[ 8][161] = settr(12221,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12221,2,159,0,0,"ATOMIC", 1, 2, 0);
	trans[8][159]	= settr(12219,0,168,455,455,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 160 -> 168,0 */
	reached8[160] = 1;
	trans[8][160]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][162]	= settr(12222,0,486,456,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][163]	= settr(12223,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[8][164]	= settr(12224,0,454,457,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][165]	= settr(12225,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][166]	= settr(12226,0,498,1,0,"(1)", 0, 2, 0);
	trans[8][167]	= settr(12227,0,498,1,0,"goto T0_S480", 0, 2, 0);
	trans[8][170]	= settr(12230,0,180,1,0,"break", 0, 2, 0);
	trans[8][181]	= settr(12241,0,180,1,0,".(goto)", 0, 2, 0);
	T = trans[8][180] = settr(12240,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12240,0,173,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12240,0,174,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12240,0,176,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12240,0,178,0,0,"DO", 0, 2, 0);
	T = trans[ 8][173] = settr(12233,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12233,2,171,0,0,"ATOMIC", 1, 2, 0);
	trans[8][171]	= settr(12231,0,180,458,458,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 172 -> 180,0 */
	reached8[172] = 1;
	trans[8][172]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][174]	= settr(12234,0,76,459,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][175]	= settr(12235,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[8][176]	= settr(12236,0,258,460,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][177]	= settr(12237,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][178]	= settr(12238,0,180,1,0,"(1)", 0, 2, 0);
	trans[8][179]	= settr(12239,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[8][182]	= settr(12242,0,192,1,0,"break", 0, 2, 0);
	trans[8][193]	= settr(12253,0,192,1,0,".(goto)", 0, 2, 0);
	T = trans[8][192] = settr(12252,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12252,0,185,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12252,0,186,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12252,0,188,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12252,0,190,0,0,"DO", 0, 2, 0);
	T = trans[ 8][185] = settr(12245,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12245,2,183,0,0,"ATOMIC", 1, 2, 0);
	trans[8][183]	= settr(12243,0,192,461,461,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 184 -> 192,0 */
	reached8[184] = 1;
	trans[8][184]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][186]	= settr(12246,0,116,462,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][187]	= settr(12247,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[8][188]	= settr(12248,0,356,463,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][189]	= settr(12249,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][190]	= settr(12250,0,192,1,0,"(1)", 0, 2, 0);
	trans[8][191]	= settr(12251,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[8][194]	= settr(12254,0,204,1,0,"break", 0, 2, 0);
	trans[8][205]	= settr(12265,0,204,1,0,".(goto)", 0, 2, 0);
	T = trans[8][204] = settr(12264,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12264,0,197,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12264,0,198,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12264,0,200,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12264,0,202,0,0,"DO", 0, 2, 0);
	T = trans[ 8][197] = settr(12257,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12257,2,195,0,0,"ATOMIC", 1, 2, 0);
	trans[8][195]	= settr(12255,0,204,464,464,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 196 -> 204,0 */
	reached8[196] = 1;
	trans[8][196]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][198]	= settr(12258,0,156,465,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][199]	= settr(12259,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[8][200]	= settr(12260,0,454,466,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][201]	= settr(12261,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][202]	= settr(12262,0,204,1,0,"(1)", 0, 2, 0);
	trans[8][203]	= settr(12263,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[8][206]	= settr(12266,0,216,1,0,"break", 0, 2, 0);
	trans[8][217]	= settr(12277,0,216,1,0,".(goto)", 0, 2, 0);
	T = trans[8][216] = settr(12276,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12276,0,207,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12276,0,209,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12276,0,213,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12276,0,214,0,0,"DO", 0, 2, 0);
	trans[8][207]	= settr(12267,0,60,467,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][208]	= settr(12268,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[8][209]	= settr(12269,0,250,1,0,"(1)", 0, 2, 0);
	trans[8][210]	= settr(12270,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 8][213] = settr(12273,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12273,2,211,0,0,"ATOMIC", 1, 2, 0);
	trans[8][211]	= settr(12271,0,216,468,468,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 212 -> 216,0 */
	reached8[212] = 1;
	trans[8][212]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][214]	= settr(12274,0,258,469,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][215]	= settr(12275,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][218]	= settr(12278,0,236,1,0,"break", 0, 2, 0);
	trans[8][237]	= settr(12297,0,236,1,0,".(goto)", 0, 2, 0);
	T = trans[8][236] = settr(12296,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,219,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,221,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,225,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,226,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,228,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,230,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12296,0,232,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12296,0,234,0,0,"DO", 0, 2, 0);
	trans[8][219]	= settr(12279,0,60,470,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][220]	= settr(12280,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[8][221]	= settr(12281,0,250,471,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][222]	= settr(12282,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 8][225] = settr(12285,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12285,2,223,0,0,"ATOMIC", 1, 2, 0);
	trans[8][223]	= settr(12283,0,236,472,472,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 224 -> 236,0 */
	reached8[224] = 1;
	trans[8][224]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][226]	= settr(12286,0,258,473,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][227]	= settr(12287,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][228]	= settr(12288,0,236,474,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][229]	= settr(12289,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[8][230]	= settr(12290,0,282,1,0,"(1)", 0, 2, 0);
	trans[8][231]	= settr(12291,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[8][232]	= settr(12292,0,76,475,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][233]	= settr(12293,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[8][234]	= settr(12294,0,180,476,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][235]	= settr(12295,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[8][238]	= settr(12298,0,250,1,0,"break", 0, 2, 0);
	trans[8][251]	= settr(12311,0,250,1,0,".(goto)", 0, 2, 0);
	T = trans[8][250] = settr(12310,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12310,0,239,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12310,0,241,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12310,0,245,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12310,0,246,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12310,0,248,0,0,"DO", 0, 2, 0);
	trans[8][239]	= settr(12299,0,60,477,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][240]	= settr(12300,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[8][241]	= settr(12301,0,250,1,0,"(1)", 0, 2, 0);
	trans[8][242]	= settr(12302,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 8][245] = settr(12305,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12305,2,243,0,0,"ATOMIC", 1, 2, 0);
	trans[8][243]	= settr(12303,0,250,478,478,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 244 -> 250,0 */
	reached8[244] = 1;
	trans[8][244]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][246]	= settr(12306,0,68,479,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][247]	= settr(12307,0,68,1,0,"goto accept_S110", 0, 2, 0);
	trans[8][248]	= settr(12308,0,258,480,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][249]	= settr(12309,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][252]	= settr(12312,0,258,1,0,"break", 0, 2, 0);
	trans[8][259]	= settr(12319,0,258,1,0,".(goto)", 0, 2, 0);
	T = trans[8][258] = settr(12318,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12318,0,255,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12318,0,256,0,0,"DO", 0, 2, 0);
	T = trans[ 8][255] = settr(12315,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12315,2,253,0,0,"ATOMIC", 1, 2, 0);
	trans[8][253]	= settr(12313,0,258,481,481,"(!((states[2]==0)))", 1, 2, 0); /* m: 254 -> 258,0 */
	reached8[254] = 1;
	trans[8][254]	= settr(0,0,0,0,0,"assert(!(!((states[2]==0))))",0,0,0);
	trans[8][256]	= settr(12316,0,258,1,0,"(1)", 0, 2, 0);
	trans[8][257]	= settr(12317,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][260]	= settr(12320,0,282,1,0,"break", 0, 2, 0);
	trans[8][283]	= settr(12343,0,282,1,0,".(goto)", 0, 2, 0);
	T = trans[8][282] = settr(12342,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,261,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,263,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,267,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,268,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,270,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,272,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,274,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,276,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12342,0,278,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12342,0,280,0,0,"DO", 0, 2, 0);
	trans[8][261]	= settr(12321,0,60,482,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][262]	= settr(12322,0,60,1,0,"goto accept_S82", 0, 2, 0);
	trans[8][263]	= settr(12323,0,250,483,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][264]	= settr(12324,0,250,1,0,"goto T0_S82", 0, 2, 0);
	T = trans[ 8][267] = settr(12327,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12327,2,265,0,0,"ATOMIC", 1, 2, 0);
	trans[8][265]	= settr(12325,0,282,484,484,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 266 -> 282,0 */
	reached8[266] = 1;
	trans[8][266]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][268]	= settr(12328,0,258,485,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][269]	= settr(12329,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][270]	= settr(12330,0,236,486,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][271]	= settr(12331,0,236,1,0,"goto T0_S69", 0, 2, 0);
	trans[8][272]	= settr(12332,0,282,1,0,"(1)", 0, 2, 0);
	trans[8][273]	= settr(12333,0,282,1,0,"goto T0_S49", 0, 2, 0);
	trans[8][274]	= settr(12334,0,68,487,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][275]	= settr(12335,0,68,1,0,"goto accept_S110", 0, 2, 0);
	trans[8][276]	= settr(12336,0,76,488,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][277]	= settr(12337,0,76,1,0,"goto accept_S4", 0, 2, 0);
	trans[8][278]	= settr(12338,0,88,489,0,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0);
	trans[8][279]	= settr(12339,0,88,1,0,"goto accept_S158", 0, 2, 0);
	trans[8][280]	= settr(12340,0,180,490,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][281]	= settr(12341,0,180,1,0,"goto T6_S158", 0, 2, 0);
	trans[8][284]	= settr(12344,0,290,1,0,"break", 0, 2, 0);
	trans[8][291]	= settr(12351,0,290,1,0,".(goto)", 0, 2, 0);
	T = trans[8][290] = settr(12350,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12350,0,287,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12350,0,288,0,0,"DO", 0, 2, 0);
	T = trans[ 8][287] = settr(12347,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12347,2,285,0,0,"ATOMIC", 1, 2, 0);
	trans[8][285]	= settr(12345,0,290,491,491,"(!((states[2]==STOPPED)))", 1, 2, 0); /* m: 286 -> 290,0 */
	reached8[286] = 1;
	trans[8][286]	= settr(0,0,0,0,0,"assert(!(!((states[2]==STOPPED))))",0,0,0);
	trans[8][288]	= settr(12348,0,290,1,0,"(1)", 0, 2, 0);
	trans[8][289]	= settr(12349,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[8][292]	= settr(12352,0,302,1,0,"break", 0, 2, 0);
	trans[8][303]	= settr(12363,0,302,1,0,".(goto)", 0, 2, 0);
	T = trans[8][302] = settr(12362,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12362,0,295,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12362,0,296,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12362,0,298,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12362,0,300,0,0,"DO", 0, 2, 0);
	T = trans[ 8][295] = settr(12355,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12355,2,293,0,0,"ATOMIC", 1, 2, 0);
	trans[8][293]	= settr(12353,0,302,492,492,"((!((states[2]==0))&&!((states[2]==STOPPED))))", 1, 2, 0); /* m: 294 -> 302,0 */
	reached8[294] = 1;
	trans[8][294]	= settr(0,0,0,0,0,"assert(!((!((states[2]==0))&&!((states[2]==STOPPED)))))",0,0,0);
	trans[8][296]	= settr(12356,0,290,493,0,"(!((states[2]==0)))", 1, 2, 0);
	trans[8][297]	= settr(12357,0,290,1,0,"goto T0_S4", 0, 2, 0);
	trans[8][298]	= settr(12358,0,258,494,0,"(!((states[2]==STOPPED)))", 1, 2, 0);
	trans[8][299]	= settr(12359,0,258,1,0,"goto T0_S110", 0, 2, 0);
	trans[8][300]	= settr(12360,0,302,1,0,"(1)", 0, 2, 0);
	trans[8][301]	= settr(12361,0,302,1,0,"goto T0_S158", 0, 2, 0);
	trans[8][304]	= settr(12364,0,314,1,0,"break", 0, 2, 0);
	trans[8][315]	= settr(12375,0,314,1,0,".(goto)", 0, 2, 0);
	T = trans[8][314] = settr(12374,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12374,0,305,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12374,0,307,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12374,0,311,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12374,0,312,0,0,"DO", 0, 2, 0);
	trans[8][305]	= settr(12365,0,100,495,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][306]	= settr(12366,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[8][307]	= settr(12367,0,348,1,0,"(1)", 0, 2, 0);
	trans[8][308]	= settr(12368,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 8][311] = settr(12371,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12371,2,309,0,0,"ATOMIC", 1, 2, 0);
	trans[8][309]	= settr(12369,0,314,496,496,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 310 -> 314,0 */
	reached8[310] = 1;
	trans[8][310]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][312]	= settr(12372,0,356,497,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][313]	= settr(12373,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][316]	= settr(12376,0,334,1,0,"break", 0, 2, 0);
	trans[8][335]	= settr(12395,0,334,1,0,".(goto)", 0, 2, 0);
	T = trans[8][334] = settr(12394,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,317,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,319,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,323,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,324,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,326,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,328,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12394,0,330,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12394,0,332,0,0,"DO", 0, 2, 0);
	trans[8][317]	= settr(12377,0,100,498,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][318]	= settr(12378,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[8][319]	= settr(12379,0,348,499,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][320]	= settr(12380,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 8][323] = settr(12383,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12383,2,321,0,0,"ATOMIC", 1, 2, 0);
	trans[8][321]	= settr(12381,0,334,500,500,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 322 -> 334,0 */
	reached8[322] = 1;
	trans[8][322]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][324]	= settr(12384,0,356,501,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][325]	= settr(12385,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][326]	= settr(12386,0,334,502,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][327]	= settr(12387,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[8][328]	= settr(12388,0,380,1,0,"(1)", 0, 2, 0);
	trans[8][329]	= settr(12389,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[8][330]	= settr(12390,0,116,503,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][331]	= settr(12391,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[8][332]	= settr(12392,0,192,504,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][333]	= settr(12393,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[8][336]	= settr(12396,0,348,1,0,"break", 0, 2, 0);
	trans[8][349]	= settr(12409,0,348,1,0,".(goto)", 0, 2, 0);
	T = trans[8][348] = settr(12408,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12408,0,337,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12408,0,339,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12408,0,343,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12408,0,344,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12408,0,346,0,0,"DO", 0, 2, 0);
	trans[8][337]	= settr(12397,0,100,505,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][338]	= settr(12398,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[8][339]	= settr(12399,0,348,1,0,"(1)", 0, 2, 0);
	trans[8][340]	= settr(12400,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 8][343] = settr(12403,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12403,2,341,0,0,"ATOMIC", 1, 2, 0);
	trans[8][341]	= settr(12401,0,348,506,506,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 342 -> 348,0 */
	reached8[342] = 1;
	trans[8][342]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][344]	= settr(12404,0,108,507,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][345]	= settr(12405,0,108,1,0,"goto accept_S271", 0, 2, 0);
	trans[8][346]	= settr(12406,0,356,508,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][347]	= settr(12407,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][350]	= settr(12410,0,356,1,0,"break", 0, 2, 0);
	trans[8][357]	= settr(12417,0,356,1,0,".(goto)", 0, 2, 0);
	T = trans[8][356] = settr(12416,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12416,0,353,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12416,0,354,0,0,"DO", 0, 2, 0);
	T = trans[ 8][353] = settr(12413,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12413,2,351,0,0,"ATOMIC", 1, 2, 0);
	trans[8][351]	= settr(12411,0,356,509,509,"(!((states[1]==0)))", 1, 2, 0); /* m: 352 -> 356,0 */
	reached8[352] = 1;
	trans[8][352]	= settr(0,0,0,0,0,"assert(!(!((states[1]==0))))",0,0,0);
	trans[8][354]	= settr(12414,0,356,1,0,"(1)", 0, 2, 0);
	trans[8][355]	= settr(12415,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][358]	= settr(12418,0,380,1,0,"break", 0, 2, 0);
	trans[8][381]	= settr(12441,0,380,1,0,".(goto)", 0, 2, 0);
	T = trans[8][380] = settr(12440,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,359,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,361,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,365,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,366,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,368,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,370,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,372,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,374,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12440,0,376,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12440,0,378,0,0,"DO", 0, 2, 0);
	trans[8][359]	= settr(12419,0,100,510,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][360]	= settr(12420,0,100,1,0,"goto accept_S243", 0, 2, 0);
	trans[8][361]	= settr(12421,0,348,511,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][362]	= settr(12422,0,348,1,0,"goto T0_S243", 0, 2, 0);
	T = trans[ 8][365] = settr(12425,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12425,2,363,0,0,"ATOMIC", 1, 2, 0);
	trans[8][363]	= settr(12423,0,380,512,512,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 364 -> 380,0 */
	reached8[364] = 1;
	trans[8][364]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][366]	= settr(12426,0,356,513,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][367]	= settr(12427,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][368]	= settr(12428,0,334,514,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][369]	= settr(12429,0,334,1,0,"goto T0_S230", 0, 2, 0);
	trans[8][370]	= settr(12430,0,380,1,0,"(1)", 0, 2, 0);
	trans[8][371]	= settr(12431,0,380,1,0,"goto T0_S210", 0, 2, 0);
	trans[8][372]	= settr(12432,0,108,515,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][373]	= settr(12433,0,108,1,0,"goto accept_S271", 0, 2, 0);
	trans[8][374]	= settr(12434,0,116,516,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][375]	= settr(12435,0,116,1,0,"goto accept_S165", 0, 2, 0);
	trans[8][376]	= settr(12436,0,128,517,0,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0);
	trans[8][377]	= settr(12437,0,128,1,0,"goto accept_S319", 0, 2, 0);
	trans[8][378]	= settr(12438,0,192,518,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][379]	= settr(12439,0,192,1,0,"goto T4_S319", 0, 2, 0);
	trans[8][382]	= settr(12442,0,388,1,0,"break", 0, 2, 0);
	trans[8][389]	= settr(12449,0,388,1,0,".(goto)", 0, 2, 0);
	T = trans[8][388] = settr(12448,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12448,0,385,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12448,0,386,0,0,"DO", 0, 2, 0);
	T = trans[ 8][385] = settr(12445,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12445,2,383,0,0,"ATOMIC", 1, 2, 0);
	trans[8][383]	= settr(12443,0,388,519,519,"(!((states[1]==STOPPED)))", 1, 2, 0); /* m: 384 -> 388,0 */
	reached8[384] = 1;
	trans[8][384]	= settr(0,0,0,0,0,"assert(!(!((states[1]==STOPPED))))",0,0,0);
	trans[8][386]	= settr(12446,0,388,1,0,"(1)", 0, 2, 0);
	trans[8][387]	= settr(12447,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[8][390]	= settr(12450,0,400,1,0,"break", 0, 2, 0);
	trans[8][401]	= settr(12461,0,400,1,0,".(goto)", 0, 2, 0);
	T = trans[8][400] = settr(12460,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12460,0,393,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12460,0,394,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12460,0,396,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12460,0,398,0,0,"DO", 0, 2, 0);
	T = trans[ 8][393] = settr(12453,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12453,2,391,0,0,"ATOMIC", 1, 2, 0);
	trans[8][391]	= settr(12451,0,400,520,520,"((!((states[1]==0))&&!((states[1]==STOPPED))))", 1, 2, 0); /* m: 392 -> 400,0 */
	reached8[392] = 1;
	trans[8][392]	= settr(0,0,0,0,0,"assert(!((!((states[1]==0))&&!((states[1]==STOPPED)))))",0,0,0);
	trans[8][394]	= settr(12454,0,388,521,0,"(!((states[1]==0)))", 1, 2, 0);
	trans[8][395]	= settr(12455,0,388,1,0,"goto T0_S165", 0, 2, 0);
	trans[8][396]	= settr(12456,0,356,522,0,"(!((states[1]==STOPPED)))", 1, 2, 0);
	trans[8][397]	= settr(12457,0,356,1,0,"goto T0_S271", 0, 2, 0);
	trans[8][398]	= settr(12458,0,400,1,0,"(1)", 0, 2, 0);
	trans[8][399]	= settr(12459,0,400,1,0,"goto T0_S319", 0, 2, 0);
	trans[8][402]	= settr(12462,0,412,1,0,"break", 0, 2, 0);
	trans[8][413]	= settr(12473,0,412,1,0,".(goto)", 0, 2, 0);
	T = trans[8][412] = settr(12472,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12472,0,403,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12472,0,405,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12472,0,409,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12472,0,410,0,0,"DO", 0, 2, 0);
	trans[8][403]	= settr(12463,0,140,523,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][404]	= settr(12464,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[8][405]	= settr(12465,0,446,1,0,"(1)", 0, 2, 0);
	trans[8][406]	= settr(12466,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 8][409] = settr(12469,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12469,2,407,0,0,"ATOMIC", 1, 2, 0);
	trans[8][407]	= settr(12467,0,412,524,524,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 408 -> 412,0 */
	reached8[408] = 1;
	trans[8][408]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][410]	= settr(12470,0,454,525,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][411]	= settr(12471,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][414]	= settr(12474,0,432,1,0,"break", 0, 2, 0);
	trans[8][433]	= settr(12493,0,432,1,0,".(goto)", 0, 2, 0);
	T = trans[8][432] = settr(12492,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,415,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,417,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,421,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,422,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,424,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,426,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12492,0,428,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12492,0,430,0,0,"DO", 0, 2, 0);
	trans[8][415]	= settr(12475,0,140,526,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][416]	= settr(12476,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[8][417]	= settr(12477,0,446,527,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][418]	= settr(12478,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 8][421] = settr(12481,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12481,2,419,0,0,"ATOMIC", 1, 2, 0);
	trans[8][419]	= settr(12479,0,432,528,528,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 420 -> 432,0 */
	reached8[420] = 1;
	trans[8][420]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][422]	= settr(12482,0,454,529,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][423]	= settr(12483,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][424]	= settr(12484,0,432,530,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][425]	= settr(12485,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[8][426]	= settr(12486,0,478,1,0,"(1)", 0, 2, 0);
	trans[8][427]	= settr(12487,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[8][428]	= settr(12488,0,156,531,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][429]	= settr(12489,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[8][430]	= settr(12490,0,204,532,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][431]	= settr(12491,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[8][434]	= settr(12494,0,446,1,0,"break", 0, 2, 0);
	trans[8][447]	= settr(12507,0,446,1,0,".(goto)", 0, 2, 0);
	T = trans[8][446] = settr(12506,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12506,0,435,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12506,0,437,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12506,0,441,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12506,0,442,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12506,0,444,0,0,"DO", 0, 2, 0);
	trans[8][435]	= settr(12495,0,140,533,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][436]	= settr(12496,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[8][437]	= settr(12497,0,446,1,0,"(1)", 0, 2, 0);
	trans[8][438]	= settr(12498,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 8][441] = settr(12501,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12501,2,439,0,0,"ATOMIC", 1, 2, 0);
	trans[8][439]	= settr(12499,0,446,534,534,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 440 -> 446,0 */
	reached8[440] = 1;
	trans[8][440]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][442]	= settr(12502,0,148,535,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][443]	= settr(12503,0,148,1,0,"goto accept_S432", 0, 2, 0);
	trans[8][444]	= settr(12504,0,454,536,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][445]	= settr(12505,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][448]	= settr(12508,0,454,1,0,"break", 0, 2, 0);
	trans[8][455]	= settr(12515,0,454,1,0,".(goto)", 0, 2, 0);
	T = trans[8][454] = settr(12514,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12514,0,451,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12514,0,452,0,0,"DO", 0, 2, 0);
	T = trans[ 8][451] = settr(12511,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12511,2,449,0,0,"ATOMIC", 1, 2, 0);
	trans[8][449]	= settr(12509,0,454,537,537,"(!((states[0]==0)))", 1, 2, 0); /* m: 450 -> 454,0 */
	reached8[450] = 1;
	trans[8][450]	= settr(0,0,0,0,0,"assert(!(!((states[0]==0))))",0,0,0);
	trans[8][452]	= settr(12512,0,454,1,0,"(1)", 0, 2, 0);
	trans[8][453]	= settr(12513,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][456]	= settr(12516,0,478,1,0,"break", 0, 2, 0);
	trans[8][479]	= settr(12539,0,478,1,0,".(goto)", 0, 2, 0);
	T = trans[8][478] = settr(12538,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,457,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,459,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,463,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,464,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,466,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,468,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,470,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,472,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12538,0,474,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12538,0,476,0,0,"DO", 0, 2, 0);
	trans[8][457]	= settr(12517,0,140,538,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][458]	= settr(12518,0,140,1,0,"goto accept_S404", 0, 2, 0);
	trans[8][459]	= settr(12519,0,446,539,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][460]	= settr(12520,0,446,1,0,"goto T0_S404", 0, 2, 0);
	T = trans[ 8][463] = settr(12523,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12523,2,461,0,0,"ATOMIC", 1, 2, 0);
	trans[8][461]	= settr(12521,0,478,540,540,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 462 -> 478,0 */
	reached8[462] = 1;
	trans[8][462]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][464]	= settr(12524,0,454,541,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][465]	= settr(12525,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][466]	= settr(12526,0,432,542,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][467]	= settr(12527,0,432,1,0,"goto T0_S391", 0, 2, 0);
	trans[8][468]	= settr(12528,0,478,1,0,"(1)", 0, 2, 0);
	trans[8][469]	= settr(12529,0,478,1,0,"goto T0_S371", 0, 2, 0);
	trans[8][470]	= settr(12530,0,148,543,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][471]	= settr(12531,0,148,1,0,"goto accept_S432", 0, 2, 0);
	trans[8][472]	= settr(12532,0,156,544,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][473]	= settr(12533,0,156,1,0,"goto accept_S326", 0, 2, 0);
	trans[8][474]	= settr(12534,0,168,545,0,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0);
	trans[8][475]	= settr(12535,0,168,1,0,"goto accept_S480", 0, 2, 0);
	trans[8][476]	= settr(12536,0,204,546,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][477]	= settr(12537,0,204,1,0,"goto T2_S480", 0, 2, 0);
	trans[8][480]	= settr(12540,0,486,1,0,"break", 0, 2, 0);
	trans[8][487]	= settr(12547,0,486,1,0,".(goto)", 0, 2, 0);
	T = trans[8][486] = settr(12546,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12546,0,483,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12546,0,484,0,0,"DO", 0, 2, 0);
	T = trans[ 8][483] = settr(12543,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12543,2,481,0,0,"ATOMIC", 1, 2, 0);
	trans[8][481]	= settr(12541,0,486,547,547,"(!((states[0]==STOPPED)))", 1, 2, 0); /* m: 482 -> 486,0 */
	reached8[482] = 1;
	trans[8][482]	= settr(0,0,0,0,0,"assert(!(!((states[0]==STOPPED))))",0,0,0);
	trans[8][484]	= settr(12544,0,486,1,0,"(1)", 0, 2, 0);
	trans[8][485]	= settr(12545,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[8][488]	= settr(12548,0,498,1,0,"break", 0, 2, 0);
	trans[8][499]	= settr(12559,0,498,1,0,".(goto)", 0, 2, 0);
	T = trans[8][498] = settr(12558,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12558,0,491,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12558,0,492,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12558,0,494,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12558,0,496,0,0,"DO", 0, 2, 0);
	T = trans[ 8][491] = settr(12551,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12551,2,489,0,0,"ATOMIC", 1, 2, 0);
	trans[8][489]	= settr(12549,0,498,548,548,"((!((states[0]==0))&&!((states[0]==STOPPED))))", 1, 2, 0); /* m: 490 -> 498,0 */
	reached8[490] = 1;
	trans[8][490]	= settr(0,0,0,0,0,"assert(!((!((states[0]==0))&&!((states[0]==STOPPED)))))",0,0,0);
	trans[8][492]	= settr(12552,0,486,549,0,"(!((states[0]==0)))", 1, 2, 0);
	trans[8][493]	= settr(12553,0,486,1,0,"goto T0_S326", 0, 2, 0);
	trans[8][494]	= settr(12554,0,454,550,0,"(!((states[0]==STOPPED)))", 1, 2, 0);
	trans[8][495]	= settr(12555,0,454,1,0,"goto T0_S432", 0, 2, 0);
	trans[8][496]	= settr(12556,0,498,1,0,"(1)", 0, 2, 0);
	trans[8][497]	= settr(12557,0,498,1,0,"goto T0_S480", 0, 2, 0);
	trans[8][500]	= settr(12560,0,501,1,0,"break", 0, 2, 0);
	trans[8][501]	= settr(12561,0,502,1,0,"(1)", 0, 2, 0);
	trans[8][502]	= settr(12562,0,0,551,551,"-end-", 0, 3500, 0);

	/* proctype 7: fsm_stopping */

	trans[7] = (Trans **) emalloc(41*sizeof(Trans *));

	trans[7][13]	= settr(12033,0,12,1,0,".(goto)", 0, 2, 0);
	T = trans[7][12] = settr(12032,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12032,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12032,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12032,0,6,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12032,0,8,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12032,0,10,0,0,"DO", 0, 2, 0);
	trans[7][1]	= settr(12021,0,20,552,0,"((!(!((states[2]==STOPPING)))&&!(((states[2]==STOPPED)||(states[2]==ABORTING)))))", 1, 2, 0);
	trans[7][2]	= settr(12022,0,20,1,0,"goto accept_S6", 0, 2, 0);
	T = trans[ 7][5] = settr(12025,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12025,2,3,0,0,"ATOMIC", 1, 2, 0);
	trans[7][3]	= settr(12023,0,12,553,553,"((((!(!((states[0]==STOPPING)))&&!(((states[0]==STOPPED)||(states[0]==ABORTING))))&&!((states[0]==STOPPING)))||(((!(!((states[1]==STOPPING)))&&!(((states[1]==STOPPED)||(states[1]==ABORTING))))&&!((states[1]==STOPPING)))||((!(!((states[2]==STOPPING)))&&!(((states[2]==STOPPED)||(states[2]==ABORTING))))&&!((states[2]==STOPPING))))))", 1, 2, 0); /* m: 4 -> 12,0 */
	reached7[4] = 1;
	trans[7][4]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==STOPPING)))&&!(((states[0]==STOPPED)||(states[0]==ABORTING))))&&!((states[0]==STOPPING)))||(((!(!((states[1]==STOPPING)))&&!(((states[1]==STOPPED)||(states[1]==ABORTING))))&&!((states[1]==STOPPING)))||((!(!((states[2]==STOPPING)))&&!(((states[2]==STOPPED)||(states[2]==ABORTING))))&&!((states[2]==STOPPING)))))))",0,0,0);
	trans[7][6]	= settr(12026,0,28,554,0,"((!(!((states[1]==STOPPING)))&&!(((states[1]==STOPPED)||(states[1]==ABORTING)))))", 1, 2, 0);
	trans[7][7]	= settr(12027,0,28,1,0,"goto accept_S11", 0, 2, 0);
	trans[7][8]	= settr(12028,0,36,555,0,"((!(!((states[0]==STOPPING)))&&!(((states[0]==STOPPED)||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[7][9]	= settr(12029,0,36,1,0,"goto accept_S16", 0, 2, 0);
	trans[7][10]	= settr(12030,0,12,1,0,"(1)", 0, 2, 0);
	trans[7][11]	= settr(12031,0,12,1,0,"goto T0_init", 0, 2, 0);
	trans[7][14]	= settr(12034,0,20,1,0,"break", 0, 2, 0);
	trans[7][21]	= settr(12041,0,20,1,0,".(goto)", 0, 2, 0);
	T = trans[7][20] = settr(12040,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12040,0,15,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12040,0,19,0,0,"DO", 0, 2, 0);
	trans[7][15]	= settr(12035,0,20,556,0,"(!(((states[2]==STOPPED)||(states[2]==ABORTING))))", 1, 2, 0);
	trans[7][16]	= settr(12036,0,20,1,0,"goto accept_S6", 0, 2, 0);
	T = trans[ 7][19] = settr(12039,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12039,2,17,0,0,"ATOMIC", 1, 2, 0);
	trans[7][17]	= settr(12037,0,20,557,557,"((!(((states[2]==STOPPED)||(states[2]==ABORTING)))&&!((states[2]==STOPPING))))", 1, 2, 0); /* m: 18 -> 20,0 */
	reached7[18] = 1;
	trans[7][18]	= settr(0,0,0,0,0,"assert(!((!(((states[2]==STOPPED)||(states[2]==ABORTING)))&&!((states[2]==STOPPING)))))",0,0,0);
	trans[7][22]	= settr(12042,0,28,1,0,"break", 0, 2, 0);
	trans[7][29]	= settr(12049,0,28,1,0,".(goto)", 0, 2, 0);
	T = trans[7][28] = settr(12048,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12048,0,23,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12048,0,27,0,0,"DO", 0, 2, 0);
	trans[7][23]	= settr(12043,0,28,558,0,"(!(((states[1]==STOPPED)||(states[1]==ABORTING))))", 1, 2, 0);
	trans[7][24]	= settr(12044,0,28,1,0,"goto accept_S11", 0, 2, 0);
	T = trans[ 7][27] = settr(12047,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12047,2,25,0,0,"ATOMIC", 1, 2, 0);
	trans[7][25]	= settr(12045,0,28,559,559,"((!(((states[1]==STOPPED)||(states[1]==ABORTING)))&&!((states[1]==STOPPING))))", 1, 2, 0); /* m: 26 -> 28,0 */
	reached7[26] = 1;
	trans[7][26]	= settr(0,0,0,0,0,"assert(!((!(((states[1]==STOPPED)||(states[1]==ABORTING)))&&!((states[1]==STOPPING)))))",0,0,0);
	trans[7][30]	= settr(12050,0,36,1,0,"break", 0, 2, 0);
	trans[7][37]	= settr(12057,0,36,1,0,".(goto)", 0, 2, 0);
	T = trans[7][36] = settr(12056,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12056,0,31,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12056,0,35,0,0,"DO", 0, 2, 0);
	trans[7][31]	= settr(12051,0,36,560,0,"(!(((states[0]==STOPPED)||(states[0]==ABORTING))))", 1, 2, 0);
	trans[7][32]	= settr(12052,0,36,1,0,"goto accept_S16", 0, 2, 0);
	T = trans[ 7][35] = settr(12055,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12055,2,33,0,0,"ATOMIC", 1, 2, 0);
	trans[7][33]	= settr(12053,0,36,561,561,"((!(((states[0]==STOPPED)||(states[0]==ABORTING)))&&!((states[0]==STOPPING))))", 1, 2, 0); /* m: 34 -> 36,0 */
	reached7[34] = 1;
	trans[7][34]	= settr(0,0,0,0,0,"assert(!((!(((states[0]==STOPPED)||(states[0]==ABORTING)))&&!((states[0]==STOPPING)))))",0,0,0);
	trans[7][38]	= settr(12058,0,39,1,0,"break", 0, 2, 0);
	trans[7][39]	= settr(12059,0,40,1,0,"(1)", 0, 2, 0);
	trans[7][40]	= settr(12060,0,0,562,562,"-end-", 0, 3500, 0);

	/* proctype 6: fsm_paused */

	trans[6] = (Trans **) emalloc(137*sizeof(Trans *));

	trans[6][25]	= settr(11909,0,24,1,0,".(goto)", 0, 2, 0);
	T = trans[6][24] = settr(11908,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,6,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,8,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,10,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,12,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11908,0,20,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11908,0,22,0,0,"DO", 0, 2, 0);
	trans[6][1]	= settr(11885,0,32,563,0,"(((!(!((states[2]==PAUSED)))&&!(((states[2]==RUNNING)||(states[2]==STOPPING))))&&!((states[2]==PAUSED))))", 1, 2, 0);
	trans[6][2]	= settr(11886,0,32,1,0,"goto accept_S13", 0, 2, 0);
	T = trans[ 6][5] = settr(11889,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11889,2,3,0,0,"ATOMIC", 1, 2, 0);
	trans[6][3]	= settr(11887,0,24,564,564,"((((!(!((states[0]==PAUSED)))&&!(((states[0]==RUNNING)||(states[0]==STOPPING))))&&!((states[0]==PAUSED)))||(((!(!((states[1]==PAUSED)))&&!(((states[1]==RUNNING)||(states[1]==STOPPING))))&&!((states[1]==PAUSED)))||((!(!((states[2]==PAUSED)))&&!(((states[2]==RUNNING)||(states[2]==STOPPING))))&&!((states[2]==PAUSED))))))", 1, 2, 0); /* m: 4 -> 24,0 */
	reached6[4] = 1;
	trans[6][4]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==PAUSED)))&&!(((states[0]==RUNNING)||(states[0]==STOPPING))))&&!((states[0]==PAUSED)))||(((!(!((states[1]==PAUSED)))&&!(((states[1]==RUNNING)||(states[1]==STOPPING))))&&!((states[1]==PAUSED)))||((!(!((states[2]==PAUSED)))&&!(((states[2]==RUNNING)||(states[2]==STOPPING))))&&!((states[2]==PAUSED)))))))",0,0,0);
	trans[6][6]	= settr(11890,0,84,565,0,"((!(!((states[2]==PAUSED)))&&!(((states[2]==RUNNING)||(states[2]==STOPPING)))))", 1, 2, 0);
	trans[6][7]	= settr(11891,0,84,1,0,"goto T0_S16", 0, 2, 0);
	trans[6][8]	= settr(11892,0,40,566,0,"(((!(!((states[2]==PAUSED)))&&!(((states[2]==RUNNING)||(states[2]==STOPPING))))&&!((states[2]==PAUSED))))", 1, 2, 0);
	trans[6][9]	= settr(11893,0,40,1,0,"goto accept_S4", 0, 2, 0);
	trans[6][10]	= settr(11894,0,48,567,0,"(((!(!((states[1]==PAUSED)))&&!(((states[1]==RUNNING)||(states[1]==STOPPING))))&&!((states[1]==PAUSED))))", 1, 2, 0);
	trans[6][11]	= settr(11895,0,48,1,0,"goto accept_S36", 0, 2, 0);
	trans[6][12]	= settr(11896,0,104,568,0,"((!(!((states[1]==PAUSED)))&&!(((states[1]==RUNNING)||(states[1]==STOPPING)))))", 1, 2, 0);
	trans[6][13]	= settr(11897,0,104,1,0,"goto T0_S39", 0, 2, 0);
	trans[6][14]	= settr(11898,0,56,569,0,"(((!(!((states[1]==PAUSED)))&&!(((states[1]==RUNNING)||(states[1]==STOPPING))))&&!((states[1]==PAUSED))))", 1, 2, 0);
	trans[6][15]	= settr(11899,0,56,1,0,"goto accept_S27", 0, 2, 0);
	trans[6][16]	= settr(11900,0,64,570,0,"(((!(!((states[0]==PAUSED)))&&!(((states[0]==RUNNING)||(states[0]==STOPPING))))&&!((states[0]==PAUSED))))", 1, 2, 0);
	trans[6][17]	= settr(11901,0,64,1,0,"goto accept_S59", 0, 2, 0);
	trans[6][18]	= settr(11902,0,124,571,0,"((!(!((states[0]==PAUSED)))&&!(((states[0]==RUNNING)||(states[0]==STOPPING)))))", 1, 2, 0);
	trans[6][19]	= settr(11903,0,124,1,0,"goto T0_S62", 0, 2, 0);
	trans[6][20]	= settr(11904,0,72,572,0,"(((!(!((states[0]==PAUSED)))&&!(((states[0]==RUNNING)||(states[0]==STOPPING))))&&!((states[0]==PAUSED))))", 1, 2, 0);
	trans[6][21]	= settr(11905,0,72,1,0,"goto accept_S50", 0, 2, 0);
	trans[6][22]	= settr(11906,0,24,1,0,"(1)", 0, 2, 0);
	trans[6][23]	= settr(11907,0,24,1,0,"goto T0_init", 0, 2, 0);
	trans[6][26]	= settr(11910,0,32,1,0,"break", 0, 2, 0);
	trans[6][33]	= settr(11917,0,32,1,0,".(goto)", 0, 2, 0);
	T = trans[6][32] = settr(11916,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11916,0,27,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11916,0,31,0,0,"DO", 0, 2, 0);
	trans[6][27]	= settr(11911,0,32,573,0,"(!(((states[2]==RUNNING)||(states[2]==STOPPING))))", 1, 2, 0);
	trans[6][28]	= settr(11912,0,32,1,0,"goto accept_S13", 0, 2, 0);
	T = trans[ 6][31] = settr(11915,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11915,2,29,0,0,"ATOMIC", 1, 2, 0);
	trans[6][29]	= settr(11913,0,32,574,574,"((!(((states[2]==RUNNING)||(states[2]==STOPPING)))&&!((states[2]==PAUSED))))", 1, 2, 0); /* m: 30 -> 32,0 */
	reached6[30] = 1;
	trans[6][30]	= settr(0,0,0,0,0,"assert(!((!(((states[2]==RUNNING)||(states[2]==STOPPING)))&&!((states[2]==PAUSED)))))",0,0,0);
	trans[6][34]	= settr(11918,0,40,1,0,"break", 0, 2, 0);
	trans[6][41]	= settr(11925,0,40,1,0,".(goto)", 0, 2, 0);
	T = trans[6][40] = settr(11924,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11924,0,37,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11924,0,38,0,0,"DO", 0, 2, 0);
	T = trans[ 6][37] = settr(11921,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11921,2,35,0,0,"ATOMIC", 1, 2, 0);
	trans[6][35]	= settr(11919,0,40,575,575,"(!((states[2]==PAUSED)))", 1, 2, 0); /* m: 36 -> 40,0 */
	reached6[36] = 1;
	trans[6][36]	= settr(0,0,0,0,0,"assert(!(!((states[2]==PAUSED))))",0,0,0);
	trans[6][38]	= settr(11922,0,92,1,0,"(1)", 0, 2, 0);
	trans[6][39]	= settr(11923,0,92,1,0,"goto T0_S4", 0, 2, 0);
	trans[6][42]	= settr(11926,0,48,1,0,"break", 0, 2, 0);
	trans[6][49]	= settr(11933,0,48,1,0,".(goto)", 0, 2, 0);
	T = trans[6][48] = settr(11932,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11932,0,43,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11932,0,47,0,0,"DO", 0, 2, 0);
	trans[6][43]	= settr(11927,0,48,576,0,"(!(((states[1]==RUNNING)||(states[1]==STOPPING))))", 1, 2, 0);
	trans[6][44]	= settr(11928,0,48,1,0,"goto accept_S36", 0, 2, 0);
	T = trans[ 6][47] = settr(11931,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11931,2,45,0,0,"ATOMIC", 1, 2, 0);
	trans[6][45]	= settr(11929,0,48,577,577,"((!(((states[1]==RUNNING)||(states[1]==STOPPING)))&&!((states[1]==PAUSED))))", 1, 2, 0); /* m: 46 -> 48,0 */
	reached6[46] = 1;
	trans[6][46]	= settr(0,0,0,0,0,"assert(!((!(((states[1]==RUNNING)||(states[1]==STOPPING)))&&!((states[1]==PAUSED)))))",0,0,0);
	trans[6][50]	= settr(11934,0,56,1,0,"break", 0, 2, 0);
	trans[6][57]	= settr(11941,0,56,1,0,".(goto)", 0, 2, 0);
	T = trans[6][56] = settr(11940,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11940,0,53,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11940,0,54,0,0,"DO", 0, 2, 0);
	T = trans[ 6][53] = settr(11937,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11937,2,51,0,0,"ATOMIC", 1, 2, 0);
	trans[6][51]	= settr(11935,0,56,578,578,"(!((states[1]==PAUSED)))", 1, 2, 0); /* m: 52 -> 56,0 */
	reached6[52] = 1;
	trans[6][52]	= settr(0,0,0,0,0,"assert(!(!((states[1]==PAUSED))))",0,0,0);
	trans[6][54]	= settr(11938,0,112,1,0,"(1)", 0, 2, 0);
	trans[6][55]	= settr(11939,0,112,1,0,"goto T0_S27", 0, 2, 0);
	trans[6][58]	= settr(11942,0,64,1,0,"break", 0, 2, 0);
	trans[6][65]	= settr(11949,0,64,1,0,".(goto)", 0, 2, 0);
	T = trans[6][64] = settr(11948,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11948,0,59,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11948,0,63,0,0,"DO", 0, 2, 0);
	trans[6][59]	= settr(11943,0,64,579,0,"(!(((states[0]==RUNNING)||(states[0]==STOPPING))))", 1, 2, 0);
	trans[6][60]	= settr(11944,0,64,1,0,"goto accept_S59", 0, 2, 0);
	T = trans[ 6][63] = settr(11947,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11947,2,61,0,0,"ATOMIC", 1, 2, 0);
	trans[6][61]	= settr(11945,0,64,580,580,"((!(((states[0]==RUNNING)||(states[0]==STOPPING)))&&!((states[0]==PAUSED))))", 1, 2, 0); /* m: 62 -> 64,0 */
	reached6[62] = 1;
	trans[6][62]	= settr(0,0,0,0,0,"assert(!((!(((states[0]==RUNNING)||(states[0]==STOPPING)))&&!((states[0]==PAUSED)))))",0,0,0);
	trans[6][66]	= settr(11950,0,72,1,0,"break", 0, 2, 0);
	trans[6][73]	= settr(11957,0,72,1,0,".(goto)", 0, 2, 0);
	T = trans[6][72] = settr(11956,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11956,0,69,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11956,0,70,0,0,"DO", 0, 2, 0);
	T = trans[ 6][69] = settr(11953,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11953,2,67,0,0,"ATOMIC", 1, 2, 0);
	trans[6][67]	= settr(11951,0,72,581,581,"(!((states[0]==PAUSED)))", 1, 2, 0); /* m: 68 -> 72,0 */
	reached6[68] = 1;
	trans[6][68]	= settr(0,0,0,0,0,"assert(!(!((states[0]==PAUSED))))",0,0,0);
	trans[6][70]	= settr(11954,0,132,1,0,"(1)", 0, 2, 0);
	trans[6][71]	= settr(11955,0,132,1,0,"goto T0_S50", 0, 2, 0);
	trans[6][74]	= settr(11958,0,84,1,0,"break", 0, 2, 0);
	trans[6][85]	= settr(11969,0,84,1,0,".(goto)", 0, 2, 0);
	T = trans[6][84] = settr(11968,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11968,0,75,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11968,0,79,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11968,0,80,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11968,0,82,0,0,"DO", 0, 2, 0);
	trans[6][75]	= settr(11959,0,32,582,0,"((!(((states[2]==RUNNING)||(states[2]==STOPPING)))&&!((states[2]==PAUSED))))", 1, 2, 0);
	trans[6][76]	= settr(11960,0,32,1,0,"goto accept_S13", 0, 2, 0);
	T = trans[ 6][79] = settr(11963,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11963,2,77,0,0,"ATOMIC", 1, 2, 0);
	trans[6][77]	= settr(11961,0,84,583,583,"((!(((states[2]==RUNNING)||(states[2]==STOPPING)))&&!((states[2]==PAUSED))))", 1, 2, 0); /* m: 78 -> 84,0 */
	reached6[78] = 1;
	trans[6][78]	= settr(0,0,0,0,0,"assert(!((!(((states[2]==RUNNING)||(states[2]==STOPPING)))&&!((states[2]==PAUSED)))))",0,0,0);
	trans[6][80]	= settr(11964,0,84,584,0,"(!(((states[2]==RUNNING)||(states[2]==STOPPING))))", 1, 2, 0);
	trans[6][81]	= settr(11965,0,84,1,0,"goto T0_S16", 0, 2, 0);
	trans[6][82]	= settr(11966,0,40,585,0,"((!(((states[2]==RUNNING)||(states[2]==STOPPING)))&&!((states[2]==PAUSED))))", 1, 2, 0);
	trans[6][83]	= settr(11967,0,40,1,0,"goto accept_S4", 0, 2, 0);
	trans[6][86]	= settr(11970,0,92,1,0,"break", 0, 2, 0);
	trans[6][93]	= settr(11977,0,92,1,0,".(goto)", 0, 2, 0);
	T = trans[6][92] = settr(11976,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11976,0,89,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11976,0,90,0,0,"DO", 0, 2, 0);
	T = trans[ 6][89] = settr(11973,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11973,2,87,0,0,"ATOMIC", 1, 2, 0);
	trans[6][87]	= settr(11971,0,92,586,586,"(!((states[2]==PAUSED)))", 1, 2, 0); /* m: 88 -> 92,0 */
	reached6[88] = 1;
	trans[6][88]	= settr(0,0,0,0,0,"assert(!(!((states[2]==PAUSED))))",0,0,0);
	trans[6][90]	= settr(11974,0,92,1,0,"(1)", 0, 2, 0);
	trans[6][91]	= settr(11975,0,92,1,0,"goto T0_S4", 0, 2, 0);
	trans[6][94]	= settr(11978,0,104,1,0,"break", 0, 2, 0);
	trans[6][105]	= settr(11989,0,104,1,0,".(goto)", 0, 2, 0);
	T = trans[6][104] = settr(11988,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11988,0,95,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11988,0,99,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11988,0,100,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11988,0,102,0,0,"DO", 0, 2, 0);
	trans[6][95]	= settr(11979,0,48,587,0,"((!(((states[1]==RUNNING)||(states[1]==STOPPING)))&&!((states[1]==PAUSED))))", 1, 2, 0);
	trans[6][96]	= settr(11980,0,48,1,0,"goto accept_S36", 0, 2, 0);
	T = trans[ 6][99] = settr(11983,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11983,2,97,0,0,"ATOMIC", 1, 2, 0);
	trans[6][97]	= settr(11981,0,104,588,588,"((!(((states[1]==RUNNING)||(states[1]==STOPPING)))&&!((states[1]==PAUSED))))", 1, 2, 0); /* m: 98 -> 104,0 */
	reached6[98] = 1;
	trans[6][98]	= settr(0,0,0,0,0,"assert(!((!(((states[1]==RUNNING)||(states[1]==STOPPING)))&&!((states[1]==PAUSED)))))",0,0,0);
	trans[6][100]	= settr(11984,0,104,589,0,"(!(((states[1]==RUNNING)||(states[1]==STOPPING))))", 1, 2, 0);
	trans[6][101]	= settr(11985,0,104,1,0,"goto T0_S39", 0, 2, 0);
	trans[6][102]	= settr(11986,0,56,590,0,"((!(((states[1]==RUNNING)||(states[1]==STOPPING)))&&!((states[1]==PAUSED))))", 1, 2, 0);
	trans[6][103]	= settr(11987,0,56,1,0,"goto accept_S27", 0, 2, 0);
	trans[6][106]	= settr(11990,0,112,1,0,"break", 0, 2, 0);
	trans[6][113]	= settr(11997,0,112,1,0,".(goto)", 0, 2, 0);
	T = trans[6][112] = settr(11996,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11996,0,109,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11996,0,110,0,0,"DO", 0, 2, 0);
	T = trans[ 6][109] = settr(11993,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11993,2,107,0,0,"ATOMIC", 1, 2, 0);
	trans[6][107]	= settr(11991,0,112,591,591,"(!((states[1]==PAUSED)))", 1, 2, 0); /* m: 108 -> 112,0 */
	reached6[108] = 1;
	trans[6][108]	= settr(0,0,0,0,0,"assert(!(!((states[1]==PAUSED))))",0,0,0);
	trans[6][110]	= settr(11994,0,112,1,0,"(1)", 0, 2, 0);
	trans[6][111]	= settr(11995,0,112,1,0,"goto T0_S27", 0, 2, 0);
	trans[6][114]	= settr(11998,0,124,1,0,"break", 0, 2, 0);
	trans[6][125]	= settr(12009,0,124,1,0,".(goto)", 0, 2, 0);
	T = trans[6][124] = settr(12008,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12008,0,115,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12008,0,119,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12008,0,120,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12008,0,122,0,0,"DO", 0, 2, 0);
	trans[6][115]	= settr(11999,0,64,592,0,"((!(((states[0]==RUNNING)||(states[0]==STOPPING)))&&!((states[0]==PAUSED))))", 1, 2, 0);
	trans[6][116]	= settr(12000,0,64,1,0,"goto accept_S59", 0, 2, 0);
	T = trans[ 6][119] = settr(12003,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12003,2,117,0,0,"ATOMIC", 1, 2, 0);
	trans[6][117]	= settr(12001,0,124,593,593,"((!(((states[0]==RUNNING)||(states[0]==STOPPING)))&&!((states[0]==PAUSED))))", 1, 2, 0); /* m: 118 -> 124,0 */
	reached6[118] = 1;
	trans[6][118]	= settr(0,0,0,0,0,"assert(!((!(((states[0]==RUNNING)||(states[0]==STOPPING)))&&!((states[0]==PAUSED)))))",0,0,0);
	trans[6][120]	= settr(12004,0,124,594,0,"(!(((states[0]==RUNNING)||(states[0]==STOPPING))))", 1, 2, 0);
	trans[6][121]	= settr(12005,0,124,1,0,"goto T0_S62", 0, 2, 0);
	trans[6][122]	= settr(12006,0,72,595,0,"((!(((states[0]==RUNNING)||(states[0]==STOPPING)))&&!((states[0]==PAUSED))))", 1, 2, 0);
	trans[6][123]	= settr(12007,0,72,1,0,"goto accept_S50", 0, 2, 0);
	trans[6][126]	= settr(12010,0,132,1,0,"break", 0, 2, 0);
	trans[6][133]	= settr(12017,0,132,1,0,".(goto)", 0, 2, 0);
	T = trans[6][132] = settr(12016,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(12016,0,129,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(12016,0,130,0,0,"DO", 0, 2, 0);
	T = trans[ 6][129] = settr(12013,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(12013,2,127,0,0,"ATOMIC", 1, 2, 0);
	trans[6][127]	= settr(12011,0,132,596,596,"(!((states[0]==PAUSED)))", 1, 2, 0); /* m: 128 -> 132,0 */
	reached6[128] = 1;
	trans[6][128]	= settr(0,0,0,0,0,"assert(!(!((states[0]==PAUSED))))",0,0,0);
	trans[6][130]	= settr(12014,0,132,1,0,"(1)", 0, 2, 0);
	trans[6][131]	= settr(12015,0,132,1,0,"goto T0_S50", 0, 2, 0);
	trans[6][134]	= settr(12018,0,135,1,0,"break", 0, 2, 0);
	trans[6][135]	= settr(12019,0,136,1,0,"(1)", 0, 2, 0);
	trans[6][136]	= settr(12020,0,0,597,597,"-end-", 0, 3500, 0);

	/* proctype 5: fsm_running */

	trans[5] = (Trans **) emalloc(137*sizeof(Trans *));

	trans[5][25]	= settr(11773,0,24,1,0,".(goto)", 0, 2, 0);
	T = trans[5][24] = settr(11772,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,6,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,8,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,10,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,12,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11772,0,20,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11772,0,22,0,0,"DO", 0, 2, 0);
	trans[5][1]	= settr(11749,0,32,598,0,"(((!(!((states[2]==RUNNING)))&&!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING))))&&!((states[2]==RUNNING))))", 1, 2, 0);
	trans[5][2]	= settr(11750,0,32,1,0,"goto accept_S13", 0, 2, 0);
	T = trans[ 5][5] = settr(11753,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11753,2,3,0,0,"ATOMIC", 1, 2, 0);
	trans[5][3]	= settr(11751,0,24,599,599,"((((!(!((states[0]==RUNNING)))&&!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING))))&&!((states[0]==RUNNING)))||(((!(!((states[1]==RUNNING)))&&!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING))))&&!((states[1]==RUNNING)))||((!(!((states[2]==RUNNING)))&&!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING))))&&!((states[2]==RUNNING))))))", 1, 2, 0); /* m: 4 -> 24,0 */
	reached5[4] = 1;
	trans[5][4]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==RUNNING)))&&!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING))))&&!((states[0]==RUNNING)))||(((!(!((states[1]==RUNNING)))&&!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING))))&&!((states[1]==RUNNING)))||((!(!((states[2]==RUNNING)))&&!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING))))&&!((states[2]==RUNNING)))))))",0,0,0);
	trans[5][6]	= settr(11754,0,84,600,0,"((!(!((states[2]==RUNNING)))&&!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))))", 1, 2, 0);
	trans[5][7]	= settr(11755,0,84,1,0,"goto T0_S16", 0, 2, 0);
	trans[5][8]	= settr(11756,0,40,601,0,"(((!(!((states[2]==RUNNING)))&&!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING))))&&!((states[2]==RUNNING))))", 1, 2, 0);
	trans[5][9]	= settr(11757,0,40,1,0,"goto accept_S4", 0, 2, 0);
	trans[5][10]	= settr(11758,0,48,602,0,"(((!(!((states[1]==RUNNING)))&&!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING))))&&!((states[1]==RUNNING))))", 1, 2, 0);
	trans[5][11]	= settr(11759,0,48,1,0,"goto accept_S36", 0, 2, 0);
	trans[5][12]	= settr(11760,0,104,603,0,"((!(!((states[1]==RUNNING)))&&!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))))", 1, 2, 0);
	trans[5][13]	= settr(11761,0,104,1,0,"goto T0_S39", 0, 2, 0);
	trans[5][14]	= settr(11762,0,56,604,0,"(((!(!((states[1]==RUNNING)))&&!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING))))&&!((states[1]==RUNNING))))", 1, 2, 0);
	trans[5][15]	= settr(11763,0,56,1,0,"goto accept_S27", 0, 2, 0);
	trans[5][16]	= settr(11764,0,64,605,0,"(((!(!((states[0]==RUNNING)))&&!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING))))&&!((states[0]==RUNNING))))", 1, 2, 0);
	trans[5][17]	= settr(11765,0,64,1,0,"goto accept_S59", 0, 2, 0);
	trans[5][18]	= settr(11766,0,124,606,0,"((!(!((states[0]==RUNNING)))&&!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[5][19]	= settr(11767,0,124,1,0,"goto T0_S62", 0, 2, 0);
	trans[5][20]	= settr(11768,0,72,607,0,"(((!(!((states[0]==RUNNING)))&&!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING))))&&!((states[0]==RUNNING))))", 1, 2, 0);
	trans[5][21]	= settr(11769,0,72,1,0,"goto accept_S50", 0, 2, 0);
	trans[5][22]	= settr(11770,0,24,1,0,"(1)", 0, 2, 0);
	trans[5][23]	= settr(11771,0,24,1,0,"goto T0_init", 0, 2, 0);
	trans[5][26]	= settr(11774,0,32,1,0,"break", 0, 2, 0);
	trans[5][33]	= settr(11781,0,32,1,0,".(goto)", 0, 2, 0);
	T = trans[5][32] = settr(11780,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11780,0,27,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11780,0,31,0,0,"DO", 0, 2, 0);
	trans[5][27]	= settr(11775,0,32,608,0,"(!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING))))", 1, 2, 0);
	trans[5][28]	= settr(11776,0,32,1,0,"goto accept_S13", 0, 2, 0);
	T = trans[ 5][31] = settr(11779,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11779,2,29,0,0,"ATOMIC", 1, 2, 0);
	trans[5][29]	= settr(11777,0,32,609,609,"((!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==RUNNING))))", 1, 2, 0); /* m: 30 -> 32,0 */
	reached5[30] = 1;
	trans[5][30]	= settr(0,0,0,0,0,"assert(!((!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==RUNNING)))))",0,0,0);
	trans[5][34]	= settr(11782,0,40,1,0,"break", 0, 2, 0);
	trans[5][41]	= settr(11789,0,40,1,0,".(goto)", 0, 2, 0);
	T = trans[5][40] = settr(11788,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11788,0,37,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11788,0,38,0,0,"DO", 0, 2, 0);
	T = trans[ 5][37] = settr(11785,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11785,2,35,0,0,"ATOMIC", 1, 2, 0);
	trans[5][35]	= settr(11783,0,40,610,610,"(!((states[2]==RUNNING)))", 1, 2, 0); /* m: 36 -> 40,0 */
	reached5[36] = 1;
	trans[5][36]	= settr(0,0,0,0,0,"assert(!(!((states[2]==RUNNING))))",0,0,0);
	trans[5][38]	= settr(11786,0,92,1,0,"(1)", 0, 2, 0);
	trans[5][39]	= settr(11787,0,92,1,0,"goto T0_S4", 0, 2, 0);
	trans[5][42]	= settr(11790,0,48,1,0,"break", 0, 2, 0);
	trans[5][49]	= settr(11797,0,48,1,0,".(goto)", 0, 2, 0);
	T = trans[5][48] = settr(11796,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11796,0,43,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11796,0,47,0,0,"DO", 0, 2, 0);
	trans[5][43]	= settr(11791,0,48,611,0,"(!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING))))", 1, 2, 0);
	trans[5][44]	= settr(11792,0,48,1,0,"goto accept_S36", 0, 2, 0);
	T = trans[ 5][47] = settr(11795,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11795,2,45,0,0,"ATOMIC", 1, 2, 0);
	trans[5][45]	= settr(11793,0,48,612,612,"((!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==RUNNING))))", 1, 2, 0); /* m: 46 -> 48,0 */
	reached5[46] = 1;
	trans[5][46]	= settr(0,0,0,0,0,"assert(!((!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==RUNNING)))))",0,0,0);
	trans[5][50]	= settr(11798,0,56,1,0,"break", 0, 2, 0);
	trans[5][57]	= settr(11805,0,56,1,0,".(goto)", 0, 2, 0);
	T = trans[5][56] = settr(11804,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11804,0,53,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11804,0,54,0,0,"DO", 0, 2, 0);
	T = trans[ 5][53] = settr(11801,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11801,2,51,0,0,"ATOMIC", 1, 2, 0);
	trans[5][51]	= settr(11799,0,56,613,613,"(!((states[1]==RUNNING)))", 1, 2, 0); /* m: 52 -> 56,0 */
	reached5[52] = 1;
	trans[5][52]	= settr(0,0,0,0,0,"assert(!(!((states[1]==RUNNING))))",0,0,0);
	trans[5][54]	= settr(11802,0,112,1,0,"(1)", 0, 2, 0);
	trans[5][55]	= settr(11803,0,112,1,0,"goto T0_S27", 0, 2, 0);
	trans[5][58]	= settr(11806,0,64,1,0,"break", 0, 2, 0);
	trans[5][65]	= settr(11813,0,64,1,0,".(goto)", 0, 2, 0);
	T = trans[5][64] = settr(11812,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11812,0,59,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11812,0,63,0,0,"DO", 0, 2, 0);
	trans[5][59]	= settr(11807,0,64,614,0,"(!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING))))", 1, 2, 0);
	trans[5][60]	= settr(11808,0,64,1,0,"goto accept_S59", 0, 2, 0);
	T = trans[ 5][63] = settr(11811,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11811,2,61,0,0,"ATOMIC", 1, 2, 0);
	trans[5][61]	= settr(11809,0,64,615,615,"((!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==RUNNING))))", 1, 2, 0); /* m: 62 -> 64,0 */
	reached5[62] = 1;
	trans[5][62]	= settr(0,0,0,0,0,"assert(!((!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==RUNNING)))))",0,0,0);
	trans[5][66]	= settr(11814,0,72,1,0,"break", 0, 2, 0);
	trans[5][73]	= settr(11821,0,72,1,0,".(goto)", 0, 2, 0);
	T = trans[5][72] = settr(11820,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11820,0,69,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11820,0,70,0,0,"DO", 0, 2, 0);
	T = trans[ 5][69] = settr(11817,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11817,2,67,0,0,"ATOMIC", 1, 2, 0);
	trans[5][67]	= settr(11815,0,72,616,616,"(!((states[0]==RUNNING)))", 1, 2, 0); /* m: 68 -> 72,0 */
	reached5[68] = 1;
	trans[5][68]	= settr(0,0,0,0,0,"assert(!(!((states[0]==RUNNING))))",0,0,0);
	trans[5][70]	= settr(11818,0,132,1,0,"(1)", 0, 2, 0);
	trans[5][71]	= settr(11819,0,132,1,0,"goto T0_S50", 0, 2, 0);
	trans[5][74]	= settr(11822,0,84,1,0,"break", 0, 2, 0);
	trans[5][85]	= settr(11833,0,84,1,0,".(goto)", 0, 2, 0);
	T = trans[5][84] = settr(11832,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11832,0,75,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11832,0,79,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11832,0,80,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11832,0,82,0,0,"DO", 0, 2, 0);
	trans[5][75]	= settr(11823,0,32,617,0,"((!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==RUNNING))))", 1, 2, 0);
	trans[5][76]	= settr(11824,0,32,1,0,"goto accept_S13", 0, 2, 0);
	T = trans[ 5][79] = settr(11827,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11827,2,77,0,0,"ATOMIC", 1, 2, 0);
	trans[5][77]	= settr(11825,0,84,618,618,"((!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==RUNNING))))", 1, 2, 0); /* m: 78 -> 84,0 */
	reached5[78] = 1;
	trans[5][78]	= settr(0,0,0,0,0,"assert(!((!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==RUNNING)))))",0,0,0);
	trans[5][80]	= settr(11828,0,84,619,0,"(!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING))))", 1, 2, 0);
	trans[5][81]	= settr(11829,0,84,1,0,"goto T0_S16", 0, 2, 0);
	trans[5][82]	= settr(11830,0,40,620,0,"((!((((states[2]==PAUSED)||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==RUNNING))))", 1, 2, 0);
	trans[5][83]	= settr(11831,0,40,1,0,"goto accept_S4", 0, 2, 0);
	trans[5][86]	= settr(11834,0,92,1,0,"break", 0, 2, 0);
	trans[5][93]	= settr(11841,0,92,1,0,".(goto)", 0, 2, 0);
	T = trans[5][92] = settr(11840,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11840,0,89,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11840,0,90,0,0,"DO", 0, 2, 0);
	T = trans[ 5][89] = settr(11837,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11837,2,87,0,0,"ATOMIC", 1, 2, 0);
	trans[5][87]	= settr(11835,0,92,621,621,"(!((states[2]==RUNNING)))", 1, 2, 0); /* m: 88 -> 92,0 */
	reached5[88] = 1;
	trans[5][88]	= settr(0,0,0,0,0,"assert(!(!((states[2]==RUNNING))))",0,0,0);
	trans[5][90]	= settr(11838,0,92,1,0,"(1)", 0, 2, 0);
	trans[5][91]	= settr(11839,0,92,1,0,"goto T0_S4", 0, 2, 0);
	trans[5][94]	= settr(11842,0,104,1,0,"break", 0, 2, 0);
	trans[5][105]	= settr(11853,0,104,1,0,".(goto)", 0, 2, 0);
	T = trans[5][104] = settr(11852,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11852,0,95,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11852,0,99,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11852,0,100,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11852,0,102,0,0,"DO", 0, 2, 0);
	trans[5][95]	= settr(11843,0,48,622,0,"((!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==RUNNING))))", 1, 2, 0);
	trans[5][96]	= settr(11844,0,48,1,0,"goto accept_S36", 0, 2, 0);
	T = trans[ 5][99] = settr(11847,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11847,2,97,0,0,"ATOMIC", 1, 2, 0);
	trans[5][97]	= settr(11845,0,104,623,623,"((!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==RUNNING))))", 1, 2, 0); /* m: 98 -> 104,0 */
	reached5[98] = 1;
	trans[5][98]	= settr(0,0,0,0,0,"assert(!((!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==RUNNING)))))",0,0,0);
	trans[5][100]	= settr(11848,0,104,624,0,"(!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING))))", 1, 2, 0);
	trans[5][101]	= settr(11849,0,104,1,0,"goto T0_S39", 0, 2, 0);
	trans[5][102]	= settr(11850,0,56,625,0,"((!((((states[1]==PAUSED)||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==RUNNING))))", 1, 2, 0);
	trans[5][103]	= settr(11851,0,56,1,0,"goto accept_S27", 0, 2, 0);
	trans[5][106]	= settr(11854,0,112,1,0,"break", 0, 2, 0);
	trans[5][113]	= settr(11861,0,112,1,0,".(goto)", 0, 2, 0);
	T = trans[5][112] = settr(11860,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11860,0,109,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11860,0,110,0,0,"DO", 0, 2, 0);
	T = trans[ 5][109] = settr(11857,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11857,2,107,0,0,"ATOMIC", 1, 2, 0);
	trans[5][107]	= settr(11855,0,112,626,626,"(!((states[1]==RUNNING)))", 1, 2, 0); /* m: 108 -> 112,0 */
	reached5[108] = 1;
	trans[5][108]	= settr(0,0,0,0,0,"assert(!(!((states[1]==RUNNING))))",0,0,0);
	trans[5][110]	= settr(11858,0,112,1,0,"(1)", 0, 2, 0);
	trans[5][111]	= settr(11859,0,112,1,0,"goto T0_S27", 0, 2, 0);
	trans[5][114]	= settr(11862,0,124,1,0,"break", 0, 2, 0);
	trans[5][125]	= settr(11873,0,124,1,0,".(goto)", 0, 2, 0);
	T = trans[5][124] = settr(11872,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11872,0,115,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11872,0,119,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11872,0,120,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11872,0,122,0,0,"DO", 0, 2, 0);
	trans[5][115]	= settr(11863,0,64,627,0,"((!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==RUNNING))))", 1, 2, 0);
	trans[5][116]	= settr(11864,0,64,1,0,"goto accept_S59", 0, 2, 0);
	T = trans[ 5][119] = settr(11867,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11867,2,117,0,0,"ATOMIC", 1, 2, 0);
	trans[5][117]	= settr(11865,0,124,628,628,"((!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==RUNNING))))", 1, 2, 0); /* m: 118 -> 124,0 */
	reached5[118] = 1;
	trans[5][118]	= settr(0,0,0,0,0,"assert(!((!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==RUNNING)))))",0,0,0);
	trans[5][120]	= settr(11868,0,124,629,0,"(!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING))))", 1, 2, 0);
	trans[5][121]	= settr(11869,0,124,1,0,"goto T0_S62", 0, 2, 0);
	trans[5][122]	= settr(11870,0,72,630,0,"((!((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==RUNNING))))", 1, 2, 0);
	trans[5][123]	= settr(11871,0,72,1,0,"goto accept_S50", 0, 2, 0);
	trans[5][126]	= settr(11874,0,132,1,0,"break", 0, 2, 0);
	trans[5][133]	= settr(11881,0,132,1,0,".(goto)", 0, 2, 0);
	T = trans[5][132] = settr(11880,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11880,0,129,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11880,0,130,0,0,"DO", 0, 2, 0);
	T = trans[ 5][129] = settr(11877,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11877,2,127,0,0,"ATOMIC", 1, 2, 0);
	trans[5][127]	= settr(11875,0,132,631,631,"(!((states[0]==RUNNING)))", 1, 2, 0); /* m: 128 -> 132,0 */
	reached5[128] = 1;
	trans[5][128]	= settr(0,0,0,0,0,"assert(!(!((states[0]==RUNNING))))",0,0,0);
	trans[5][130]	= settr(11878,0,132,1,0,"(1)", 0, 2, 0);
	trans[5][131]	= settr(11879,0,132,1,0,"goto T0_S50", 0, 2, 0);
	trans[5][134]	= settr(11882,0,135,1,0,"break", 0, 2, 0);
	trans[5][135]	= settr(11883,0,136,1,0,"(1)", 0, 2, 0);
	trans[5][136]	= settr(11884,0,0,632,632,"-end-", 0, 3500, 0);

	/* proctype 4: fsm_starting */

	trans[4] = (Trans **) emalloc(41*sizeof(Trans *));

	trans[4][13]	= settr(11721,0,12,1,0,".(goto)", 0, 2, 0);
	T = trans[4][12] = settr(11720,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11720,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11720,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11720,0,6,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11720,0,8,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11720,0,10,0,0,"DO", 0, 2, 0);
	trans[4][1]	= settr(11709,0,20,633,0,"((!(!((states[2]==STARTING)))&&!(((((states[2]==RUNNING)||(states[2]==PAUSED))||(states[2]==STOPPING))||(states[2]==ABORTING)))))", 1, 2, 0);
	trans[4][2]	= settr(11710,0,20,1,0,"goto accept_S6", 0, 2, 0);
	T = trans[ 4][5] = settr(11713,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11713,2,3,0,0,"ATOMIC", 1, 2, 0);
	trans[4][3]	= settr(11711,0,12,634,634,"((((!(!((states[0]==STARTING)))&&!(((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==ABORTING))))&&!((states[0]==STARTING)))||(((!(!((states[1]==STARTING)))&&!(((((states[1]==RUNNING)||(states[1]==PAUSED))||(states[1]==STOPPING))||(states[1]==ABORTING))))&&!((states[1]==STARTING)))||((!(!((states[2]==STARTING)))&&!(((((states[2]==RUNNING)||(states[2]==PAUSED))||(states[2]==STOPPING))||(states[2]==ABORTING))))&&!((states[2]==STARTING))))))", 1, 2, 0); /* m: 4 -> 12,0 */
	reached4[4] = 1;
	trans[4][4]	= settr(0,0,0,0,0,"assert(!((((!(!((states[0]==STARTING)))&&!(((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==ABORTING))))&&!((states[0]==STARTING)))||(((!(!((states[1]==STARTING)))&&!(((((states[1]==RUNNING)||(states[1]==PAUSED))||(states[1]==STOPPING))||(states[1]==ABORTING))))&&!((states[1]==STARTING)))||((!(!((states[2]==STARTING)))&&!(((((states[2]==RUNNING)||(states[2]==PAUSED))||(states[2]==STOPPING))||(states[2]==ABORTING))))&&!((states[2]==STARTING)))))))",0,0,0);
	trans[4][6]	= settr(11714,0,28,635,0,"((!(!((states[1]==STARTING)))&&!(((((states[1]==RUNNING)||(states[1]==PAUSED))||(states[1]==STOPPING))||(states[1]==ABORTING)))))", 1, 2, 0);
	trans[4][7]	= settr(11715,0,28,1,0,"goto accept_S11", 0, 2, 0);
	trans[4][8]	= settr(11716,0,36,636,0,"((!(!((states[0]==STARTING)))&&!(((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==ABORTING)))))", 1, 2, 0);
	trans[4][9]	= settr(11717,0,36,1,0,"goto accept_S16", 0, 2, 0);
	trans[4][10]	= settr(11718,0,12,1,0,"(1)", 0, 2, 0);
	trans[4][11]	= settr(11719,0,12,1,0,"goto T0_init", 0, 2, 0);
	trans[4][14]	= settr(11722,0,20,1,0,"break", 0, 2, 0);
	trans[4][21]	= settr(11729,0,20,1,0,".(goto)", 0, 2, 0);
	T = trans[4][20] = settr(11728,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11728,0,15,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11728,0,19,0,0,"DO", 0, 2, 0);
	trans[4][15]	= settr(11723,0,20,637,0,"(!(((((states[2]==RUNNING)||(states[2]==PAUSED))||(states[2]==STOPPING))||(states[2]==ABORTING))))", 1, 2, 0);
	trans[4][16]	= settr(11724,0,20,1,0,"goto accept_S6", 0, 2, 0);
	T = trans[ 4][19] = settr(11727,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11727,2,17,0,0,"ATOMIC", 1, 2, 0);
	trans[4][17]	= settr(11725,0,20,638,638,"((!(((((states[2]==RUNNING)||(states[2]==PAUSED))||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 18 -> 20,0 */
	reached4[18] = 1;
	trans[4][18]	= settr(0,0,0,0,0,"assert(!((!(((((states[2]==RUNNING)||(states[2]==PAUSED))||(states[2]==STOPPING))||(states[2]==ABORTING)))&&!((states[2]==STARTING)))))",0,0,0);
	trans[4][22]	= settr(11730,0,28,1,0,"break", 0, 2, 0);
	trans[4][29]	= settr(11737,0,28,1,0,".(goto)", 0, 2, 0);
	T = trans[4][28] = settr(11736,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11736,0,23,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11736,0,27,0,0,"DO", 0, 2, 0);
	trans[4][23]	= settr(11731,0,28,639,0,"(!(((((states[1]==RUNNING)||(states[1]==PAUSED))||(states[1]==STOPPING))||(states[1]==ABORTING))))", 1, 2, 0);
	trans[4][24]	= settr(11732,0,28,1,0,"goto accept_S11", 0, 2, 0);
	T = trans[ 4][27] = settr(11735,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11735,2,25,0,0,"ATOMIC", 1, 2, 0);
	trans[4][25]	= settr(11733,0,28,640,640,"((!(((((states[1]==RUNNING)||(states[1]==PAUSED))||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 26 -> 28,0 */
	reached4[26] = 1;
	trans[4][26]	= settr(0,0,0,0,0,"assert(!((!(((((states[1]==RUNNING)||(states[1]==PAUSED))||(states[1]==STOPPING))||(states[1]==ABORTING)))&&!((states[1]==STARTING)))))",0,0,0);
	trans[4][30]	= settr(11738,0,36,1,0,"break", 0, 2, 0);
	trans[4][37]	= settr(11745,0,36,1,0,".(goto)", 0, 2, 0);
	T = trans[4][36] = settr(11744,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11744,0,31,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11744,0,35,0,0,"DO", 0, 2, 0);
	trans[4][31]	= settr(11739,0,36,641,0,"(!(((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==ABORTING))))", 1, 2, 0);
	trans[4][32]	= settr(11740,0,36,1,0,"goto accept_S16", 0, 2, 0);
	T = trans[ 4][35] = settr(11743,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11743,2,33,0,0,"ATOMIC", 1, 2, 0);
	trans[4][33]	= settr(11741,0,36,642,642,"((!(((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 34 -> 36,0 */
	reached4[34] = 1;
	trans[4][34]	= settr(0,0,0,0,0,"assert(!((!(((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==ABORTING)))&&!((states[0]==STARTING)))))",0,0,0);
	trans[4][38]	= settr(11746,0,39,1,0,"break", 0, 2, 0);
	trans[4][39]	= settr(11747,0,40,1,0,"(1)", 0, 2, 0);
	trans[4][40]	= settr(11748,0,0,643,643,"-end-", 0, 3500, 0);

	/* proctype 3: fsm_ready */

	trans[3] = (Trans **) emalloc(333*sizeof(Trans *));

	trans[3][35]	= settr(11411,0,34,1,0,".(goto)", 0, 2, 0);
	T = trans[3][34] = settr(11410,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,9,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,10,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,12,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,20,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,22,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,24,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,26,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,28,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11410,0,30,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11410,0,32,0,0,"DO", 0, 2, 0);
	trans[3][1]	= settr(11377,0,58,644,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][2]	= settr(11378,0,58,1,0,"goto accept_S52", 0, 2, 0);
	trans[3][3]	= settr(11379,0,200,645,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][4]	= settr(11380,0,200,1,0,"goto T0_S52", 0, 2, 0);
	trans[3][5]	= settr(11381,0,42,646,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][6]	= settr(11382,0,42,1,0,"goto accept_S35", 0, 2, 0);
	T = trans[ 3][9] = settr(11385,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11385,2,7,0,0,"ATOMIC", 1, 2, 0);
	trans[3][7]	= settr(11383,0,34,647,647,"((((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING)))||(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING)))||((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))))", 1, 2, 0); /* m: 8 -> 34,0 */
	reached3[8] = 1;
	trans[3][8]	= settr(0,0,0,0,0,"assert(!((((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING)))||(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING)))||((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING)))))))",0,0,0);
	trans[3][10]	= settr(11386,0,66,648,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][11]	= settr(11387,0,66,1,0,"goto accept_S61", 0, 2, 0);
	trans[3][12]	= settr(11388,0,220,649,0,"((!((states[2]==0))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][13]	= settr(11389,0,220,1,0,"goto T0_S72", 0, 2, 0);
	trans[3][14]	= settr(11390,0,102,650,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][15]	= settr(11391,0,102,1,0,"goto accept_S187", 0, 2, 0);
	trans[3][16]	= settr(11392,0,254,651,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][17]	= settr(11393,0,254,1,0,"goto T0_S187", 0, 2, 0);
	trans[3][18]	= settr(11394,0,86,652,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][19]	= settr(11395,0,86,1,0,"goto accept_S170", 0, 2, 0);
	trans[3][20]	= settr(11396,0,110,653,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][21]	= settr(11397,0,110,1,0,"goto accept_S196", 0, 2, 0);
	trans[3][22]	= settr(11398,0,274,654,0,"((!((states[1]==0))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][23]	= settr(11399,0,274,1,0,"goto T0_S207", 0, 2, 0);
	trans[3][24]	= settr(11400,0,146,655,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][25]	= settr(11401,0,146,1,0,"goto accept_S322", 0, 2, 0);
	trans[3][26]	= settr(11402,0,308,656,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][27]	= settr(11403,0,308,1,0,"goto T0_S322", 0, 2, 0);
	trans[3][28]	= settr(11404,0,130,657,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][29]	= settr(11405,0,130,1,0,"goto accept_S305", 0, 2, 0);
	trans[3][30]	= settr(11406,0,154,658,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][31]	= settr(11407,0,154,1,0,"goto accept_S331", 0, 2, 0);
	trans[3][32]	= settr(11408,0,328,659,0,"((!((states[0]==0))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][33]	= settr(11409,0,328,1,0,"goto T0_S342", 0, 2, 0);
	trans[3][36]	= settr(11412,0,42,1,0,"break", 0, 2, 0);
	trans[3][43]	= settr(11419,0,42,1,0,".(goto)", 0, 2, 0);
	T = trans[3][42] = settr(11418,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11418,0,37,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11418,0,41,0,0,"DO", 0, 2, 0);
	trans[3][37]	= settr(11413,0,42,660,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][38]	= settr(11414,0,42,1,0,"goto accept_S35", 0, 2, 0);
	T = trans[ 3][41] = settr(11417,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11417,2,39,0,0,"ATOMIC", 1, 2, 0);
	trans[3][39]	= settr(11415,0,42,661,661,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 40 -> 42,0 */
	reached3[40] = 1;
	trans[3][40]	= settr(0,0,0,0,0,"assert(!((!((states[2]==READY))&&!((states[2]==STARTING)))))",0,0,0);
	trans[3][44]	= settr(11420,0,58,1,0,"break", 0, 2, 0);
	trans[3][59]	= settr(11435,0,58,1,0,".(goto)", 0, 2, 0);
	T = trans[3][58] = settr(11434,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11434,0,45,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11434,0,47,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11434,0,49,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11434,0,51,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11434,0,55,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11434,0,56,0,0,"DO", 0, 2, 0);
	trans[3][45]	= settr(11421,0,200,662,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][46]	= settr(11422,0,200,1,0,"goto T0_S52", 0, 2, 0);
	trans[3][47]	= settr(11423,0,42,663,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][48]	= settr(11424,0,42,1,0,"goto accept_S35", 0, 2, 0);
	trans[3][49]	= settr(11425,0,220,664,0,"((!((states[2]==0))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][50]	= settr(11426,0,220,1,0,"goto T0_S72", 0, 2, 0);
	trans[3][51]	= settr(11427,0,182,665,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][52]	= settr(11428,0,182,1,0,"goto T0_S47", 0, 2, 0);
	T = trans[ 3][55] = settr(11431,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11431,2,53,0,0,"ATOMIC", 1, 2, 0);
	trans[3][53]	= settr(11429,0,58,666,666,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 54 -> 58,0 */
	reached3[54] = 1;
	trans[3][54]	= settr(0,0,0,0,0,"assert(!(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING)))))",0,0,0);
	trans[3][56]	= settr(11432,0,208,667,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][57]	= settr(11433,0,208,1,0,"goto T0_S61", 0, 2, 0);
	trans[3][60]	= settr(11436,0,66,1,0,"break", 0, 2, 0);
	trans[3][67]	= settr(11443,0,66,1,0,".(goto)", 0, 2, 0);
	T = trans[3][66] = settr(11442,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11442,0,63,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11442,0,64,0,0,"DO", 0, 2, 0);
	T = trans[ 3][63] = settr(11439,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11439,2,61,0,0,"ATOMIC", 1, 2, 0);
	trans[3][61]	= settr(11437,0,66,668,668,"(!((states[2]==READY)))", 1, 2, 0); /* m: 62 -> 66,0 */
	reached3[62] = 1;
	trans[3][62]	= settr(0,0,0,0,0,"assert(!(!((states[2]==READY))))",0,0,0);
	trans[3][64]	= settr(11440,0,208,1,0,"(1)", 0, 2, 0);
	trans[3][65]	= settr(11441,0,208,1,0,"goto T0_S61", 0, 2, 0);
	trans[3][68]	= settr(11444,0,78,1,0,"break", 0, 2, 0);
	trans[3][79]	= settr(11455,0,78,1,0,".(goto)", 0, 2, 0);
	T = trans[3][78] = settr(11454,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11454,0,69,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11454,0,73,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11454,0,74,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11454,0,76,0,0,"DO", 0, 2, 0);
	trans[3][69]	= settr(11445,0,42,669,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][70]	= settr(11446,0,42,1,0,"goto accept_S35", 0, 2, 0);
	T = trans[ 3][73] = settr(11449,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11449,2,71,0,0,"ATOMIC", 1, 2, 0);
	trans[3][71]	= settr(11447,0,78,670,670,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 72 -> 78,0 */
	reached3[72] = 1;
	trans[3][72]	= settr(0,0,0,0,0,"assert(!((!((states[2]==READY))&&!((states[2]==STARTING)))))",0,0,0);
	trans[3][74]	= settr(11450,0,220,671,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][75]	= settr(11451,0,220,1,0,"goto T0_S72", 0, 2, 0);
	trans[3][76]	= settr(11452,0,208,672,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][77]	= settr(11453,0,208,1,0,"goto T0_S61", 0, 2, 0);
	trans[3][80]	= settr(11456,0,86,1,0,"break", 0, 2, 0);
	trans[3][87]	= settr(11463,0,86,1,0,".(goto)", 0, 2, 0);
	T = trans[3][86] = settr(11462,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11462,0,81,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11462,0,85,0,0,"DO", 0, 2, 0);
	trans[3][81]	= settr(11457,0,86,673,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][82]	= settr(11458,0,86,1,0,"goto accept_S170", 0, 2, 0);
	T = trans[ 3][85] = settr(11461,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11461,2,83,0,0,"ATOMIC", 1, 2, 0);
	trans[3][83]	= settr(11459,0,86,674,674,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 84 -> 86,0 */
	reached3[84] = 1;
	trans[3][84]	= settr(0,0,0,0,0,"assert(!((!((states[1]==READY))&&!((states[1]==STARTING)))))",0,0,0);
	trans[3][88]	= settr(11464,0,102,1,0,"break", 0, 2, 0);
	trans[3][103]	= settr(11479,0,102,1,0,".(goto)", 0, 2, 0);
	T = trans[3][102] = settr(11478,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11478,0,89,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11478,0,91,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11478,0,93,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11478,0,95,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11478,0,99,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11478,0,100,0,0,"DO", 0, 2, 0);
	trans[3][89]	= settr(11465,0,254,675,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][90]	= settr(11466,0,254,1,0,"goto T0_S187", 0, 2, 0);
	trans[3][91]	= settr(11467,0,86,676,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][92]	= settr(11468,0,86,1,0,"goto accept_S170", 0, 2, 0);
	trans[3][93]	= settr(11469,0,274,677,0,"((!((states[1]==0))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][94]	= settr(11470,0,274,1,0,"goto T0_S207", 0, 2, 0);
	trans[3][95]	= settr(11471,0,236,678,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][96]	= settr(11472,0,236,1,0,"goto T0_S182", 0, 2, 0);
	T = trans[ 3][99] = settr(11475,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11475,2,97,0,0,"ATOMIC", 1, 2, 0);
	trans[3][97]	= settr(11473,0,102,679,679,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 98 -> 102,0 */
	reached3[98] = 1;
	trans[3][98]	= settr(0,0,0,0,0,"assert(!(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING)))))",0,0,0);
	trans[3][100]	= settr(11476,0,262,680,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][101]	= settr(11477,0,262,1,0,"goto T0_S196", 0, 2, 0);
	trans[3][104]	= settr(11480,0,110,1,0,"break", 0, 2, 0);
	trans[3][111]	= settr(11487,0,110,1,0,".(goto)", 0, 2, 0);
	T = trans[3][110] = settr(11486,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11486,0,107,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11486,0,108,0,0,"DO", 0, 2, 0);
	T = trans[ 3][107] = settr(11483,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11483,2,105,0,0,"ATOMIC", 1, 2, 0);
	trans[3][105]	= settr(11481,0,110,681,681,"(!((states[1]==READY)))", 1, 2, 0); /* m: 106 -> 110,0 */
	reached3[106] = 1;
	trans[3][106]	= settr(0,0,0,0,0,"assert(!(!((states[1]==READY))))",0,0,0);
	trans[3][108]	= settr(11484,0,262,1,0,"(1)", 0, 2, 0);
	trans[3][109]	= settr(11485,0,262,1,0,"goto T0_S196", 0, 2, 0);
	trans[3][112]	= settr(11488,0,122,1,0,"break", 0, 2, 0);
	trans[3][123]	= settr(11499,0,122,1,0,".(goto)", 0, 2, 0);
	T = trans[3][122] = settr(11498,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11498,0,113,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11498,0,117,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11498,0,118,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11498,0,120,0,0,"DO", 0, 2, 0);
	trans[3][113]	= settr(11489,0,86,682,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][114]	= settr(11490,0,86,1,0,"goto accept_S170", 0, 2, 0);
	T = trans[ 3][117] = settr(11493,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11493,2,115,0,0,"ATOMIC", 1, 2, 0);
	trans[3][115]	= settr(11491,0,122,683,683,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 116 -> 122,0 */
	reached3[116] = 1;
	trans[3][116]	= settr(0,0,0,0,0,"assert(!((!((states[1]==READY))&&!((states[1]==STARTING)))))",0,0,0);
	trans[3][118]	= settr(11494,0,274,684,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][119]	= settr(11495,0,274,1,0,"goto T0_S207", 0, 2, 0);
	trans[3][120]	= settr(11496,0,262,685,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][121]	= settr(11497,0,262,1,0,"goto T0_S196", 0, 2, 0);
	trans[3][124]	= settr(11500,0,130,1,0,"break", 0, 2, 0);
	trans[3][131]	= settr(11507,0,130,1,0,".(goto)", 0, 2, 0);
	T = trans[3][130] = settr(11506,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11506,0,125,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11506,0,129,0,0,"DO", 0, 2, 0);
	trans[3][125]	= settr(11501,0,130,686,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][126]	= settr(11502,0,130,1,0,"goto accept_S305", 0, 2, 0);
	T = trans[ 3][129] = settr(11505,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11505,2,127,0,0,"ATOMIC", 1, 2, 0);
	trans[3][127]	= settr(11503,0,130,687,687,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 128 -> 130,0 */
	reached3[128] = 1;
	trans[3][128]	= settr(0,0,0,0,0,"assert(!((!((states[0]==READY))&&!((states[0]==STARTING)))))",0,0,0);
	trans[3][132]	= settr(11508,0,146,1,0,"break", 0, 2, 0);
	trans[3][147]	= settr(11523,0,146,1,0,".(goto)", 0, 2, 0);
	T = trans[3][146] = settr(11522,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11522,0,133,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11522,0,135,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11522,0,137,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11522,0,139,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11522,0,143,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11522,0,144,0,0,"DO", 0, 2, 0);
	trans[3][133]	= settr(11509,0,308,688,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][134]	= settr(11510,0,308,1,0,"goto T0_S322", 0, 2, 0);
	trans[3][135]	= settr(11511,0,130,689,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][136]	= settr(11512,0,130,1,0,"goto accept_S305", 0, 2, 0);
	trans[3][137]	= settr(11513,0,328,690,0,"((!((states[0]==0))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][138]	= settr(11514,0,328,1,0,"goto T0_S342", 0, 2, 0);
	trans[3][139]	= settr(11515,0,290,691,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][140]	= settr(11516,0,290,1,0,"goto T0_S317", 0, 2, 0);
	T = trans[ 3][143] = settr(11519,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11519,2,141,0,0,"ATOMIC", 1, 2, 0);
	trans[3][141]	= settr(11517,0,146,692,692,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 142 -> 146,0 */
	reached3[142] = 1;
	trans[3][142]	= settr(0,0,0,0,0,"assert(!(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING)))))",0,0,0);
	trans[3][144]	= settr(11520,0,316,693,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][145]	= settr(11521,0,316,1,0,"goto T0_S331", 0, 2, 0);
	trans[3][148]	= settr(11524,0,154,1,0,"break", 0, 2, 0);
	trans[3][155]	= settr(11531,0,154,1,0,".(goto)", 0, 2, 0);
	T = trans[3][154] = settr(11530,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11530,0,151,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11530,0,152,0,0,"DO", 0, 2, 0);
	T = trans[ 3][151] = settr(11527,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11527,2,149,0,0,"ATOMIC", 1, 2, 0);
	trans[3][149]	= settr(11525,0,154,694,694,"(!((states[0]==READY)))", 1, 2, 0); /* m: 150 -> 154,0 */
	reached3[150] = 1;
	trans[3][150]	= settr(0,0,0,0,0,"assert(!(!((states[0]==READY))))",0,0,0);
	trans[3][152]	= settr(11528,0,316,1,0,"(1)", 0, 2, 0);
	trans[3][153]	= settr(11529,0,316,1,0,"goto T0_S331", 0, 2, 0);
	trans[3][156]	= settr(11532,0,166,1,0,"break", 0, 2, 0);
	trans[3][167]	= settr(11543,0,166,1,0,".(goto)", 0, 2, 0);
	T = trans[3][166] = settr(11542,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11542,0,157,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11542,0,161,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11542,0,162,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11542,0,164,0,0,"DO", 0, 2, 0);
	trans[3][157]	= settr(11533,0,130,695,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][158]	= settr(11534,0,130,1,0,"goto accept_S305", 0, 2, 0);
	T = trans[ 3][161] = settr(11537,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11537,2,159,0,0,"ATOMIC", 1, 2, 0);
	trans[3][159]	= settr(11535,0,166,696,696,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 160 -> 166,0 */
	reached3[160] = 1;
	trans[3][160]	= settr(0,0,0,0,0,"assert(!((!((states[0]==READY))&&!((states[0]==STARTING)))))",0,0,0);
	trans[3][162]	= settr(11538,0,328,697,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][163]	= settr(11539,0,328,1,0,"goto T0_S342", 0, 2, 0);
	trans[3][164]	= settr(11540,0,316,698,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][165]	= settr(11541,0,316,1,0,"goto T0_S331", 0, 2, 0);
	trans[3][168]	= settr(11544,0,182,1,0,"break", 0, 2, 0);
	trans[3][183]	= settr(11559,0,182,1,0,".(goto)", 0, 2, 0);
	T = trans[3][182] = settr(11558,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11558,0,169,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11558,0,171,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11558,0,173,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11558,0,177,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11558,0,178,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11558,0,180,0,0,"DO", 0, 2, 0);
	trans[3][169]	= settr(11545,0,58,699,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][170]	= settr(11546,0,58,1,0,"goto accept_S52", 0, 2, 0);
	trans[3][171]	= settr(11547,0,200,700,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][172]	= settr(11548,0,200,1,0,"goto T0_S52", 0, 2, 0);
	trans[3][173]	= settr(11549,0,42,701,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][174]	= settr(11550,0,42,1,0,"goto accept_S35", 0, 2, 0);
	T = trans[ 3][177] = settr(11553,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11553,2,175,0,0,"ATOMIC", 1, 2, 0);
	trans[3][175]	= settr(11551,0,182,702,702,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 176 -> 182,0 */
	reached3[176] = 1;
	trans[3][176]	= settr(0,0,0,0,0,"assert(!(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING)))))",0,0,0);
	trans[3][178]	= settr(11554,0,66,703,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][179]	= settr(11555,0,66,1,0,"goto accept_S61", 0, 2, 0);
	trans[3][180]	= settr(11556,0,220,704,0,"((!((states[2]==0))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][181]	= settr(11557,0,220,1,0,"goto T0_S72", 0, 2, 0);
	trans[3][184]	= settr(11560,0,200,1,0,"break", 0, 2, 0);
	trans[3][201]	= settr(11577,0,200,1,0,".(goto)", 0, 2, 0);
	T = trans[3][200] = settr(11576,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11576,0,185,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11576,0,187,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11576,0,189,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11576,0,191,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11576,0,195,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11576,0,196,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11576,0,198,0,0,"DO", 0, 2, 0);
	trans[3][185]	= settr(11561,0,58,705,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][186]	= settr(11562,0,58,1,0,"goto accept_S52", 0, 2, 0);
	trans[3][187]	= settr(11563,0,200,706,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][188]	= settr(11564,0,200,1,0,"goto T0_S52", 0, 2, 0);
	trans[3][189]	= settr(11565,0,42,707,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][190]	= settr(11566,0,42,1,0,"goto accept_S35", 0, 2, 0);
	trans[3][191]	= settr(11567,0,78,708,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][192]	= settr(11568,0,78,1,0,"goto accept_S72", 0, 2, 0);
	T = trans[ 3][195] = settr(11571,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11571,2,193,0,0,"ATOMIC", 1, 2, 0);
	trans[3][193]	= settr(11569,0,200,709,709,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 194 -> 200,0 */
	reached3[194] = 1;
	trans[3][194]	= settr(0,0,0,0,0,"assert(!(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING)))))",0,0,0);
	trans[3][196]	= settr(11572,0,66,710,0,"(((!((states[2]==0))&&!((states[2]==READY)))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][197]	= settr(11573,0,66,1,0,"goto accept_S61", 0, 2, 0);
	trans[3][198]	= settr(11574,0,220,711,0,"((!((states[2]==0))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][199]	= settr(11575,0,220,1,0,"goto T0_S72", 0, 2, 0);
	trans[3][202]	= settr(11578,0,208,1,0,"break", 0, 2, 0);
	trans[3][209]	= settr(11585,0,208,1,0,".(goto)", 0, 2, 0);
	T = trans[3][208] = settr(11584,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11584,0,205,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11584,0,206,0,0,"DO", 0, 2, 0);
	T = trans[ 3][205] = settr(11581,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11581,2,203,0,0,"ATOMIC", 1, 2, 0);
	trans[3][203]	= settr(11579,0,208,712,712,"(!((states[2]==READY)))", 1, 2, 0); /* m: 204 -> 208,0 */
	reached3[204] = 1;
	trans[3][204]	= settr(0,0,0,0,0,"assert(!(!((states[2]==READY))))",0,0,0);
	trans[3][206]	= settr(11582,0,208,1,0,"(1)", 0, 2, 0);
	trans[3][207]	= settr(11583,0,208,1,0,"goto T0_S61", 0, 2, 0);
	trans[3][210]	= settr(11586,0,220,1,0,"break", 0, 2, 0);
	trans[3][221]	= settr(11597,0,220,1,0,".(goto)", 0, 2, 0);
	T = trans[3][220] = settr(11596,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11596,0,211,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11596,0,215,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11596,0,216,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11596,0,218,0,0,"DO", 0, 2, 0);
	trans[3][211]	= settr(11587,0,42,713,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][212]	= settr(11588,0,42,1,0,"goto accept_S35", 0, 2, 0);
	T = trans[ 3][215] = settr(11591,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11591,2,213,0,0,"ATOMIC", 1, 2, 0);
	trans[3][213]	= settr(11589,0,220,714,714,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0); /* m: 214 -> 220,0 */
	reached3[214] = 1;
	trans[3][214]	= settr(0,0,0,0,0,"assert(!((!((states[2]==READY))&&!((states[2]==STARTING)))))",0,0,0);
	trans[3][216]	= settr(11592,0,220,715,0,"(!((states[2]==STARTING)))", 1, 2, 0);
	trans[3][217]	= settr(11593,0,220,1,0,"goto T0_S72", 0, 2, 0);
	trans[3][218]	= settr(11594,0,66,716,0,"((!((states[2]==READY))&&!((states[2]==STARTING))))", 1, 2, 0);
	trans[3][219]	= settr(11595,0,66,1,0,"goto accept_S61", 0, 2, 0);
	trans[3][222]	= settr(11598,0,236,1,0,"break", 0, 2, 0);
	trans[3][237]	= settr(11613,0,236,1,0,".(goto)", 0, 2, 0);
	T = trans[3][236] = settr(11612,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11612,0,223,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11612,0,225,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11612,0,227,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11612,0,231,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11612,0,232,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11612,0,234,0,0,"DO", 0, 2, 0);
	trans[3][223]	= settr(11599,0,102,717,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][224]	= settr(11600,0,102,1,0,"goto accept_S187", 0, 2, 0);
	trans[3][225]	= settr(11601,0,254,718,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][226]	= settr(11602,0,254,1,0,"goto T0_S187", 0, 2, 0);
	trans[3][227]	= settr(11603,0,86,719,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][228]	= settr(11604,0,86,1,0,"goto accept_S170", 0, 2, 0);
	T = trans[ 3][231] = settr(11607,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11607,2,229,0,0,"ATOMIC", 1, 2, 0);
	trans[3][229]	= settr(11605,0,236,720,720,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 230 -> 236,0 */
	reached3[230] = 1;
	trans[3][230]	= settr(0,0,0,0,0,"assert(!(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING)))))",0,0,0);
	trans[3][232]	= settr(11608,0,110,721,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][233]	= settr(11609,0,110,1,0,"goto accept_S196", 0, 2, 0);
	trans[3][234]	= settr(11610,0,274,722,0,"((!((states[1]==0))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][235]	= settr(11611,0,274,1,0,"goto T0_S207", 0, 2, 0);
	trans[3][238]	= settr(11614,0,254,1,0,"break", 0, 2, 0);
	trans[3][255]	= settr(11631,0,254,1,0,".(goto)", 0, 2, 0);
	T = trans[3][254] = settr(11630,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11630,0,239,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11630,0,241,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11630,0,243,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11630,0,245,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11630,0,249,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11630,0,250,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11630,0,252,0,0,"DO", 0, 2, 0);
	trans[3][239]	= settr(11615,0,102,723,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][240]	= settr(11616,0,102,1,0,"goto accept_S187", 0, 2, 0);
	trans[3][241]	= settr(11617,0,254,724,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][242]	= settr(11618,0,254,1,0,"goto T0_S187", 0, 2, 0);
	trans[3][243]	= settr(11619,0,86,725,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][244]	= settr(11620,0,86,1,0,"goto accept_S170", 0, 2, 0);
	trans[3][245]	= settr(11621,0,122,726,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][246]	= settr(11622,0,122,1,0,"goto accept_S207", 0, 2, 0);
	T = trans[ 3][249] = settr(11625,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11625,2,247,0,0,"ATOMIC", 1, 2, 0);
	trans[3][247]	= settr(11623,0,254,727,727,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 248 -> 254,0 */
	reached3[248] = 1;
	trans[3][248]	= settr(0,0,0,0,0,"assert(!(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING)))))",0,0,0);
	trans[3][250]	= settr(11626,0,110,728,0,"(((!((states[1]==0))&&!((states[1]==READY)))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][251]	= settr(11627,0,110,1,0,"goto accept_S196", 0, 2, 0);
	trans[3][252]	= settr(11628,0,274,729,0,"((!((states[1]==0))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][253]	= settr(11629,0,274,1,0,"goto T0_S207", 0, 2, 0);
	trans[3][256]	= settr(11632,0,262,1,0,"break", 0, 2, 0);
	trans[3][263]	= settr(11639,0,262,1,0,".(goto)", 0, 2, 0);
	T = trans[3][262] = settr(11638,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11638,0,259,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11638,0,260,0,0,"DO", 0, 2, 0);
	T = trans[ 3][259] = settr(11635,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11635,2,257,0,0,"ATOMIC", 1, 2, 0);
	trans[3][257]	= settr(11633,0,262,730,730,"(!((states[1]==READY)))", 1, 2, 0); /* m: 258 -> 262,0 */
	reached3[258] = 1;
	trans[3][258]	= settr(0,0,0,0,0,"assert(!(!((states[1]==READY))))",0,0,0);
	trans[3][260]	= settr(11636,0,262,1,0,"(1)", 0, 2, 0);
	trans[3][261]	= settr(11637,0,262,1,0,"goto T0_S196", 0, 2, 0);
	trans[3][264]	= settr(11640,0,274,1,0,"break", 0, 2, 0);
	trans[3][275]	= settr(11651,0,274,1,0,".(goto)", 0, 2, 0);
	T = trans[3][274] = settr(11650,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11650,0,265,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11650,0,269,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11650,0,270,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11650,0,272,0,0,"DO", 0, 2, 0);
	trans[3][265]	= settr(11641,0,86,731,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][266]	= settr(11642,0,86,1,0,"goto accept_S170", 0, 2, 0);
	T = trans[ 3][269] = settr(11645,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11645,2,267,0,0,"ATOMIC", 1, 2, 0);
	trans[3][267]	= settr(11643,0,274,732,732,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0); /* m: 268 -> 274,0 */
	reached3[268] = 1;
	trans[3][268]	= settr(0,0,0,0,0,"assert(!((!((states[1]==READY))&&!((states[1]==STARTING)))))",0,0,0);
	trans[3][270]	= settr(11646,0,274,733,0,"(!((states[1]==STARTING)))", 1, 2, 0);
	trans[3][271]	= settr(11647,0,274,1,0,"goto T0_S207", 0, 2, 0);
	trans[3][272]	= settr(11648,0,110,734,0,"((!((states[1]==READY))&&!((states[1]==STARTING))))", 1, 2, 0);
	trans[3][273]	= settr(11649,0,110,1,0,"goto accept_S196", 0, 2, 0);
	trans[3][276]	= settr(11652,0,290,1,0,"break", 0, 2, 0);
	trans[3][291]	= settr(11667,0,290,1,0,".(goto)", 0, 2, 0);
	T = trans[3][290] = settr(11666,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11666,0,277,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11666,0,279,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11666,0,281,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11666,0,285,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11666,0,286,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11666,0,288,0,0,"DO", 0, 2, 0);
	trans[3][277]	= settr(11653,0,146,735,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][278]	= settr(11654,0,146,1,0,"goto accept_S322", 0, 2, 0);
	trans[3][279]	= settr(11655,0,308,736,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][280]	= settr(11656,0,308,1,0,"goto T0_S322", 0, 2, 0);
	trans[3][281]	= settr(11657,0,130,737,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][282]	= settr(11658,0,130,1,0,"goto accept_S305", 0, 2, 0);
	T = trans[ 3][285] = settr(11661,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11661,2,283,0,0,"ATOMIC", 1, 2, 0);
	trans[3][283]	= settr(11659,0,290,738,738,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 284 -> 290,0 */
	reached3[284] = 1;
	trans[3][284]	= settr(0,0,0,0,0,"assert(!(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING)))))",0,0,0);
	trans[3][286]	= settr(11662,0,154,739,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][287]	= settr(11663,0,154,1,0,"goto accept_S331", 0, 2, 0);
	trans[3][288]	= settr(11664,0,328,740,0,"((!((states[0]==0))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][289]	= settr(11665,0,328,1,0,"goto T0_S342", 0, 2, 0);
	trans[3][292]	= settr(11668,0,308,1,0,"break", 0, 2, 0);
	trans[3][309]	= settr(11685,0,308,1,0,".(goto)", 0, 2, 0);
	T = trans[3][308] = settr(11684,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11684,0,293,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11684,0,295,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11684,0,297,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11684,0,299,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11684,0,303,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11684,0,304,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11684,0,306,0,0,"DO", 0, 2, 0);
	trans[3][293]	= settr(11669,0,146,741,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][294]	= settr(11670,0,146,1,0,"goto accept_S322", 0, 2, 0);
	trans[3][295]	= settr(11671,0,308,742,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][296]	= settr(11672,0,308,1,0,"goto T0_S322", 0, 2, 0);
	trans[3][297]	= settr(11673,0,130,743,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][298]	= settr(11674,0,130,1,0,"goto accept_S305", 0, 2, 0);
	trans[3][299]	= settr(11675,0,166,744,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][300]	= settr(11676,0,166,1,0,"goto accept_S342", 0, 2, 0);
	T = trans[ 3][303] = settr(11679,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11679,2,301,0,0,"ATOMIC", 1, 2, 0);
	trans[3][301]	= settr(11677,0,308,745,745,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 302 -> 308,0 */
	reached3[302] = 1;
	trans[3][302]	= settr(0,0,0,0,0,"assert(!(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING)))))",0,0,0);
	trans[3][304]	= settr(11680,0,154,746,0,"(((!((states[0]==0))&&!((states[0]==READY)))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][305]	= settr(11681,0,154,1,0,"goto accept_S331", 0, 2, 0);
	trans[3][306]	= settr(11682,0,328,747,0,"((!((states[0]==0))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][307]	= settr(11683,0,328,1,0,"goto T0_S342", 0, 2, 0);
	trans[3][310]	= settr(11686,0,316,1,0,"break", 0, 2, 0);
	trans[3][317]	= settr(11693,0,316,1,0,".(goto)", 0, 2, 0);
	T = trans[3][316] = settr(11692,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11692,0,313,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11692,0,314,0,0,"DO", 0, 2, 0);
	T = trans[ 3][313] = settr(11689,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11689,2,311,0,0,"ATOMIC", 1, 2, 0);
	trans[3][311]	= settr(11687,0,316,748,748,"(!((states[0]==READY)))", 1, 2, 0); /* m: 312 -> 316,0 */
	reached3[312] = 1;
	trans[3][312]	= settr(0,0,0,0,0,"assert(!(!((states[0]==READY))))",0,0,0);
	trans[3][314]	= settr(11690,0,316,1,0,"(1)", 0, 2, 0);
	trans[3][315]	= settr(11691,0,316,1,0,"goto T0_S331", 0, 2, 0);
	trans[3][318]	= settr(11694,0,328,1,0,"break", 0, 2, 0);
	trans[3][329]	= settr(11705,0,328,1,0,".(goto)", 0, 2, 0);
	T = trans[3][328] = settr(11704,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11704,0,319,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11704,0,323,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11704,0,324,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11704,0,326,0,0,"DO", 0, 2, 0);
	trans[3][319]	= settr(11695,0,130,749,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][320]	= settr(11696,0,130,1,0,"goto accept_S305", 0, 2, 0);
	T = trans[ 3][323] = settr(11699,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11699,2,321,0,0,"ATOMIC", 1, 2, 0);
	trans[3][321]	= settr(11697,0,328,750,750,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0); /* m: 322 -> 328,0 */
	reached3[322] = 1;
	trans[3][322]	= settr(0,0,0,0,0,"assert(!((!((states[0]==READY))&&!((states[0]==STARTING)))))",0,0,0);
	trans[3][324]	= settr(11700,0,328,751,0,"(!((states[0]==STARTING)))", 1, 2, 0);
	trans[3][325]	= settr(11701,0,328,1,0,"goto T0_S342", 0, 2, 0);
	trans[3][326]	= settr(11702,0,154,752,0,"((!((states[0]==READY))&&!((states[0]==STARTING))))", 1, 2, 0);
	trans[3][327]	= settr(11703,0,154,1,0,"goto accept_S331", 0, 2, 0);
	trans[3][330]	= settr(11706,0,331,1,0,"break", 0, 2, 0);
	trans[3][331]	= settr(11707,0,332,1,0,"(1)", 0, 2, 0);
	trans[3][332]	= settr(11708,0,0,753,753,"-end-", 0, 3500, 0);

	/* proctype 2: :init: */

	trans[2] = (Trans **) emalloc(298*sizeof(Trans *));

	T = trans[ 2][12] = settr(11091,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11091,0,11,0,0,"sub-sequence", 0, 2, 0);
/*->*/	trans[2][11]	= settr(11090,32,34,754,754,"D_STEP347", 1, 2, 0);
	T = trans[ 2][34] = settr(11113,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11113,0,33,0,0,"sub-sequence", 0, 2, 0);
/*->*/	trans[2][33]	= settr(11112,32,35,755,755,"D_STEP574", 1, 2, 0);
	trans[2][35]	= settr(11114,0,47,756,756,"i = 0", 0, 2, 0);
	T = trans[ 2][47] = settr(11126,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11126,0,46,0,0,"sub-sequence", 0, 2, 0);
/*->*/	trans[2][46]	= settr(11125,32,71,757,757,"D_STEP347", 1, 2, 0);
	T = trans[ 2][71] = settr(11150,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11150,0,67,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][67] = settr(11146,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11146,2,65,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][65] = settr(11144,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11144,2,48,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11144,2,51,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11144,2,54,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11144,2,57,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11144,2,60,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11144,2,63,0,0,"IF", 1, 2, 0);
	trans[2][48]	= settr(11127,4,68,758,758,"(((START==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 49 -> 68,0 */
	reached2[49] = 1;
	trans[2][49]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][50]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][66]	= settr(11145,0,68,759,759,".(goto)", 1, 2, 0);
	trans[2][51]	= settr(11130,4,68,760,760,"(((START==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 52 -> 68,0 */
	reached2[52] = 1;
	trans[2][52]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][53]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][54]	= settr(11133,4,68,761,761,"(((START==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 55 -> 68,0 */
	reached2[55] = 1;
	trans[2][55]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][56]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][57]	= settr(11136,4,68,762,762,"(((START==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 58 -> 68,0 */
	reached2[58] = 1;
	trans[2][58]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][59]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][60]	= settr(11139,4,68,763,763,"((START==ABORT))", 1, 2, 0); /* m: 61 -> 68,0 */
	reached2[61] = 1;
	trans[2][61]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][62]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][63]	= settr(11142,2,64,2,0,"else", 1, 2, 0);
	trans[2][64]	= settr(11143,4,68,764,764,"(1)", 1, 2, 0); /* m: 66 -> 68,0 */
	reached2[66] = 1;
	trans[2][68]	= settr(11147,0,70,765,765,"(run Supervisor())", 0, 2, 0);
	T = trans[ 2][70] = settr(11149,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11149,0,69,0,0,"sub-sequence", 0, 2, 0);
	trans[2][69]	= settr(11148,0,199,766,0,"(((((((states[0]==RUNNING)||(states[0]==PAUSED))||(states[0]==STOPPING))||(states[0]==STOPPED))||(states[0]==ABORTING))||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][200]	= settr(11279,0,199,1,0,".(goto)", 0, 2, 0);
	T = trans[2][199] = settr(11278,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11278,0,196,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11278,0,198,0,0,"DO", 0, 2, 0);
	T = trans[2][196] = settr(11275,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11275,0,72,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11275,0,133,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11275,0,194,0,0,"IF", 0, 2, 0);
	trans[2][72]	= settr(11151,0,131,767,0,"((states[0]==RUNNING))", 1, 2, 0);
	T = trans[2][131] = settr(11210,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11210,0,73,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11210,0,102,0,0,"IF", 0, 2, 0);
	trans[2][73]	= settr(11152,0,101,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][101] = settr(11180,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11180,0,93,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][93] = settr(11172,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11172,2,91,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][91] = settr(11170,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11170,2,74,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11170,2,77,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11170,2,80,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11170,2,83,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11170,2,86,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11170,2,89,0,0,"IF", 1, 2, 0);
	trans[2][74]	= settr(11153,4,99,768,768,"(((PAUSE==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 75 -> 99,0 */
	reached2[75] = 1;
	trans[2][75]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][76]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][92]	= settr(11171,0,99,769,769,".(goto)", 1, 2, 0);
	trans[2][77]	= settr(11156,4,99,770,770,"(((PAUSE==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 78 -> 99,0 */
	reached2[78] = 1;
	trans[2][78]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][79]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][80]	= settr(11159,4,99,771,771,"(((PAUSE==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 81 -> 99,0 */
	reached2[81] = 1;
	trans[2][81]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][82]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][83]	= settr(11162,4,99,772,772,"(((PAUSE==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 84 -> 99,0 */
	reached2[84] = 1;
	trans[2][84]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][85]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][86]	= settr(11165,4,99,773,773,"((PAUSE==ABORT))", 1, 2, 0); /* m: 87 -> 99,0 */
	reached2[87] = 1;
	trans[2][87]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][88]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][89]	= settr(11168,2,90,2,0,"else", 1, 2, 0);
	trans[2][90]	= settr(11169,4,99,774,774,"(1)", 1, 2, 0); /* m: 92 -> 99,0 */
	reached2[92] = 1;
	T = trans[2][99] = settr(11178,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11178,0,94,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11178,0,97,0,0,"IF", 0, 2, 0);
	trans[2][94]	= settr(11173,0,96,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][96] = settr(11175,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11175,0,95,0,0,"sub-sequence", 0, 2, 0);
	trans[2][95]	= settr(11174,0,199,775,0,"((((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==STOPPED))||(states[0]==ABORTING))||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][100]	= settr(11179,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][97]	= settr(11176,0,98,2,0,"else", 0, 2, 0);
	trans[2][98]	= settr(11177,0,199,1,0,"(1)", 0, 2, 0);
	trans[2][132]	= settr(11211,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][102]	= settr(11181,0,130,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][130] = settr(11209,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11209,0,122,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][122] = settr(11201,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11201,2,120,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][120] = settr(11199,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11199,2,103,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11199,2,106,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11199,2,109,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11199,2,112,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11199,2,115,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11199,2,118,0,0,"IF", 1, 2, 0);
	trans[2][103]	= settr(11182,4,128,776,776,"(((PAUSE==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 104 -> 128,0 */
	reached2[104] = 1;
	trans[2][104]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][105]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][121]	= settr(11200,0,128,777,777,".(goto)", 1, 2, 0);
	trans[2][106]	= settr(11185,4,128,778,778,"(((PAUSE==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 107 -> 128,0 */
	reached2[107] = 1;
	trans[2][107]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][108]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][109]	= settr(11188,4,128,779,779,"(((PAUSE==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 110 -> 128,0 */
	reached2[110] = 1;
	trans[2][110]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][111]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][112]	= settr(11191,4,128,780,780,"(((PAUSE==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 113 -> 128,0 */
	reached2[113] = 1;
	trans[2][113]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][114]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][115]	= settr(11194,4,128,781,781,"((PAUSE==ABORT))", 1, 2, 0); /* m: 116 -> 128,0 */
	reached2[116] = 1;
	trans[2][116]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][117]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][118]	= settr(11197,2,119,2,0,"else", 1, 2, 0);
	trans[2][119]	= settr(11198,4,128,782,782,"(1)", 1, 2, 0); /* m: 121 -> 128,0 */
	reached2[121] = 1;
	T = trans[2][128] = settr(11207,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(11207,0,123,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(11207,0,126,0,0,"IF", 0, 2, 0);
	trans[2][123]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 2][125] = settr(11204,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11204,0,124,0,0,"sub-sequence", 0, 2, 0);
	trans[2][124]	= settr(11203,0,199,783,0,"((((((states[0]==PAUSED)||(states[0]==STOPPING))||(states[0]==STOPPED))||(states[0]==ABORTING))||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][129]	= settr(11208,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][126]	= settr(11205,0,127,2,0,"else", 0, 2, 0);
	trans[2][127]	= settr(11206,0,199,1,0,"(1)", 0, 2, 0);
	trans[2][197]	= settr(11276,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][133]	= settr(11212,0,192,784,0,"((states[0]==PAUSED))", 1, 2, 0);
	T = trans[2][192] = settr(11271,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11271,0,134,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11271,0,163,0,0,"IF", 0, 2, 0);
	trans[2][134]	= settr(11213,0,162,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][162] = settr(11241,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11241,0,154,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][154] = settr(11233,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11233,2,152,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][152] = settr(11231,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11231,2,135,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11231,2,138,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11231,2,141,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11231,2,144,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11231,2,147,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11231,2,150,0,0,"IF", 1, 2, 0);
	trans[2][135]	= settr(11214,4,160,785,785,"(((CONTINUE==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 136 -> 160,0 */
	reached2[136] = 1;
	trans[2][136]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][137]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][153]	= settr(11232,0,160,786,786,".(goto)", 1, 2, 0);
	trans[2][138]	= settr(11217,4,160,787,787,"(((CONTINUE==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 139 -> 160,0 */
	reached2[139] = 1;
	trans[2][139]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][140]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][141]	= settr(11220,4,160,788,788,"(((CONTINUE==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 142 -> 160,0 */
	reached2[142] = 1;
	trans[2][142]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][143]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][144]	= settr(11223,4,160,789,789,"(((CONTINUE==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 145 -> 160,0 */
	reached2[145] = 1;
	trans[2][145]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][146]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][147]	= settr(11226,4,160,790,790,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 148 -> 160,0 */
	reached2[148] = 1;
	trans[2][148]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][149]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][150]	= settr(11229,2,151,2,0,"else", 1, 2, 0);
	trans[2][151]	= settr(11230,4,160,791,791,"(1)", 1, 2, 0); /* m: 153 -> 160,0 */
	reached2[153] = 1;
	T = trans[2][160] = settr(11239,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11239,0,155,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11239,0,158,0,0,"IF", 0, 2, 0);
	trans[2][155]	= settr(11234,0,157,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][157] = settr(11236,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11236,0,156,0,0,"sub-sequence", 0, 2, 0);
	trans[2][156]	= settr(11235,0,199,792,0,"((((((states[0]==RUNNING)||(states[0]==STOPPING))||(states[0]==STOPPED))||(states[0]==ABORTING))||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][161]	= settr(11240,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][158]	= settr(11237,0,159,2,0,"else", 0, 2, 0);
	trans[2][159]	= settr(11238,0,199,1,0,"(1)", 0, 2, 0);
	trans[2][193]	= settr(11272,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][163]	= settr(11242,0,191,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][191] = settr(11270,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11270,0,183,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][183] = settr(11262,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11262,2,181,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][181] = settr(11260,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11260,2,164,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11260,2,167,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11260,2,170,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11260,2,173,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11260,2,176,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11260,2,179,0,0,"IF", 1, 2, 0);
	trans[2][164]	= settr(11243,4,189,793,793,"(((CONTINUE==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 165 -> 189,0 */
	reached2[165] = 1;
	trans[2][165]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][166]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][182]	= settr(11261,0,189,794,794,".(goto)", 1, 2, 0);
	trans[2][167]	= settr(11246,4,189,795,795,"(((CONTINUE==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 168 -> 189,0 */
	reached2[168] = 1;
	trans[2][168]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][169]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][170]	= settr(11249,4,189,796,796,"(((CONTINUE==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 171 -> 189,0 */
	reached2[171] = 1;
	trans[2][171]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][172]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][173]	= settr(11252,4,189,797,797,"(((CONTINUE==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 174 -> 189,0 */
	reached2[174] = 1;
	trans[2][174]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][175]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][176]	= settr(11255,4,189,798,798,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 177 -> 189,0 */
	reached2[177] = 1;
	trans[2][177]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][178]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][179]	= settr(11258,2,180,2,0,"else", 1, 2, 0);
	trans[2][180]	= settr(11259,4,189,799,799,"(1)", 1, 2, 0); /* m: 182 -> 189,0 */
	reached2[182] = 1;
	T = trans[2][189] = settr(11268,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(11268,0,184,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(11268,0,187,0,0,"IF", 0, 2, 0);
	trans[2][184]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 2][186] = settr(11265,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11265,0,185,0,0,"sub-sequence", 0, 2, 0);
	trans[2][185]	= settr(11264,0,199,800,0,"((((((states[0]==RUNNING)||(states[0]==STOPPING))||(states[0]==STOPPED))||(states[0]==ABORTING))||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][190]	= settr(11269,0,199,1,0,".(goto)", 0, 2, 0);
	trans[2][187]	= settr(11266,0,188,2,0,"else", 0, 2, 0);
	trans[2][188]	= settr(11267,0,199,1,0,"(1)", 0, 2, 0);
	trans[2][194]	= settr(11273,0,195,1,0,"(1)", 0, 2, 0);
	trans[2][195]	= settr(11274,0,199,1,0,"(1)", 0, 2, 0);
	trans[2][198]	= settr(11277,0,265,1,0,"goto :b106", 0, 2, 0);
	trans[2][201]	= settr(11280,0,265,1,0,"break", 0, 2, 0);
	T = trans[2][265] = settr(11344,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11344,0,202,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11344,0,263,0,0,"IF", 0, 2, 0);
	trans[2][202]	= settr(11281,0,261,1,0,"(1)", 0, 2, 0);
	T = trans[2][261] = settr(11340,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11340,0,203,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11340,0,232,0,0,"IF", 0, 2, 0);
	trans[2][203]	= settr(11282,0,231,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][231] = settr(11310,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11310,0,223,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][223] = settr(11302,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11302,2,221,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][221] = settr(11300,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11300,2,204,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11300,2,207,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11300,2,210,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11300,2,213,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11300,2,216,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11300,2,219,0,0,"IF", 1, 2, 0);
	trans[2][204]	= settr(11283,4,229,801,801,"(((STOP==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 205 -> 229,0 */
	reached2[205] = 1;
	trans[2][205]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][206]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][222]	= settr(11301,0,229,802,802,".(goto)", 1, 2, 0);
	trans[2][207]	= settr(11286,4,229,803,803,"(((STOP==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 208 -> 229,0 */
	reached2[208] = 1;
	trans[2][208]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][209]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][210]	= settr(11289,4,229,804,804,"(((STOP==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 211 -> 229,0 */
	reached2[211] = 1;
	trans[2][211]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][212]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][213]	= settr(11292,4,229,805,805,"(((STOP==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 214 -> 229,0 */
	reached2[214] = 1;
	trans[2][214]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][215]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][216]	= settr(11295,4,229,806,806,"((STOP==ABORT))", 1, 2, 0); /* m: 217 -> 229,0 */
	reached2[217] = 1;
	trans[2][217]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][218]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][219]	= settr(11298,2,220,2,0,"else", 1, 2, 0);
	trans[2][220]	= settr(11299,4,229,807,807,"(1)", 1, 2, 0); /* m: 222 -> 229,0 */
	reached2[222] = 1;
	T = trans[2][229] = settr(11308,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11308,0,224,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11308,0,227,0,0,"IF", 0, 2, 0);
	trans[2][224]	= settr(11303,0,226,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][226] = settr(11305,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11305,0,225,0,0,"sub-sequence", 0, 2, 0);
	trans[2][225]	= settr(11304,0,268,808,0,"(((states[0]==STOPPED)||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][230]	= settr(11309,0,268,1,0,".(goto)", 0, 2, 0);
	trans[2][227]	= settr(11306,0,228,2,0,"else", 0, 2, 0);
	trans[2][228]	= settr(11307,0,268,1,0,"(1)", 0, 2, 0);
	trans[2][262]	= settr(11341,0,268,1,0,".(goto)", 0, 2, 0);
	trans[2][232]	= settr(11311,0,260,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][260] = settr(11339,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11339,0,252,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 2][252] = settr(11331,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11331,2,250,0,0,"ATOMIC", 1, 2, 0);
	T = trans[2][250] = settr(11329,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11329,2,233,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11329,2,236,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11329,2,239,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11329,2,242,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11329,2,245,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11329,2,248,0,0,"IF", 1, 2, 0);
	trans[2][233]	= settr(11312,4,258,809,809,"(((STOP==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 234 -> 258,0 */
	reached2[234] = 1;
	trans[2][234]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[2][235]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[2][251]	= settr(11330,0,258,810,810,".(goto)", 1, 2, 0);
	trans[2][236]	= settr(11315,4,258,811,811,"(((STOP==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 237 -> 258,0 */
	reached2[237] = 1;
	trans[2][237]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[2][238]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[2][239]	= settr(11318,4,258,812,812,"(((STOP==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 240 -> 258,0 */
	reached2[240] = 1;
	trans[2][240]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[2][241]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[2][242]	= settr(11321,4,258,813,813,"(((STOP==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 243 -> 258,0 */
	reached2[243] = 1;
	trans[2][243]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[2][244]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[2][245]	= settr(11324,4,258,814,814,"((STOP==ABORT))", 1, 2, 0); /* m: 246 -> 258,0 */
	reached2[246] = 1;
	trans[2][246]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[2][247]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[2][248]	= settr(11327,2,249,2,0,"else", 1, 2, 0);
	trans[2][249]	= settr(11328,4,258,815,815,"(1)", 1, 2, 0); /* m: 251 -> 258,0 */
	reached2[251] = 1;
	T = trans[2][258] = settr(11337,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(11337,0,253,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(11337,0,256,0,0,"IF", 0, 2, 0);
	trans[2][253]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 2][255] = settr(11334,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11334,0,254,0,0,"sub-sequence", 0, 2, 0);
	trans[2][254]	= settr(11333,0,268,816,0,"(((states[0]==STOPPED)||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][259]	= settr(11338,0,268,1,0,".(goto)", 0, 2, 0);
	trans[2][256]	= settr(11335,0,257,2,0,"else", 0, 2, 0);
	trans[2][257]	= settr(11336,0,268,1,0,"(1)", 0, 2, 0);
	trans[2][266]	= settr(11345,0,268,1,0,".(goto)", 0, 2, 0);
	trans[2][263]	= settr(11342,0,264,1,0,"(1)", 0, 2, 0);
	trans[2][264]	= settr(11343,0,268,1,0,"(1)", 0, 2, 0);
	T = trans[ 2][268] = settr(11347,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11347,0,267,0,0,"sub-sequence", 0, 2, 0);
	trans[2][267]	= settr(11346,0,269,817,0,"(((states[0]==STOPPED)||(states[0]==ABORTED)))", 1, 2, 0);
	trans[2][269]	= settr(11348,0,283,818,818,"i = 0", 0, 2, 0);
	T = trans[ 2][283] = settr(11362,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11362,0,282,0,0,"sub-sequence", 0, 2, 0);
/*->*/	trans[2][282]	= settr(11361,32,284,819,819,"D_STEP594", 1, 2, 0);
	trans[2][284]	= settr(11363,0,296,820,820,"i = 0", 0, 2, 0);
	T = trans[ 2][296] = settr(11375,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11375,0,295,0,0,"sub-sequence", 0, 2, 0);
/*->*/	trans[2][295]	= settr(11374,32,297,821,821,"D_STEP347", 1, 2, 0);
	trans[2][297]	= settr(11376,0,0,822,822,"-end-", 0, 3500, 0);

	/* proctype 1: Supervisor */

	trans[1] = (Trans **) emalloc(10864*sizeof(Trans *));

	trans[1][1]	= settr(217,0,1289,823,0,"((commands[0]==START))", 1, 2, 0);
	T = trans[ 1][1289] = settr(1505,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1505,0,2,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2]	= settr(218,0,1288,824,824,"states[0] = 12", 1, 2, 0);
	T = trans[ 1][1288] = settr(1504,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1504,0,1286,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1286] = settr(1502,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1502,0,3,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1502,0,430,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1502,0,857,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1502,0,1284,0,0,"IF", 0, 2, 0);
	trans[1][3]	= settr(219,0,429,825,0,"((12==RUNNING))", 0, 2, 0);
	T = trans[ 1][429] = settr(645,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(645,0,427,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][427] = settr(643,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(643,0,4,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(643,0,6,0,0,"IF", 0, 2, 0);
	trans[1][4]	= settr(220,0,5,826,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][5]	= settr(221,0,1309,827,827,"supervisor_started = 1", 1, 2, 0);
	trans[1][428]	= settr(644,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][6]	= settr(222,0,425,2,0,"else", 0, 2, 0);
	T = trans[1][425] = settr(641,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(641,0,7,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(641,0,272,0,0,"IF", 0, 2, 0);
	trans[1][7]	= settr(223,0,271,828,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][271] = settr(487,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(487,0,269,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][269] = settr(485,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(485,0,8,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(485,0,138,0,0,"IF", 0, 2, 0);
	trans[1][8]	= settr(224,0,137,829,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][137] = settr(353,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(353,0,134,0,0,"sub-sequence", 0, 2, 0);
	trans[1][135]	= settr(351,0,134,1,0,".(goto)", 0, 2, 0);
	T = trans[1][134] = settr(350,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(350,0,9,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(350,0,131,0,0,"DO", 0, 2, 0);
	trans[1][9]	= settr(225,0,129,830,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][129] = settr(345,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(345,0,127,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][127] = settr(343,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(343,0,10,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(343,0,40,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(343,0,69,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(343,0,98,0,0,"IF", 0, 2, 0);
	trans[1][10]	= settr(226,0,39,831,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][39] = settr(255,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(255,0,30,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][30] = settr(246,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(246,2,28,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][28] = settr(244,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(244,2,11,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(244,2,14,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(244,2,17,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(244,2,20,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(244,2,23,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(244,2,26,0,0,"IF", 1, 2, 0);
	trans[1][11]	= settr(227,4,31,832,832,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 12 -> 31,0 */
	reached1[12] = 1;
	trans[1][12]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][13]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][29]	= settr(245,0,31,833,833,".(goto)", 1, 2, 0);
	trans[1][14]	= settr(230,4,31,834,834,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 15 -> 31,0 */
	reached1[15] = 1;
	trans[1][15]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][16]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][17]	= settr(233,4,31,835,835,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 18 -> 31,0 */
	reached1[18] = 1;
	trans[1][18]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][19]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][20]	= settr(236,4,31,836,836,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 21 -> 31,0 */
	reached1[21] = 1;
	trans[1][21]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][22]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][23]	= settr(239,4,31,837,837,"((START==ABORT))", 1, 2, 0); /* m: 24 -> 31,0 */
	reached1[24] = 1;
	trans[1][24]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][25]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][26]	= settr(242,2,27,2,0,"else", 1, 2, 0);
	trans[1][27]	= settr(243,4,31,838,838,"(1)", 1, 2, 0); /* m: 29 -> 31,0 */
	reached1[29] = 1;
	trans[1][31]	= settr(247,0,37,839,839,"(run Thread(j))", 0, 2, 0);
	T = trans[1][37] = settr(253,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(253,0,32,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(253,0,35,0,0,"IF", 0, 2, 0);
	trans[1][32]	= settr(248,0,34,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][34] = settr(250,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(250,0,33,0,0,"sub-sequence", 0, 2, 0);
	trans[1][33]	= settr(249,0,130,840,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][38]	= settr(254,0,130,1,0,".(goto)", 0, 2, 0); /* m: 130 -> 0,134 */
	reached1[130] = 1;
	trans[1][35]	= settr(251,0,36,2,0,"else", 0, 2, 0);
	trans[1][36]	= settr(252,0,134,841,841,"(1)", 0, 2, 0); /* m: 130 -> 134,0 */
	reached1[130] = 1;
	trans[1][128]	= settr(344,0,130,1,0,".(goto)", 0, 2, 0); /* m: 130 -> 0,134 */
	reached1[130] = 1;
	trans[1][40]	= settr(256,0,68,842,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][68] = settr(284,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(284,0,60,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][60] = settr(276,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(276,2,58,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][58] = settr(274,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(274,2,41,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(274,2,44,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(274,2,47,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(274,2,50,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(274,2,53,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(274,2,56,0,0,"IF", 1, 2, 0);
	trans[1][41]	= settr(257,4,66,843,843,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 42 -> 66,0 */
	reached1[42] = 1;
	trans[1][42]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][43]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][59]	= settr(275,0,66,844,844,".(goto)", 1, 2, 0);
	trans[1][44]	= settr(260,4,66,845,845,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 45 -> 66,0 */
	reached1[45] = 1;
	trans[1][45]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][46]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][47]	= settr(263,4,66,846,846,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 48 -> 66,0 */
	reached1[48] = 1;
	trans[1][48]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][49]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][50]	= settr(266,4,66,847,847,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 51 -> 66,0 */
	reached1[51] = 1;
	trans[1][51]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][52]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][53]	= settr(269,4,66,848,848,"((PAUSE==ABORT))", 1, 2, 0); /* m: 54 -> 66,0 */
	reached1[54] = 1;
	trans[1][54]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][55]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][56]	= settr(272,2,57,2,0,"else", 1, 2, 0);
	trans[1][57]	= settr(273,4,66,849,849,"(1)", 1, 2, 0); /* m: 59 -> 66,0 */
	reached1[59] = 1;
	T = trans[1][66] = settr(282,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(282,0,61,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(282,0,64,0,0,"IF", 0, 2, 0);
	trans[1][61]	= settr(277,0,63,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][63] = settr(279,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(279,0,62,0,0,"sub-sequence", 0, 2, 0);
	trans[1][62]	= settr(278,0,130,850,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][67]	= settr(283,0,130,1,0,".(goto)", 0, 2, 0); /* m: 130 -> 0,134 */
	reached1[130] = 1;
	trans[1][64]	= settr(280,0,65,2,0,"else", 0, 2, 0);
	trans[1][65]	= settr(281,0,134,851,851,"(1)", 0, 2, 0); /* m: 130 -> 134,0 */
	reached1[130] = 1;
	trans[1][69]	= settr(285,0,97,852,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][97] = settr(313,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(313,0,89,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][89] = settr(305,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(305,2,87,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][87] = settr(303,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(303,2,70,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(303,2,73,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(303,2,76,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(303,2,79,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(303,2,82,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(303,2,85,0,0,"IF", 1, 2, 0);
	trans[1][70]	= settr(286,4,95,853,853,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 71 -> 95,0 */
	reached1[71] = 1;
	trans[1][71]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][72]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][88]	= settr(304,0,95,854,854,".(goto)", 1, 2, 0);
	trans[1][73]	= settr(289,4,95,855,855,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 74 -> 95,0 */
	reached1[74] = 1;
	trans[1][74]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][75]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][76]	= settr(292,4,95,856,856,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 77 -> 95,0 */
	reached1[77] = 1;
	trans[1][77]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][78]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][79]	= settr(295,4,95,857,857,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 80 -> 95,0 */
	reached1[80] = 1;
	trans[1][80]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][81]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][82]	= settr(298,4,95,858,858,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 83 -> 95,0 */
	reached1[83] = 1;
	trans[1][83]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][84]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][85]	= settr(301,2,86,2,0,"else", 1, 2, 0);
	trans[1][86]	= settr(302,4,95,859,859,"(1)", 1, 2, 0); /* m: 88 -> 95,0 */
	reached1[88] = 1;
	T = trans[1][95] = settr(311,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(311,0,90,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(311,0,93,0,0,"IF", 0, 2, 0);
	trans[1][90]	= settr(306,0,92,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][92] = settr(308,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(308,0,91,0,0,"sub-sequence", 0, 2, 0);
	trans[1][91]	= settr(307,0,130,860,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][96]	= settr(312,0,130,1,0,".(goto)", 0, 2, 0); /* m: 130 -> 0,134 */
	reached1[130] = 1;
	trans[1][93]	= settr(309,0,94,2,0,"else", 0, 2, 0);
	trans[1][94]	= settr(310,0,134,861,861,"(1)", 0, 2, 0); /* m: 130 -> 134,0 */
	reached1[130] = 1;
	trans[1][98]	= settr(314,0,126,862,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][126] = settr(342,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(342,0,118,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][118] = settr(334,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(334,2,116,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][116] = settr(332,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(332,2,99,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(332,2,102,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(332,2,105,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(332,2,108,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(332,2,111,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(332,2,114,0,0,"IF", 1, 2, 0);
	trans[1][99]	= settr(315,4,124,863,863,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 100 -> 124,0 */
	reached1[100] = 1;
	trans[1][100]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][101]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][117]	= settr(333,0,124,864,864,".(goto)", 1, 2, 0);
	trans[1][102]	= settr(318,4,124,865,865,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 103 -> 124,0 */
	reached1[103] = 1;
	trans[1][103]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][104]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][105]	= settr(321,4,124,866,866,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 106 -> 124,0 */
	reached1[106] = 1;
	trans[1][106]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][107]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][108]	= settr(324,4,124,867,867,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 109 -> 124,0 */
	reached1[109] = 1;
	trans[1][109]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][110]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][111]	= settr(327,4,124,868,868,"((STOP==ABORT))", 1, 2, 0); /* m: 112 -> 124,0 */
	reached1[112] = 1;
	trans[1][112]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][113]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][114]	= settr(330,2,115,2,0,"else", 1, 2, 0);
	trans[1][115]	= settr(331,4,124,869,869,"(1)", 1, 2, 0); /* m: 117 -> 124,0 */
	reached1[117] = 1;
	T = trans[1][124] = settr(340,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(340,0,119,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(340,0,122,0,0,"IF", 0, 2, 0);
	trans[1][119]	= settr(335,0,121,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][121] = settr(337,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(337,0,120,0,0,"sub-sequence", 0, 2, 0);
	trans[1][120]	= settr(336,0,130,870,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][125]	= settr(341,0,130,1,0,".(goto)", 0, 2, 0); /* m: 130 -> 0,134 */
	reached1[130] = 1;
	trans[1][122]	= settr(338,0,123,2,0,"else", 0, 2, 0);
	trans[1][123]	= settr(339,0,134,871,871,"(1)", 0, 2, 0); /* m: 130 -> 134,0 */
	reached1[130] = 1;
	trans[1][130]	= settr(346,0,134,872,872,"j = (j+1)", 0, 2, 0);
	trans[1][131]	= settr(347,0,132,2,0,"else", 0, 2, 0);
	trans[1][132]	= settr(348,0,1309,873,873,"j = 1", 0, 2, 0);
	trans[1][133]	= settr(349,0,1309,1,0,"goto :b1", 0, 2, 0);
	trans[1][136]	= settr(352,0,1309,1,0,"break", 0, 2, 0);
	trans[1][270]	= settr(486,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][138]	= settr(354,0,268,2,0,"else", 0, 2, 0);
	T = trans[ 1][268] = settr(484,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(484,0,139,0,0,"sub-sequence", 0, 2, 0);
	trans[1][139]	= settr(355,0,265,874,874,"j = (3-1)", 0, 2, 0);
	trans[1][266]	= settr(482,0,265,1,0,".(goto)", 0, 2, 0);
	T = trans[1][265] = settr(481,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(481,0,140,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(481,0,262,0,0,"DO", 0, 2, 0);
	trans[1][140]	= settr(356,0,260,875,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][260] = settr(476,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(476,0,258,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][258] = settr(474,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(474,0,141,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(474,0,171,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(474,0,200,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(474,0,229,0,0,"IF", 0, 2, 0);
	trans[1][141]	= settr(357,0,170,876,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][170] = settr(386,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(386,0,161,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][161] = settr(377,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(377,2,159,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][159] = settr(375,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(375,2,142,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(375,2,145,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(375,2,148,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(375,2,151,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(375,2,154,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(375,2,157,0,0,"IF", 1, 2, 0);
	trans[1][142]	= settr(358,4,162,877,877,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 143 -> 162,0 */
	reached1[143] = 1;
	trans[1][143]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][144]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][160]	= settr(376,0,162,878,878,".(goto)", 1, 2, 0);
	trans[1][145]	= settr(361,4,162,879,879,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 146 -> 162,0 */
	reached1[146] = 1;
	trans[1][146]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][147]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][148]	= settr(364,4,162,880,880,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 149 -> 162,0 */
	reached1[149] = 1;
	trans[1][149]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][150]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][151]	= settr(367,4,162,881,881,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 152 -> 162,0 */
	reached1[152] = 1;
	trans[1][152]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][153]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][154]	= settr(370,4,162,882,882,"((START==ABORT))", 1, 2, 0); /* m: 155 -> 162,0 */
	reached1[155] = 1;
	trans[1][155]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][156]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][157]	= settr(373,2,158,2,0,"else", 1, 2, 0);
	trans[1][158]	= settr(374,4,162,883,883,"(1)", 1, 2, 0); /* m: 160 -> 162,0 */
	reached1[160] = 1;
	trans[1][162]	= settr(378,0,168,884,884,"(run Thread(j))", 0, 2, 0);
	T = trans[1][168] = settr(384,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(384,0,163,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(384,0,166,0,0,"IF", 0, 2, 0);
	trans[1][163]	= settr(379,0,165,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][165] = settr(381,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(381,0,164,0,0,"sub-sequence", 0, 2, 0);
	trans[1][164]	= settr(380,0,261,885,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][169]	= settr(385,0,261,1,0,".(goto)", 0, 2, 0); /* m: 261 -> 0,265 */
	reached1[261] = 1;
	trans[1][166]	= settr(382,0,167,2,0,"else", 0, 2, 0);
	trans[1][167]	= settr(383,0,265,886,886,"(1)", 0, 2, 0); /* m: 261 -> 265,0 */
	reached1[261] = 1;
	trans[1][259]	= settr(475,0,261,1,0,".(goto)", 0, 2, 0); /* m: 261 -> 0,265 */
	reached1[261] = 1;
	trans[1][171]	= settr(387,0,199,887,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][199] = settr(415,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(415,0,191,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][191] = settr(407,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(407,2,189,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][189] = settr(405,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(405,2,172,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(405,2,175,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(405,2,178,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(405,2,181,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(405,2,184,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(405,2,187,0,0,"IF", 1, 2, 0);
	trans[1][172]	= settr(388,4,197,888,888,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 173 -> 197,0 */
	reached1[173] = 1;
	trans[1][173]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][174]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][190]	= settr(406,0,197,889,889,".(goto)", 1, 2, 0);
	trans[1][175]	= settr(391,4,197,890,890,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 176 -> 197,0 */
	reached1[176] = 1;
	trans[1][176]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][177]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][178]	= settr(394,4,197,891,891,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 179 -> 197,0 */
	reached1[179] = 1;
	trans[1][179]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][180]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][181]	= settr(397,4,197,892,892,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 182 -> 197,0 */
	reached1[182] = 1;
	trans[1][182]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][183]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][184]	= settr(400,4,197,893,893,"((PAUSE==ABORT))", 1, 2, 0); /* m: 185 -> 197,0 */
	reached1[185] = 1;
	trans[1][185]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][186]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][187]	= settr(403,2,188,2,0,"else", 1, 2, 0);
	trans[1][188]	= settr(404,4,197,894,894,"(1)", 1, 2, 0); /* m: 190 -> 197,0 */
	reached1[190] = 1;
	T = trans[1][197] = settr(413,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(413,0,192,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(413,0,195,0,0,"IF", 0, 2, 0);
	trans[1][192]	= settr(408,0,194,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][194] = settr(410,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(410,0,193,0,0,"sub-sequence", 0, 2, 0);
	trans[1][193]	= settr(409,0,261,895,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][198]	= settr(414,0,261,1,0,".(goto)", 0, 2, 0); /* m: 261 -> 0,265 */
	reached1[261] = 1;
	trans[1][195]	= settr(411,0,196,2,0,"else", 0, 2, 0);
	trans[1][196]	= settr(412,0,265,896,896,"(1)", 0, 2, 0); /* m: 261 -> 265,0 */
	reached1[261] = 1;
	trans[1][200]	= settr(416,0,228,897,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][228] = settr(444,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(444,0,220,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][220] = settr(436,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(436,2,218,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][218] = settr(434,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(434,2,201,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(434,2,204,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(434,2,207,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(434,2,210,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(434,2,213,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(434,2,216,0,0,"IF", 1, 2, 0);
	trans[1][201]	= settr(417,4,226,898,898,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 202 -> 226,0 */
	reached1[202] = 1;
	trans[1][202]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][203]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][219]	= settr(435,0,226,899,899,".(goto)", 1, 2, 0);
	trans[1][204]	= settr(420,4,226,900,900,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 205 -> 226,0 */
	reached1[205] = 1;
	trans[1][205]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][206]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][207]	= settr(423,4,226,901,901,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 208 -> 226,0 */
	reached1[208] = 1;
	trans[1][208]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][209]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][210]	= settr(426,4,226,902,902,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 211 -> 226,0 */
	reached1[211] = 1;
	trans[1][211]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][212]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][213]	= settr(429,4,226,903,903,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 214 -> 226,0 */
	reached1[214] = 1;
	trans[1][214]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][215]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][216]	= settr(432,2,217,2,0,"else", 1, 2, 0);
	trans[1][217]	= settr(433,4,226,904,904,"(1)", 1, 2, 0); /* m: 219 -> 226,0 */
	reached1[219] = 1;
	T = trans[1][226] = settr(442,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(442,0,221,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(442,0,224,0,0,"IF", 0, 2, 0);
	trans[1][221]	= settr(437,0,223,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][223] = settr(439,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(439,0,222,0,0,"sub-sequence", 0, 2, 0);
	trans[1][222]	= settr(438,0,261,905,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][227]	= settr(443,0,261,1,0,".(goto)", 0, 2, 0); /* m: 261 -> 0,265 */
	reached1[261] = 1;
	trans[1][224]	= settr(440,0,225,2,0,"else", 0, 2, 0);
	trans[1][225]	= settr(441,0,265,906,906,"(1)", 0, 2, 0); /* m: 261 -> 265,0 */
	reached1[261] = 1;
	trans[1][229]	= settr(445,0,257,907,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][257] = settr(473,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(473,0,249,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][249] = settr(465,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(465,2,247,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][247] = settr(463,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(463,2,230,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(463,2,233,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(463,2,236,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(463,2,239,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(463,2,242,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(463,2,245,0,0,"IF", 1, 2, 0);
	trans[1][230]	= settr(446,4,255,908,908,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 231 -> 255,0 */
	reached1[231] = 1;
	trans[1][231]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][232]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][248]	= settr(464,0,255,909,909,".(goto)", 1, 2, 0);
	trans[1][233]	= settr(449,4,255,910,910,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 234 -> 255,0 */
	reached1[234] = 1;
	trans[1][234]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][235]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][236]	= settr(452,4,255,911,911,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 237 -> 255,0 */
	reached1[237] = 1;
	trans[1][237]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][238]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][239]	= settr(455,4,255,912,912,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 240 -> 255,0 */
	reached1[240] = 1;
	trans[1][240]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][241]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][242]	= settr(458,4,255,913,913,"((STOP==ABORT))", 1, 2, 0); /* m: 243 -> 255,0 */
	reached1[243] = 1;
	trans[1][243]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][244]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][245]	= settr(461,2,246,2,0,"else", 1, 2, 0);
	trans[1][246]	= settr(462,4,255,914,914,"(1)", 1, 2, 0); /* m: 248 -> 255,0 */
	reached1[248] = 1;
	T = trans[1][255] = settr(471,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(471,0,250,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(471,0,253,0,0,"IF", 0, 2, 0);
	trans[1][250]	= settr(466,0,252,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][252] = settr(468,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(468,0,251,0,0,"sub-sequence", 0, 2, 0);
	trans[1][251]	= settr(467,0,261,915,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][256]	= settr(472,0,261,1,0,".(goto)", 0, 2, 0); /* m: 261 -> 0,265 */
	reached1[261] = 1;
	trans[1][253]	= settr(469,0,254,2,0,"else", 0, 2, 0);
	trans[1][254]	= settr(470,0,265,916,916,"(1)", 0, 2, 0); /* m: 261 -> 265,0 */
	reached1[261] = 1;
	trans[1][261]	= settr(477,0,265,917,917,"j = (j-1)", 0, 2, 0);
	trans[1][262]	= settr(478,0,263,2,0,"else", 0, 2, 0);
	trans[1][263]	= settr(479,0,1309,918,918,"j = 1", 0, 2, 0);
	trans[1][264]	= settr(480,0,1309,1,0,"goto :b2", 0, 2, 0);
	trans[1][267]	= settr(483,0,1309,1,0,"break", 0, 2, 0);
	trans[1][426]	= settr(642,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][272]	= settr(488,0,424,2,0,"else", 0, 2, 0);
	T = trans[ 1][424] = settr(640,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(640,0,401,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][401] = settr(617,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(617,0,398,0,0,"sub-sequence", 0, 2, 0);
	trans[1][399]	= settr(615,0,398,1,0,".(goto)", 0, 2, 0);
	T = trans[1][398] = settr(614,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(614,0,273,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(614,0,395,0,0,"DO", 0, 2, 0);
	trans[1][273]	= settr(489,0,393,919,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][393] = settr(609,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(609,0,391,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][391] = settr(607,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(607,0,274,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(607,0,304,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(607,0,333,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(607,0,362,0,0,"IF", 0, 2, 0);
	trans[1][274]	= settr(490,0,303,920,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][303] = settr(519,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(519,0,294,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][294] = settr(510,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(510,2,292,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][292] = settr(508,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(508,2,275,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(508,2,278,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(508,2,281,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(508,2,284,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(508,2,287,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(508,2,290,0,0,"IF", 1, 2, 0);
	trans[1][275]	= settr(491,4,295,921,921,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 276 -> 295,0 */
	reached1[276] = 1;
	trans[1][276]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][277]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][293]	= settr(509,0,295,922,922,".(goto)", 1, 2, 0);
	trans[1][278]	= settr(494,4,295,923,923,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 279 -> 295,0 */
	reached1[279] = 1;
	trans[1][279]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][280]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][281]	= settr(497,4,295,924,924,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 282 -> 295,0 */
	reached1[282] = 1;
	trans[1][282]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][283]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][284]	= settr(500,4,295,925,925,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 285 -> 295,0 */
	reached1[285] = 1;
	trans[1][285]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][286]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][287]	= settr(503,4,295,926,926,"((START==ABORT))", 1, 2, 0); /* m: 288 -> 295,0 */
	reached1[288] = 1;
	trans[1][288]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][289]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][290]	= settr(506,2,291,2,0,"else", 1, 2, 0);
	trans[1][291]	= settr(507,4,295,927,927,"(1)", 1, 2, 0); /* m: 293 -> 295,0 */
	reached1[293] = 1;
	trans[1][295]	= settr(511,0,301,928,928,"(run Thread(j))", 0, 2, 0);
	T = trans[1][301] = settr(517,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(517,0,296,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(517,0,299,0,0,"IF", 0, 2, 0);
	trans[1][296]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][298] = settr(514,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(514,0,297,0,0,"sub-sequence", 0, 2, 0);
	trans[1][297]	= settr(513,0,394,929,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][302]	= settr(518,0,394,1,0,".(goto)", 0, 2, 0); /* m: 394 -> 0,398 */
	reached1[394] = 1;
	trans[1][299]	= settr(515,0,300,2,0,"else", 0, 2, 0);
	trans[1][300]	= settr(516,0,398,930,930,"(1)", 0, 2, 0); /* m: 394 -> 398,0 */
	reached1[394] = 1;
	trans[1][392]	= settr(608,0,394,1,0,".(goto)", 0, 2, 0); /* m: 394 -> 0,398 */
	reached1[394] = 1;
	trans[1][304]	= settr(520,0,332,931,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][332] = settr(548,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(548,0,324,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][324] = settr(540,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(540,2,322,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][322] = settr(538,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(538,2,305,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(538,2,308,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(538,2,311,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(538,2,314,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(538,2,317,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(538,2,320,0,0,"IF", 1, 2, 0);
	trans[1][305]	= settr(521,4,330,932,932,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 306 -> 330,0 */
	reached1[306] = 1;
	trans[1][306]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][307]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][323]	= settr(539,0,330,933,933,".(goto)", 1, 2, 0);
	trans[1][308]	= settr(524,4,330,934,934,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 309 -> 330,0 */
	reached1[309] = 1;
	trans[1][309]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][310]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][311]	= settr(527,4,330,935,935,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 312 -> 330,0 */
	reached1[312] = 1;
	trans[1][312]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][313]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][314]	= settr(530,4,330,936,936,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 315 -> 330,0 */
	reached1[315] = 1;
	trans[1][315]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][316]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][317]	= settr(533,4,330,937,937,"((PAUSE==ABORT))", 1, 2, 0); /* m: 318 -> 330,0 */
	reached1[318] = 1;
	trans[1][318]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][319]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][320]	= settr(536,2,321,2,0,"else", 1, 2, 0);
	trans[1][321]	= settr(537,4,330,938,938,"(1)", 1, 2, 0); /* m: 323 -> 330,0 */
	reached1[323] = 1;
	T = trans[1][330] = settr(546,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(546,0,325,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(546,0,328,0,0,"IF", 0, 2, 0);
	trans[1][325]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][327] = settr(543,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(543,0,326,0,0,"sub-sequence", 0, 2, 0);
	trans[1][326]	= settr(542,0,394,939,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][331]	= settr(547,0,394,1,0,".(goto)", 0, 2, 0); /* m: 394 -> 0,398 */
	reached1[394] = 1;
	trans[1][328]	= settr(544,0,329,2,0,"else", 0, 2, 0);
	trans[1][329]	= settr(545,0,398,940,940,"(1)", 0, 2, 0); /* m: 394 -> 398,0 */
	reached1[394] = 1;
	trans[1][333]	= settr(549,0,361,941,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][361] = settr(577,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(577,0,353,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][353] = settr(569,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(569,2,351,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][351] = settr(567,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(567,2,334,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(567,2,337,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(567,2,340,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(567,2,343,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(567,2,346,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(567,2,349,0,0,"IF", 1, 2, 0);
	trans[1][334]	= settr(550,4,359,942,942,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 335 -> 359,0 */
	reached1[335] = 1;
	trans[1][335]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][336]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][352]	= settr(568,0,359,943,943,".(goto)", 1, 2, 0);
	trans[1][337]	= settr(553,4,359,944,944,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 338 -> 359,0 */
	reached1[338] = 1;
	trans[1][338]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][339]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][340]	= settr(556,4,359,945,945,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 341 -> 359,0 */
	reached1[341] = 1;
	trans[1][341]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][342]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][343]	= settr(559,4,359,946,946,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 344 -> 359,0 */
	reached1[344] = 1;
	trans[1][344]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][345]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][346]	= settr(562,4,359,947,947,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 347 -> 359,0 */
	reached1[347] = 1;
	trans[1][347]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][348]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][349]	= settr(565,2,350,2,0,"else", 1, 2, 0);
	trans[1][350]	= settr(566,4,359,948,948,"(1)", 1, 2, 0); /* m: 352 -> 359,0 */
	reached1[352] = 1;
	T = trans[1][359] = settr(575,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(575,0,354,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(575,0,357,0,0,"IF", 0, 2, 0);
	trans[1][354]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][356] = settr(572,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(572,0,355,0,0,"sub-sequence", 0, 2, 0);
	trans[1][355]	= settr(571,0,394,949,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][360]	= settr(576,0,394,1,0,".(goto)", 0, 2, 0); /* m: 394 -> 0,398 */
	reached1[394] = 1;
	trans[1][357]	= settr(573,0,358,2,0,"else", 0, 2, 0);
	trans[1][358]	= settr(574,0,398,950,950,"(1)", 0, 2, 0); /* m: 394 -> 398,0 */
	reached1[394] = 1;
	trans[1][362]	= settr(578,0,390,951,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][390] = settr(606,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(606,0,382,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][382] = settr(598,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(598,2,380,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][380] = settr(596,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(596,2,363,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(596,2,366,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(596,2,369,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(596,2,372,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(596,2,375,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(596,2,378,0,0,"IF", 1, 2, 0);
	trans[1][363]	= settr(579,4,388,952,952,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 364 -> 388,0 */
	reached1[364] = 1;
	trans[1][364]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][365]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][381]	= settr(597,0,388,953,953,".(goto)", 1, 2, 0);
	trans[1][366]	= settr(582,4,388,954,954,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 367 -> 388,0 */
	reached1[367] = 1;
	trans[1][367]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][368]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][369]	= settr(585,4,388,955,955,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 370 -> 388,0 */
	reached1[370] = 1;
	trans[1][370]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][371]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][372]	= settr(588,4,388,956,956,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 373 -> 388,0 */
	reached1[373] = 1;
	trans[1][373]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][374]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][375]	= settr(591,4,388,957,957,"((STOP==ABORT))", 1, 2, 0); /* m: 376 -> 388,0 */
	reached1[376] = 1;
	trans[1][376]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][377]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][378]	= settr(594,2,379,2,0,"else", 1, 2, 0);
	trans[1][379]	= settr(595,4,388,958,958,"(1)", 1, 2, 0); /* m: 381 -> 388,0 */
	reached1[381] = 1;
	T = trans[1][388] = settr(604,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(604,0,383,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(604,0,386,0,0,"IF", 0, 2, 0);
	trans[1][383]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][385] = settr(601,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(601,0,384,0,0,"sub-sequence", 0, 2, 0);
	trans[1][384]	= settr(600,0,394,959,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][389]	= settr(605,0,394,1,0,".(goto)", 0, 2, 0); /* m: 394 -> 0,398 */
	reached1[394] = 1;
	trans[1][386]	= settr(602,0,387,2,0,"else", 0, 2, 0);
	trans[1][387]	= settr(603,0,398,960,960,"(1)", 0, 2, 0); /* m: 394 -> 398,0 */
	reached1[394] = 1;
	trans[1][394]	= settr(610,0,398,961,961,"j = (j+1)", 0, 2, 0);
	trans[1][395]	= settr(611,0,396,2,0,"else", 0, 2, 0);
	trans[1][396]	= settr(612,0,421,962,962,"j = 1", 0, 2, 0);
	trans[1][397]	= settr(613,0,421,1,0,"goto :b3", 0, 2, 0);
	trans[1][400]	= settr(616,0,421,1,0,"break", 0, 2, 0);
	trans[1][422]	= settr(638,0,421,1,0,".(goto)", 0, 2, 0);
	T = trans[1][421] = settr(637,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,402,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(637,0,418,0,0,"DO", 0, 2, 0);
	trans[1][402]	= settr(618,0,415,963,0,"((j<3))", 0, 2, 0);
	T = trans[1][415] = settr(631,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(631,0,403,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(631,0,406,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(631,0,409,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(631,0,412,0,0,"IF", 0, 2, 0);
	trans[1][403]	= settr(619,0,405,964,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][405] = settr(621,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(621,0,404,0,0,"sub-sequence", 0, 2, 0);
	trans[1][404]	= settr(620,0,417,965,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][416]	= settr(632,0,417,1,0,".(goto)", 0, 2, 0); /* m: 417 -> 0,421 */
	reached1[417] = 1;
	trans[1][406]	= settr(622,0,408,966,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][408] = settr(624,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(624,0,407,0,0,"sub-sequence", 0, 2, 0);
	trans[1][407]	= settr(623,0,417,967,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][409]	= settr(625,0,411,968,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][411] = settr(627,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(627,0,410,0,0,"sub-sequence", 0, 2, 0);
	trans[1][410]	= settr(626,0,417,969,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][412]	= settr(628,0,414,970,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][414] = settr(630,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(630,0,413,0,0,"sub-sequence", 0, 2, 0);
	trans[1][413]	= settr(629,0,417,971,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][417]	= settr(633,0,421,972,972,"j = (j+1)", 0, 2, 0);
	trans[1][418]	= settr(634,0,419,2,0,"else", 0, 2, 0);
	trans[1][419]	= settr(635,0,1309,973,973,"j = 1", 0, 2, 0);
	trans[1][420]	= settr(636,0,1309,1,0,"goto :b4", 0, 2, 0);
	trans[1][423]	= settr(639,0,1309,1,0,"break", 0, 2, 0);
	trans[1][1287]	= settr(1503,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][430]	= settr(646,0,856,974,0,"((12==PAUSED))", 0, 2, 0);
	T = trans[ 1][856] = settr(1072,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1072,0,854,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][854] = settr(1070,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1070,0,431,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1070,0,433,0,0,"IF", 0, 2, 0);
	trans[1][431]	= settr(647,0,432,975,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][432]	= settr(648,0,1309,976,976,"supervisor_started = 1", 1, 2, 0);
	trans[1][855]	= settr(1071,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][433]	= settr(649,0,852,2,0,"else", 0, 2, 0);
	T = trans[1][852] = settr(1068,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1068,0,434,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1068,0,699,0,0,"IF", 0, 2, 0);
	trans[1][434]	= settr(650,0,698,977,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][698] = settr(914,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(914,0,696,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][696] = settr(912,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(912,0,435,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(912,0,565,0,0,"IF", 0, 2, 0);
	trans[1][435]	= settr(651,0,564,978,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][564] = settr(780,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(780,0,561,0,0,"sub-sequence", 0, 2, 0);
	trans[1][562]	= settr(778,0,561,1,0,".(goto)", 0, 2, 0);
	T = trans[1][561] = settr(777,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(777,0,436,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(777,0,558,0,0,"DO", 0, 2, 0);
	trans[1][436]	= settr(652,0,556,979,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][556] = settr(772,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(772,0,554,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][554] = settr(770,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(770,0,437,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(770,0,467,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(770,0,496,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(770,0,525,0,0,"IF", 0, 2, 0);
	trans[1][437]	= settr(653,0,466,980,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][466] = settr(682,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(682,0,457,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][457] = settr(673,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(673,2,455,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][455] = settr(671,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(671,2,438,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(671,2,441,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(671,2,444,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(671,2,447,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(671,2,450,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(671,2,453,0,0,"IF", 1, 2, 0);
	trans[1][438]	= settr(654,4,458,981,981,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 439 -> 458,0 */
	reached1[439] = 1;
	trans[1][439]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][440]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][456]	= settr(672,0,458,982,982,".(goto)", 1, 2, 0);
	trans[1][441]	= settr(657,4,458,983,983,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 442 -> 458,0 */
	reached1[442] = 1;
	trans[1][442]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][443]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][444]	= settr(660,4,458,984,984,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 445 -> 458,0 */
	reached1[445] = 1;
	trans[1][445]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][446]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][447]	= settr(663,4,458,985,985,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 448 -> 458,0 */
	reached1[448] = 1;
	trans[1][448]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][449]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][450]	= settr(666,4,458,986,986,"((START==ABORT))", 1, 2, 0); /* m: 451 -> 458,0 */
	reached1[451] = 1;
	trans[1][451]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][452]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][453]	= settr(669,2,454,2,0,"else", 1, 2, 0);
	trans[1][454]	= settr(670,4,458,987,987,"(1)", 1, 2, 0); /* m: 456 -> 458,0 */
	reached1[456] = 1;
	trans[1][458]	= settr(674,0,464,988,988,"(run Thread(j))", 0, 2, 0);
	T = trans[1][464] = settr(680,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(680,0,459,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(680,0,462,0,0,"IF", 0, 2, 0);
	trans[1][459]	= settr(675,0,461,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][461] = settr(677,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(677,0,460,0,0,"sub-sequence", 0, 2, 0);
	trans[1][460]	= settr(676,0,557,989,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][465]	= settr(681,0,557,1,0,".(goto)", 0, 2, 0); /* m: 557 -> 0,561 */
	reached1[557] = 1;
	trans[1][462]	= settr(678,0,463,2,0,"else", 0, 2, 0);
	trans[1][463]	= settr(679,0,561,990,990,"(1)", 0, 2, 0); /* m: 557 -> 561,0 */
	reached1[557] = 1;
	trans[1][555]	= settr(771,0,557,1,0,".(goto)", 0, 2, 0); /* m: 557 -> 0,561 */
	reached1[557] = 1;
	trans[1][467]	= settr(683,0,495,991,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][495] = settr(711,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(711,0,487,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][487] = settr(703,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(703,2,485,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][485] = settr(701,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(701,2,468,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(701,2,471,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(701,2,474,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(701,2,477,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(701,2,480,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(701,2,483,0,0,"IF", 1, 2, 0);
	trans[1][468]	= settr(684,4,493,992,992,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 469 -> 493,0 */
	reached1[469] = 1;
	trans[1][469]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][470]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][486]	= settr(702,0,493,993,993,".(goto)", 1, 2, 0);
	trans[1][471]	= settr(687,4,493,994,994,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 472 -> 493,0 */
	reached1[472] = 1;
	trans[1][472]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][473]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][474]	= settr(690,4,493,995,995,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 475 -> 493,0 */
	reached1[475] = 1;
	trans[1][475]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][476]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][477]	= settr(693,4,493,996,996,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 478 -> 493,0 */
	reached1[478] = 1;
	trans[1][478]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][479]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][480]	= settr(696,4,493,997,997,"((PAUSE==ABORT))", 1, 2, 0); /* m: 481 -> 493,0 */
	reached1[481] = 1;
	trans[1][481]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][482]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][483]	= settr(699,2,484,2,0,"else", 1, 2, 0);
	trans[1][484]	= settr(700,4,493,998,998,"(1)", 1, 2, 0); /* m: 486 -> 493,0 */
	reached1[486] = 1;
	T = trans[1][493] = settr(709,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(709,0,488,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(709,0,491,0,0,"IF", 0, 2, 0);
	trans[1][488]	= settr(704,0,490,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][490] = settr(706,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(706,0,489,0,0,"sub-sequence", 0, 2, 0);
	trans[1][489]	= settr(705,0,557,999,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][494]	= settr(710,0,557,1,0,".(goto)", 0, 2, 0); /* m: 557 -> 0,561 */
	reached1[557] = 1;
	trans[1][491]	= settr(707,0,492,2,0,"else", 0, 2, 0);
	trans[1][492]	= settr(708,0,561,1000,1000,"(1)", 0, 2, 0); /* m: 557 -> 561,0 */
	reached1[557] = 1;
	trans[1][496]	= settr(712,0,524,1001,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][524] = settr(740,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(740,0,516,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][516] = settr(732,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(732,2,514,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][514] = settr(730,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(730,2,497,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(730,2,500,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(730,2,503,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(730,2,506,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(730,2,509,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(730,2,512,0,0,"IF", 1, 2, 0);
	trans[1][497]	= settr(713,4,522,1002,1002,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 498 -> 522,0 */
	reached1[498] = 1;
	trans[1][498]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][499]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][515]	= settr(731,0,522,1003,1003,".(goto)", 1, 2, 0);
	trans[1][500]	= settr(716,4,522,1004,1004,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 501 -> 522,0 */
	reached1[501] = 1;
	trans[1][501]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][502]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][503]	= settr(719,4,522,1005,1005,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 504 -> 522,0 */
	reached1[504] = 1;
	trans[1][504]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][505]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][506]	= settr(722,4,522,1006,1006,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 507 -> 522,0 */
	reached1[507] = 1;
	trans[1][507]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][508]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][509]	= settr(725,4,522,1007,1007,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 510 -> 522,0 */
	reached1[510] = 1;
	trans[1][510]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][511]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][512]	= settr(728,2,513,2,0,"else", 1, 2, 0);
	trans[1][513]	= settr(729,4,522,1008,1008,"(1)", 1, 2, 0); /* m: 515 -> 522,0 */
	reached1[515] = 1;
	T = trans[1][522] = settr(738,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(738,0,517,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(738,0,520,0,0,"IF", 0, 2, 0);
	trans[1][517]	= settr(733,0,519,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][519] = settr(735,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(735,0,518,0,0,"sub-sequence", 0, 2, 0);
	trans[1][518]	= settr(734,0,557,1009,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][523]	= settr(739,0,557,1,0,".(goto)", 0, 2, 0); /* m: 557 -> 0,561 */
	reached1[557] = 1;
	trans[1][520]	= settr(736,0,521,2,0,"else", 0, 2, 0);
	trans[1][521]	= settr(737,0,561,1010,1010,"(1)", 0, 2, 0); /* m: 557 -> 561,0 */
	reached1[557] = 1;
	trans[1][525]	= settr(741,0,553,1011,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][553] = settr(769,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(769,0,545,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][545] = settr(761,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(761,2,543,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][543] = settr(759,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(759,2,526,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(759,2,529,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(759,2,532,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(759,2,535,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(759,2,538,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(759,2,541,0,0,"IF", 1, 2, 0);
	trans[1][526]	= settr(742,4,551,1012,1012,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 527 -> 551,0 */
	reached1[527] = 1;
	trans[1][527]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][528]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][544]	= settr(760,0,551,1013,1013,".(goto)", 1, 2, 0);
	trans[1][529]	= settr(745,4,551,1014,1014,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 530 -> 551,0 */
	reached1[530] = 1;
	trans[1][530]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][531]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][532]	= settr(748,4,551,1015,1015,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 533 -> 551,0 */
	reached1[533] = 1;
	trans[1][533]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][534]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][535]	= settr(751,4,551,1016,1016,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 536 -> 551,0 */
	reached1[536] = 1;
	trans[1][536]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][537]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][538]	= settr(754,4,551,1017,1017,"((STOP==ABORT))", 1, 2, 0); /* m: 539 -> 551,0 */
	reached1[539] = 1;
	trans[1][539]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][540]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][541]	= settr(757,2,542,2,0,"else", 1, 2, 0);
	trans[1][542]	= settr(758,4,551,1018,1018,"(1)", 1, 2, 0); /* m: 544 -> 551,0 */
	reached1[544] = 1;
	T = trans[1][551] = settr(767,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(767,0,546,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(767,0,549,0,0,"IF", 0, 2, 0);
	trans[1][546]	= settr(762,0,548,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][548] = settr(764,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(764,0,547,0,0,"sub-sequence", 0, 2, 0);
	trans[1][547]	= settr(763,0,557,1019,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][552]	= settr(768,0,557,1,0,".(goto)", 0, 2, 0); /* m: 557 -> 0,561 */
	reached1[557] = 1;
	trans[1][549]	= settr(765,0,550,2,0,"else", 0, 2, 0);
	trans[1][550]	= settr(766,0,561,1020,1020,"(1)", 0, 2, 0); /* m: 557 -> 561,0 */
	reached1[557] = 1;
	trans[1][557]	= settr(773,0,561,1021,1021,"j = (j+1)", 0, 2, 0);
	trans[1][558]	= settr(774,0,559,2,0,"else", 0, 2, 0);
	trans[1][559]	= settr(775,0,1309,1022,1022,"j = 1", 0, 2, 0);
	trans[1][560]	= settr(776,0,1309,1,0,"goto :b5", 0, 2, 0);
	trans[1][563]	= settr(779,0,1309,1,0,"break", 0, 2, 0);
	trans[1][697]	= settr(913,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][565]	= settr(781,0,695,2,0,"else", 0, 2, 0);
	T = trans[ 1][695] = settr(911,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(911,0,566,0,0,"sub-sequence", 0, 2, 0);
	trans[1][566]	= settr(782,0,692,1023,1023,"j = (3-1)", 0, 2, 0);
	trans[1][693]	= settr(909,0,692,1,0,".(goto)", 0, 2, 0);
	T = trans[1][692] = settr(908,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(908,0,567,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(908,0,689,0,0,"DO", 0, 2, 0);
	trans[1][567]	= settr(783,0,687,1024,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][687] = settr(903,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(903,0,685,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][685] = settr(901,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(901,0,568,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(901,0,598,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(901,0,627,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(901,0,656,0,0,"IF", 0, 2, 0);
	trans[1][568]	= settr(784,0,597,1025,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][597] = settr(813,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(813,0,588,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][588] = settr(804,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(804,2,586,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][586] = settr(802,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(802,2,569,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(802,2,572,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(802,2,575,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(802,2,578,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(802,2,581,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(802,2,584,0,0,"IF", 1, 2, 0);
	trans[1][569]	= settr(785,4,589,1026,1026,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 570 -> 589,0 */
	reached1[570] = 1;
	trans[1][570]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][571]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][587]	= settr(803,0,589,1027,1027,".(goto)", 1, 2, 0);
	trans[1][572]	= settr(788,4,589,1028,1028,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 573 -> 589,0 */
	reached1[573] = 1;
	trans[1][573]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][574]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][575]	= settr(791,4,589,1029,1029,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 576 -> 589,0 */
	reached1[576] = 1;
	trans[1][576]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][577]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][578]	= settr(794,4,589,1030,1030,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 579 -> 589,0 */
	reached1[579] = 1;
	trans[1][579]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][580]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][581]	= settr(797,4,589,1031,1031,"((START==ABORT))", 1, 2, 0); /* m: 582 -> 589,0 */
	reached1[582] = 1;
	trans[1][582]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][583]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][584]	= settr(800,2,585,2,0,"else", 1, 2, 0);
	trans[1][585]	= settr(801,4,589,1032,1032,"(1)", 1, 2, 0); /* m: 587 -> 589,0 */
	reached1[587] = 1;
	trans[1][589]	= settr(805,0,595,1033,1033,"(run Thread(j))", 0, 2, 0);
	T = trans[1][595] = settr(811,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(811,0,590,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(811,0,593,0,0,"IF", 0, 2, 0);
	trans[1][590]	= settr(806,0,592,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][592] = settr(808,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(808,0,591,0,0,"sub-sequence", 0, 2, 0);
	trans[1][591]	= settr(807,0,688,1034,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][596]	= settr(812,0,688,1,0,".(goto)", 0, 2, 0); /* m: 688 -> 0,692 */
	reached1[688] = 1;
	trans[1][593]	= settr(809,0,594,2,0,"else", 0, 2, 0);
	trans[1][594]	= settr(810,0,692,1035,1035,"(1)", 0, 2, 0); /* m: 688 -> 692,0 */
	reached1[688] = 1;
	trans[1][686]	= settr(902,0,688,1,0,".(goto)", 0, 2, 0); /* m: 688 -> 0,692 */
	reached1[688] = 1;
	trans[1][598]	= settr(814,0,626,1036,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][626] = settr(842,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(842,0,618,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][618] = settr(834,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(834,2,616,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][616] = settr(832,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(832,2,599,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(832,2,602,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(832,2,605,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(832,2,608,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(832,2,611,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(832,2,614,0,0,"IF", 1, 2, 0);
	trans[1][599]	= settr(815,4,624,1037,1037,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 600 -> 624,0 */
	reached1[600] = 1;
	trans[1][600]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][601]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][617]	= settr(833,0,624,1038,1038,".(goto)", 1, 2, 0);
	trans[1][602]	= settr(818,4,624,1039,1039,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 603 -> 624,0 */
	reached1[603] = 1;
	trans[1][603]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][604]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][605]	= settr(821,4,624,1040,1040,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 606 -> 624,0 */
	reached1[606] = 1;
	trans[1][606]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][607]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][608]	= settr(824,4,624,1041,1041,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 609 -> 624,0 */
	reached1[609] = 1;
	trans[1][609]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][610]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][611]	= settr(827,4,624,1042,1042,"((PAUSE==ABORT))", 1, 2, 0); /* m: 612 -> 624,0 */
	reached1[612] = 1;
	trans[1][612]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][613]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][614]	= settr(830,2,615,2,0,"else", 1, 2, 0);
	trans[1][615]	= settr(831,4,624,1043,1043,"(1)", 1, 2, 0); /* m: 617 -> 624,0 */
	reached1[617] = 1;
	T = trans[1][624] = settr(840,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(840,0,619,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(840,0,622,0,0,"IF", 0, 2, 0);
	trans[1][619]	= settr(835,0,621,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][621] = settr(837,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(837,0,620,0,0,"sub-sequence", 0, 2, 0);
	trans[1][620]	= settr(836,0,688,1044,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][625]	= settr(841,0,688,1,0,".(goto)", 0, 2, 0); /* m: 688 -> 0,692 */
	reached1[688] = 1;
	trans[1][622]	= settr(838,0,623,2,0,"else", 0, 2, 0);
	trans[1][623]	= settr(839,0,692,1045,1045,"(1)", 0, 2, 0); /* m: 688 -> 692,0 */
	reached1[688] = 1;
	trans[1][627]	= settr(843,0,655,1046,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][655] = settr(871,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(871,0,647,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][647] = settr(863,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(863,2,645,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][645] = settr(861,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(861,2,628,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(861,2,631,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(861,2,634,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(861,2,637,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(861,2,640,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(861,2,643,0,0,"IF", 1, 2, 0);
	trans[1][628]	= settr(844,4,653,1047,1047,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 629 -> 653,0 */
	reached1[629] = 1;
	trans[1][629]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][630]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][646]	= settr(862,0,653,1048,1048,".(goto)", 1, 2, 0);
	trans[1][631]	= settr(847,4,653,1049,1049,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 632 -> 653,0 */
	reached1[632] = 1;
	trans[1][632]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][633]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][634]	= settr(850,4,653,1050,1050,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 635 -> 653,0 */
	reached1[635] = 1;
	trans[1][635]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][636]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][637]	= settr(853,4,653,1051,1051,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 638 -> 653,0 */
	reached1[638] = 1;
	trans[1][638]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][639]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][640]	= settr(856,4,653,1052,1052,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 641 -> 653,0 */
	reached1[641] = 1;
	trans[1][641]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][642]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][643]	= settr(859,2,644,2,0,"else", 1, 2, 0);
	trans[1][644]	= settr(860,4,653,1053,1053,"(1)", 1, 2, 0); /* m: 646 -> 653,0 */
	reached1[646] = 1;
	T = trans[1][653] = settr(869,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(869,0,648,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(869,0,651,0,0,"IF", 0, 2, 0);
	trans[1][648]	= settr(864,0,650,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][650] = settr(866,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(866,0,649,0,0,"sub-sequence", 0, 2, 0);
	trans[1][649]	= settr(865,0,688,1054,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][654]	= settr(870,0,688,1,0,".(goto)", 0, 2, 0); /* m: 688 -> 0,692 */
	reached1[688] = 1;
	trans[1][651]	= settr(867,0,652,2,0,"else", 0, 2, 0);
	trans[1][652]	= settr(868,0,692,1055,1055,"(1)", 0, 2, 0); /* m: 688 -> 692,0 */
	reached1[688] = 1;
	trans[1][656]	= settr(872,0,684,1056,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][684] = settr(900,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(900,0,676,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][676] = settr(892,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(892,2,674,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][674] = settr(890,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(890,2,657,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(890,2,660,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(890,2,663,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(890,2,666,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(890,2,669,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(890,2,672,0,0,"IF", 1, 2, 0);
	trans[1][657]	= settr(873,4,682,1057,1057,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 658 -> 682,0 */
	reached1[658] = 1;
	trans[1][658]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][659]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][675]	= settr(891,0,682,1058,1058,".(goto)", 1, 2, 0);
	trans[1][660]	= settr(876,4,682,1059,1059,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 661 -> 682,0 */
	reached1[661] = 1;
	trans[1][661]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][662]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][663]	= settr(879,4,682,1060,1060,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 664 -> 682,0 */
	reached1[664] = 1;
	trans[1][664]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][665]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][666]	= settr(882,4,682,1061,1061,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 667 -> 682,0 */
	reached1[667] = 1;
	trans[1][667]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][668]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][669]	= settr(885,4,682,1062,1062,"((STOP==ABORT))", 1, 2, 0); /* m: 670 -> 682,0 */
	reached1[670] = 1;
	trans[1][670]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][671]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][672]	= settr(888,2,673,2,0,"else", 1, 2, 0);
	trans[1][673]	= settr(889,4,682,1063,1063,"(1)", 1, 2, 0); /* m: 675 -> 682,0 */
	reached1[675] = 1;
	T = trans[1][682] = settr(898,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(898,0,677,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(898,0,680,0,0,"IF", 0, 2, 0);
	trans[1][677]	= settr(893,0,679,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][679] = settr(895,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(895,0,678,0,0,"sub-sequence", 0, 2, 0);
	trans[1][678]	= settr(894,0,688,1064,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][683]	= settr(899,0,688,1,0,".(goto)", 0, 2, 0); /* m: 688 -> 0,692 */
	reached1[688] = 1;
	trans[1][680]	= settr(896,0,681,2,0,"else", 0, 2, 0);
	trans[1][681]	= settr(897,0,692,1065,1065,"(1)", 0, 2, 0); /* m: 688 -> 692,0 */
	reached1[688] = 1;
	trans[1][688]	= settr(904,0,692,1066,1066,"j = (j-1)", 0, 2, 0);
	trans[1][689]	= settr(905,0,690,2,0,"else", 0, 2, 0);
	trans[1][690]	= settr(906,0,1309,1067,1067,"j = 1", 0, 2, 0);
	trans[1][691]	= settr(907,0,1309,1,0,"goto :b6", 0, 2, 0);
	trans[1][694]	= settr(910,0,1309,1,0,"break", 0, 2, 0);
	trans[1][853]	= settr(1069,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][699]	= settr(915,0,851,2,0,"else", 0, 2, 0);
	T = trans[ 1][851] = settr(1067,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1067,0,828,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][828] = settr(1044,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1044,0,825,0,0,"sub-sequence", 0, 2, 0);
	trans[1][826]	= settr(1042,0,825,1,0,".(goto)", 0, 2, 0);
	T = trans[1][825] = settr(1041,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1041,0,700,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1041,0,822,0,0,"DO", 0, 2, 0);
	trans[1][700]	= settr(916,0,820,1068,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][820] = settr(1036,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1036,0,818,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][818] = settr(1034,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1034,0,701,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1034,0,731,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1034,0,760,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1034,0,789,0,0,"IF", 0, 2, 0);
	trans[1][701]	= settr(917,0,730,1069,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][730] = settr(946,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(946,0,721,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][721] = settr(937,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(937,2,719,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][719] = settr(935,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(935,2,702,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(935,2,705,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(935,2,708,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(935,2,711,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(935,2,714,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(935,2,717,0,0,"IF", 1, 2, 0);
	trans[1][702]	= settr(918,4,722,1070,1070,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 703 -> 722,0 */
	reached1[703] = 1;
	trans[1][703]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][704]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][720]	= settr(936,0,722,1071,1071,".(goto)", 1, 2, 0);
	trans[1][705]	= settr(921,4,722,1072,1072,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 706 -> 722,0 */
	reached1[706] = 1;
	trans[1][706]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][707]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][708]	= settr(924,4,722,1073,1073,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 709 -> 722,0 */
	reached1[709] = 1;
	trans[1][709]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][710]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][711]	= settr(927,4,722,1074,1074,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 712 -> 722,0 */
	reached1[712] = 1;
	trans[1][712]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][713]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][714]	= settr(930,4,722,1075,1075,"((START==ABORT))", 1, 2, 0); /* m: 715 -> 722,0 */
	reached1[715] = 1;
	trans[1][715]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][716]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][717]	= settr(933,2,718,2,0,"else", 1, 2, 0);
	trans[1][718]	= settr(934,4,722,1076,1076,"(1)", 1, 2, 0); /* m: 720 -> 722,0 */
	reached1[720] = 1;
	trans[1][722]	= settr(938,0,728,1077,1077,"(run Thread(j))", 0, 2, 0);
	T = trans[1][728] = settr(944,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(944,0,723,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(944,0,726,0,0,"IF", 0, 2, 0);
	trans[1][723]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][725] = settr(941,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(941,0,724,0,0,"sub-sequence", 0, 2, 0);
	trans[1][724]	= settr(940,0,821,1078,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][729]	= settr(945,0,821,1,0,".(goto)", 0, 2, 0); /* m: 821 -> 0,825 */
	reached1[821] = 1;
	trans[1][726]	= settr(942,0,727,2,0,"else", 0, 2, 0);
	trans[1][727]	= settr(943,0,825,1079,1079,"(1)", 0, 2, 0); /* m: 821 -> 825,0 */
	reached1[821] = 1;
	trans[1][819]	= settr(1035,0,821,1,0,".(goto)", 0, 2, 0); /* m: 821 -> 0,825 */
	reached1[821] = 1;
	trans[1][731]	= settr(947,0,759,1080,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][759] = settr(975,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(975,0,751,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][751] = settr(967,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(967,2,749,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][749] = settr(965,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(965,2,732,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(965,2,735,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(965,2,738,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(965,2,741,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(965,2,744,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(965,2,747,0,0,"IF", 1, 2, 0);
	trans[1][732]	= settr(948,4,757,1081,1081,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 733 -> 757,0 */
	reached1[733] = 1;
	trans[1][733]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][734]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][750]	= settr(966,0,757,1082,1082,".(goto)", 1, 2, 0);
	trans[1][735]	= settr(951,4,757,1083,1083,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 736 -> 757,0 */
	reached1[736] = 1;
	trans[1][736]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][737]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][738]	= settr(954,4,757,1084,1084,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 739 -> 757,0 */
	reached1[739] = 1;
	trans[1][739]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][740]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][741]	= settr(957,4,757,1085,1085,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 742 -> 757,0 */
	reached1[742] = 1;
	trans[1][742]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][743]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][744]	= settr(960,4,757,1086,1086,"((PAUSE==ABORT))", 1, 2, 0); /* m: 745 -> 757,0 */
	reached1[745] = 1;
	trans[1][745]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][746]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][747]	= settr(963,2,748,2,0,"else", 1, 2, 0);
	trans[1][748]	= settr(964,4,757,1087,1087,"(1)", 1, 2, 0); /* m: 750 -> 757,0 */
	reached1[750] = 1;
	T = trans[1][757] = settr(973,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(973,0,752,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(973,0,755,0,0,"IF", 0, 2, 0);
	trans[1][752]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][754] = settr(970,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(970,0,753,0,0,"sub-sequence", 0, 2, 0);
	trans[1][753]	= settr(969,0,821,1088,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][758]	= settr(974,0,821,1,0,".(goto)", 0, 2, 0); /* m: 821 -> 0,825 */
	reached1[821] = 1;
	trans[1][755]	= settr(971,0,756,2,0,"else", 0, 2, 0);
	trans[1][756]	= settr(972,0,825,1089,1089,"(1)", 0, 2, 0); /* m: 821 -> 825,0 */
	reached1[821] = 1;
	trans[1][760]	= settr(976,0,788,1090,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][788] = settr(1004,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1004,0,780,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][780] = settr(996,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(996,2,778,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][778] = settr(994,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(994,2,761,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(994,2,764,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(994,2,767,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(994,2,770,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(994,2,773,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(994,2,776,0,0,"IF", 1, 2, 0);
	trans[1][761]	= settr(977,4,786,1091,1091,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 762 -> 786,0 */
	reached1[762] = 1;
	trans[1][762]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][763]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][779]	= settr(995,0,786,1092,1092,".(goto)", 1, 2, 0);
	trans[1][764]	= settr(980,4,786,1093,1093,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 765 -> 786,0 */
	reached1[765] = 1;
	trans[1][765]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][766]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][767]	= settr(983,4,786,1094,1094,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 768 -> 786,0 */
	reached1[768] = 1;
	trans[1][768]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][769]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][770]	= settr(986,4,786,1095,1095,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 771 -> 786,0 */
	reached1[771] = 1;
	trans[1][771]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][772]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][773]	= settr(989,4,786,1096,1096,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 774 -> 786,0 */
	reached1[774] = 1;
	trans[1][774]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][775]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][776]	= settr(992,2,777,2,0,"else", 1, 2, 0);
	trans[1][777]	= settr(993,4,786,1097,1097,"(1)", 1, 2, 0); /* m: 779 -> 786,0 */
	reached1[779] = 1;
	T = trans[1][786] = settr(1002,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1002,0,781,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1002,0,784,0,0,"IF", 0, 2, 0);
	trans[1][781]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][783] = settr(999,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(999,0,782,0,0,"sub-sequence", 0, 2, 0);
	trans[1][782]	= settr(998,0,821,1098,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][787]	= settr(1003,0,821,1,0,".(goto)", 0, 2, 0); /* m: 821 -> 0,825 */
	reached1[821] = 1;
	trans[1][784]	= settr(1000,0,785,2,0,"else", 0, 2, 0);
	trans[1][785]	= settr(1001,0,825,1099,1099,"(1)", 0, 2, 0); /* m: 821 -> 825,0 */
	reached1[821] = 1;
	trans[1][789]	= settr(1005,0,817,1100,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][817] = settr(1033,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1033,0,809,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][809] = settr(1025,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1025,2,807,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][807] = settr(1023,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1023,2,790,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1023,2,793,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1023,2,796,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1023,2,799,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1023,2,802,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1023,2,805,0,0,"IF", 1, 2, 0);
	trans[1][790]	= settr(1006,4,815,1101,1101,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 791 -> 815,0 */
	reached1[791] = 1;
	trans[1][791]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][792]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][808]	= settr(1024,0,815,1102,1102,".(goto)", 1, 2, 0);
	trans[1][793]	= settr(1009,4,815,1103,1103,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 794 -> 815,0 */
	reached1[794] = 1;
	trans[1][794]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][795]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][796]	= settr(1012,4,815,1104,1104,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 797 -> 815,0 */
	reached1[797] = 1;
	trans[1][797]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][798]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][799]	= settr(1015,4,815,1105,1105,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 800 -> 815,0 */
	reached1[800] = 1;
	trans[1][800]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][801]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][802]	= settr(1018,4,815,1106,1106,"((STOP==ABORT))", 1, 2, 0); /* m: 803 -> 815,0 */
	reached1[803] = 1;
	trans[1][803]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][804]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][805]	= settr(1021,2,806,2,0,"else", 1, 2, 0);
	trans[1][806]	= settr(1022,4,815,1107,1107,"(1)", 1, 2, 0); /* m: 808 -> 815,0 */
	reached1[808] = 1;
	T = trans[1][815] = settr(1031,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1031,0,810,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1031,0,813,0,0,"IF", 0, 2, 0);
	trans[1][810]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][812] = settr(1028,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1028,0,811,0,0,"sub-sequence", 0, 2, 0);
	trans[1][811]	= settr(1027,0,821,1108,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][816]	= settr(1032,0,821,1,0,".(goto)", 0, 2, 0); /* m: 821 -> 0,825 */
	reached1[821] = 1;
	trans[1][813]	= settr(1029,0,814,2,0,"else", 0, 2, 0);
	trans[1][814]	= settr(1030,0,825,1109,1109,"(1)", 0, 2, 0); /* m: 821 -> 825,0 */
	reached1[821] = 1;
	trans[1][821]	= settr(1037,0,825,1110,1110,"j = (j+1)", 0, 2, 0);
	trans[1][822]	= settr(1038,0,823,2,0,"else", 0, 2, 0);
	trans[1][823]	= settr(1039,0,848,1111,1111,"j = 1", 0, 2, 0);
	trans[1][824]	= settr(1040,0,848,1,0,"goto :b7", 0, 2, 0);
	trans[1][827]	= settr(1043,0,848,1,0,"break", 0, 2, 0);
	trans[1][849]	= settr(1065,0,848,1,0,".(goto)", 0, 2, 0);
	T = trans[1][848] = settr(1064,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1064,0,829,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1064,0,845,0,0,"DO", 0, 2, 0);
	trans[1][829]	= settr(1045,0,842,1112,0,"((j<3))", 0, 2, 0);
	T = trans[1][842] = settr(1058,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1058,0,830,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1058,0,833,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1058,0,836,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1058,0,839,0,0,"IF", 0, 2, 0);
	trans[1][830]	= settr(1046,0,832,1113,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][832] = settr(1048,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1048,0,831,0,0,"sub-sequence", 0, 2, 0);
	trans[1][831]	= settr(1047,0,844,1114,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][843]	= settr(1059,0,844,1,0,".(goto)", 0, 2, 0); /* m: 844 -> 0,848 */
	reached1[844] = 1;
	trans[1][833]	= settr(1049,0,835,1115,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][835] = settr(1051,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1051,0,834,0,0,"sub-sequence", 0, 2, 0);
	trans[1][834]	= settr(1050,0,844,1116,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][836]	= settr(1052,0,838,1117,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][838] = settr(1054,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1054,0,837,0,0,"sub-sequence", 0, 2, 0);
	trans[1][837]	= settr(1053,0,844,1118,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][839]	= settr(1055,0,841,1119,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][841] = settr(1057,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1057,0,840,0,0,"sub-sequence", 0, 2, 0);
	trans[1][840]	= settr(1056,0,844,1120,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][844]	= settr(1060,0,848,1121,1121,"j = (j+1)", 0, 2, 0);
	trans[1][845]	= settr(1061,0,846,2,0,"else", 0, 2, 0);
	trans[1][846]	= settr(1062,0,1309,1122,1122,"j = 1", 0, 2, 0);
	trans[1][847]	= settr(1063,0,1309,1,0,"goto :b8", 0, 2, 0);
	trans[1][850]	= settr(1066,0,1309,1,0,"break", 0, 2, 0);
	trans[1][857]	= settr(1073,0,1283,1123,0,"(((12==ABORTING)||(12==STOPPING)))", 0, 2, 0);
	T = trans[ 1][1283] = settr(1499,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1499,0,1281,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1281] = settr(1497,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1497,0,858,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1497,0,860,0,0,"IF", 0, 2, 0);
	trans[1][858]	= settr(1074,0,859,1124,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][859]	= settr(1075,0,1309,1125,1125,"supervisor_started = 1", 1, 2, 0);
	trans[1][1282]	= settr(1498,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][860]	= settr(1076,0,1279,2,0,"else", 0, 2, 0);
	T = trans[1][1279] = settr(1495,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1495,0,861,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1495,0,1126,0,0,"IF", 0, 2, 0);
	trans[1][861]	= settr(1077,0,1125,1126,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][1125] = settr(1341,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1341,0,1123,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1123] = settr(1339,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1339,0,862,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1339,0,992,0,0,"IF", 0, 2, 0);
	trans[1][862]	= settr(1078,0,991,1127,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][991] = settr(1207,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1207,0,988,0,0,"sub-sequence", 0, 2, 0);
	trans[1][989]	= settr(1205,0,988,1,0,".(goto)", 0, 2, 0);
	T = trans[1][988] = settr(1204,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1204,0,863,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1204,0,985,0,0,"DO", 0, 2, 0);
	trans[1][863]	= settr(1079,0,983,1128,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][983] = settr(1199,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1199,0,981,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][981] = settr(1197,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1197,0,864,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1197,0,894,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1197,0,923,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1197,0,952,0,0,"IF", 0, 2, 0);
	trans[1][864]	= settr(1080,0,893,1129,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][893] = settr(1109,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1109,0,884,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][884] = settr(1100,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1100,2,882,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][882] = settr(1098,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1098,2,865,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1098,2,868,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1098,2,871,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1098,2,874,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1098,2,877,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1098,2,880,0,0,"IF", 1, 2, 0);
	trans[1][865]	= settr(1081,4,885,1130,1130,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 866 -> 885,0 */
	reached1[866] = 1;
	trans[1][866]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][867]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][883]	= settr(1099,0,885,1131,1131,".(goto)", 1, 2, 0);
	trans[1][868]	= settr(1084,4,885,1132,1132,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 869 -> 885,0 */
	reached1[869] = 1;
	trans[1][869]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][870]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][871]	= settr(1087,4,885,1133,1133,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 872 -> 885,0 */
	reached1[872] = 1;
	trans[1][872]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][873]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][874]	= settr(1090,4,885,1134,1134,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 875 -> 885,0 */
	reached1[875] = 1;
	trans[1][875]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][876]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][877]	= settr(1093,4,885,1135,1135,"((START==ABORT))", 1, 2, 0); /* m: 878 -> 885,0 */
	reached1[878] = 1;
	trans[1][878]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][879]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][880]	= settr(1096,2,881,2,0,"else", 1, 2, 0);
	trans[1][881]	= settr(1097,4,885,1136,1136,"(1)", 1, 2, 0); /* m: 883 -> 885,0 */
	reached1[883] = 1;
	trans[1][885]	= settr(1101,0,891,1137,1137,"(run Thread(j))", 0, 2, 0);
	T = trans[1][891] = settr(1107,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1107,0,886,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1107,0,889,0,0,"IF", 0, 2, 0);
	trans[1][886]	= settr(1102,0,888,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][888] = settr(1104,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1104,0,887,0,0,"sub-sequence", 0, 2, 0);
	trans[1][887]	= settr(1103,0,984,1138,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][892]	= settr(1108,0,984,1,0,".(goto)", 0, 2, 0); /* m: 984 -> 0,988 */
	reached1[984] = 1;
	trans[1][889]	= settr(1105,0,890,2,0,"else", 0, 2, 0);
	trans[1][890]	= settr(1106,0,988,1139,1139,"(1)", 0, 2, 0); /* m: 984 -> 988,0 */
	reached1[984] = 1;
	trans[1][982]	= settr(1198,0,984,1,0,".(goto)", 0, 2, 0); /* m: 984 -> 0,988 */
	reached1[984] = 1;
	trans[1][894]	= settr(1110,0,922,1140,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][922] = settr(1138,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1138,0,914,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][914] = settr(1130,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1130,2,912,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][912] = settr(1128,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1128,2,895,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1128,2,898,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1128,2,901,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1128,2,904,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1128,2,907,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1128,2,910,0,0,"IF", 1, 2, 0);
	trans[1][895]	= settr(1111,4,920,1141,1141,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 896 -> 920,0 */
	reached1[896] = 1;
	trans[1][896]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][897]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][913]	= settr(1129,0,920,1142,1142,".(goto)", 1, 2, 0);
	trans[1][898]	= settr(1114,4,920,1143,1143,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 899 -> 920,0 */
	reached1[899] = 1;
	trans[1][899]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][900]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][901]	= settr(1117,4,920,1144,1144,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 902 -> 920,0 */
	reached1[902] = 1;
	trans[1][902]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][903]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][904]	= settr(1120,4,920,1145,1145,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 905 -> 920,0 */
	reached1[905] = 1;
	trans[1][905]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][906]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][907]	= settr(1123,4,920,1146,1146,"((PAUSE==ABORT))", 1, 2, 0); /* m: 908 -> 920,0 */
	reached1[908] = 1;
	trans[1][908]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][909]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][910]	= settr(1126,2,911,2,0,"else", 1, 2, 0);
	trans[1][911]	= settr(1127,4,920,1147,1147,"(1)", 1, 2, 0); /* m: 913 -> 920,0 */
	reached1[913] = 1;
	T = trans[1][920] = settr(1136,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1136,0,915,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1136,0,918,0,0,"IF", 0, 2, 0);
	trans[1][915]	= settr(1131,0,917,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][917] = settr(1133,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1133,0,916,0,0,"sub-sequence", 0, 2, 0);
	trans[1][916]	= settr(1132,0,984,1148,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][921]	= settr(1137,0,984,1,0,".(goto)", 0, 2, 0); /* m: 984 -> 0,988 */
	reached1[984] = 1;
	trans[1][918]	= settr(1134,0,919,2,0,"else", 0, 2, 0);
	trans[1][919]	= settr(1135,0,988,1149,1149,"(1)", 0, 2, 0); /* m: 984 -> 988,0 */
	reached1[984] = 1;
	trans[1][923]	= settr(1139,0,951,1150,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][951] = settr(1167,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1167,0,943,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][943] = settr(1159,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1159,2,941,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][941] = settr(1157,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1157,2,924,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1157,2,927,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1157,2,930,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1157,2,933,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1157,2,936,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1157,2,939,0,0,"IF", 1, 2, 0);
	trans[1][924]	= settr(1140,4,949,1151,1151,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 925 -> 949,0 */
	reached1[925] = 1;
	trans[1][925]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][926]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][942]	= settr(1158,0,949,1152,1152,".(goto)", 1, 2, 0);
	trans[1][927]	= settr(1143,4,949,1153,1153,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 928 -> 949,0 */
	reached1[928] = 1;
	trans[1][928]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][929]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][930]	= settr(1146,4,949,1154,1154,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 931 -> 949,0 */
	reached1[931] = 1;
	trans[1][931]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][932]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][933]	= settr(1149,4,949,1155,1155,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 934 -> 949,0 */
	reached1[934] = 1;
	trans[1][934]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][935]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][936]	= settr(1152,4,949,1156,1156,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 937 -> 949,0 */
	reached1[937] = 1;
	trans[1][937]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][938]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][939]	= settr(1155,2,940,2,0,"else", 1, 2, 0);
	trans[1][940]	= settr(1156,4,949,1157,1157,"(1)", 1, 2, 0); /* m: 942 -> 949,0 */
	reached1[942] = 1;
	T = trans[1][949] = settr(1165,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1165,0,944,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1165,0,947,0,0,"IF", 0, 2, 0);
	trans[1][944]	= settr(1160,0,946,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][946] = settr(1162,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1162,0,945,0,0,"sub-sequence", 0, 2, 0);
	trans[1][945]	= settr(1161,0,984,1158,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][950]	= settr(1166,0,984,1,0,".(goto)", 0, 2, 0); /* m: 984 -> 0,988 */
	reached1[984] = 1;
	trans[1][947]	= settr(1163,0,948,2,0,"else", 0, 2, 0);
	trans[1][948]	= settr(1164,0,988,1159,1159,"(1)", 0, 2, 0); /* m: 984 -> 988,0 */
	reached1[984] = 1;
	trans[1][952]	= settr(1168,0,980,1160,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][980] = settr(1196,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1196,0,972,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][972] = settr(1188,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1188,2,970,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][970] = settr(1186,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1186,2,953,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1186,2,956,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1186,2,959,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1186,2,962,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1186,2,965,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1186,2,968,0,0,"IF", 1, 2, 0);
	trans[1][953]	= settr(1169,4,978,1161,1161,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 954 -> 978,0 */
	reached1[954] = 1;
	trans[1][954]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][955]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][971]	= settr(1187,0,978,1162,1162,".(goto)", 1, 2, 0);
	trans[1][956]	= settr(1172,4,978,1163,1163,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 957 -> 978,0 */
	reached1[957] = 1;
	trans[1][957]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][958]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][959]	= settr(1175,4,978,1164,1164,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 960 -> 978,0 */
	reached1[960] = 1;
	trans[1][960]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][961]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][962]	= settr(1178,4,978,1165,1165,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 963 -> 978,0 */
	reached1[963] = 1;
	trans[1][963]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][964]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][965]	= settr(1181,4,978,1166,1166,"((STOP==ABORT))", 1, 2, 0); /* m: 966 -> 978,0 */
	reached1[966] = 1;
	trans[1][966]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][967]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][968]	= settr(1184,2,969,2,0,"else", 1, 2, 0);
	trans[1][969]	= settr(1185,4,978,1167,1167,"(1)", 1, 2, 0); /* m: 971 -> 978,0 */
	reached1[971] = 1;
	T = trans[1][978] = settr(1194,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1194,0,973,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1194,0,976,0,0,"IF", 0, 2, 0);
	trans[1][973]	= settr(1189,0,975,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][975] = settr(1191,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1191,0,974,0,0,"sub-sequence", 0, 2, 0);
	trans[1][974]	= settr(1190,0,984,1168,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][979]	= settr(1195,0,984,1,0,".(goto)", 0, 2, 0); /* m: 984 -> 0,988 */
	reached1[984] = 1;
	trans[1][976]	= settr(1192,0,977,2,0,"else", 0, 2, 0);
	trans[1][977]	= settr(1193,0,988,1169,1169,"(1)", 0, 2, 0); /* m: 984 -> 988,0 */
	reached1[984] = 1;
	trans[1][984]	= settr(1200,0,988,1170,1170,"j = (j+1)", 0, 2, 0);
	trans[1][985]	= settr(1201,0,986,2,0,"else", 0, 2, 0);
	trans[1][986]	= settr(1202,0,1309,1171,1171,"j = 1", 0, 2, 0);
	trans[1][987]	= settr(1203,0,1309,1,0,"goto :b9", 0, 2, 0);
	trans[1][990]	= settr(1206,0,1309,1,0,"break", 0, 2, 0);
	trans[1][1124]	= settr(1340,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][992]	= settr(1208,0,1122,2,0,"else", 0, 2, 0);
	T = trans[ 1][1122] = settr(1338,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1338,0,993,0,0,"sub-sequence", 0, 2, 0);
	trans[1][993]	= settr(1209,0,1119,1172,1172,"j = (3-1)", 0, 2, 0);
	trans[1][1120]	= settr(1336,0,1119,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1119] = settr(1335,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1335,0,994,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1335,0,1116,0,0,"DO", 0, 2, 0);
	trans[1][994]	= settr(1210,0,1114,1173,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][1114] = settr(1330,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1330,0,1112,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1112] = settr(1328,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1328,0,995,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1328,0,1025,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1328,0,1054,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1328,0,1083,0,0,"IF", 0, 2, 0);
	trans[1][995]	= settr(1211,0,1024,1174,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][1024] = settr(1240,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1240,0,1015,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1015] = settr(1231,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1231,2,1013,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1013] = settr(1229,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1229,2,996,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1229,2,999,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1229,2,1002,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1229,2,1005,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1229,2,1008,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1229,2,1011,0,0,"IF", 1, 2, 0);
	trans[1][996]	= settr(1212,4,1016,1175,1175,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 997 -> 1016,0 */
	reached1[997] = 1;
	trans[1][997]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][998]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1014]	= settr(1230,0,1016,1176,1176,".(goto)", 1, 2, 0);
	trans[1][999]	= settr(1215,4,1016,1177,1177,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1000 -> 1016,0 */
	reached1[1000] = 1;
	trans[1][1000]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1001]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1002]	= settr(1218,4,1016,1178,1178,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1003 -> 1016,0 */
	reached1[1003] = 1;
	trans[1][1003]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1004]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1005]	= settr(1221,4,1016,1179,1179,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1006 -> 1016,0 */
	reached1[1006] = 1;
	trans[1][1006]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1007]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1008]	= settr(1224,4,1016,1180,1180,"((START==ABORT))", 1, 2, 0); /* m: 1009 -> 1016,0 */
	reached1[1009] = 1;
	trans[1][1009]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1010]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1011]	= settr(1227,2,1012,2,0,"else", 1, 2, 0);
	trans[1][1012]	= settr(1228,4,1016,1181,1181,"(1)", 1, 2, 0); /* m: 1014 -> 1016,0 */
	reached1[1014] = 1;
	trans[1][1016]	= settr(1232,0,1022,1182,1182,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1022] = settr(1238,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1238,0,1017,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1238,0,1020,0,0,"IF", 0, 2, 0);
	trans[1][1017]	= settr(1233,0,1019,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1019] = settr(1235,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1235,0,1018,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1018]	= settr(1234,0,1115,1183,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1023]	= settr(1239,0,1115,1,0,".(goto)", 0, 2, 0); /* m: 1115 -> 0,1119 */
	reached1[1115] = 1;
	trans[1][1020]	= settr(1236,0,1021,2,0,"else", 0, 2, 0);
	trans[1][1021]	= settr(1237,0,1119,1184,1184,"(1)", 0, 2, 0); /* m: 1115 -> 1119,0 */
	reached1[1115] = 1;
	trans[1][1113]	= settr(1329,0,1115,1,0,".(goto)", 0, 2, 0); /* m: 1115 -> 0,1119 */
	reached1[1115] = 1;
	trans[1][1025]	= settr(1241,0,1053,1185,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][1053] = settr(1269,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1269,0,1045,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1045] = settr(1261,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1261,2,1043,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1043] = settr(1259,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1259,2,1026,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1259,2,1029,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1259,2,1032,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1259,2,1035,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1259,2,1038,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1259,2,1041,0,0,"IF", 1, 2, 0);
	trans[1][1026]	= settr(1242,4,1051,1186,1186,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1027 -> 1051,0 */
	reached1[1027] = 1;
	trans[1][1027]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1028]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1044]	= settr(1260,0,1051,1187,1187,".(goto)", 1, 2, 0);
	trans[1][1029]	= settr(1245,4,1051,1188,1188,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1030 -> 1051,0 */
	reached1[1030] = 1;
	trans[1][1030]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1031]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1032]	= settr(1248,4,1051,1189,1189,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1033 -> 1051,0 */
	reached1[1033] = 1;
	trans[1][1033]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1034]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1035]	= settr(1251,4,1051,1190,1190,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1036 -> 1051,0 */
	reached1[1036] = 1;
	trans[1][1036]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1037]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1038]	= settr(1254,4,1051,1191,1191,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1039 -> 1051,0 */
	reached1[1039] = 1;
	trans[1][1039]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1040]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1041]	= settr(1257,2,1042,2,0,"else", 1, 2, 0);
	trans[1][1042]	= settr(1258,4,1051,1192,1192,"(1)", 1, 2, 0); /* m: 1044 -> 1051,0 */
	reached1[1044] = 1;
	T = trans[1][1051] = settr(1267,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1267,0,1046,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1267,0,1049,0,0,"IF", 0, 2, 0);
	trans[1][1046]	= settr(1262,0,1048,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1048] = settr(1264,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1264,0,1047,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1047]	= settr(1263,0,1115,1193,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1052]	= settr(1268,0,1115,1,0,".(goto)", 0, 2, 0); /* m: 1115 -> 0,1119 */
	reached1[1115] = 1;
	trans[1][1049]	= settr(1265,0,1050,2,0,"else", 0, 2, 0);
	trans[1][1050]	= settr(1266,0,1119,1194,1194,"(1)", 0, 2, 0); /* m: 1115 -> 1119,0 */
	reached1[1115] = 1;
	trans[1][1054]	= settr(1270,0,1082,1195,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1082] = settr(1298,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1298,0,1074,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1074] = settr(1290,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1290,2,1072,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1072] = settr(1288,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1288,2,1055,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1288,2,1058,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1288,2,1061,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1288,2,1064,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1288,2,1067,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1288,2,1070,0,0,"IF", 1, 2, 0);
	trans[1][1055]	= settr(1271,4,1080,1196,1196,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1056 -> 1080,0 */
	reached1[1056] = 1;
	trans[1][1056]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1057]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1073]	= settr(1289,0,1080,1197,1197,".(goto)", 1, 2, 0);
	trans[1][1058]	= settr(1274,4,1080,1198,1198,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1059 -> 1080,0 */
	reached1[1059] = 1;
	trans[1][1059]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1060]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1061]	= settr(1277,4,1080,1199,1199,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1062 -> 1080,0 */
	reached1[1062] = 1;
	trans[1][1062]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1063]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1064]	= settr(1280,4,1080,1200,1200,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1065 -> 1080,0 */
	reached1[1065] = 1;
	trans[1][1065]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1066]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1067]	= settr(1283,4,1080,1201,1201,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1068 -> 1080,0 */
	reached1[1068] = 1;
	trans[1][1068]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1069]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1070]	= settr(1286,2,1071,2,0,"else", 1, 2, 0);
	trans[1][1071]	= settr(1287,4,1080,1202,1202,"(1)", 1, 2, 0); /* m: 1073 -> 1080,0 */
	reached1[1073] = 1;
	T = trans[1][1080] = settr(1296,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1296,0,1075,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1296,0,1078,0,0,"IF", 0, 2, 0);
	trans[1][1075]	= settr(1291,0,1077,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1077] = settr(1293,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1293,0,1076,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1076]	= settr(1292,0,1115,1203,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1081]	= settr(1297,0,1115,1,0,".(goto)", 0, 2, 0); /* m: 1115 -> 0,1119 */
	reached1[1115] = 1;
	trans[1][1078]	= settr(1294,0,1079,2,0,"else", 0, 2, 0);
	trans[1][1079]	= settr(1295,0,1119,1204,1204,"(1)", 0, 2, 0); /* m: 1115 -> 1119,0 */
	reached1[1115] = 1;
	trans[1][1083]	= settr(1299,0,1111,1205,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][1111] = settr(1327,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1327,0,1103,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1103] = settr(1319,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1319,2,1101,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1101] = settr(1317,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1317,2,1084,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1317,2,1087,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1317,2,1090,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1317,2,1093,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1317,2,1096,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1317,2,1099,0,0,"IF", 1, 2, 0);
	trans[1][1084]	= settr(1300,4,1109,1206,1206,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1085 -> 1109,0 */
	reached1[1085] = 1;
	trans[1][1085]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1086]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1102]	= settr(1318,0,1109,1207,1207,".(goto)", 1, 2, 0);
	trans[1][1087]	= settr(1303,4,1109,1208,1208,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1088 -> 1109,0 */
	reached1[1088] = 1;
	trans[1][1088]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1089]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1090]	= settr(1306,4,1109,1209,1209,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1091 -> 1109,0 */
	reached1[1091] = 1;
	trans[1][1091]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1092]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1093]	= settr(1309,4,1109,1210,1210,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1094 -> 1109,0 */
	reached1[1094] = 1;
	trans[1][1094]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1095]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1096]	= settr(1312,4,1109,1211,1211,"((STOP==ABORT))", 1, 2, 0); /* m: 1097 -> 1109,0 */
	reached1[1097] = 1;
	trans[1][1097]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1098]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1099]	= settr(1315,2,1100,2,0,"else", 1, 2, 0);
	trans[1][1100]	= settr(1316,4,1109,1212,1212,"(1)", 1, 2, 0); /* m: 1102 -> 1109,0 */
	reached1[1102] = 1;
	T = trans[1][1109] = settr(1325,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1325,0,1104,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1325,0,1107,0,0,"IF", 0, 2, 0);
	trans[1][1104]	= settr(1320,0,1106,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1106] = settr(1322,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1322,0,1105,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1105]	= settr(1321,0,1115,1213,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1110]	= settr(1326,0,1115,1,0,".(goto)", 0, 2, 0); /* m: 1115 -> 0,1119 */
	reached1[1115] = 1;
	trans[1][1107]	= settr(1323,0,1108,2,0,"else", 0, 2, 0);
	trans[1][1108]	= settr(1324,0,1119,1214,1214,"(1)", 0, 2, 0); /* m: 1115 -> 1119,0 */
	reached1[1115] = 1;
	trans[1][1115]	= settr(1331,0,1119,1215,1215,"j = (j-1)", 0, 2, 0);
	trans[1][1116]	= settr(1332,0,1117,2,0,"else", 0, 2, 0);
	trans[1][1117]	= settr(1333,0,1309,1216,1216,"j = 1", 0, 2, 0);
	trans[1][1118]	= settr(1334,0,1309,1,0,"goto :b10", 0, 2, 0);
	trans[1][1121]	= settr(1337,0,1309,1,0,"break", 0, 2, 0);
	trans[1][1280]	= settr(1496,0,1309,1,0,".(goto)", 0, 2, 0);
	trans[1][1126]	= settr(1342,0,1278,2,0,"else", 0, 2, 0);
	T = trans[ 1][1278] = settr(1494,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1494,0,1255,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1255] = settr(1471,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1471,0,1252,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1253]	= settr(1469,0,1252,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1252] = settr(1468,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1468,0,1127,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1468,0,1249,0,0,"DO", 0, 2, 0);
	trans[1][1127]	= settr(1343,0,1247,1217,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][1247] = settr(1463,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1463,0,1245,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1245] = settr(1461,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1461,0,1128,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1461,0,1158,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1461,0,1187,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1461,0,1216,0,0,"IF", 0, 2, 0);
	trans[1][1128]	= settr(1344,0,1157,1218,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][1157] = settr(1373,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1373,0,1148,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1148] = settr(1364,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1364,2,1146,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1146] = settr(1362,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1362,2,1129,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1362,2,1132,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1362,2,1135,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1362,2,1138,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1362,2,1141,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1362,2,1144,0,0,"IF", 1, 2, 0);
	trans[1][1129]	= settr(1345,4,1149,1219,1219,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1130 -> 1149,0 */
	reached1[1130] = 1;
	trans[1][1130]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1131]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1147]	= settr(1363,0,1149,1220,1220,".(goto)", 1, 2, 0);
	trans[1][1132]	= settr(1348,4,1149,1221,1221,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1133 -> 1149,0 */
	reached1[1133] = 1;
	trans[1][1133]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1134]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1135]	= settr(1351,4,1149,1222,1222,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1136 -> 1149,0 */
	reached1[1136] = 1;
	trans[1][1136]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1137]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1138]	= settr(1354,4,1149,1223,1223,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1139 -> 1149,0 */
	reached1[1139] = 1;
	trans[1][1139]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1140]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1141]	= settr(1357,4,1149,1224,1224,"((START==ABORT))", 1, 2, 0); /* m: 1142 -> 1149,0 */
	reached1[1142] = 1;
	trans[1][1142]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1143]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1144]	= settr(1360,2,1145,2,0,"else", 1, 2, 0);
	trans[1][1145]	= settr(1361,4,1149,1225,1225,"(1)", 1, 2, 0); /* m: 1147 -> 1149,0 */
	reached1[1147] = 1;
	trans[1][1149]	= settr(1365,0,1155,1226,1226,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1155] = settr(1371,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1371,0,1150,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1371,0,1153,0,0,"IF", 0, 2, 0);
	trans[1][1150]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1152] = settr(1368,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1368,0,1151,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1151]	= settr(1367,0,1248,1227,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1156]	= settr(1372,0,1248,1,0,".(goto)", 0, 2, 0); /* m: 1248 -> 0,1252 */
	reached1[1248] = 1;
	trans[1][1153]	= settr(1369,0,1154,2,0,"else", 0, 2, 0);
	trans[1][1154]	= settr(1370,0,1252,1228,1228,"(1)", 0, 2, 0); /* m: 1248 -> 1252,0 */
	reached1[1248] = 1;
	trans[1][1246]	= settr(1462,0,1248,1,0,".(goto)", 0, 2, 0); /* m: 1248 -> 0,1252 */
	reached1[1248] = 1;
	trans[1][1158]	= settr(1374,0,1186,1229,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][1186] = settr(1402,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1402,0,1178,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1178] = settr(1394,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1394,2,1176,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1176] = settr(1392,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1392,2,1159,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1392,2,1162,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1392,2,1165,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1392,2,1168,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1392,2,1171,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1392,2,1174,0,0,"IF", 1, 2, 0);
	trans[1][1159]	= settr(1375,4,1184,1230,1230,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1160 -> 1184,0 */
	reached1[1160] = 1;
	trans[1][1160]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1161]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1177]	= settr(1393,0,1184,1231,1231,".(goto)", 1, 2, 0);
	trans[1][1162]	= settr(1378,4,1184,1232,1232,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1163 -> 1184,0 */
	reached1[1163] = 1;
	trans[1][1163]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1164]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1165]	= settr(1381,4,1184,1233,1233,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1166 -> 1184,0 */
	reached1[1166] = 1;
	trans[1][1166]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1167]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1168]	= settr(1384,4,1184,1234,1234,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1169 -> 1184,0 */
	reached1[1169] = 1;
	trans[1][1169]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1170]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1171]	= settr(1387,4,1184,1235,1235,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1172 -> 1184,0 */
	reached1[1172] = 1;
	trans[1][1172]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1173]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1174]	= settr(1390,2,1175,2,0,"else", 1, 2, 0);
	trans[1][1175]	= settr(1391,4,1184,1236,1236,"(1)", 1, 2, 0); /* m: 1177 -> 1184,0 */
	reached1[1177] = 1;
	T = trans[1][1184] = settr(1400,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1400,0,1179,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1400,0,1182,0,0,"IF", 0, 2, 0);
	trans[1][1179]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1181] = settr(1397,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1397,0,1180,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1180]	= settr(1396,0,1248,1237,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1185]	= settr(1401,0,1248,1,0,".(goto)", 0, 2, 0); /* m: 1248 -> 0,1252 */
	reached1[1248] = 1;
	trans[1][1182]	= settr(1398,0,1183,2,0,"else", 0, 2, 0);
	trans[1][1183]	= settr(1399,0,1252,1238,1238,"(1)", 0, 2, 0); /* m: 1248 -> 1252,0 */
	reached1[1248] = 1;
	trans[1][1187]	= settr(1403,0,1215,1239,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1215] = settr(1431,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1431,0,1207,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1207] = settr(1423,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1423,2,1205,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1205] = settr(1421,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1421,2,1188,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1421,2,1191,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1421,2,1194,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1421,2,1197,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1421,2,1200,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1421,2,1203,0,0,"IF", 1, 2, 0);
	trans[1][1188]	= settr(1404,4,1213,1240,1240,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1189 -> 1213,0 */
	reached1[1189] = 1;
	trans[1][1189]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1190]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1206]	= settr(1422,0,1213,1241,1241,".(goto)", 1, 2, 0);
	trans[1][1191]	= settr(1407,4,1213,1242,1242,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1192 -> 1213,0 */
	reached1[1192] = 1;
	trans[1][1192]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1193]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1194]	= settr(1410,4,1213,1243,1243,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1195 -> 1213,0 */
	reached1[1195] = 1;
	trans[1][1195]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1196]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1197]	= settr(1413,4,1213,1244,1244,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1198 -> 1213,0 */
	reached1[1198] = 1;
	trans[1][1198]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1199]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1200]	= settr(1416,4,1213,1245,1245,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1201 -> 1213,0 */
	reached1[1201] = 1;
	trans[1][1201]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1202]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1203]	= settr(1419,2,1204,2,0,"else", 1, 2, 0);
	trans[1][1204]	= settr(1420,4,1213,1246,1246,"(1)", 1, 2, 0); /* m: 1206 -> 1213,0 */
	reached1[1206] = 1;
	T = trans[1][1213] = settr(1429,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1429,0,1208,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1429,0,1211,0,0,"IF", 0, 2, 0);
	trans[1][1208]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1210] = settr(1426,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1426,0,1209,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1209]	= settr(1425,0,1248,1247,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1214]	= settr(1430,0,1248,1,0,".(goto)", 0, 2, 0); /* m: 1248 -> 0,1252 */
	reached1[1248] = 1;
	trans[1][1211]	= settr(1427,0,1212,2,0,"else", 0, 2, 0);
	trans[1][1212]	= settr(1428,0,1252,1248,1248,"(1)", 0, 2, 0); /* m: 1248 -> 1252,0 */
	reached1[1248] = 1;
	trans[1][1216]	= settr(1432,0,1244,1249,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][1244] = settr(1460,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1460,0,1236,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1236] = settr(1452,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1452,2,1234,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1234] = settr(1450,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1450,2,1217,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1450,2,1220,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1450,2,1223,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1450,2,1226,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1450,2,1229,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1450,2,1232,0,0,"IF", 1, 2, 0);
	trans[1][1217]	= settr(1433,4,1242,1250,1250,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1218 -> 1242,0 */
	reached1[1218] = 1;
	trans[1][1218]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1219]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1235]	= settr(1451,0,1242,1251,1251,".(goto)", 1, 2, 0);
	trans[1][1220]	= settr(1436,4,1242,1252,1252,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1221 -> 1242,0 */
	reached1[1221] = 1;
	trans[1][1221]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1222]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1223]	= settr(1439,4,1242,1253,1253,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1224 -> 1242,0 */
	reached1[1224] = 1;
	trans[1][1224]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1225]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1226]	= settr(1442,4,1242,1254,1254,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1227 -> 1242,0 */
	reached1[1227] = 1;
	trans[1][1227]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1228]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1229]	= settr(1445,4,1242,1255,1255,"((STOP==ABORT))", 1, 2, 0); /* m: 1230 -> 1242,0 */
	reached1[1230] = 1;
	trans[1][1230]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1231]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1232]	= settr(1448,2,1233,2,0,"else", 1, 2, 0);
	trans[1][1233]	= settr(1449,4,1242,1256,1256,"(1)", 1, 2, 0); /* m: 1235 -> 1242,0 */
	reached1[1235] = 1;
	T = trans[1][1242] = settr(1458,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1458,0,1237,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1458,0,1240,0,0,"IF", 0, 2, 0);
	trans[1][1237]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1239] = settr(1455,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1455,0,1238,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1238]	= settr(1454,0,1248,1257,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1243]	= settr(1459,0,1248,1,0,".(goto)", 0, 2, 0); /* m: 1248 -> 0,1252 */
	reached1[1248] = 1;
	trans[1][1240]	= settr(1456,0,1241,2,0,"else", 0, 2, 0);
	trans[1][1241]	= settr(1457,0,1252,1258,1258,"(1)", 0, 2, 0); /* m: 1248 -> 1252,0 */
	reached1[1248] = 1;
	trans[1][1248]	= settr(1464,0,1252,1259,1259,"j = (j+1)", 0, 2, 0);
	trans[1][1249]	= settr(1465,0,1250,2,0,"else", 0, 2, 0);
	trans[1][1250]	= settr(1466,0,1275,1260,1260,"j = 1", 0, 2, 0);
	trans[1][1251]	= settr(1467,0,1275,1,0,"goto :b11", 0, 2, 0);
	trans[1][1254]	= settr(1470,0,1275,1,0,"break", 0, 2, 0);
	trans[1][1276]	= settr(1492,0,1275,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1275] = settr(1491,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1491,0,1256,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1491,0,1272,0,0,"DO", 0, 2, 0);
	trans[1][1256]	= settr(1472,0,1269,1261,0,"((j<3))", 0, 2, 0);
	T = trans[1][1269] = settr(1485,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1485,0,1257,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1485,0,1260,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1485,0,1263,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1485,0,1266,0,0,"IF", 0, 2, 0);
	trans[1][1257]	= settr(1473,0,1259,1262,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][1259] = settr(1475,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1475,0,1258,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1258]	= settr(1474,0,1271,1263,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1270]	= settr(1486,0,1271,1,0,".(goto)", 0, 2, 0); /* m: 1271 -> 0,1275 */
	reached1[1271] = 1;
	trans[1][1260]	= settr(1476,0,1262,1264,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1262] = settr(1478,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1478,0,1261,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1261]	= settr(1477,0,1271,1265,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1263]	= settr(1479,0,1265,1266,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][1265] = settr(1481,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1481,0,1264,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1264]	= settr(1480,0,1271,1267,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1266]	= settr(1482,0,1268,1268,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][1268] = settr(1484,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1484,0,1267,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1267]	= settr(1483,0,1271,1269,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1271]	= settr(1487,0,1275,1270,1270,"j = (j+1)", 0, 2, 0);
	trans[1][1272]	= settr(1488,0,1273,2,0,"else", 0, 2, 0);
	trans[1][1273]	= settr(1489,0,1309,1271,1271,"j = 1", 0, 2, 0);
	trans[1][1274]	= settr(1490,0,1309,1,0,"goto :b12", 0, 2, 0);
	trans[1][1277]	= settr(1493,0,1309,1,0,"break", 0, 2, 0);
	trans[1][1284]	= settr(1500,0,1285,2,0,"else", 0, 2, 0);
	trans[1][1285]	= settr(1501,0,1309,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1309] = settr(1525,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1525,2,1307,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1307] = settr(1523,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1523,2,1290,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1523,2,1293,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1523,2,1296,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1523,2,1299,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1523,2,1302,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1523,2,1305,0,0,"IF", 1, 2, 0);
	trans[1][1290]	= settr(1506,4,1736,1272,1272,"(((CONTINUE==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 1291 -> 1736,0 */
	reached1[1291] = 1;
	trans[1][1291]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[1][1292]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[1][1308]	= settr(1524,0,1736,1273,1273,".(goto)", 1, 2, 0);
	trans[1][1293]	= settr(1509,4,1736,1274,1274,"(((CONTINUE==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 1294 -> 1736,0 */
	reached1[1294] = 1;
	trans[1][1294]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[1][1295]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[1][1296]	= settr(1512,4,1736,1275,1275,"(((CONTINUE==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 1297 -> 1736,0 */
	reached1[1297] = 1;
	trans[1][1297]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[1][1298]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[1][1299]	= settr(1515,4,1736,1276,1276,"(((CONTINUE==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 1300 -> 1736,0 */
	reached1[1300] = 1;
	trans[1][1300]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[1][1301]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[1][1302]	= settr(1518,4,1736,1277,1277,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1303 -> 1736,0 */
	reached1[1303] = 1;
	trans[1][1303]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[1][1304]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[1][1305]	= settr(1521,2,1306,2,0,"else", 1, 2, 0);
	trans[1][1306]	= settr(1522,4,1736,1278,1278,"(1)", 1, 2, 0); /* m: 1308 -> 1736,0 */
	reached1[1308] = 1;
	T = trans[ 1][1736] = settr(1952,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1952,0,1735,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1735] = settr(1951,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1951,0,1733,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1733] = settr(1949,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1949,0,1310,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1949,0,1312,0,0,"IF", 0, 2, 0);
	trans[1][1310]	= settr(1526,0,1311,1279,0,"(((9==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][1311]	= settr(1527,0,5700,1280,1280,"supervisor_started = 1", 1, 2, 0);
	trans[1][1734]	= settr(1950,0,5700,1,0,".(goto)", 0, 2, 0);
	trans[1][1312]	= settr(1528,0,1731,2,0,"else", 0, 2, 0);
	T = trans[1][1731] = settr(1947,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1947,0,1313,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1947,0,1578,0,0,"IF", 0, 2, 0);
	trans[1][1313]	= settr(1529,0,1577,1281,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][1577] = settr(1793,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1793,0,1575,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1575] = settr(1791,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1791,0,1314,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1791,0,1444,0,0,"IF", 0, 2, 0);
	trans[1][1314]	= settr(1530,0,1443,1282,0,"(((9==START)||(9==PAUSED)))", 0, 2, 0);
	T = trans[ 1][1443] = settr(1659,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1659,0,1440,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1441]	= settr(1657,0,1440,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1440] = settr(1656,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1656,0,1315,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1656,0,1437,0,0,"DO", 0, 2, 0);
	trans[1][1315]	= settr(1531,0,1435,1283,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][1435] = settr(1651,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1651,0,1433,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1433] = settr(1649,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1649,0,1316,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1649,0,1346,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1649,0,1375,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1649,0,1404,0,0,"IF", 0, 2, 0);
	trans[1][1316]	= settr(1532,0,1345,1284,0,"((9==START))", 0, 2, 0);
	T = trans[ 1][1345] = settr(1561,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1561,0,1336,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1336] = settr(1552,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1552,2,1334,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1334] = settr(1550,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1550,2,1317,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1550,2,1320,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1550,2,1323,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1550,2,1326,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1550,2,1329,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1550,2,1332,0,0,"IF", 1, 2, 0);
	trans[1][1317]	= settr(1533,4,1337,1285,1285,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1318 -> 1337,0 */
	reached1[1318] = 1;
	trans[1][1318]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1319]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1335]	= settr(1551,0,1337,1286,1286,".(goto)", 1, 2, 0);
	trans[1][1320]	= settr(1536,4,1337,1287,1287,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1321 -> 1337,0 */
	reached1[1321] = 1;
	trans[1][1321]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1322]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1323]	= settr(1539,4,1337,1288,1288,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1324 -> 1337,0 */
	reached1[1324] = 1;
	trans[1][1324]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1325]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1326]	= settr(1542,4,1337,1289,1289,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1327 -> 1337,0 */
	reached1[1327] = 1;
	trans[1][1327]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1328]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1329]	= settr(1545,4,1337,1290,1290,"((START==ABORT))", 1, 2, 0); /* m: 1330 -> 1337,0 */
	reached1[1330] = 1;
	trans[1][1330]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1331]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1332]	= settr(1548,2,1333,2,0,"else", 1, 2, 0);
	trans[1][1333]	= settr(1549,4,1337,1291,1291,"(1)", 1, 2, 0); /* m: 1335 -> 1337,0 */
	reached1[1335] = 1;
	trans[1][1337]	= settr(1553,0,1343,1292,1292,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1343] = settr(1559,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1559,0,1338,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1559,0,1341,0,0,"IF", 0, 2, 0);
	trans[1][1338]	= settr(1554,0,1340,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1340] = settr(1556,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1556,0,1339,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1339]	= settr(1555,0,1436,1293,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1344]	= settr(1560,0,1436,1,0,".(goto)", 0, 2, 0); /* m: 1436 -> 0,1440 */
	reached1[1436] = 1;
	trans[1][1341]	= settr(1557,0,1342,2,0,"else", 0, 2, 0);
	trans[1][1342]	= settr(1558,0,1440,1294,1294,"(1)", 0, 2, 0); /* m: 1436 -> 1440,0 */
	reached1[1436] = 1;
	trans[1][1434]	= settr(1650,0,1436,1,0,".(goto)", 0, 2, 0); /* m: 1436 -> 0,1440 */
	reached1[1436] = 1;
	trans[1][1346]	= settr(1562,0,1374,1295,0,"((9==PAUSE))", 0, 2, 0);
	T = trans[ 1][1374] = settr(1590,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1590,0,1366,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1366] = settr(1582,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1582,2,1364,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1364] = settr(1580,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1580,2,1347,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1580,2,1350,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1580,2,1353,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1580,2,1356,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1580,2,1359,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1580,2,1362,0,0,"IF", 1, 2, 0);
	trans[1][1347]	= settr(1563,4,1372,1296,1296,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1348 -> 1372,0 */
	reached1[1348] = 1;
	trans[1][1348]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1349]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1365]	= settr(1581,0,1372,1297,1297,".(goto)", 1, 2, 0);
	trans[1][1350]	= settr(1566,4,1372,1298,1298,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1351 -> 1372,0 */
	reached1[1351] = 1;
	trans[1][1351]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1352]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1353]	= settr(1569,4,1372,1299,1299,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1354 -> 1372,0 */
	reached1[1354] = 1;
	trans[1][1354]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1355]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1356]	= settr(1572,4,1372,1300,1300,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1357 -> 1372,0 */
	reached1[1357] = 1;
	trans[1][1357]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1358]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1359]	= settr(1575,4,1372,1301,1301,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1360 -> 1372,0 */
	reached1[1360] = 1;
	trans[1][1360]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1361]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1362]	= settr(1578,2,1363,2,0,"else", 1, 2, 0);
	trans[1][1363]	= settr(1579,4,1372,1302,1302,"(1)", 1, 2, 0); /* m: 1365 -> 1372,0 */
	reached1[1365] = 1;
	T = trans[1][1372] = settr(1588,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1588,0,1367,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1588,0,1370,0,0,"IF", 0, 2, 0);
	trans[1][1367]	= settr(1583,0,1369,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1369] = settr(1585,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1585,0,1368,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1368]	= settr(1584,0,1436,1303,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1373]	= settr(1589,0,1436,1,0,".(goto)", 0, 2, 0); /* m: 1436 -> 0,1440 */
	reached1[1436] = 1;
	trans[1][1370]	= settr(1586,0,1371,2,0,"else", 0, 2, 0);
	trans[1][1371]	= settr(1587,0,1440,1304,1304,"(1)", 0, 2, 0); /* m: 1436 -> 1440,0 */
	reached1[1436] = 1;
	trans[1][1375]	= settr(1591,0,1403,1305,0,"((9==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1403] = settr(1619,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1619,0,1395,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1395] = settr(1611,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1611,2,1393,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1393] = settr(1609,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1609,2,1376,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1609,2,1379,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1609,2,1382,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1609,2,1385,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1609,2,1388,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1609,2,1391,0,0,"IF", 1, 2, 0);
	trans[1][1376]	= settr(1592,4,1401,1306,1306,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1377 -> 1401,0 */
	reached1[1377] = 1;
	trans[1][1377]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1378]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1394]	= settr(1610,0,1401,1307,1307,".(goto)", 1, 2, 0);
	trans[1][1379]	= settr(1595,4,1401,1308,1308,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1380 -> 1401,0 */
	reached1[1380] = 1;
	trans[1][1380]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1381]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1382]	= settr(1598,4,1401,1309,1309,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1383 -> 1401,0 */
	reached1[1383] = 1;
	trans[1][1383]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1384]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1385]	= settr(1601,4,1401,1310,1310,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1386 -> 1401,0 */
	reached1[1386] = 1;
	trans[1][1386]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1387]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1388]	= settr(1604,4,1401,1311,1311,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1389 -> 1401,0 */
	reached1[1389] = 1;
	trans[1][1389]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1390]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1391]	= settr(1607,2,1392,2,0,"else", 1, 2, 0);
	trans[1][1392]	= settr(1608,4,1401,1312,1312,"(1)", 1, 2, 0); /* m: 1394 -> 1401,0 */
	reached1[1394] = 1;
	T = trans[1][1401] = settr(1617,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1617,0,1396,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1617,0,1399,0,0,"IF", 0, 2, 0);
	trans[1][1396]	= settr(1612,0,1398,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1398] = settr(1614,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1614,0,1397,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1397]	= settr(1613,0,1436,1313,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1402]	= settr(1618,0,1436,1,0,".(goto)", 0, 2, 0); /* m: 1436 -> 0,1440 */
	reached1[1436] = 1;
	trans[1][1399]	= settr(1615,0,1400,2,0,"else", 0, 2, 0);
	trans[1][1400]	= settr(1616,0,1440,1314,1314,"(1)", 0, 2, 0); /* m: 1436 -> 1440,0 */
	reached1[1436] = 1;
	trans[1][1404]	= settr(1620,0,1432,1315,0,"(((9==STOP)||(9==ABORT)))", 0, 2, 0);
	T = trans[ 1][1432] = settr(1648,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1648,0,1424,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1424] = settr(1640,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1640,2,1422,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1422] = settr(1638,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1638,2,1405,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1638,2,1408,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1638,2,1411,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1638,2,1414,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1638,2,1417,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1638,2,1420,0,0,"IF", 1, 2, 0);
	trans[1][1405]	= settr(1621,4,1430,1316,1316,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1406 -> 1430,0 */
	reached1[1406] = 1;
	trans[1][1406]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1407]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1423]	= settr(1639,0,1430,1317,1317,".(goto)", 1, 2, 0);
	trans[1][1408]	= settr(1624,4,1430,1318,1318,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1409 -> 1430,0 */
	reached1[1409] = 1;
	trans[1][1409]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1410]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1411]	= settr(1627,4,1430,1319,1319,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1412 -> 1430,0 */
	reached1[1412] = 1;
	trans[1][1412]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1413]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1414]	= settr(1630,4,1430,1320,1320,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1415 -> 1430,0 */
	reached1[1415] = 1;
	trans[1][1415]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1416]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1417]	= settr(1633,4,1430,1321,1321,"((STOP==ABORT))", 1, 2, 0); /* m: 1418 -> 1430,0 */
	reached1[1418] = 1;
	trans[1][1418]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1419]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1420]	= settr(1636,2,1421,2,0,"else", 1, 2, 0);
	trans[1][1421]	= settr(1637,4,1430,1322,1322,"(1)", 1, 2, 0); /* m: 1423 -> 1430,0 */
	reached1[1423] = 1;
	T = trans[1][1430] = settr(1646,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1646,0,1425,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1646,0,1428,0,0,"IF", 0, 2, 0);
	trans[1][1425]	= settr(1641,0,1427,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1427] = settr(1643,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1643,0,1426,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1426]	= settr(1642,0,1436,1323,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1431]	= settr(1647,0,1436,1,0,".(goto)", 0, 2, 0); /* m: 1436 -> 0,1440 */
	reached1[1436] = 1;
	trans[1][1428]	= settr(1644,0,1429,2,0,"else", 0, 2, 0);
	trans[1][1429]	= settr(1645,0,1440,1324,1324,"(1)", 0, 2, 0); /* m: 1436 -> 1440,0 */
	reached1[1436] = 1;
	trans[1][1436]	= settr(1652,0,1440,1325,1325,"j = (j+1)", 0, 2, 0);
	trans[1][1437]	= settr(1653,0,1438,2,0,"else", 0, 2, 0);
	trans[1][1438]	= settr(1654,0,5700,1326,1326,"j = 1", 0, 2, 0);
	trans[1][1439]	= settr(1655,0,5700,1,0,"goto :b13", 0, 2, 0);
	trans[1][1442]	= settr(1658,0,5700,1,0,"break", 0, 2, 0);
	trans[1][1576]	= settr(1792,0,5700,1,0,".(goto)", 0, 2, 0);
	trans[1][1444]	= settr(1660,0,1574,2,0,"else", 0, 2, 0);
	T = trans[ 1][1574] = settr(1790,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1790,0,1445,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1445]	= settr(1661,0,1571,1327,1327,"j = (3-1)", 0, 2, 0);
	trans[1][1572]	= settr(1788,0,1571,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1571] = settr(1787,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1787,0,1446,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1787,0,1568,0,0,"DO", 0, 2, 0);
	trans[1][1446]	= settr(1662,0,1566,1328,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][1566] = settr(1782,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1782,0,1564,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1564] = settr(1780,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1780,0,1447,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1780,0,1477,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1780,0,1506,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1780,0,1535,0,0,"IF", 0, 2, 0);
	trans[1][1447]	= settr(1663,0,1476,1329,0,"((9==START))", 0, 2, 0);
	T = trans[ 1][1476] = settr(1692,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1692,0,1467,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1467] = settr(1683,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1683,2,1465,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1465] = settr(1681,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1681,2,1448,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1681,2,1451,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1681,2,1454,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1681,2,1457,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1681,2,1460,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1681,2,1463,0,0,"IF", 1, 2, 0);
	trans[1][1448]	= settr(1664,4,1468,1330,1330,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1449 -> 1468,0 */
	reached1[1449] = 1;
	trans[1][1449]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1450]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1466]	= settr(1682,0,1468,1331,1331,".(goto)", 1, 2, 0);
	trans[1][1451]	= settr(1667,4,1468,1332,1332,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1452 -> 1468,0 */
	reached1[1452] = 1;
	trans[1][1452]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1453]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1454]	= settr(1670,4,1468,1333,1333,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1455 -> 1468,0 */
	reached1[1455] = 1;
	trans[1][1455]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1456]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1457]	= settr(1673,4,1468,1334,1334,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1458 -> 1468,0 */
	reached1[1458] = 1;
	trans[1][1458]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1459]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1460]	= settr(1676,4,1468,1335,1335,"((START==ABORT))", 1, 2, 0); /* m: 1461 -> 1468,0 */
	reached1[1461] = 1;
	trans[1][1461]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1462]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1463]	= settr(1679,2,1464,2,0,"else", 1, 2, 0);
	trans[1][1464]	= settr(1680,4,1468,1336,1336,"(1)", 1, 2, 0); /* m: 1466 -> 1468,0 */
	reached1[1466] = 1;
	trans[1][1468]	= settr(1684,0,1474,1337,1337,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1474] = settr(1690,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1690,0,1469,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1690,0,1472,0,0,"IF", 0, 2, 0);
	trans[1][1469]	= settr(1685,0,1471,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1471] = settr(1687,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1687,0,1470,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1470]	= settr(1686,0,1567,1338,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1475]	= settr(1691,0,1567,1,0,".(goto)", 0, 2, 0); /* m: 1567 -> 0,1571 */
	reached1[1567] = 1;
	trans[1][1472]	= settr(1688,0,1473,2,0,"else", 0, 2, 0);
	trans[1][1473]	= settr(1689,0,1571,1339,1339,"(1)", 0, 2, 0); /* m: 1567 -> 1571,0 */
	reached1[1567] = 1;
	trans[1][1565]	= settr(1781,0,1567,1,0,".(goto)", 0, 2, 0); /* m: 1567 -> 0,1571 */
	reached1[1567] = 1;
	trans[1][1477]	= settr(1693,0,1505,1340,0,"((9==PAUSE))", 0, 2, 0);
	T = trans[ 1][1505] = settr(1721,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1721,0,1497,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1497] = settr(1713,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1713,2,1495,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1495] = settr(1711,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1711,2,1478,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1711,2,1481,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1711,2,1484,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1711,2,1487,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1711,2,1490,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1711,2,1493,0,0,"IF", 1, 2, 0);
	trans[1][1478]	= settr(1694,4,1503,1341,1341,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1479 -> 1503,0 */
	reached1[1479] = 1;
	trans[1][1479]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1480]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1496]	= settr(1712,0,1503,1342,1342,".(goto)", 1, 2, 0);
	trans[1][1481]	= settr(1697,4,1503,1343,1343,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1482 -> 1503,0 */
	reached1[1482] = 1;
	trans[1][1482]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1483]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1484]	= settr(1700,4,1503,1344,1344,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1485 -> 1503,0 */
	reached1[1485] = 1;
	trans[1][1485]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1486]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1487]	= settr(1703,4,1503,1345,1345,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1488 -> 1503,0 */
	reached1[1488] = 1;
	trans[1][1488]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1489]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1490]	= settr(1706,4,1503,1346,1346,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1491 -> 1503,0 */
	reached1[1491] = 1;
	trans[1][1491]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1492]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1493]	= settr(1709,2,1494,2,0,"else", 1, 2, 0);
	trans[1][1494]	= settr(1710,4,1503,1347,1347,"(1)", 1, 2, 0); /* m: 1496 -> 1503,0 */
	reached1[1496] = 1;
	T = trans[1][1503] = settr(1719,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1719,0,1498,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1719,0,1501,0,0,"IF", 0, 2, 0);
	trans[1][1498]	= settr(1714,0,1500,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1500] = settr(1716,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1716,0,1499,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1499]	= settr(1715,0,1567,1348,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1504]	= settr(1720,0,1567,1,0,".(goto)", 0, 2, 0); /* m: 1567 -> 0,1571 */
	reached1[1567] = 1;
	trans[1][1501]	= settr(1717,0,1502,2,0,"else", 0, 2, 0);
	trans[1][1502]	= settr(1718,0,1571,1349,1349,"(1)", 0, 2, 0); /* m: 1567 -> 1571,0 */
	reached1[1567] = 1;
	trans[1][1506]	= settr(1722,0,1534,1350,0,"((9==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1534] = settr(1750,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1750,0,1526,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1526] = settr(1742,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1742,2,1524,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1524] = settr(1740,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1740,2,1507,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1740,2,1510,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1740,2,1513,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1740,2,1516,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1740,2,1519,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1740,2,1522,0,0,"IF", 1, 2, 0);
	trans[1][1507]	= settr(1723,4,1532,1351,1351,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1508 -> 1532,0 */
	reached1[1508] = 1;
	trans[1][1508]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1509]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1525]	= settr(1741,0,1532,1352,1352,".(goto)", 1, 2, 0);
	trans[1][1510]	= settr(1726,4,1532,1353,1353,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1511 -> 1532,0 */
	reached1[1511] = 1;
	trans[1][1511]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1512]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1513]	= settr(1729,4,1532,1354,1354,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1514 -> 1532,0 */
	reached1[1514] = 1;
	trans[1][1514]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1515]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1516]	= settr(1732,4,1532,1355,1355,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1517 -> 1532,0 */
	reached1[1517] = 1;
	trans[1][1517]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1518]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1519]	= settr(1735,4,1532,1356,1356,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1520 -> 1532,0 */
	reached1[1520] = 1;
	trans[1][1520]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1521]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1522]	= settr(1738,2,1523,2,0,"else", 1, 2, 0);
	trans[1][1523]	= settr(1739,4,1532,1357,1357,"(1)", 1, 2, 0); /* m: 1525 -> 1532,0 */
	reached1[1525] = 1;
	T = trans[1][1532] = settr(1748,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1748,0,1527,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1748,0,1530,0,0,"IF", 0, 2, 0);
	trans[1][1527]	= settr(1743,0,1529,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1529] = settr(1745,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1745,0,1528,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1528]	= settr(1744,0,1567,1358,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1533]	= settr(1749,0,1567,1,0,".(goto)", 0, 2, 0); /* m: 1567 -> 0,1571 */
	reached1[1567] = 1;
	trans[1][1530]	= settr(1746,0,1531,2,0,"else", 0, 2, 0);
	trans[1][1531]	= settr(1747,0,1571,1359,1359,"(1)", 0, 2, 0); /* m: 1567 -> 1571,0 */
	reached1[1567] = 1;
	trans[1][1535]	= settr(1751,0,1563,1360,0,"(((9==STOP)||(9==ABORT)))", 0, 2, 0);
	T = trans[ 1][1563] = settr(1779,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1779,0,1555,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1555] = settr(1771,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1771,2,1553,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1553] = settr(1769,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1769,2,1536,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1769,2,1539,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1769,2,1542,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1769,2,1545,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1769,2,1548,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1769,2,1551,0,0,"IF", 1, 2, 0);
	trans[1][1536]	= settr(1752,4,1561,1361,1361,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1537 -> 1561,0 */
	reached1[1537] = 1;
	trans[1][1537]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1538]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1554]	= settr(1770,0,1561,1362,1362,".(goto)", 1, 2, 0);
	trans[1][1539]	= settr(1755,4,1561,1363,1363,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1540 -> 1561,0 */
	reached1[1540] = 1;
	trans[1][1540]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1541]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1542]	= settr(1758,4,1561,1364,1364,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1543 -> 1561,0 */
	reached1[1543] = 1;
	trans[1][1543]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1544]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1545]	= settr(1761,4,1561,1365,1365,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1546 -> 1561,0 */
	reached1[1546] = 1;
	trans[1][1546]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1547]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1548]	= settr(1764,4,1561,1366,1366,"((STOP==ABORT))", 1, 2, 0); /* m: 1549 -> 1561,0 */
	reached1[1549] = 1;
	trans[1][1549]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1550]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1551]	= settr(1767,2,1552,2,0,"else", 1, 2, 0);
	trans[1][1552]	= settr(1768,4,1561,1367,1367,"(1)", 1, 2, 0); /* m: 1554 -> 1561,0 */
	reached1[1554] = 1;
	T = trans[1][1561] = settr(1777,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1777,0,1556,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1777,0,1559,0,0,"IF", 0, 2, 0);
	trans[1][1556]	= settr(1772,0,1558,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1558] = settr(1774,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1774,0,1557,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1557]	= settr(1773,0,1567,1368,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1562]	= settr(1778,0,1567,1,0,".(goto)", 0, 2, 0); /* m: 1567 -> 0,1571 */
	reached1[1567] = 1;
	trans[1][1559]	= settr(1775,0,1560,2,0,"else", 0, 2, 0);
	trans[1][1560]	= settr(1776,0,1571,1369,1369,"(1)", 0, 2, 0); /* m: 1567 -> 1571,0 */
	reached1[1567] = 1;
	trans[1][1567]	= settr(1783,0,1571,1370,1370,"j = (j-1)", 0, 2, 0);
	trans[1][1568]	= settr(1784,0,1569,2,0,"else", 0, 2, 0);
	trans[1][1569]	= settr(1785,0,5700,1371,1371,"j = 1", 0, 2, 0);
	trans[1][1570]	= settr(1786,0,5700,1,0,"goto :b14", 0, 2, 0);
	trans[1][1573]	= settr(1789,0,5700,1,0,"break", 0, 2, 0);
	trans[1][1732]	= settr(1948,0,5700,1,0,".(goto)", 0, 2, 0);
	trans[1][1578]	= settr(1794,0,1730,2,0,"else", 0, 2, 0);
	T = trans[ 1][1730] = settr(1946,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1946,0,1707,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1707] = settr(1923,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1923,0,1704,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1705]	= settr(1921,0,1704,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1704] = settr(1920,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1920,0,1579,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1920,0,1701,0,0,"DO", 0, 2, 0);
	trans[1][1579]	= settr(1795,0,1699,1372,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][1699] = settr(1915,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1915,0,1697,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1697] = settr(1913,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1913,0,1580,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1913,0,1610,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1913,0,1639,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1913,0,1668,0,0,"IF", 0, 2, 0);
	trans[1][1580]	= settr(1796,0,1609,1373,0,"((9==START))", 0, 2, 0);
	T = trans[ 1][1609] = settr(1825,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1825,0,1600,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1600] = settr(1816,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1816,2,1598,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1598] = settr(1814,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1814,2,1581,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1814,2,1584,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1814,2,1587,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1814,2,1590,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1814,2,1593,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1814,2,1596,0,0,"IF", 1, 2, 0);
	trans[1][1581]	= settr(1797,4,1601,1374,1374,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1582 -> 1601,0 */
	reached1[1582] = 1;
	trans[1][1582]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1583]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1599]	= settr(1815,0,1601,1375,1375,".(goto)", 1, 2, 0);
	trans[1][1584]	= settr(1800,4,1601,1376,1376,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1585 -> 1601,0 */
	reached1[1585] = 1;
	trans[1][1585]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1586]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1587]	= settr(1803,4,1601,1377,1377,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1588 -> 1601,0 */
	reached1[1588] = 1;
	trans[1][1588]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1589]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1590]	= settr(1806,4,1601,1378,1378,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1591 -> 1601,0 */
	reached1[1591] = 1;
	trans[1][1591]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1592]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1593]	= settr(1809,4,1601,1379,1379,"((START==ABORT))", 1, 2, 0); /* m: 1594 -> 1601,0 */
	reached1[1594] = 1;
	trans[1][1594]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1595]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1596]	= settr(1812,2,1597,2,0,"else", 1, 2, 0);
	trans[1][1597]	= settr(1813,4,1601,1380,1380,"(1)", 1, 2, 0); /* m: 1599 -> 1601,0 */
	reached1[1599] = 1;
	trans[1][1601]	= settr(1817,0,1607,1381,1381,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1607] = settr(1823,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1823,0,1602,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1823,0,1605,0,0,"IF", 0, 2, 0);
	trans[1][1602]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1604] = settr(1820,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1820,0,1603,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1603]	= settr(1819,0,1700,1382,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1608]	= settr(1824,0,1700,1,0,".(goto)", 0, 2, 0); /* m: 1700 -> 0,1704 */
	reached1[1700] = 1;
	trans[1][1605]	= settr(1821,0,1606,2,0,"else", 0, 2, 0);
	trans[1][1606]	= settr(1822,0,1704,1383,1383,"(1)", 0, 2, 0); /* m: 1700 -> 1704,0 */
	reached1[1700] = 1;
	trans[1][1698]	= settr(1914,0,1700,1,0,".(goto)", 0, 2, 0); /* m: 1700 -> 0,1704 */
	reached1[1700] = 1;
	trans[1][1610]	= settr(1826,0,1638,1384,0,"((9==PAUSE))", 0, 2, 0);
	T = trans[ 1][1638] = settr(1854,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1854,0,1630,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1630] = settr(1846,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1846,2,1628,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1628] = settr(1844,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1844,2,1611,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1844,2,1614,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1844,2,1617,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1844,2,1620,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1844,2,1623,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1844,2,1626,0,0,"IF", 1, 2, 0);
	trans[1][1611]	= settr(1827,4,1636,1385,1385,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1612 -> 1636,0 */
	reached1[1612] = 1;
	trans[1][1612]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1613]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1629]	= settr(1845,0,1636,1386,1386,".(goto)", 1, 2, 0);
	trans[1][1614]	= settr(1830,4,1636,1387,1387,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1615 -> 1636,0 */
	reached1[1615] = 1;
	trans[1][1615]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1616]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1617]	= settr(1833,4,1636,1388,1388,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1618 -> 1636,0 */
	reached1[1618] = 1;
	trans[1][1618]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1619]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1620]	= settr(1836,4,1636,1389,1389,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1621 -> 1636,0 */
	reached1[1621] = 1;
	trans[1][1621]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1622]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1623]	= settr(1839,4,1636,1390,1390,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1624 -> 1636,0 */
	reached1[1624] = 1;
	trans[1][1624]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1625]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1626]	= settr(1842,2,1627,2,0,"else", 1, 2, 0);
	trans[1][1627]	= settr(1843,4,1636,1391,1391,"(1)", 1, 2, 0); /* m: 1629 -> 1636,0 */
	reached1[1629] = 1;
	T = trans[1][1636] = settr(1852,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1852,0,1631,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1852,0,1634,0,0,"IF", 0, 2, 0);
	trans[1][1631]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1633] = settr(1849,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1849,0,1632,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1632]	= settr(1848,0,1700,1392,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1637]	= settr(1853,0,1700,1,0,".(goto)", 0, 2, 0); /* m: 1700 -> 0,1704 */
	reached1[1700] = 1;
	trans[1][1634]	= settr(1850,0,1635,2,0,"else", 0, 2, 0);
	trans[1][1635]	= settr(1851,0,1704,1393,1393,"(1)", 0, 2, 0); /* m: 1700 -> 1704,0 */
	reached1[1700] = 1;
	trans[1][1639]	= settr(1855,0,1667,1394,0,"((9==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1667] = settr(1883,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1883,0,1659,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1659] = settr(1875,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1875,2,1657,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1657] = settr(1873,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1873,2,1640,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1873,2,1643,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1873,2,1646,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1873,2,1649,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1873,2,1652,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1873,2,1655,0,0,"IF", 1, 2, 0);
	trans[1][1640]	= settr(1856,4,1665,1395,1395,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1641 -> 1665,0 */
	reached1[1641] = 1;
	trans[1][1641]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1642]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1658]	= settr(1874,0,1665,1396,1396,".(goto)", 1, 2, 0);
	trans[1][1643]	= settr(1859,4,1665,1397,1397,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1644 -> 1665,0 */
	reached1[1644] = 1;
	trans[1][1644]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1645]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1646]	= settr(1862,4,1665,1398,1398,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1647 -> 1665,0 */
	reached1[1647] = 1;
	trans[1][1647]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1648]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1649]	= settr(1865,4,1665,1399,1399,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1650 -> 1665,0 */
	reached1[1650] = 1;
	trans[1][1650]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1651]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1652]	= settr(1868,4,1665,1400,1400,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1653 -> 1665,0 */
	reached1[1653] = 1;
	trans[1][1653]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1654]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1655]	= settr(1871,2,1656,2,0,"else", 1, 2, 0);
	trans[1][1656]	= settr(1872,4,1665,1401,1401,"(1)", 1, 2, 0); /* m: 1658 -> 1665,0 */
	reached1[1658] = 1;
	T = trans[1][1665] = settr(1881,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1881,0,1660,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1881,0,1663,0,0,"IF", 0, 2, 0);
	trans[1][1660]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1662] = settr(1878,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1878,0,1661,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1661]	= settr(1877,0,1700,1402,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1666]	= settr(1882,0,1700,1,0,".(goto)", 0, 2, 0); /* m: 1700 -> 0,1704 */
	reached1[1700] = 1;
	trans[1][1663]	= settr(1879,0,1664,2,0,"else", 0, 2, 0);
	trans[1][1664]	= settr(1880,0,1704,1403,1403,"(1)", 0, 2, 0); /* m: 1700 -> 1704,0 */
	reached1[1700] = 1;
	trans[1][1668]	= settr(1884,0,1696,1404,0,"(((9==STOP)||(9==ABORT)))", 0, 2, 0);
	T = trans[ 1][1696] = settr(1912,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1912,0,1688,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1688] = settr(1904,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1904,2,1686,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1686] = settr(1902,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1902,2,1669,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1902,2,1672,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1902,2,1675,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1902,2,1678,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1902,2,1681,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1902,2,1684,0,0,"IF", 1, 2, 0);
	trans[1][1669]	= settr(1885,4,1694,1405,1405,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1670 -> 1694,0 */
	reached1[1670] = 1;
	trans[1][1670]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1671]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1687]	= settr(1903,0,1694,1406,1406,".(goto)", 1, 2, 0);
	trans[1][1672]	= settr(1888,4,1694,1407,1407,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1673 -> 1694,0 */
	reached1[1673] = 1;
	trans[1][1673]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1674]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1675]	= settr(1891,4,1694,1408,1408,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1676 -> 1694,0 */
	reached1[1676] = 1;
	trans[1][1676]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1677]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1678]	= settr(1894,4,1694,1409,1409,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1679 -> 1694,0 */
	reached1[1679] = 1;
	trans[1][1679]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1680]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1681]	= settr(1897,4,1694,1410,1410,"((STOP==ABORT))", 1, 2, 0); /* m: 1682 -> 1694,0 */
	reached1[1682] = 1;
	trans[1][1682]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1683]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1684]	= settr(1900,2,1685,2,0,"else", 1, 2, 0);
	trans[1][1685]	= settr(1901,4,1694,1411,1411,"(1)", 1, 2, 0); /* m: 1687 -> 1694,0 */
	reached1[1687] = 1;
	T = trans[1][1694] = settr(1910,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(1910,0,1689,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(1910,0,1692,0,0,"IF", 0, 2, 0);
	trans[1][1689]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][1691] = settr(1907,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1907,0,1690,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1690]	= settr(1906,0,1700,1412,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1695]	= settr(1911,0,1700,1,0,".(goto)", 0, 2, 0); /* m: 1700 -> 0,1704 */
	reached1[1700] = 1;
	trans[1][1692]	= settr(1908,0,1693,2,0,"else", 0, 2, 0);
	trans[1][1693]	= settr(1909,0,1704,1413,1413,"(1)", 0, 2, 0); /* m: 1700 -> 1704,0 */
	reached1[1700] = 1;
	trans[1][1700]	= settr(1916,0,1704,1414,1414,"j = (j+1)", 0, 2, 0);
	trans[1][1701]	= settr(1917,0,1702,2,0,"else", 0, 2, 0);
	trans[1][1702]	= settr(1918,0,1727,1415,1415,"j = 1", 0, 2, 0);
	trans[1][1703]	= settr(1919,0,1727,1,0,"goto :b15", 0, 2, 0);
	trans[1][1706]	= settr(1922,0,1727,1,0,"break", 0, 2, 0);
	trans[1][1728]	= settr(1944,0,1727,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1727] = settr(1943,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(1943,0,1708,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(1943,0,1724,0,0,"DO", 0, 2, 0);
	trans[1][1708]	= settr(1924,0,1721,1416,0,"((j<3))", 0, 2, 0);
	T = trans[1][1721] = settr(1937,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1937,0,1709,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1937,0,1712,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1937,0,1715,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1937,0,1718,0,0,"IF", 0, 2, 0);
	trans[1][1709]	= settr(1925,0,1711,1417,0,"((9==START))", 0, 2, 0);
	T = trans[ 1][1711] = settr(1927,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1927,0,1710,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1710]	= settr(1926,0,1723,1418,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1722]	= settr(1938,0,1723,1,0,".(goto)", 0, 2, 0); /* m: 1723 -> 0,1727 */
	reached1[1723] = 1;
	trans[1][1712]	= settr(1928,0,1714,1419,0,"((9==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1714] = settr(1930,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1930,0,1713,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1713]	= settr(1929,0,1723,1420,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1715]	= settr(1931,0,1717,1421,0,"((9==PAUSE))", 0, 2, 0);
	T = trans[ 1][1717] = settr(1933,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1933,0,1716,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1716]	= settr(1932,0,1723,1422,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1718]	= settr(1934,0,1720,1423,0,"((9==STOP))", 0, 2, 0);
	T = trans[ 1][1720] = settr(1936,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1936,0,1719,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1719]	= settr(1935,0,1723,1424,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1723]	= settr(1939,0,1727,1425,1425,"j = (j+1)", 0, 2, 0);
	trans[1][1724]	= settr(1940,0,1725,2,0,"else", 0, 2, 0);
	trans[1][1725]	= settr(1941,0,5700,1426,1426,"j = 1", 0, 2, 0);
	trans[1][1726]	= settr(1942,0,5700,1,0,"goto :b16", 0, 2, 0);
	trans[1][1729]	= settr(1945,0,5700,1,0,"break", 0, 2, 0);
	trans[1][5701]	= settr(5917,0,5700,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5700] = settr(5916,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5916,0,1737,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5916,0,4398,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5916,0,5698,0,0,"DO", 0, 2, 0);
	trans[1][1737]	= settr(1953,0,1738,1427,0,"((commands[0]==CONTINUE))", 1, 2, 0);
	trans[1][1738]	= settr(1954,0,4319,1428,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))", 1, 2, 0);
	T = trans[1][4319] = settr(4535,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4535,0,1739,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4535,0,3028,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4535,0,4317,0,0,"IF", 0, 2, 0);
	trans[1][1739]	= settr(1955,0,3027,1429,0,"((states[0]==STARTING))", 1, 2, 0);
	T = trans[ 1][3027] = settr(3243,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3243,0,1740,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1740]	= settr(1956,0,3026,1430,1430,"states[0] = 11", 1, 2, 0);
	T = trans[ 1][3026] = settr(3242,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3242,0,3024,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3024] = settr(3240,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3240,0,1741,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3240,0,2168,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3240,0,2595,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3240,0,3022,0,0,"IF", 0, 2, 0);
	trans[1][1741]	= settr(1957,0,2167,1431,0,"((11==RUNNING))", 0, 2, 0);
	T = trans[ 1][2167] = settr(2383,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2383,0,2165,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2165] = settr(2381,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2381,0,1742,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2381,0,1744,0,0,"IF", 0, 2, 0);
	trans[1][1742]	= settr(1958,0,1743,1432,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][1743]	= settr(1959,0,4397,1433,1433,"supervisor_started = 1", 1, 2, 0);
	trans[1][2166]	= settr(2382,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][1744]	= settr(1960,0,2163,2,0,"else", 0, 2, 0);
	T = trans[1][2163] = settr(2379,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2379,0,1745,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2379,0,2010,0,0,"IF", 0, 2, 0);
	trans[1][1745]	= settr(1961,0,2009,1434,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][2009] = settr(2225,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2225,0,2007,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2007] = settr(2223,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2223,0,1746,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2223,0,1876,0,0,"IF", 0, 2, 0);
	trans[1][1746]	= settr(1962,0,1875,1435,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][1875] = settr(2091,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2091,0,1872,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1873]	= settr(2089,0,1872,1,0,".(goto)", 0, 2, 0);
	T = trans[1][1872] = settr(2088,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2088,0,1747,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2088,0,1869,0,0,"DO", 0, 2, 0);
	trans[1][1747]	= settr(1963,0,1867,1436,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][1867] = settr(2083,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2083,0,1865,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1865] = settr(2081,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2081,0,1748,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2081,0,1778,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2081,0,1807,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2081,0,1836,0,0,"IF", 0, 2, 0);
	trans[1][1748]	= settr(1964,0,1777,1437,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][1777] = settr(1993,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1993,0,1768,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1768] = settr(1984,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(1984,2,1766,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1766] = settr(1982,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1982,2,1749,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1982,2,1752,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1982,2,1755,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1982,2,1758,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(1982,2,1761,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(1982,2,1764,0,0,"IF", 1, 2, 0);
	trans[1][1749]	= settr(1965,4,1769,1438,1438,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1750 -> 1769,0 */
	reached1[1750] = 1;
	trans[1][1750]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1751]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1767]	= settr(1983,0,1769,1439,1439,".(goto)", 1, 2, 0);
	trans[1][1752]	= settr(1968,4,1769,1440,1440,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1753 -> 1769,0 */
	reached1[1753] = 1;
	trans[1][1753]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1754]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1755]	= settr(1971,4,1769,1441,1441,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1756 -> 1769,0 */
	reached1[1756] = 1;
	trans[1][1756]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1757]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1758]	= settr(1974,4,1769,1442,1442,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1759 -> 1769,0 */
	reached1[1759] = 1;
	trans[1][1759]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1760]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1761]	= settr(1977,4,1769,1443,1443,"((START==ABORT))", 1, 2, 0); /* m: 1762 -> 1769,0 */
	reached1[1762] = 1;
	trans[1][1762]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1763]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1764]	= settr(1980,2,1765,2,0,"else", 1, 2, 0);
	trans[1][1765]	= settr(1981,4,1769,1444,1444,"(1)", 1, 2, 0); /* m: 1767 -> 1769,0 */
	reached1[1767] = 1;
	trans[1][1769]	= settr(1985,0,1775,1445,1445,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1775] = settr(1991,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(1991,0,1770,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(1991,0,1773,0,0,"IF", 0, 2, 0);
	trans[1][1770]	= settr(1986,0,1772,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1772] = settr(1988,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(1988,0,1771,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1771]	= settr(1987,0,1868,1446,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1776]	= settr(1992,0,1868,1,0,".(goto)", 0, 2, 0); /* m: 1868 -> 0,1872 */
	reached1[1868] = 1;
	trans[1][1773]	= settr(1989,0,1774,2,0,"else", 0, 2, 0);
	trans[1][1774]	= settr(1990,0,1872,1447,1447,"(1)", 0, 2, 0); /* m: 1868 -> 1872,0 */
	reached1[1868] = 1;
	trans[1][1866]	= settr(2082,0,1868,1,0,".(goto)", 0, 2, 0); /* m: 1868 -> 0,1872 */
	reached1[1868] = 1;
	trans[1][1778]	= settr(1994,0,1806,1448,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][1806] = settr(2022,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2022,0,1798,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1798] = settr(2014,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2014,2,1796,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1796] = settr(2012,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2012,2,1779,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2012,2,1782,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2012,2,1785,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2012,2,1788,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2012,2,1791,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2012,2,1794,0,0,"IF", 1, 2, 0);
	trans[1][1779]	= settr(1995,4,1804,1449,1449,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1780 -> 1804,0 */
	reached1[1780] = 1;
	trans[1][1780]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1781]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1797]	= settr(2013,0,1804,1450,1450,".(goto)", 1, 2, 0);
	trans[1][1782]	= settr(1998,4,1804,1451,1451,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1783 -> 1804,0 */
	reached1[1783] = 1;
	trans[1][1783]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1784]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1785]	= settr(2001,4,1804,1452,1452,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1786 -> 1804,0 */
	reached1[1786] = 1;
	trans[1][1786]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1787]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1788]	= settr(2004,4,1804,1453,1453,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1789 -> 1804,0 */
	reached1[1789] = 1;
	trans[1][1789]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1790]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1791]	= settr(2007,4,1804,1454,1454,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1792 -> 1804,0 */
	reached1[1792] = 1;
	trans[1][1792]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1793]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1794]	= settr(2010,2,1795,2,0,"else", 1, 2, 0);
	trans[1][1795]	= settr(2011,4,1804,1455,1455,"(1)", 1, 2, 0); /* m: 1797 -> 1804,0 */
	reached1[1797] = 1;
	T = trans[1][1804] = settr(2020,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2020,0,1799,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2020,0,1802,0,0,"IF", 0, 2, 0);
	trans[1][1799]	= settr(2015,0,1801,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1801] = settr(2017,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2017,0,1800,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1800]	= settr(2016,0,1868,1456,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1805]	= settr(2021,0,1868,1,0,".(goto)", 0, 2, 0); /* m: 1868 -> 0,1872 */
	reached1[1868] = 1;
	trans[1][1802]	= settr(2018,0,1803,2,0,"else", 0, 2, 0);
	trans[1][1803]	= settr(2019,0,1872,1457,1457,"(1)", 0, 2, 0); /* m: 1868 -> 1872,0 */
	reached1[1868] = 1;
	trans[1][1807]	= settr(2023,0,1835,1458,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1835] = settr(2051,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2051,0,1827,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1827] = settr(2043,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2043,2,1825,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1825] = settr(2041,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2041,2,1808,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2041,2,1811,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2041,2,1814,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2041,2,1817,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2041,2,1820,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2041,2,1823,0,0,"IF", 1, 2, 0);
	trans[1][1808]	= settr(2024,4,1833,1459,1459,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1809 -> 1833,0 */
	reached1[1809] = 1;
	trans[1][1809]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1810]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1826]	= settr(2042,0,1833,1460,1460,".(goto)", 1, 2, 0);
	trans[1][1811]	= settr(2027,4,1833,1461,1461,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1812 -> 1833,0 */
	reached1[1812] = 1;
	trans[1][1812]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1813]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1814]	= settr(2030,4,1833,1462,1462,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1815 -> 1833,0 */
	reached1[1815] = 1;
	trans[1][1815]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1816]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1817]	= settr(2033,4,1833,1463,1463,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1818 -> 1833,0 */
	reached1[1818] = 1;
	trans[1][1818]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1819]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1820]	= settr(2036,4,1833,1464,1464,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1821 -> 1833,0 */
	reached1[1821] = 1;
	trans[1][1821]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1822]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1823]	= settr(2039,2,1824,2,0,"else", 1, 2, 0);
	trans[1][1824]	= settr(2040,4,1833,1465,1465,"(1)", 1, 2, 0); /* m: 1826 -> 1833,0 */
	reached1[1826] = 1;
	T = trans[1][1833] = settr(2049,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2049,0,1828,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2049,0,1831,0,0,"IF", 0, 2, 0);
	trans[1][1828]	= settr(2044,0,1830,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1830] = settr(2046,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2046,0,1829,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1829]	= settr(2045,0,1868,1466,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1834]	= settr(2050,0,1868,1,0,".(goto)", 0, 2, 0); /* m: 1868 -> 0,1872 */
	reached1[1868] = 1;
	trans[1][1831]	= settr(2047,0,1832,2,0,"else", 0, 2, 0);
	trans[1][1832]	= settr(2048,0,1872,1467,1467,"(1)", 0, 2, 0); /* m: 1868 -> 1872,0 */
	reached1[1868] = 1;
	trans[1][1836]	= settr(2052,0,1864,1468,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][1864] = settr(2080,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2080,0,1856,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1856] = settr(2072,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2072,2,1854,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1854] = settr(2070,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2070,2,1837,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2070,2,1840,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2070,2,1843,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2070,2,1846,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2070,2,1849,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2070,2,1852,0,0,"IF", 1, 2, 0);
	trans[1][1837]	= settr(2053,4,1862,1469,1469,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1838 -> 1862,0 */
	reached1[1838] = 1;
	trans[1][1838]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1839]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1855]	= settr(2071,0,1862,1470,1470,".(goto)", 1, 2, 0);
	trans[1][1840]	= settr(2056,4,1862,1471,1471,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1841 -> 1862,0 */
	reached1[1841] = 1;
	trans[1][1841]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1842]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1843]	= settr(2059,4,1862,1472,1472,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1844 -> 1862,0 */
	reached1[1844] = 1;
	trans[1][1844]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1845]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1846]	= settr(2062,4,1862,1473,1473,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1847 -> 1862,0 */
	reached1[1847] = 1;
	trans[1][1847]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1848]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1849]	= settr(2065,4,1862,1474,1474,"((STOP==ABORT))", 1, 2, 0); /* m: 1850 -> 1862,0 */
	reached1[1850] = 1;
	trans[1][1850]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1851]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1852]	= settr(2068,2,1853,2,0,"else", 1, 2, 0);
	trans[1][1853]	= settr(2069,4,1862,1475,1475,"(1)", 1, 2, 0); /* m: 1855 -> 1862,0 */
	reached1[1855] = 1;
	T = trans[1][1862] = settr(2078,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2078,0,1857,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2078,0,1860,0,0,"IF", 0, 2, 0);
	trans[1][1857]	= settr(2073,0,1859,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1859] = settr(2075,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2075,0,1858,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1858]	= settr(2074,0,1868,1476,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1863]	= settr(2079,0,1868,1,0,".(goto)", 0, 2, 0); /* m: 1868 -> 0,1872 */
	reached1[1868] = 1;
	trans[1][1860]	= settr(2076,0,1861,2,0,"else", 0, 2, 0);
	trans[1][1861]	= settr(2077,0,1872,1477,1477,"(1)", 0, 2, 0); /* m: 1868 -> 1872,0 */
	reached1[1868] = 1;
	trans[1][1868]	= settr(2084,0,1872,1478,1478,"j = (j+1)", 0, 2, 0);
	trans[1][1869]	= settr(2085,0,1870,2,0,"else", 0, 2, 0);
	trans[1][1870]	= settr(2086,0,4397,1479,1479,"j = 1", 0, 2, 0);
	trans[1][1871]	= settr(2087,0,4397,1,0,"goto :b18", 0, 2, 0);
	trans[1][1874]	= settr(2090,0,4397,1,0,"break", 0, 2, 0);
	trans[1][2008]	= settr(2224,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][1876]	= settr(2092,0,2006,2,0,"else", 0, 2, 0);
	T = trans[ 1][2006] = settr(2222,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2222,0,1877,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1877]	= settr(2093,0,2003,1480,1480,"j = (3-1)", 0, 2, 0);
	trans[1][2004]	= settr(2220,0,2003,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2003] = settr(2219,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2219,0,1878,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2219,0,2000,0,0,"DO", 0, 2, 0);
	trans[1][1878]	= settr(2094,0,1998,1481,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][1998] = settr(2214,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2214,0,1996,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][1996] = settr(2212,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2212,0,1879,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2212,0,1909,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2212,0,1938,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2212,0,1967,0,0,"IF", 0, 2, 0);
	trans[1][1879]	= settr(2095,0,1908,1482,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][1908] = settr(2124,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2124,0,1899,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1899] = settr(2115,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2115,2,1897,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1897] = settr(2113,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2113,2,1880,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2113,2,1883,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2113,2,1886,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2113,2,1889,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2113,2,1892,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2113,2,1895,0,0,"IF", 1, 2, 0);
	trans[1][1880]	= settr(2096,4,1900,1483,1483,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1881 -> 1900,0 */
	reached1[1881] = 1;
	trans[1][1881]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1882]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1898]	= settr(2114,0,1900,1484,1484,".(goto)", 1, 2, 0);
	trans[1][1883]	= settr(2099,4,1900,1485,1485,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1884 -> 1900,0 */
	reached1[1884] = 1;
	trans[1][1884]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1885]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1886]	= settr(2102,4,1900,1486,1486,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1887 -> 1900,0 */
	reached1[1887] = 1;
	trans[1][1887]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1888]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1889]	= settr(2105,4,1900,1487,1487,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1890 -> 1900,0 */
	reached1[1890] = 1;
	trans[1][1890]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1891]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1892]	= settr(2108,4,1900,1488,1488,"((START==ABORT))", 1, 2, 0); /* m: 1893 -> 1900,0 */
	reached1[1893] = 1;
	trans[1][1893]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1894]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1895]	= settr(2111,2,1896,2,0,"else", 1, 2, 0);
	trans[1][1896]	= settr(2112,4,1900,1489,1489,"(1)", 1, 2, 0); /* m: 1898 -> 1900,0 */
	reached1[1898] = 1;
	trans[1][1900]	= settr(2116,0,1906,1490,1490,"(run Thread(j))", 0, 2, 0);
	T = trans[1][1906] = settr(2122,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2122,0,1901,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2122,0,1904,0,0,"IF", 0, 2, 0);
	trans[1][1901]	= settr(2117,0,1903,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1903] = settr(2119,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2119,0,1902,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1902]	= settr(2118,0,1999,1491,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1907]	= settr(2123,0,1999,1,0,".(goto)", 0, 2, 0); /* m: 1999 -> 0,2003 */
	reached1[1999] = 1;
	trans[1][1904]	= settr(2120,0,1905,2,0,"else", 0, 2, 0);
	trans[1][1905]	= settr(2121,0,2003,1492,1492,"(1)", 0, 2, 0); /* m: 1999 -> 2003,0 */
	reached1[1999] = 1;
	trans[1][1997]	= settr(2213,0,1999,1,0,".(goto)", 0, 2, 0); /* m: 1999 -> 0,2003 */
	reached1[1999] = 1;
	trans[1][1909]	= settr(2125,0,1937,1493,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][1937] = settr(2153,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2153,0,1929,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1929] = settr(2145,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2145,2,1927,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1927] = settr(2143,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2143,2,1910,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2143,2,1913,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2143,2,1916,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2143,2,1919,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2143,2,1922,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2143,2,1925,0,0,"IF", 1, 2, 0);
	trans[1][1910]	= settr(2126,4,1935,1494,1494,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1911 -> 1935,0 */
	reached1[1911] = 1;
	trans[1][1911]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1912]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1928]	= settr(2144,0,1935,1495,1495,".(goto)", 1, 2, 0);
	trans[1][1913]	= settr(2129,4,1935,1496,1496,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1914 -> 1935,0 */
	reached1[1914] = 1;
	trans[1][1914]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1915]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1916]	= settr(2132,4,1935,1497,1497,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1917 -> 1935,0 */
	reached1[1917] = 1;
	trans[1][1917]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1918]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1919]	= settr(2135,4,1935,1498,1498,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1920 -> 1935,0 */
	reached1[1920] = 1;
	trans[1][1920]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1921]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1922]	= settr(2138,4,1935,1499,1499,"((PAUSE==ABORT))", 1, 2, 0); /* m: 1923 -> 1935,0 */
	reached1[1923] = 1;
	trans[1][1923]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1924]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1925]	= settr(2141,2,1926,2,0,"else", 1, 2, 0);
	trans[1][1926]	= settr(2142,4,1935,1500,1500,"(1)", 1, 2, 0); /* m: 1928 -> 1935,0 */
	reached1[1928] = 1;
	T = trans[1][1935] = settr(2151,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2151,0,1930,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2151,0,1933,0,0,"IF", 0, 2, 0);
	trans[1][1930]	= settr(2146,0,1932,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1932] = settr(2148,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2148,0,1931,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1931]	= settr(2147,0,1999,1501,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1936]	= settr(2152,0,1999,1,0,".(goto)", 0, 2, 0); /* m: 1999 -> 0,2003 */
	reached1[1999] = 1;
	trans[1][1933]	= settr(2149,0,1934,2,0,"else", 0, 2, 0);
	trans[1][1934]	= settr(2150,0,2003,1502,1502,"(1)", 0, 2, 0); /* m: 1999 -> 2003,0 */
	reached1[1999] = 1;
	trans[1][1938]	= settr(2154,0,1966,1503,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][1966] = settr(2182,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2182,0,1958,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1958] = settr(2174,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2174,2,1956,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1956] = settr(2172,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2172,2,1939,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2172,2,1942,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2172,2,1945,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2172,2,1948,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2172,2,1951,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2172,2,1954,0,0,"IF", 1, 2, 0);
	trans[1][1939]	= settr(2155,4,1964,1504,1504,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1940 -> 1964,0 */
	reached1[1940] = 1;
	trans[1][1940]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1941]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1957]	= settr(2173,0,1964,1505,1505,".(goto)", 1, 2, 0);
	trans[1][1942]	= settr(2158,4,1964,1506,1506,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1943 -> 1964,0 */
	reached1[1943] = 1;
	trans[1][1943]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1944]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1945]	= settr(2161,4,1964,1507,1507,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1946 -> 1964,0 */
	reached1[1946] = 1;
	trans[1][1946]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1947]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1948]	= settr(2164,4,1964,1508,1508,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1949 -> 1964,0 */
	reached1[1949] = 1;
	trans[1][1949]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1950]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1951]	= settr(2167,4,1964,1509,1509,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 1952 -> 1964,0 */
	reached1[1952] = 1;
	trans[1][1952]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1953]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1954]	= settr(2170,2,1955,2,0,"else", 1, 2, 0);
	trans[1][1955]	= settr(2171,4,1964,1510,1510,"(1)", 1, 2, 0); /* m: 1957 -> 1964,0 */
	reached1[1957] = 1;
	T = trans[1][1964] = settr(2180,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2180,0,1959,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2180,0,1962,0,0,"IF", 0, 2, 0);
	trans[1][1959]	= settr(2175,0,1961,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1961] = settr(2177,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2177,0,1960,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1960]	= settr(2176,0,1999,1511,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1965]	= settr(2181,0,1999,1,0,".(goto)", 0, 2, 0); /* m: 1999 -> 0,2003 */
	reached1[1999] = 1;
	trans[1][1962]	= settr(2178,0,1963,2,0,"else", 0, 2, 0);
	trans[1][1963]	= settr(2179,0,2003,1512,1512,"(1)", 0, 2, 0); /* m: 1999 -> 2003,0 */
	reached1[1999] = 1;
	trans[1][1967]	= settr(2183,0,1995,1513,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][1995] = settr(2211,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2211,0,1987,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][1987] = settr(2203,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2203,2,1985,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][1985] = settr(2201,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2201,2,1968,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2201,2,1971,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2201,2,1974,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2201,2,1977,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2201,2,1980,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2201,2,1983,0,0,"IF", 1, 2, 0);
	trans[1][1968]	= settr(2184,4,1993,1514,1514,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1969 -> 1993,0 */
	reached1[1969] = 1;
	trans[1][1969]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][1970]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][1986]	= settr(2202,0,1993,1515,1515,".(goto)", 1, 2, 0);
	trans[1][1971]	= settr(2187,4,1993,1516,1516,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 1972 -> 1993,0 */
	reached1[1972] = 1;
	trans[1][1972]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][1973]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][1974]	= settr(2190,4,1993,1517,1517,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1975 -> 1993,0 */
	reached1[1975] = 1;
	trans[1][1975]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][1976]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][1977]	= settr(2193,4,1993,1518,1518,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 1978 -> 1993,0 */
	reached1[1978] = 1;
	trans[1][1978]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][1979]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][1980]	= settr(2196,4,1993,1519,1519,"((STOP==ABORT))", 1, 2, 0); /* m: 1981 -> 1993,0 */
	reached1[1981] = 1;
	trans[1][1981]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][1982]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][1983]	= settr(2199,2,1984,2,0,"else", 1, 2, 0);
	trans[1][1984]	= settr(2200,4,1993,1520,1520,"(1)", 1, 2, 0); /* m: 1986 -> 1993,0 */
	reached1[1986] = 1;
	T = trans[1][1993] = settr(2209,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2209,0,1988,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2209,0,1991,0,0,"IF", 0, 2, 0);
	trans[1][1988]	= settr(2204,0,1990,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][1990] = settr(2206,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2206,0,1989,0,0,"sub-sequence", 0, 2, 0);
	trans[1][1989]	= settr(2205,0,1999,1521,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][1994]	= settr(2210,0,1999,1,0,".(goto)", 0, 2, 0); /* m: 1999 -> 0,2003 */
	reached1[1999] = 1;
	trans[1][1991]	= settr(2207,0,1992,2,0,"else", 0, 2, 0);
	trans[1][1992]	= settr(2208,0,2003,1522,1522,"(1)", 0, 2, 0); /* m: 1999 -> 2003,0 */
	reached1[1999] = 1;
	trans[1][1999]	= settr(2215,0,2003,1523,1523,"j = (j-1)", 0, 2, 0);
	trans[1][2000]	= settr(2216,0,2001,2,0,"else", 0, 2, 0);
	trans[1][2001]	= settr(2217,0,4397,1524,1524,"j = 1", 0, 2, 0);
	trans[1][2002]	= settr(2218,0,4397,1,0,"goto :b19", 0, 2, 0);
	trans[1][2005]	= settr(2221,0,4397,1,0,"break", 0, 2, 0);
	trans[1][2164]	= settr(2380,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2010]	= settr(2226,0,2162,2,0,"else", 0, 2, 0);
	T = trans[ 1][2162] = settr(2378,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2378,0,2139,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2139] = settr(2355,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2355,0,2136,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2137]	= settr(2353,0,2136,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2136] = settr(2352,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2352,0,2011,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2352,0,2133,0,0,"DO", 0, 2, 0);
	trans[1][2011]	= settr(2227,0,2131,1525,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][2131] = settr(2347,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2347,0,2129,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2129] = settr(2345,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2345,0,2012,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2345,0,2042,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2345,0,2071,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2345,0,2100,0,0,"IF", 0, 2, 0);
	trans[1][2012]	= settr(2228,0,2041,1526,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][2041] = settr(2257,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2257,0,2032,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2032] = settr(2248,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2248,2,2030,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2030] = settr(2246,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2246,2,2013,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2246,2,2016,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2246,2,2019,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2246,2,2022,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2246,2,2025,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2246,2,2028,0,0,"IF", 1, 2, 0);
	trans[1][2013]	= settr(2229,4,2033,1527,1527,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2014 -> 2033,0 */
	reached1[2014] = 1;
	trans[1][2014]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2015]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2031]	= settr(2247,0,2033,1528,1528,".(goto)", 1, 2, 0);
	trans[1][2016]	= settr(2232,4,2033,1529,1529,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2017 -> 2033,0 */
	reached1[2017] = 1;
	trans[1][2017]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2018]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2019]	= settr(2235,4,2033,1530,1530,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2020 -> 2033,0 */
	reached1[2020] = 1;
	trans[1][2020]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2021]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2022]	= settr(2238,4,2033,1531,1531,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2023 -> 2033,0 */
	reached1[2023] = 1;
	trans[1][2023]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2024]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2025]	= settr(2241,4,2033,1532,1532,"((START==ABORT))", 1, 2, 0); /* m: 2026 -> 2033,0 */
	reached1[2026] = 1;
	trans[1][2026]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2027]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2028]	= settr(2244,2,2029,2,0,"else", 1, 2, 0);
	trans[1][2029]	= settr(2245,4,2033,1533,1533,"(1)", 1, 2, 0); /* m: 2031 -> 2033,0 */
	reached1[2031] = 1;
	trans[1][2033]	= settr(2249,0,2039,1534,1534,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2039] = settr(2255,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2255,0,2034,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2255,0,2037,0,0,"IF", 0, 2, 0);
	trans[1][2034]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2036] = settr(2252,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2252,0,2035,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2035]	= settr(2251,0,2132,1535,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2040]	= settr(2256,0,2132,1,0,".(goto)", 0, 2, 0); /* m: 2132 -> 0,2136 */
	reached1[2132] = 1;
	trans[1][2037]	= settr(2253,0,2038,2,0,"else", 0, 2, 0);
	trans[1][2038]	= settr(2254,0,2136,1536,1536,"(1)", 0, 2, 0); /* m: 2132 -> 2136,0 */
	reached1[2132] = 1;
	trans[1][2130]	= settr(2346,0,2132,1,0,".(goto)", 0, 2, 0); /* m: 2132 -> 0,2136 */
	reached1[2132] = 1;
	trans[1][2042]	= settr(2258,0,2070,1537,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][2070] = settr(2286,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2286,0,2062,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2062] = settr(2278,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2278,2,2060,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2060] = settr(2276,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2276,2,2043,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2276,2,2046,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2276,2,2049,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2276,2,2052,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2276,2,2055,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2276,2,2058,0,0,"IF", 1, 2, 0);
	trans[1][2043]	= settr(2259,4,2068,1538,1538,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2044 -> 2068,0 */
	reached1[2044] = 1;
	trans[1][2044]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2045]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2061]	= settr(2277,0,2068,1539,1539,".(goto)", 1, 2, 0);
	trans[1][2046]	= settr(2262,4,2068,1540,1540,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2047 -> 2068,0 */
	reached1[2047] = 1;
	trans[1][2047]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2048]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2049]	= settr(2265,4,2068,1541,1541,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2050 -> 2068,0 */
	reached1[2050] = 1;
	trans[1][2050]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2051]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2052]	= settr(2268,4,2068,1542,1542,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2053 -> 2068,0 */
	reached1[2053] = 1;
	trans[1][2053]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2054]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2055]	= settr(2271,4,2068,1543,1543,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2056 -> 2068,0 */
	reached1[2056] = 1;
	trans[1][2056]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2057]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2058]	= settr(2274,2,2059,2,0,"else", 1, 2, 0);
	trans[1][2059]	= settr(2275,4,2068,1544,1544,"(1)", 1, 2, 0); /* m: 2061 -> 2068,0 */
	reached1[2061] = 1;
	T = trans[1][2068] = settr(2284,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2284,0,2063,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2284,0,2066,0,0,"IF", 0, 2, 0);
	trans[1][2063]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2065] = settr(2281,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2281,0,2064,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2064]	= settr(2280,0,2132,1545,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2069]	= settr(2285,0,2132,1,0,".(goto)", 0, 2, 0); /* m: 2132 -> 0,2136 */
	reached1[2132] = 1;
	trans[1][2066]	= settr(2282,0,2067,2,0,"else", 0, 2, 0);
	trans[1][2067]	= settr(2283,0,2136,1546,1546,"(1)", 0, 2, 0); /* m: 2132 -> 2136,0 */
	reached1[2132] = 1;
	trans[1][2071]	= settr(2287,0,2099,1547,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2099] = settr(2315,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2315,0,2091,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2091] = settr(2307,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2307,2,2089,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2089] = settr(2305,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2305,2,2072,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2305,2,2075,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2305,2,2078,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2305,2,2081,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2305,2,2084,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2305,2,2087,0,0,"IF", 1, 2, 0);
	trans[1][2072]	= settr(2288,4,2097,1548,1548,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2073 -> 2097,0 */
	reached1[2073] = 1;
	trans[1][2073]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2074]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2090]	= settr(2306,0,2097,1549,1549,".(goto)", 1, 2, 0);
	trans[1][2075]	= settr(2291,4,2097,1550,1550,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2076 -> 2097,0 */
	reached1[2076] = 1;
	trans[1][2076]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2077]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2078]	= settr(2294,4,2097,1551,1551,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2079 -> 2097,0 */
	reached1[2079] = 1;
	trans[1][2079]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2080]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2081]	= settr(2297,4,2097,1552,1552,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2082 -> 2097,0 */
	reached1[2082] = 1;
	trans[1][2082]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2083]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2084]	= settr(2300,4,2097,1553,1553,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2085 -> 2097,0 */
	reached1[2085] = 1;
	trans[1][2085]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2086]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2087]	= settr(2303,2,2088,2,0,"else", 1, 2, 0);
	trans[1][2088]	= settr(2304,4,2097,1554,1554,"(1)", 1, 2, 0); /* m: 2090 -> 2097,0 */
	reached1[2090] = 1;
	T = trans[1][2097] = settr(2313,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2313,0,2092,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2313,0,2095,0,0,"IF", 0, 2, 0);
	trans[1][2092]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2094] = settr(2310,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2310,0,2093,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2093]	= settr(2309,0,2132,1555,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2098]	= settr(2314,0,2132,1,0,".(goto)", 0, 2, 0); /* m: 2132 -> 0,2136 */
	reached1[2132] = 1;
	trans[1][2095]	= settr(2311,0,2096,2,0,"else", 0, 2, 0);
	trans[1][2096]	= settr(2312,0,2136,1556,1556,"(1)", 0, 2, 0); /* m: 2132 -> 2136,0 */
	reached1[2132] = 1;
	trans[1][2100]	= settr(2316,0,2128,1557,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][2128] = settr(2344,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2344,0,2120,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2120] = settr(2336,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2336,2,2118,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2118] = settr(2334,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2334,2,2101,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2334,2,2104,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2334,2,2107,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2334,2,2110,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2334,2,2113,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2334,2,2116,0,0,"IF", 1, 2, 0);
	trans[1][2101]	= settr(2317,4,2126,1558,1558,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2102 -> 2126,0 */
	reached1[2102] = 1;
	trans[1][2102]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2103]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2119]	= settr(2335,0,2126,1559,1559,".(goto)", 1, 2, 0);
	trans[1][2104]	= settr(2320,4,2126,1560,1560,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2105 -> 2126,0 */
	reached1[2105] = 1;
	trans[1][2105]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2106]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2107]	= settr(2323,4,2126,1561,1561,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2108 -> 2126,0 */
	reached1[2108] = 1;
	trans[1][2108]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2109]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2110]	= settr(2326,4,2126,1562,1562,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2111 -> 2126,0 */
	reached1[2111] = 1;
	trans[1][2111]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2112]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2113]	= settr(2329,4,2126,1563,1563,"((STOP==ABORT))", 1, 2, 0); /* m: 2114 -> 2126,0 */
	reached1[2114] = 1;
	trans[1][2114]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2115]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2116]	= settr(2332,2,2117,2,0,"else", 1, 2, 0);
	trans[1][2117]	= settr(2333,4,2126,1564,1564,"(1)", 1, 2, 0); /* m: 2119 -> 2126,0 */
	reached1[2119] = 1;
	T = trans[1][2126] = settr(2342,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2342,0,2121,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2342,0,2124,0,0,"IF", 0, 2, 0);
	trans[1][2121]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2123] = settr(2339,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2339,0,2122,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2122]	= settr(2338,0,2132,1565,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2127]	= settr(2343,0,2132,1,0,".(goto)", 0, 2, 0); /* m: 2132 -> 0,2136 */
	reached1[2132] = 1;
	trans[1][2124]	= settr(2340,0,2125,2,0,"else", 0, 2, 0);
	trans[1][2125]	= settr(2341,0,2136,1566,1566,"(1)", 0, 2, 0); /* m: 2132 -> 2136,0 */
	reached1[2132] = 1;
	trans[1][2132]	= settr(2348,0,2136,1567,1567,"j = (j+1)", 0, 2, 0);
	trans[1][2133]	= settr(2349,0,2134,2,0,"else", 0, 2, 0);
	trans[1][2134]	= settr(2350,0,2159,1568,1568,"j = 1", 0, 2, 0);
	trans[1][2135]	= settr(2351,0,2159,1,0,"goto :b20", 0, 2, 0);
	trans[1][2138]	= settr(2354,0,2159,1,0,"break", 0, 2, 0);
	trans[1][2160]	= settr(2376,0,2159,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2159] = settr(2375,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2375,0,2140,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2375,0,2156,0,0,"DO", 0, 2, 0);
	trans[1][2140]	= settr(2356,0,2153,1569,0,"((j<3))", 0, 2, 0);
	T = trans[1][2153] = settr(2369,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2369,0,2141,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2369,0,2144,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2369,0,2147,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2369,0,2150,0,0,"IF", 0, 2, 0);
	trans[1][2141]	= settr(2357,0,2143,1570,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][2143] = settr(2359,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2359,0,2142,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2142]	= settr(2358,0,2155,1571,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2154]	= settr(2370,0,2155,1,0,".(goto)", 0, 2, 0); /* m: 2155 -> 0,2159 */
	reached1[2155] = 1;
	trans[1][2144]	= settr(2360,0,2146,1572,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2146] = settr(2362,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2362,0,2145,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2145]	= settr(2361,0,2155,1573,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2147]	= settr(2363,0,2149,1574,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][2149] = settr(2365,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2365,0,2148,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2148]	= settr(2364,0,2155,1575,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2150]	= settr(2366,0,2152,1576,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][2152] = settr(2368,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2368,0,2151,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2151]	= settr(2367,0,2155,1577,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2155]	= settr(2371,0,2159,1578,1578,"j = (j+1)", 0, 2, 0);
	trans[1][2156]	= settr(2372,0,2157,2,0,"else", 0, 2, 0);
	trans[1][2157]	= settr(2373,0,4397,1579,1579,"j = 1", 0, 2, 0);
	trans[1][2158]	= settr(2374,0,4397,1,0,"goto :b21", 0, 2, 0);
	trans[1][2161]	= settr(2377,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3025]	= settr(3241,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2168]	= settr(2384,0,2594,1580,0,"((11==PAUSED))", 0, 2, 0);
	T = trans[ 1][2594] = settr(2810,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2810,0,2592,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2592] = settr(2808,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2808,0,2169,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2808,0,2171,0,0,"IF", 0, 2, 0);
	trans[1][2169]	= settr(2385,0,2170,1581,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][2170]	= settr(2386,0,4397,1582,1582,"supervisor_started = 1", 1, 2, 0);
	trans[1][2593]	= settr(2809,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2171]	= settr(2387,0,2590,2,0,"else", 0, 2, 0);
	T = trans[1][2590] = settr(2806,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2806,0,2172,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2806,0,2437,0,0,"IF", 0, 2, 0);
	trans[1][2172]	= settr(2388,0,2436,1583,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][2436] = settr(2652,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2652,0,2434,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2434] = settr(2650,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2650,0,2173,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2650,0,2303,0,0,"IF", 0, 2, 0);
	trans[1][2173]	= settr(2389,0,2302,1584,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][2302] = settr(2518,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2518,0,2299,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2300]	= settr(2516,0,2299,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2299] = settr(2515,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2515,0,2174,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2515,0,2296,0,0,"DO", 0, 2, 0);
	trans[1][2174]	= settr(2390,0,2294,1585,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][2294] = settr(2510,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2510,0,2292,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2292] = settr(2508,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2508,0,2175,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2508,0,2205,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2508,0,2234,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2508,0,2263,0,0,"IF", 0, 2, 0);
	trans[1][2175]	= settr(2391,0,2204,1586,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][2204] = settr(2420,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2420,0,2195,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2195] = settr(2411,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2411,2,2193,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2193] = settr(2409,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2409,2,2176,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2409,2,2179,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2409,2,2182,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2409,2,2185,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2409,2,2188,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2409,2,2191,0,0,"IF", 1, 2, 0);
	trans[1][2176]	= settr(2392,4,2196,1587,1587,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2177 -> 2196,0 */
	reached1[2177] = 1;
	trans[1][2177]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2178]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2194]	= settr(2410,0,2196,1588,1588,".(goto)", 1, 2, 0);
	trans[1][2179]	= settr(2395,4,2196,1589,1589,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2180 -> 2196,0 */
	reached1[2180] = 1;
	trans[1][2180]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2181]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2182]	= settr(2398,4,2196,1590,1590,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2183 -> 2196,0 */
	reached1[2183] = 1;
	trans[1][2183]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2184]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2185]	= settr(2401,4,2196,1591,1591,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2186 -> 2196,0 */
	reached1[2186] = 1;
	trans[1][2186]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2187]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2188]	= settr(2404,4,2196,1592,1592,"((START==ABORT))", 1, 2, 0); /* m: 2189 -> 2196,0 */
	reached1[2189] = 1;
	trans[1][2189]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2190]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2191]	= settr(2407,2,2192,2,0,"else", 1, 2, 0);
	trans[1][2192]	= settr(2408,4,2196,1593,1593,"(1)", 1, 2, 0); /* m: 2194 -> 2196,0 */
	reached1[2194] = 1;
	trans[1][2196]	= settr(2412,0,2202,1594,1594,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2202] = settr(2418,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2418,0,2197,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2418,0,2200,0,0,"IF", 0, 2, 0);
	trans[1][2197]	= settr(2413,0,2199,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2199] = settr(2415,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2415,0,2198,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2198]	= settr(2414,0,2295,1595,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2203]	= settr(2419,0,2295,1,0,".(goto)", 0, 2, 0); /* m: 2295 -> 0,2299 */
	reached1[2295] = 1;
	trans[1][2200]	= settr(2416,0,2201,2,0,"else", 0, 2, 0);
	trans[1][2201]	= settr(2417,0,2299,1596,1596,"(1)", 0, 2, 0); /* m: 2295 -> 2299,0 */
	reached1[2295] = 1;
	trans[1][2293]	= settr(2509,0,2295,1,0,".(goto)", 0, 2, 0); /* m: 2295 -> 0,2299 */
	reached1[2295] = 1;
	trans[1][2205]	= settr(2421,0,2233,1597,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][2233] = settr(2449,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2449,0,2225,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2225] = settr(2441,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2441,2,2223,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2223] = settr(2439,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2439,2,2206,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2439,2,2209,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2439,2,2212,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2439,2,2215,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2439,2,2218,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2439,2,2221,0,0,"IF", 1, 2, 0);
	trans[1][2206]	= settr(2422,4,2231,1598,1598,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2207 -> 2231,0 */
	reached1[2207] = 1;
	trans[1][2207]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2208]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2224]	= settr(2440,0,2231,1599,1599,".(goto)", 1, 2, 0);
	trans[1][2209]	= settr(2425,4,2231,1600,1600,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2210 -> 2231,0 */
	reached1[2210] = 1;
	trans[1][2210]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2211]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2212]	= settr(2428,4,2231,1601,1601,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2213 -> 2231,0 */
	reached1[2213] = 1;
	trans[1][2213]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2214]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2215]	= settr(2431,4,2231,1602,1602,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2216 -> 2231,0 */
	reached1[2216] = 1;
	trans[1][2216]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2217]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2218]	= settr(2434,4,2231,1603,1603,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2219 -> 2231,0 */
	reached1[2219] = 1;
	trans[1][2219]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2220]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2221]	= settr(2437,2,2222,2,0,"else", 1, 2, 0);
	trans[1][2222]	= settr(2438,4,2231,1604,1604,"(1)", 1, 2, 0); /* m: 2224 -> 2231,0 */
	reached1[2224] = 1;
	T = trans[1][2231] = settr(2447,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2447,0,2226,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2447,0,2229,0,0,"IF", 0, 2, 0);
	trans[1][2226]	= settr(2442,0,2228,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2228] = settr(2444,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2444,0,2227,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2227]	= settr(2443,0,2295,1605,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2232]	= settr(2448,0,2295,1,0,".(goto)", 0, 2, 0); /* m: 2295 -> 0,2299 */
	reached1[2295] = 1;
	trans[1][2229]	= settr(2445,0,2230,2,0,"else", 0, 2, 0);
	trans[1][2230]	= settr(2446,0,2299,1606,1606,"(1)", 0, 2, 0); /* m: 2295 -> 2299,0 */
	reached1[2295] = 1;
	trans[1][2234]	= settr(2450,0,2262,1607,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2262] = settr(2478,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2478,0,2254,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2254] = settr(2470,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2470,2,2252,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2252] = settr(2468,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2468,2,2235,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2468,2,2238,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2468,2,2241,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2468,2,2244,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2468,2,2247,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2468,2,2250,0,0,"IF", 1, 2, 0);
	trans[1][2235]	= settr(2451,4,2260,1608,1608,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2236 -> 2260,0 */
	reached1[2236] = 1;
	trans[1][2236]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2237]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2253]	= settr(2469,0,2260,1609,1609,".(goto)", 1, 2, 0);
	trans[1][2238]	= settr(2454,4,2260,1610,1610,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2239 -> 2260,0 */
	reached1[2239] = 1;
	trans[1][2239]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2240]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2241]	= settr(2457,4,2260,1611,1611,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2242 -> 2260,0 */
	reached1[2242] = 1;
	trans[1][2242]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2243]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2244]	= settr(2460,4,2260,1612,1612,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2245 -> 2260,0 */
	reached1[2245] = 1;
	trans[1][2245]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2246]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2247]	= settr(2463,4,2260,1613,1613,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2248 -> 2260,0 */
	reached1[2248] = 1;
	trans[1][2248]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2249]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2250]	= settr(2466,2,2251,2,0,"else", 1, 2, 0);
	trans[1][2251]	= settr(2467,4,2260,1614,1614,"(1)", 1, 2, 0); /* m: 2253 -> 2260,0 */
	reached1[2253] = 1;
	T = trans[1][2260] = settr(2476,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2476,0,2255,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2476,0,2258,0,0,"IF", 0, 2, 0);
	trans[1][2255]	= settr(2471,0,2257,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2257] = settr(2473,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2473,0,2256,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2256]	= settr(2472,0,2295,1615,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2261]	= settr(2477,0,2295,1,0,".(goto)", 0, 2, 0); /* m: 2295 -> 0,2299 */
	reached1[2295] = 1;
	trans[1][2258]	= settr(2474,0,2259,2,0,"else", 0, 2, 0);
	trans[1][2259]	= settr(2475,0,2299,1616,1616,"(1)", 0, 2, 0); /* m: 2295 -> 2299,0 */
	reached1[2295] = 1;
	trans[1][2263]	= settr(2479,0,2291,1617,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][2291] = settr(2507,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2507,0,2283,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2283] = settr(2499,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2499,2,2281,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2281] = settr(2497,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2497,2,2264,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2497,2,2267,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2497,2,2270,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2497,2,2273,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2497,2,2276,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2497,2,2279,0,0,"IF", 1, 2, 0);
	trans[1][2264]	= settr(2480,4,2289,1618,1618,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2265 -> 2289,0 */
	reached1[2265] = 1;
	trans[1][2265]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2266]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2282]	= settr(2498,0,2289,1619,1619,".(goto)", 1, 2, 0);
	trans[1][2267]	= settr(2483,4,2289,1620,1620,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2268 -> 2289,0 */
	reached1[2268] = 1;
	trans[1][2268]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2269]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2270]	= settr(2486,4,2289,1621,1621,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2271 -> 2289,0 */
	reached1[2271] = 1;
	trans[1][2271]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2272]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2273]	= settr(2489,4,2289,1622,1622,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2274 -> 2289,0 */
	reached1[2274] = 1;
	trans[1][2274]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2275]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2276]	= settr(2492,4,2289,1623,1623,"((STOP==ABORT))", 1, 2, 0); /* m: 2277 -> 2289,0 */
	reached1[2277] = 1;
	trans[1][2277]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2278]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2279]	= settr(2495,2,2280,2,0,"else", 1, 2, 0);
	trans[1][2280]	= settr(2496,4,2289,1624,1624,"(1)", 1, 2, 0); /* m: 2282 -> 2289,0 */
	reached1[2282] = 1;
	T = trans[1][2289] = settr(2505,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2505,0,2284,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2505,0,2287,0,0,"IF", 0, 2, 0);
	trans[1][2284]	= settr(2500,0,2286,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2286] = settr(2502,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2502,0,2285,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2285]	= settr(2501,0,2295,1625,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2290]	= settr(2506,0,2295,1,0,".(goto)", 0, 2, 0); /* m: 2295 -> 0,2299 */
	reached1[2295] = 1;
	trans[1][2287]	= settr(2503,0,2288,2,0,"else", 0, 2, 0);
	trans[1][2288]	= settr(2504,0,2299,1626,1626,"(1)", 0, 2, 0); /* m: 2295 -> 2299,0 */
	reached1[2295] = 1;
	trans[1][2295]	= settr(2511,0,2299,1627,1627,"j = (j+1)", 0, 2, 0);
	trans[1][2296]	= settr(2512,0,2297,2,0,"else", 0, 2, 0);
	trans[1][2297]	= settr(2513,0,4397,1628,1628,"j = 1", 0, 2, 0);
	trans[1][2298]	= settr(2514,0,4397,1,0,"goto :b22", 0, 2, 0);
	trans[1][2301]	= settr(2517,0,4397,1,0,"break", 0, 2, 0);
	trans[1][2435]	= settr(2651,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2303]	= settr(2519,0,2433,2,0,"else", 0, 2, 0);
	T = trans[ 1][2433] = settr(2649,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2649,0,2304,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2304]	= settr(2520,0,2430,1629,1629,"j = (3-1)", 0, 2, 0);
	trans[1][2431]	= settr(2647,0,2430,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2430] = settr(2646,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2646,0,2305,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2646,0,2427,0,0,"DO", 0, 2, 0);
	trans[1][2305]	= settr(2521,0,2425,1630,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][2425] = settr(2641,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2641,0,2423,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2423] = settr(2639,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2639,0,2306,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2639,0,2336,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2639,0,2365,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2639,0,2394,0,0,"IF", 0, 2, 0);
	trans[1][2306]	= settr(2522,0,2335,1631,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][2335] = settr(2551,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2551,0,2326,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2326] = settr(2542,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2542,2,2324,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2324] = settr(2540,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2540,2,2307,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2540,2,2310,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2540,2,2313,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2540,2,2316,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2540,2,2319,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2540,2,2322,0,0,"IF", 1, 2, 0);
	trans[1][2307]	= settr(2523,4,2327,1632,1632,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2308 -> 2327,0 */
	reached1[2308] = 1;
	trans[1][2308]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2309]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2325]	= settr(2541,0,2327,1633,1633,".(goto)", 1, 2, 0);
	trans[1][2310]	= settr(2526,4,2327,1634,1634,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2311 -> 2327,0 */
	reached1[2311] = 1;
	trans[1][2311]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2312]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2313]	= settr(2529,4,2327,1635,1635,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2314 -> 2327,0 */
	reached1[2314] = 1;
	trans[1][2314]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2315]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2316]	= settr(2532,4,2327,1636,1636,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2317 -> 2327,0 */
	reached1[2317] = 1;
	trans[1][2317]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2318]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2319]	= settr(2535,4,2327,1637,1637,"((START==ABORT))", 1, 2, 0); /* m: 2320 -> 2327,0 */
	reached1[2320] = 1;
	trans[1][2320]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2321]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2322]	= settr(2538,2,2323,2,0,"else", 1, 2, 0);
	trans[1][2323]	= settr(2539,4,2327,1638,1638,"(1)", 1, 2, 0); /* m: 2325 -> 2327,0 */
	reached1[2325] = 1;
	trans[1][2327]	= settr(2543,0,2333,1639,1639,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2333] = settr(2549,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2549,0,2328,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2549,0,2331,0,0,"IF", 0, 2, 0);
	trans[1][2328]	= settr(2544,0,2330,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2330] = settr(2546,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2546,0,2329,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2329]	= settr(2545,0,2426,1640,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2334]	= settr(2550,0,2426,1,0,".(goto)", 0, 2, 0); /* m: 2426 -> 0,2430 */
	reached1[2426] = 1;
	trans[1][2331]	= settr(2547,0,2332,2,0,"else", 0, 2, 0);
	trans[1][2332]	= settr(2548,0,2430,1641,1641,"(1)", 0, 2, 0); /* m: 2426 -> 2430,0 */
	reached1[2426] = 1;
	trans[1][2424]	= settr(2640,0,2426,1,0,".(goto)", 0, 2, 0); /* m: 2426 -> 0,2430 */
	reached1[2426] = 1;
	trans[1][2336]	= settr(2552,0,2364,1642,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][2364] = settr(2580,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2580,0,2356,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2356] = settr(2572,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2572,2,2354,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2354] = settr(2570,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2570,2,2337,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2570,2,2340,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2570,2,2343,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2570,2,2346,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2570,2,2349,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2570,2,2352,0,0,"IF", 1, 2, 0);
	trans[1][2337]	= settr(2553,4,2362,1643,1643,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2338 -> 2362,0 */
	reached1[2338] = 1;
	trans[1][2338]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2339]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2355]	= settr(2571,0,2362,1644,1644,".(goto)", 1, 2, 0);
	trans[1][2340]	= settr(2556,4,2362,1645,1645,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2341 -> 2362,0 */
	reached1[2341] = 1;
	trans[1][2341]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2342]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2343]	= settr(2559,4,2362,1646,1646,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2344 -> 2362,0 */
	reached1[2344] = 1;
	trans[1][2344]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2345]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2346]	= settr(2562,4,2362,1647,1647,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2347 -> 2362,0 */
	reached1[2347] = 1;
	trans[1][2347]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2348]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2349]	= settr(2565,4,2362,1648,1648,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2350 -> 2362,0 */
	reached1[2350] = 1;
	trans[1][2350]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2351]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2352]	= settr(2568,2,2353,2,0,"else", 1, 2, 0);
	trans[1][2353]	= settr(2569,4,2362,1649,1649,"(1)", 1, 2, 0); /* m: 2355 -> 2362,0 */
	reached1[2355] = 1;
	T = trans[1][2362] = settr(2578,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2578,0,2357,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2578,0,2360,0,0,"IF", 0, 2, 0);
	trans[1][2357]	= settr(2573,0,2359,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2359] = settr(2575,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2575,0,2358,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2358]	= settr(2574,0,2426,1650,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2363]	= settr(2579,0,2426,1,0,".(goto)", 0, 2, 0); /* m: 2426 -> 0,2430 */
	reached1[2426] = 1;
	trans[1][2360]	= settr(2576,0,2361,2,0,"else", 0, 2, 0);
	trans[1][2361]	= settr(2577,0,2430,1651,1651,"(1)", 0, 2, 0); /* m: 2426 -> 2430,0 */
	reached1[2426] = 1;
	trans[1][2365]	= settr(2581,0,2393,1652,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2393] = settr(2609,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2609,0,2385,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2385] = settr(2601,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2601,2,2383,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2383] = settr(2599,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2599,2,2366,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2599,2,2369,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2599,2,2372,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2599,2,2375,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2599,2,2378,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2599,2,2381,0,0,"IF", 1, 2, 0);
	trans[1][2366]	= settr(2582,4,2391,1653,1653,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2367 -> 2391,0 */
	reached1[2367] = 1;
	trans[1][2367]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2368]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2384]	= settr(2600,0,2391,1654,1654,".(goto)", 1, 2, 0);
	trans[1][2369]	= settr(2585,4,2391,1655,1655,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2370 -> 2391,0 */
	reached1[2370] = 1;
	trans[1][2370]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2371]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2372]	= settr(2588,4,2391,1656,1656,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2373 -> 2391,0 */
	reached1[2373] = 1;
	trans[1][2373]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2374]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2375]	= settr(2591,4,2391,1657,1657,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2376 -> 2391,0 */
	reached1[2376] = 1;
	trans[1][2376]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2377]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2378]	= settr(2594,4,2391,1658,1658,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2379 -> 2391,0 */
	reached1[2379] = 1;
	trans[1][2379]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2380]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2381]	= settr(2597,2,2382,2,0,"else", 1, 2, 0);
	trans[1][2382]	= settr(2598,4,2391,1659,1659,"(1)", 1, 2, 0); /* m: 2384 -> 2391,0 */
	reached1[2384] = 1;
	T = trans[1][2391] = settr(2607,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2607,0,2386,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2607,0,2389,0,0,"IF", 0, 2, 0);
	trans[1][2386]	= settr(2602,0,2388,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2388] = settr(2604,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2604,0,2387,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2387]	= settr(2603,0,2426,1660,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2392]	= settr(2608,0,2426,1,0,".(goto)", 0, 2, 0); /* m: 2426 -> 0,2430 */
	reached1[2426] = 1;
	trans[1][2389]	= settr(2605,0,2390,2,0,"else", 0, 2, 0);
	trans[1][2390]	= settr(2606,0,2430,1661,1661,"(1)", 0, 2, 0); /* m: 2426 -> 2430,0 */
	reached1[2426] = 1;
	trans[1][2394]	= settr(2610,0,2422,1662,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][2422] = settr(2638,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2638,0,2414,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2414] = settr(2630,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2630,2,2412,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2412] = settr(2628,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2628,2,2395,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2628,2,2398,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2628,2,2401,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2628,2,2404,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2628,2,2407,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2628,2,2410,0,0,"IF", 1, 2, 0);
	trans[1][2395]	= settr(2611,4,2420,1663,1663,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2396 -> 2420,0 */
	reached1[2396] = 1;
	trans[1][2396]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2397]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2413]	= settr(2629,0,2420,1664,1664,".(goto)", 1, 2, 0);
	trans[1][2398]	= settr(2614,4,2420,1665,1665,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2399 -> 2420,0 */
	reached1[2399] = 1;
	trans[1][2399]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2400]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2401]	= settr(2617,4,2420,1666,1666,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2402 -> 2420,0 */
	reached1[2402] = 1;
	trans[1][2402]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2403]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2404]	= settr(2620,4,2420,1667,1667,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2405 -> 2420,0 */
	reached1[2405] = 1;
	trans[1][2405]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2406]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2407]	= settr(2623,4,2420,1668,1668,"((STOP==ABORT))", 1, 2, 0); /* m: 2408 -> 2420,0 */
	reached1[2408] = 1;
	trans[1][2408]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2409]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2410]	= settr(2626,2,2411,2,0,"else", 1, 2, 0);
	trans[1][2411]	= settr(2627,4,2420,1669,1669,"(1)", 1, 2, 0); /* m: 2413 -> 2420,0 */
	reached1[2413] = 1;
	T = trans[1][2420] = settr(2636,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2636,0,2415,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2636,0,2418,0,0,"IF", 0, 2, 0);
	trans[1][2415]	= settr(2631,0,2417,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2417] = settr(2633,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2633,0,2416,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2416]	= settr(2632,0,2426,1670,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2421]	= settr(2637,0,2426,1,0,".(goto)", 0, 2, 0); /* m: 2426 -> 0,2430 */
	reached1[2426] = 1;
	trans[1][2418]	= settr(2634,0,2419,2,0,"else", 0, 2, 0);
	trans[1][2419]	= settr(2635,0,2430,1671,1671,"(1)", 0, 2, 0); /* m: 2426 -> 2430,0 */
	reached1[2426] = 1;
	trans[1][2426]	= settr(2642,0,2430,1672,1672,"j = (j-1)", 0, 2, 0);
	trans[1][2427]	= settr(2643,0,2428,2,0,"else", 0, 2, 0);
	trans[1][2428]	= settr(2644,0,4397,1673,1673,"j = 1", 0, 2, 0);
	trans[1][2429]	= settr(2645,0,4397,1,0,"goto :b23", 0, 2, 0);
	trans[1][2432]	= settr(2648,0,4397,1,0,"break", 0, 2, 0);
	trans[1][2591]	= settr(2807,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2437]	= settr(2653,0,2589,2,0,"else", 0, 2, 0);
	T = trans[ 1][2589] = settr(2805,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2805,0,2566,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2566] = settr(2782,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2782,0,2563,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2564]	= settr(2780,0,2563,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2563] = settr(2779,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2779,0,2438,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2779,0,2560,0,0,"DO", 0, 2, 0);
	trans[1][2438]	= settr(2654,0,2558,1674,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][2558] = settr(2774,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2774,0,2556,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2556] = settr(2772,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2772,0,2439,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2772,0,2469,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2772,0,2498,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2772,0,2527,0,0,"IF", 0, 2, 0);
	trans[1][2439]	= settr(2655,0,2468,1675,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][2468] = settr(2684,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2684,0,2459,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2459] = settr(2675,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2675,2,2457,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2457] = settr(2673,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2673,2,2440,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2673,2,2443,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2673,2,2446,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2673,2,2449,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2673,2,2452,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2673,2,2455,0,0,"IF", 1, 2, 0);
	trans[1][2440]	= settr(2656,4,2460,1676,1676,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2441 -> 2460,0 */
	reached1[2441] = 1;
	trans[1][2441]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2442]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2458]	= settr(2674,0,2460,1677,1677,".(goto)", 1, 2, 0);
	trans[1][2443]	= settr(2659,4,2460,1678,1678,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2444 -> 2460,0 */
	reached1[2444] = 1;
	trans[1][2444]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2445]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2446]	= settr(2662,4,2460,1679,1679,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2447 -> 2460,0 */
	reached1[2447] = 1;
	trans[1][2447]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2448]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2449]	= settr(2665,4,2460,1680,1680,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2450 -> 2460,0 */
	reached1[2450] = 1;
	trans[1][2450]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2451]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2452]	= settr(2668,4,2460,1681,1681,"((START==ABORT))", 1, 2, 0); /* m: 2453 -> 2460,0 */
	reached1[2453] = 1;
	trans[1][2453]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2454]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2455]	= settr(2671,2,2456,2,0,"else", 1, 2, 0);
	trans[1][2456]	= settr(2672,4,2460,1682,1682,"(1)", 1, 2, 0); /* m: 2458 -> 2460,0 */
	reached1[2458] = 1;
	trans[1][2460]	= settr(2676,0,2466,1683,1683,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2466] = settr(2682,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2682,0,2461,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2682,0,2464,0,0,"IF", 0, 2, 0);
	trans[1][2461]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2463] = settr(2679,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2679,0,2462,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2462]	= settr(2678,0,2559,1684,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2467]	= settr(2683,0,2559,1,0,".(goto)", 0, 2, 0); /* m: 2559 -> 0,2563 */
	reached1[2559] = 1;
	trans[1][2464]	= settr(2680,0,2465,2,0,"else", 0, 2, 0);
	trans[1][2465]	= settr(2681,0,2563,1685,1685,"(1)", 0, 2, 0); /* m: 2559 -> 2563,0 */
	reached1[2559] = 1;
	trans[1][2557]	= settr(2773,0,2559,1,0,".(goto)", 0, 2, 0); /* m: 2559 -> 0,2563 */
	reached1[2559] = 1;
	trans[1][2469]	= settr(2685,0,2497,1686,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][2497] = settr(2713,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2713,0,2489,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2489] = settr(2705,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2705,2,2487,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2487] = settr(2703,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2703,2,2470,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2703,2,2473,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2703,2,2476,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2703,2,2479,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2703,2,2482,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2703,2,2485,0,0,"IF", 1, 2, 0);
	trans[1][2470]	= settr(2686,4,2495,1687,1687,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2471 -> 2495,0 */
	reached1[2471] = 1;
	trans[1][2471]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2472]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2488]	= settr(2704,0,2495,1688,1688,".(goto)", 1, 2, 0);
	trans[1][2473]	= settr(2689,4,2495,1689,1689,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2474 -> 2495,0 */
	reached1[2474] = 1;
	trans[1][2474]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2475]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2476]	= settr(2692,4,2495,1690,1690,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2477 -> 2495,0 */
	reached1[2477] = 1;
	trans[1][2477]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2478]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2479]	= settr(2695,4,2495,1691,1691,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2480 -> 2495,0 */
	reached1[2480] = 1;
	trans[1][2480]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2481]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2482]	= settr(2698,4,2495,1692,1692,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2483 -> 2495,0 */
	reached1[2483] = 1;
	trans[1][2483]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2484]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2485]	= settr(2701,2,2486,2,0,"else", 1, 2, 0);
	trans[1][2486]	= settr(2702,4,2495,1693,1693,"(1)", 1, 2, 0); /* m: 2488 -> 2495,0 */
	reached1[2488] = 1;
	T = trans[1][2495] = settr(2711,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2711,0,2490,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2711,0,2493,0,0,"IF", 0, 2, 0);
	trans[1][2490]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2492] = settr(2708,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2708,0,2491,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2491]	= settr(2707,0,2559,1694,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2496]	= settr(2712,0,2559,1,0,".(goto)", 0, 2, 0); /* m: 2559 -> 0,2563 */
	reached1[2559] = 1;
	trans[1][2493]	= settr(2709,0,2494,2,0,"else", 0, 2, 0);
	trans[1][2494]	= settr(2710,0,2563,1695,1695,"(1)", 0, 2, 0); /* m: 2559 -> 2563,0 */
	reached1[2559] = 1;
	trans[1][2498]	= settr(2714,0,2526,1696,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2526] = settr(2742,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2742,0,2518,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2518] = settr(2734,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2734,2,2516,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2516] = settr(2732,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2732,2,2499,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2732,2,2502,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2732,2,2505,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2732,2,2508,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2732,2,2511,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2732,2,2514,0,0,"IF", 1, 2, 0);
	trans[1][2499]	= settr(2715,4,2524,1697,1697,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2500 -> 2524,0 */
	reached1[2500] = 1;
	trans[1][2500]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2501]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2517]	= settr(2733,0,2524,1698,1698,".(goto)", 1, 2, 0);
	trans[1][2502]	= settr(2718,4,2524,1699,1699,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2503 -> 2524,0 */
	reached1[2503] = 1;
	trans[1][2503]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2504]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2505]	= settr(2721,4,2524,1700,1700,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2506 -> 2524,0 */
	reached1[2506] = 1;
	trans[1][2506]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2507]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2508]	= settr(2724,4,2524,1701,1701,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2509 -> 2524,0 */
	reached1[2509] = 1;
	trans[1][2509]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2510]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2511]	= settr(2727,4,2524,1702,1702,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2512 -> 2524,0 */
	reached1[2512] = 1;
	trans[1][2512]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2513]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2514]	= settr(2730,2,2515,2,0,"else", 1, 2, 0);
	trans[1][2515]	= settr(2731,4,2524,1703,1703,"(1)", 1, 2, 0); /* m: 2517 -> 2524,0 */
	reached1[2517] = 1;
	T = trans[1][2524] = settr(2740,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2740,0,2519,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2740,0,2522,0,0,"IF", 0, 2, 0);
	trans[1][2519]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2521] = settr(2737,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2737,0,2520,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2520]	= settr(2736,0,2559,1704,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2525]	= settr(2741,0,2559,1,0,".(goto)", 0, 2, 0); /* m: 2559 -> 0,2563 */
	reached1[2559] = 1;
	trans[1][2522]	= settr(2738,0,2523,2,0,"else", 0, 2, 0);
	trans[1][2523]	= settr(2739,0,2563,1705,1705,"(1)", 0, 2, 0); /* m: 2559 -> 2563,0 */
	reached1[2559] = 1;
	trans[1][2527]	= settr(2743,0,2555,1706,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][2555] = settr(2771,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2771,0,2547,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2547] = settr(2763,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2763,2,2545,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2545] = settr(2761,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2761,2,2528,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2761,2,2531,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2761,2,2534,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2761,2,2537,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2761,2,2540,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2761,2,2543,0,0,"IF", 1, 2, 0);
	trans[1][2528]	= settr(2744,4,2553,1707,1707,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2529 -> 2553,0 */
	reached1[2529] = 1;
	trans[1][2529]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2530]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2546]	= settr(2762,0,2553,1708,1708,".(goto)", 1, 2, 0);
	trans[1][2531]	= settr(2747,4,2553,1709,1709,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2532 -> 2553,0 */
	reached1[2532] = 1;
	trans[1][2532]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2533]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2534]	= settr(2750,4,2553,1710,1710,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2535 -> 2553,0 */
	reached1[2535] = 1;
	trans[1][2535]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2536]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2537]	= settr(2753,4,2553,1711,1711,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2538 -> 2553,0 */
	reached1[2538] = 1;
	trans[1][2538]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2539]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2540]	= settr(2756,4,2553,1712,1712,"((STOP==ABORT))", 1, 2, 0); /* m: 2541 -> 2553,0 */
	reached1[2541] = 1;
	trans[1][2541]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2542]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2543]	= settr(2759,2,2544,2,0,"else", 1, 2, 0);
	trans[1][2544]	= settr(2760,4,2553,1713,1713,"(1)", 1, 2, 0); /* m: 2546 -> 2553,0 */
	reached1[2546] = 1;
	T = trans[1][2553] = settr(2769,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(2769,0,2548,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(2769,0,2551,0,0,"IF", 0, 2, 0);
	trans[1][2548]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2550] = settr(2766,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2766,0,2549,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2549]	= settr(2765,0,2559,1714,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2554]	= settr(2770,0,2559,1,0,".(goto)", 0, 2, 0); /* m: 2559 -> 0,2563 */
	reached1[2559] = 1;
	trans[1][2551]	= settr(2767,0,2552,2,0,"else", 0, 2, 0);
	trans[1][2552]	= settr(2768,0,2563,1715,1715,"(1)", 0, 2, 0); /* m: 2559 -> 2563,0 */
	reached1[2559] = 1;
	trans[1][2559]	= settr(2775,0,2563,1716,1716,"j = (j+1)", 0, 2, 0);
	trans[1][2560]	= settr(2776,0,2561,2,0,"else", 0, 2, 0);
	trans[1][2561]	= settr(2777,0,2586,1717,1717,"j = 1", 0, 2, 0);
	trans[1][2562]	= settr(2778,0,2586,1,0,"goto :b24", 0, 2, 0);
	trans[1][2565]	= settr(2781,0,2586,1,0,"break", 0, 2, 0);
	trans[1][2587]	= settr(2803,0,2586,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2586] = settr(2802,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2802,0,2567,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2802,0,2583,0,0,"DO", 0, 2, 0);
	trans[1][2567]	= settr(2783,0,2580,1718,0,"((j<3))", 0, 2, 0);
	T = trans[1][2580] = settr(2796,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2796,0,2568,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2796,0,2571,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2796,0,2574,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2796,0,2577,0,0,"IF", 0, 2, 0);
	trans[1][2568]	= settr(2784,0,2570,1719,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][2570] = settr(2786,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2786,0,2569,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2569]	= settr(2785,0,2582,1720,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2581]	= settr(2797,0,2582,1,0,".(goto)", 0, 2, 0); /* m: 2582 -> 0,2586 */
	reached1[2582] = 1;
	trans[1][2571]	= settr(2787,0,2573,1721,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2573] = settr(2789,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2789,0,2572,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2572]	= settr(2788,0,2582,1722,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2574]	= settr(2790,0,2576,1723,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][2576] = settr(2792,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2792,0,2575,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2575]	= settr(2791,0,2582,1724,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2577]	= settr(2793,0,2579,1725,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][2579] = settr(2795,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2795,0,2578,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2578]	= settr(2794,0,2582,1726,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2582]	= settr(2798,0,2586,1727,1727,"j = (j+1)", 0, 2, 0);
	trans[1][2583]	= settr(2799,0,2584,2,0,"else", 0, 2, 0);
	trans[1][2584]	= settr(2800,0,4397,1728,1728,"j = 1", 0, 2, 0);
	trans[1][2585]	= settr(2801,0,4397,1,0,"goto :b25", 0, 2, 0);
	trans[1][2588]	= settr(2804,0,4397,1,0,"break", 0, 2, 0);
	trans[1][2595]	= settr(2811,0,3021,1729,0,"(((11==ABORTING)||(11==STOPPING)))", 0, 2, 0);
	T = trans[ 1][3021] = settr(3237,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3237,0,3019,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3019] = settr(3235,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3235,0,2596,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3235,0,2598,0,0,"IF", 0, 2, 0);
	trans[1][2596]	= settr(2812,0,2597,1730,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][2597]	= settr(2813,0,4397,1731,1731,"supervisor_started = 1", 1, 2, 0);
	trans[1][3020]	= settr(3236,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2598]	= settr(2814,0,3017,2,0,"else", 0, 2, 0);
	T = trans[1][3017] = settr(3233,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3233,0,2599,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3233,0,2864,0,0,"IF", 0, 2, 0);
	trans[1][2599]	= settr(2815,0,2863,1732,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][2863] = settr(3079,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3079,0,2861,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2861] = settr(3077,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3077,0,2600,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3077,0,2730,0,0,"IF", 0, 2, 0);
	trans[1][2600]	= settr(2816,0,2729,1733,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][2729] = settr(2945,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2945,0,2726,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2727]	= settr(2943,0,2726,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2726] = settr(2942,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(2942,0,2601,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(2942,0,2723,0,0,"DO", 0, 2, 0);
	trans[1][2601]	= settr(2817,0,2721,1734,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][2721] = settr(2937,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2937,0,2719,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2719] = settr(2935,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2935,0,2602,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2935,0,2632,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2935,0,2661,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2935,0,2690,0,0,"IF", 0, 2, 0);
	trans[1][2602]	= settr(2818,0,2631,1735,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][2631] = settr(2847,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2847,0,2622,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2622] = settr(2838,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2838,2,2620,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2620] = settr(2836,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2836,2,2603,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2836,2,2606,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2836,2,2609,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2836,2,2612,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2836,2,2615,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2836,2,2618,0,0,"IF", 1, 2, 0);
	trans[1][2603]	= settr(2819,4,2623,1736,1736,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2604 -> 2623,0 */
	reached1[2604] = 1;
	trans[1][2604]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2605]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2621]	= settr(2837,0,2623,1737,1737,".(goto)", 1, 2, 0);
	trans[1][2606]	= settr(2822,4,2623,1738,1738,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2607 -> 2623,0 */
	reached1[2607] = 1;
	trans[1][2607]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2608]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2609]	= settr(2825,4,2623,1739,1739,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2610 -> 2623,0 */
	reached1[2610] = 1;
	trans[1][2610]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2611]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2612]	= settr(2828,4,2623,1740,1740,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2613 -> 2623,0 */
	reached1[2613] = 1;
	trans[1][2613]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2614]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2615]	= settr(2831,4,2623,1741,1741,"((START==ABORT))", 1, 2, 0); /* m: 2616 -> 2623,0 */
	reached1[2616] = 1;
	trans[1][2616]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2617]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2618]	= settr(2834,2,2619,2,0,"else", 1, 2, 0);
	trans[1][2619]	= settr(2835,4,2623,1742,1742,"(1)", 1, 2, 0); /* m: 2621 -> 2623,0 */
	reached1[2621] = 1;
	trans[1][2623]	= settr(2839,0,2629,1743,1743,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2629] = settr(2845,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2845,0,2624,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2845,0,2627,0,0,"IF", 0, 2, 0);
	trans[1][2624]	= settr(2840,0,2626,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2626] = settr(2842,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2842,0,2625,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2625]	= settr(2841,0,2722,1744,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2630]	= settr(2846,0,2722,1,0,".(goto)", 0, 2, 0); /* m: 2722 -> 0,2726 */
	reached1[2722] = 1;
	trans[1][2627]	= settr(2843,0,2628,2,0,"else", 0, 2, 0);
	trans[1][2628]	= settr(2844,0,2726,1745,1745,"(1)", 0, 2, 0); /* m: 2722 -> 2726,0 */
	reached1[2722] = 1;
	trans[1][2720]	= settr(2936,0,2722,1,0,".(goto)", 0, 2, 0); /* m: 2722 -> 0,2726 */
	reached1[2722] = 1;
	trans[1][2632]	= settr(2848,0,2660,1746,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][2660] = settr(2876,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2876,0,2652,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2652] = settr(2868,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2868,2,2650,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2650] = settr(2866,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2866,2,2633,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2866,2,2636,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2866,2,2639,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2866,2,2642,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2866,2,2645,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2866,2,2648,0,0,"IF", 1, 2, 0);
	trans[1][2633]	= settr(2849,4,2658,1747,1747,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2634 -> 2658,0 */
	reached1[2634] = 1;
	trans[1][2634]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2635]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2651]	= settr(2867,0,2658,1748,1748,".(goto)", 1, 2, 0);
	trans[1][2636]	= settr(2852,4,2658,1749,1749,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2637 -> 2658,0 */
	reached1[2637] = 1;
	trans[1][2637]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2638]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2639]	= settr(2855,4,2658,1750,1750,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2640 -> 2658,0 */
	reached1[2640] = 1;
	trans[1][2640]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2641]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2642]	= settr(2858,4,2658,1751,1751,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2643 -> 2658,0 */
	reached1[2643] = 1;
	trans[1][2643]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2644]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2645]	= settr(2861,4,2658,1752,1752,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2646 -> 2658,0 */
	reached1[2646] = 1;
	trans[1][2646]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2647]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2648]	= settr(2864,2,2649,2,0,"else", 1, 2, 0);
	trans[1][2649]	= settr(2865,4,2658,1753,1753,"(1)", 1, 2, 0); /* m: 2651 -> 2658,0 */
	reached1[2651] = 1;
	T = trans[1][2658] = settr(2874,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2874,0,2653,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2874,0,2656,0,0,"IF", 0, 2, 0);
	trans[1][2653]	= settr(2869,0,2655,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2655] = settr(2871,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2871,0,2654,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2654]	= settr(2870,0,2722,1754,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2659]	= settr(2875,0,2722,1,0,".(goto)", 0, 2, 0); /* m: 2722 -> 0,2726 */
	reached1[2722] = 1;
	trans[1][2656]	= settr(2872,0,2657,2,0,"else", 0, 2, 0);
	trans[1][2657]	= settr(2873,0,2726,1755,1755,"(1)", 0, 2, 0); /* m: 2722 -> 2726,0 */
	reached1[2722] = 1;
	trans[1][2661]	= settr(2877,0,2689,1756,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2689] = settr(2905,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2905,0,2681,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2681] = settr(2897,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2897,2,2679,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2679] = settr(2895,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2895,2,2662,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2895,2,2665,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2895,2,2668,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2895,2,2671,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2895,2,2674,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2895,2,2677,0,0,"IF", 1, 2, 0);
	trans[1][2662]	= settr(2878,4,2687,1757,1757,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2663 -> 2687,0 */
	reached1[2663] = 1;
	trans[1][2663]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2664]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2680]	= settr(2896,0,2687,1758,1758,".(goto)", 1, 2, 0);
	trans[1][2665]	= settr(2881,4,2687,1759,1759,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2666 -> 2687,0 */
	reached1[2666] = 1;
	trans[1][2666]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2667]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2668]	= settr(2884,4,2687,1760,1760,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2669 -> 2687,0 */
	reached1[2669] = 1;
	trans[1][2669]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2670]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2671]	= settr(2887,4,2687,1761,1761,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2672 -> 2687,0 */
	reached1[2672] = 1;
	trans[1][2672]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2673]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2674]	= settr(2890,4,2687,1762,1762,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2675 -> 2687,0 */
	reached1[2675] = 1;
	trans[1][2675]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2676]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2677]	= settr(2893,2,2678,2,0,"else", 1, 2, 0);
	trans[1][2678]	= settr(2894,4,2687,1763,1763,"(1)", 1, 2, 0); /* m: 2680 -> 2687,0 */
	reached1[2680] = 1;
	T = trans[1][2687] = settr(2903,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2903,0,2682,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2903,0,2685,0,0,"IF", 0, 2, 0);
	trans[1][2682]	= settr(2898,0,2684,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2684] = settr(2900,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2900,0,2683,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2683]	= settr(2899,0,2722,1764,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2688]	= settr(2904,0,2722,1,0,".(goto)", 0, 2, 0); /* m: 2722 -> 0,2726 */
	reached1[2722] = 1;
	trans[1][2685]	= settr(2901,0,2686,2,0,"else", 0, 2, 0);
	trans[1][2686]	= settr(2902,0,2726,1765,1765,"(1)", 0, 2, 0); /* m: 2722 -> 2726,0 */
	reached1[2722] = 1;
	trans[1][2690]	= settr(2906,0,2718,1766,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][2718] = settr(2934,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2934,0,2710,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2710] = settr(2926,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2926,2,2708,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2708] = settr(2924,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2924,2,2691,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2924,2,2694,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2924,2,2697,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2924,2,2700,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2924,2,2703,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2924,2,2706,0,0,"IF", 1, 2, 0);
	trans[1][2691]	= settr(2907,4,2716,1767,1767,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2692 -> 2716,0 */
	reached1[2692] = 1;
	trans[1][2692]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2693]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2709]	= settr(2925,0,2716,1768,1768,".(goto)", 1, 2, 0);
	trans[1][2694]	= settr(2910,4,2716,1769,1769,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2695 -> 2716,0 */
	reached1[2695] = 1;
	trans[1][2695]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2696]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2697]	= settr(2913,4,2716,1770,1770,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2698 -> 2716,0 */
	reached1[2698] = 1;
	trans[1][2698]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2699]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2700]	= settr(2916,4,2716,1771,1771,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2701 -> 2716,0 */
	reached1[2701] = 1;
	trans[1][2701]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2702]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2703]	= settr(2919,4,2716,1772,1772,"((STOP==ABORT))", 1, 2, 0); /* m: 2704 -> 2716,0 */
	reached1[2704] = 1;
	trans[1][2704]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2705]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2706]	= settr(2922,2,2707,2,0,"else", 1, 2, 0);
	trans[1][2707]	= settr(2923,4,2716,1773,1773,"(1)", 1, 2, 0); /* m: 2709 -> 2716,0 */
	reached1[2709] = 1;
	T = trans[1][2716] = settr(2932,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2932,0,2711,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2932,0,2714,0,0,"IF", 0, 2, 0);
	trans[1][2711]	= settr(2927,0,2713,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2713] = settr(2929,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2929,0,2712,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2712]	= settr(2928,0,2722,1774,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2717]	= settr(2933,0,2722,1,0,".(goto)", 0, 2, 0); /* m: 2722 -> 0,2726 */
	reached1[2722] = 1;
	trans[1][2714]	= settr(2930,0,2715,2,0,"else", 0, 2, 0);
	trans[1][2715]	= settr(2931,0,2726,1775,1775,"(1)", 0, 2, 0); /* m: 2722 -> 2726,0 */
	reached1[2722] = 1;
	trans[1][2722]	= settr(2938,0,2726,1776,1776,"j = (j+1)", 0, 2, 0);
	trans[1][2723]	= settr(2939,0,2724,2,0,"else", 0, 2, 0);
	trans[1][2724]	= settr(2940,0,4397,1777,1777,"j = 1", 0, 2, 0);
	trans[1][2725]	= settr(2941,0,4397,1,0,"goto :b26", 0, 2, 0);
	trans[1][2728]	= settr(2944,0,4397,1,0,"break", 0, 2, 0);
	trans[1][2862]	= settr(3078,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2730]	= settr(2946,0,2860,2,0,"else", 0, 2, 0);
	T = trans[ 1][2860] = settr(3076,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3076,0,2731,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2731]	= settr(2947,0,2857,1778,1778,"j = (3-1)", 0, 2, 0);
	trans[1][2858]	= settr(3074,0,2857,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2857] = settr(3073,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3073,0,2732,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3073,0,2854,0,0,"DO", 0, 2, 0);
	trans[1][2732]	= settr(2948,0,2852,1779,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][2852] = settr(3068,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3068,0,2850,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2850] = settr(3066,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3066,0,2733,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3066,0,2763,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3066,0,2792,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3066,0,2821,0,0,"IF", 0, 2, 0);
	trans[1][2733]	= settr(2949,0,2762,1780,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][2762] = settr(2978,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2978,0,2753,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2753] = settr(2969,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2969,2,2751,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2751] = settr(2967,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2967,2,2734,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2967,2,2737,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2967,2,2740,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2967,2,2743,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2967,2,2746,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2967,2,2749,0,0,"IF", 1, 2, 0);
	trans[1][2734]	= settr(2950,4,2754,1781,1781,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2735 -> 2754,0 */
	reached1[2735] = 1;
	trans[1][2735]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2736]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2752]	= settr(2968,0,2754,1782,1782,".(goto)", 1, 2, 0);
	trans[1][2737]	= settr(2953,4,2754,1783,1783,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2738 -> 2754,0 */
	reached1[2738] = 1;
	trans[1][2738]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2739]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2740]	= settr(2956,4,2754,1784,1784,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2741 -> 2754,0 */
	reached1[2741] = 1;
	trans[1][2741]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2742]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2743]	= settr(2959,4,2754,1785,1785,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2744 -> 2754,0 */
	reached1[2744] = 1;
	trans[1][2744]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2745]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2746]	= settr(2962,4,2754,1786,1786,"((START==ABORT))", 1, 2, 0); /* m: 2747 -> 2754,0 */
	reached1[2747] = 1;
	trans[1][2747]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2748]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2749]	= settr(2965,2,2750,2,0,"else", 1, 2, 0);
	trans[1][2750]	= settr(2966,4,2754,1787,1787,"(1)", 1, 2, 0); /* m: 2752 -> 2754,0 */
	reached1[2752] = 1;
	trans[1][2754]	= settr(2970,0,2760,1788,1788,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2760] = settr(2976,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(2976,0,2755,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(2976,0,2758,0,0,"IF", 0, 2, 0);
	trans[1][2755]	= settr(2971,0,2757,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2757] = settr(2973,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2973,0,2756,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2756]	= settr(2972,0,2853,1789,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2761]	= settr(2977,0,2853,1,0,".(goto)", 0, 2, 0); /* m: 2853 -> 0,2857 */
	reached1[2853] = 1;
	trans[1][2758]	= settr(2974,0,2759,2,0,"else", 0, 2, 0);
	trans[1][2759]	= settr(2975,0,2857,1790,1790,"(1)", 0, 2, 0); /* m: 2853 -> 2857,0 */
	reached1[2853] = 1;
	trans[1][2851]	= settr(3067,0,2853,1,0,".(goto)", 0, 2, 0); /* m: 2853 -> 0,2857 */
	reached1[2853] = 1;
	trans[1][2763]	= settr(2979,0,2791,1791,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][2791] = settr(3007,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3007,0,2783,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2783] = settr(2999,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(2999,2,2781,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2781] = settr(2997,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2997,2,2764,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2997,2,2767,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2997,2,2770,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2997,2,2773,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(2997,2,2776,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(2997,2,2779,0,0,"IF", 1, 2, 0);
	trans[1][2764]	= settr(2980,4,2789,1792,1792,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2765 -> 2789,0 */
	reached1[2765] = 1;
	trans[1][2765]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2766]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2782]	= settr(2998,0,2789,1793,1793,".(goto)", 1, 2, 0);
	trans[1][2767]	= settr(2983,4,2789,1794,1794,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2768 -> 2789,0 */
	reached1[2768] = 1;
	trans[1][2768]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2769]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2770]	= settr(2986,4,2789,1795,1795,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2771 -> 2789,0 */
	reached1[2771] = 1;
	trans[1][2771]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2772]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2773]	= settr(2989,4,2789,1796,1796,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2774 -> 2789,0 */
	reached1[2774] = 1;
	trans[1][2774]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2775]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2776]	= settr(2992,4,2789,1797,1797,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2777 -> 2789,0 */
	reached1[2777] = 1;
	trans[1][2777]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2778]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2779]	= settr(2995,2,2780,2,0,"else", 1, 2, 0);
	trans[1][2780]	= settr(2996,4,2789,1798,1798,"(1)", 1, 2, 0); /* m: 2782 -> 2789,0 */
	reached1[2782] = 1;
	T = trans[1][2789] = settr(3005,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3005,0,2784,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3005,0,2787,0,0,"IF", 0, 2, 0);
	trans[1][2784]	= settr(3000,0,2786,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2786] = settr(3002,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3002,0,2785,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2785]	= settr(3001,0,2853,1799,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2790]	= settr(3006,0,2853,1,0,".(goto)", 0, 2, 0); /* m: 2853 -> 0,2857 */
	reached1[2853] = 1;
	trans[1][2787]	= settr(3003,0,2788,2,0,"else", 0, 2, 0);
	trans[1][2788]	= settr(3004,0,2857,1800,1800,"(1)", 0, 2, 0); /* m: 2853 -> 2857,0 */
	reached1[2853] = 1;
	trans[1][2792]	= settr(3008,0,2820,1801,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2820] = settr(3036,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3036,0,2812,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2812] = settr(3028,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3028,2,2810,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2810] = settr(3026,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3026,2,2793,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3026,2,2796,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3026,2,2799,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3026,2,2802,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3026,2,2805,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3026,2,2808,0,0,"IF", 1, 2, 0);
	trans[1][2793]	= settr(3009,4,2818,1802,1802,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2794 -> 2818,0 */
	reached1[2794] = 1;
	trans[1][2794]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2795]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2811]	= settr(3027,0,2818,1803,1803,".(goto)", 1, 2, 0);
	trans[1][2796]	= settr(3012,4,2818,1804,1804,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2797 -> 2818,0 */
	reached1[2797] = 1;
	trans[1][2797]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2798]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2799]	= settr(3015,4,2818,1805,1805,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2800 -> 2818,0 */
	reached1[2800] = 1;
	trans[1][2800]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2801]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2802]	= settr(3018,4,2818,1806,1806,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2803 -> 2818,0 */
	reached1[2803] = 1;
	trans[1][2803]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2804]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2805]	= settr(3021,4,2818,1807,1807,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2806 -> 2818,0 */
	reached1[2806] = 1;
	trans[1][2806]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2807]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2808]	= settr(3024,2,2809,2,0,"else", 1, 2, 0);
	trans[1][2809]	= settr(3025,4,2818,1808,1808,"(1)", 1, 2, 0); /* m: 2811 -> 2818,0 */
	reached1[2811] = 1;
	T = trans[1][2818] = settr(3034,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3034,0,2813,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3034,0,2816,0,0,"IF", 0, 2, 0);
	trans[1][2813]	= settr(3029,0,2815,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2815] = settr(3031,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3031,0,2814,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2814]	= settr(3030,0,2853,1809,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2819]	= settr(3035,0,2853,1,0,".(goto)", 0, 2, 0); /* m: 2853 -> 0,2857 */
	reached1[2853] = 1;
	trans[1][2816]	= settr(3032,0,2817,2,0,"else", 0, 2, 0);
	trans[1][2817]	= settr(3033,0,2857,1810,1810,"(1)", 0, 2, 0); /* m: 2853 -> 2857,0 */
	reached1[2853] = 1;
	trans[1][2821]	= settr(3037,0,2849,1811,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][2849] = settr(3065,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3065,0,2841,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2841] = settr(3057,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3057,2,2839,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2839] = settr(3055,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3055,2,2822,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3055,2,2825,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3055,2,2828,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3055,2,2831,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3055,2,2834,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3055,2,2837,0,0,"IF", 1, 2, 0);
	trans[1][2822]	= settr(3038,4,2847,1812,1812,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2823 -> 2847,0 */
	reached1[2823] = 1;
	trans[1][2823]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2824]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2840]	= settr(3056,0,2847,1813,1813,".(goto)", 1, 2, 0);
	trans[1][2825]	= settr(3041,4,2847,1814,1814,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2826 -> 2847,0 */
	reached1[2826] = 1;
	trans[1][2826]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2827]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2828]	= settr(3044,4,2847,1815,1815,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2829 -> 2847,0 */
	reached1[2829] = 1;
	trans[1][2829]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2830]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2831]	= settr(3047,4,2847,1816,1816,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2832 -> 2847,0 */
	reached1[2832] = 1;
	trans[1][2832]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2833]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2834]	= settr(3050,4,2847,1817,1817,"((STOP==ABORT))", 1, 2, 0); /* m: 2835 -> 2847,0 */
	reached1[2835] = 1;
	trans[1][2835]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2836]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2837]	= settr(3053,2,2838,2,0,"else", 1, 2, 0);
	trans[1][2838]	= settr(3054,4,2847,1818,1818,"(1)", 1, 2, 0); /* m: 2840 -> 2847,0 */
	reached1[2840] = 1;
	T = trans[1][2847] = settr(3063,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3063,0,2842,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3063,0,2845,0,0,"IF", 0, 2, 0);
	trans[1][2842]	= settr(3058,0,2844,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][2844] = settr(3060,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3060,0,2843,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2843]	= settr(3059,0,2853,1819,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2848]	= settr(3064,0,2853,1,0,".(goto)", 0, 2, 0); /* m: 2853 -> 0,2857 */
	reached1[2853] = 1;
	trans[1][2845]	= settr(3061,0,2846,2,0,"else", 0, 2, 0);
	trans[1][2846]	= settr(3062,0,2857,1820,1820,"(1)", 0, 2, 0); /* m: 2853 -> 2857,0 */
	reached1[2853] = 1;
	trans[1][2853]	= settr(3069,0,2857,1821,1821,"j = (j-1)", 0, 2, 0);
	trans[1][2854]	= settr(3070,0,2855,2,0,"else", 0, 2, 0);
	trans[1][2855]	= settr(3071,0,4397,1822,1822,"j = 1", 0, 2, 0);
	trans[1][2856]	= settr(3072,0,4397,1,0,"goto :b27", 0, 2, 0);
	trans[1][2859]	= settr(3075,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3018]	= settr(3234,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][2864]	= settr(3080,0,3016,2,0,"else", 0, 2, 0);
	T = trans[ 1][3016] = settr(3232,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3232,0,2993,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2993] = settr(3209,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3209,0,2990,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2991]	= settr(3207,0,2990,1,0,".(goto)", 0, 2, 0);
	T = trans[1][2990] = settr(3206,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3206,0,2865,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3206,0,2987,0,0,"DO", 0, 2, 0);
	trans[1][2865]	= settr(3081,0,2985,1823,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][2985] = settr(3201,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3201,0,2983,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][2983] = settr(3199,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3199,0,2866,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3199,0,2896,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3199,0,2925,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3199,0,2954,0,0,"IF", 0, 2, 0);
	trans[1][2866]	= settr(3082,0,2895,1824,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][2895] = settr(3111,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3111,0,2886,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2886] = settr(3102,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3102,2,2884,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2884] = settr(3100,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3100,2,2867,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3100,2,2870,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3100,2,2873,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3100,2,2876,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3100,2,2879,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3100,2,2882,0,0,"IF", 1, 2, 0);
	trans[1][2867]	= settr(3083,4,2887,1825,1825,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2868 -> 2887,0 */
	reached1[2868] = 1;
	trans[1][2868]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2869]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2885]	= settr(3101,0,2887,1826,1826,".(goto)", 1, 2, 0);
	trans[1][2870]	= settr(3086,4,2887,1827,1827,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2871 -> 2887,0 */
	reached1[2871] = 1;
	trans[1][2871]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2872]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2873]	= settr(3089,4,2887,1828,1828,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2874 -> 2887,0 */
	reached1[2874] = 1;
	trans[1][2874]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2875]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2876]	= settr(3092,4,2887,1829,1829,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2877 -> 2887,0 */
	reached1[2877] = 1;
	trans[1][2877]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2878]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2879]	= settr(3095,4,2887,1830,1830,"((START==ABORT))", 1, 2, 0); /* m: 2880 -> 2887,0 */
	reached1[2880] = 1;
	trans[1][2880]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2881]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2882]	= settr(3098,2,2883,2,0,"else", 1, 2, 0);
	trans[1][2883]	= settr(3099,4,2887,1831,1831,"(1)", 1, 2, 0); /* m: 2885 -> 2887,0 */
	reached1[2885] = 1;
	trans[1][2887]	= settr(3103,0,2893,1832,1832,"(run Thread(j))", 0, 2, 0);
	T = trans[1][2893] = settr(3109,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3109,0,2888,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3109,0,2891,0,0,"IF", 0, 2, 0);
	trans[1][2888]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2890] = settr(3106,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3106,0,2889,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2889]	= settr(3105,0,2986,1833,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2894]	= settr(3110,0,2986,1,0,".(goto)", 0, 2, 0); /* m: 2986 -> 0,2990 */
	reached1[2986] = 1;
	trans[1][2891]	= settr(3107,0,2892,2,0,"else", 0, 2, 0);
	trans[1][2892]	= settr(3108,0,2990,1834,1834,"(1)", 0, 2, 0); /* m: 2986 -> 2990,0 */
	reached1[2986] = 1;
	trans[1][2984]	= settr(3200,0,2986,1,0,".(goto)", 0, 2, 0); /* m: 2986 -> 0,2990 */
	reached1[2986] = 1;
	trans[1][2896]	= settr(3112,0,2924,1835,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][2924] = settr(3140,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3140,0,2916,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2916] = settr(3132,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3132,2,2914,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2914] = settr(3130,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3130,2,2897,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3130,2,2900,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3130,2,2903,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3130,2,2906,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3130,2,2909,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3130,2,2912,0,0,"IF", 1, 2, 0);
	trans[1][2897]	= settr(3113,4,2922,1836,1836,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2898 -> 2922,0 */
	reached1[2898] = 1;
	trans[1][2898]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2899]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2915]	= settr(3131,0,2922,1837,1837,".(goto)", 1, 2, 0);
	trans[1][2900]	= settr(3116,4,2922,1838,1838,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2901 -> 2922,0 */
	reached1[2901] = 1;
	trans[1][2901]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2902]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2903]	= settr(3119,4,2922,1839,1839,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2904 -> 2922,0 */
	reached1[2904] = 1;
	trans[1][2904]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2905]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2906]	= settr(3122,4,2922,1840,1840,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2907 -> 2922,0 */
	reached1[2907] = 1;
	trans[1][2907]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2908]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2909]	= settr(3125,4,2922,1841,1841,"((PAUSE==ABORT))", 1, 2, 0); /* m: 2910 -> 2922,0 */
	reached1[2910] = 1;
	trans[1][2910]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2911]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2912]	= settr(3128,2,2913,2,0,"else", 1, 2, 0);
	trans[1][2913]	= settr(3129,4,2922,1842,1842,"(1)", 1, 2, 0); /* m: 2915 -> 2922,0 */
	reached1[2915] = 1;
	T = trans[1][2922] = settr(3138,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3138,0,2917,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3138,0,2920,0,0,"IF", 0, 2, 0);
	trans[1][2917]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2919] = settr(3135,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3135,0,2918,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2918]	= settr(3134,0,2986,1843,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2923]	= settr(3139,0,2986,1,0,".(goto)", 0, 2, 0); /* m: 2986 -> 0,2990 */
	reached1[2986] = 1;
	trans[1][2920]	= settr(3136,0,2921,2,0,"else", 0, 2, 0);
	trans[1][2921]	= settr(3137,0,2990,1844,1844,"(1)", 0, 2, 0); /* m: 2986 -> 2990,0 */
	reached1[2986] = 1;
	trans[1][2925]	= settr(3141,0,2953,1845,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][2953] = settr(3169,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3169,0,2945,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2945] = settr(3161,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3161,2,2943,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2943] = settr(3159,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3159,2,2926,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3159,2,2929,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3159,2,2932,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3159,2,2935,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3159,2,2938,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3159,2,2941,0,0,"IF", 1, 2, 0);
	trans[1][2926]	= settr(3142,4,2951,1846,1846,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2927 -> 2951,0 */
	reached1[2927] = 1;
	trans[1][2927]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2928]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2944]	= settr(3160,0,2951,1847,1847,".(goto)", 1, 2, 0);
	trans[1][2929]	= settr(3145,4,2951,1848,1848,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2930 -> 2951,0 */
	reached1[2930] = 1;
	trans[1][2930]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2931]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2932]	= settr(3148,4,2951,1849,1849,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2933 -> 2951,0 */
	reached1[2933] = 1;
	trans[1][2933]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2934]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2935]	= settr(3151,4,2951,1850,1850,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2936 -> 2951,0 */
	reached1[2936] = 1;
	trans[1][2936]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2937]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2938]	= settr(3154,4,2951,1851,1851,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 2939 -> 2951,0 */
	reached1[2939] = 1;
	trans[1][2939]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2940]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2941]	= settr(3157,2,2942,2,0,"else", 1, 2, 0);
	trans[1][2942]	= settr(3158,4,2951,1852,1852,"(1)", 1, 2, 0); /* m: 2944 -> 2951,0 */
	reached1[2944] = 1;
	T = trans[1][2951] = settr(3167,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3167,0,2946,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3167,0,2949,0,0,"IF", 0, 2, 0);
	trans[1][2946]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2948] = settr(3164,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3164,0,2947,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2947]	= settr(3163,0,2986,1853,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2952]	= settr(3168,0,2986,1,0,".(goto)", 0, 2, 0); /* m: 2986 -> 0,2990 */
	reached1[2986] = 1;
	trans[1][2949]	= settr(3165,0,2950,2,0,"else", 0, 2, 0);
	trans[1][2950]	= settr(3166,0,2990,1854,1854,"(1)", 0, 2, 0); /* m: 2986 -> 2990,0 */
	reached1[2986] = 1;
	trans[1][2954]	= settr(3170,0,2982,1855,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][2982] = settr(3198,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3198,0,2974,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][2974] = settr(3190,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3190,2,2972,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][2972] = settr(3188,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3188,2,2955,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3188,2,2958,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3188,2,2961,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3188,2,2964,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3188,2,2967,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3188,2,2970,0,0,"IF", 1, 2, 0);
	trans[1][2955]	= settr(3171,4,2980,1856,1856,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2956 -> 2980,0 */
	reached1[2956] = 1;
	trans[1][2956]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][2957]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][2973]	= settr(3189,0,2980,1857,1857,".(goto)", 1, 2, 0);
	trans[1][2958]	= settr(3174,4,2980,1858,1858,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 2959 -> 2980,0 */
	reached1[2959] = 1;
	trans[1][2959]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][2960]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][2961]	= settr(3177,4,2980,1859,1859,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2962 -> 2980,0 */
	reached1[2962] = 1;
	trans[1][2962]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][2963]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][2964]	= settr(3180,4,2980,1860,1860,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 2965 -> 2980,0 */
	reached1[2965] = 1;
	trans[1][2965]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][2966]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][2967]	= settr(3183,4,2980,1861,1861,"((STOP==ABORT))", 1, 2, 0); /* m: 2968 -> 2980,0 */
	reached1[2968] = 1;
	trans[1][2968]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][2969]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][2970]	= settr(3186,2,2971,2,0,"else", 1, 2, 0);
	trans[1][2971]	= settr(3187,4,2980,1862,1862,"(1)", 1, 2, 0); /* m: 2973 -> 2980,0 */
	reached1[2973] = 1;
	T = trans[1][2980] = settr(3196,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3196,0,2975,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3196,0,2978,0,0,"IF", 0, 2, 0);
	trans[1][2975]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][2977] = settr(3193,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3193,0,2976,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2976]	= settr(3192,0,2986,1863,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][2981]	= settr(3197,0,2986,1,0,".(goto)", 0, 2, 0); /* m: 2986 -> 0,2990 */
	reached1[2986] = 1;
	trans[1][2978]	= settr(3194,0,2979,2,0,"else", 0, 2, 0);
	trans[1][2979]	= settr(3195,0,2990,1864,1864,"(1)", 0, 2, 0); /* m: 2986 -> 2990,0 */
	reached1[2986] = 1;
	trans[1][2986]	= settr(3202,0,2990,1865,1865,"j = (j+1)", 0, 2, 0);
	trans[1][2987]	= settr(3203,0,2988,2,0,"else", 0, 2, 0);
	trans[1][2988]	= settr(3204,0,3013,1866,1866,"j = 1", 0, 2, 0);
	trans[1][2989]	= settr(3205,0,3013,1,0,"goto :b28", 0, 2, 0);
	trans[1][2992]	= settr(3208,0,3013,1,0,"break", 0, 2, 0);
	trans[1][3014]	= settr(3230,0,3013,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3013] = settr(3229,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3229,0,2994,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3229,0,3010,0,0,"DO", 0, 2, 0);
	trans[1][2994]	= settr(3210,0,3007,1867,0,"((j<3))", 0, 2, 0);
	T = trans[1][3007] = settr(3223,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3223,0,2995,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3223,0,2998,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3223,0,3001,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3223,0,3004,0,0,"IF", 0, 2, 0);
	trans[1][2995]	= settr(3211,0,2997,1868,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][2997] = settr(3213,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3213,0,2996,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2996]	= settr(3212,0,3009,1869,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3008]	= settr(3224,0,3009,1,0,".(goto)", 0, 2, 0); /* m: 3009 -> 0,3013 */
	reached1[3009] = 1;
	trans[1][2998]	= settr(3214,0,3000,1870,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3000] = settr(3216,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3216,0,2999,0,0,"sub-sequence", 0, 2, 0);
	trans[1][2999]	= settr(3215,0,3009,1871,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3001]	= settr(3217,0,3003,1872,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][3003] = settr(3219,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3219,0,3002,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3002]	= settr(3218,0,3009,1873,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3004]	= settr(3220,0,3006,1874,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][3006] = settr(3222,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3222,0,3005,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3005]	= settr(3221,0,3009,1875,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3009]	= settr(3225,0,3013,1876,1876,"j = (j+1)", 0, 2, 0);
	trans[1][3010]	= settr(3226,0,3011,2,0,"else", 0, 2, 0);
	trans[1][3011]	= settr(3227,0,4397,1877,1877,"j = 1", 0, 2, 0);
	trans[1][3012]	= settr(3228,0,4397,1,0,"goto :b29", 0, 2, 0);
	trans[1][3015]	= settr(3231,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3022]	= settr(3238,0,3023,2,0,"else", 0, 2, 0);
	trans[1][3023]	= settr(3239,0,4397,1,0,"(1)", 0, 2, 0);
	trans[1][4320]	= settr(4536,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3028]	= settr(3244,0,4316,1878,0,"((states[0]==PAUSED))", 1, 2, 0);
	T = trans[ 1][4316] = settr(4532,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4532,0,3029,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3029]	= settr(3245,0,4315,1879,1879,"states[0] = 11", 1, 2, 0);
	T = trans[ 1][4315] = settr(4531,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4531,0,4313,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4313] = settr(4529,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4529,0,3030,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4529,0,3457,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4529,0,3884,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4529,0,4311,0,0,"IF", 0, 2, 0);
	trans[1][3030]	= settr(3246,0,3456,1880,0,"((11==RUNNING))", 0, 2, 0);
	T = trans[ 1][3456] = settr(3672,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3672,0,3454,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3454] = settr(3670,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3670,0,3031,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3670,0,3033,0,0,"IF", 0, 2, 0);
	trans[1][3031]	= settr(3247,0,3032,1881,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][3032]	= settr(3248,0,4397,1882,1882,"supervisor_started = 1", 1, 2, 0);
	trans[1][3455]	= settr(3671,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3033]	= settr(3249,0,3452,2,0,"else", 0, 2, 0);
	T = trans[1][3452] = settr(3668,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3668,0,3034,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3668,0,3299,0,0,"IF", 0, 2, 0);
	trans[1][3034]	= settr(3250,0,3298,1883,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][3298] = settr(3514,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3514,0,3296,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3296] = settr(3512,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3512,0,3035,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3512,0,3165,0,0,"IF", 0, 2, 0);
	trans[1][3035]	= settr(3251,0,3164,1884,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][3164] = settr(3380,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3380,0,3161,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3162]	= settr(3378,0,3161,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3161] = settr(3377,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3377,0,3036,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3377,0,3158,0,0,"DO", 0, 2, 0);
	trans[1][3036]	= settr(3252,0,3156,1885,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][3156] = settr(3372,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3372,0,3154,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3154] = settr(3370,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3370,0,3037,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3370,0,3067,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3370,0,3096,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3370,0,3125,0,0,"IF", 0, 2, 0);
	trans[1][3037]	= settr(3253,0,3066,1886,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][3066] = settr(3282,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3282,0,3057,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3057] = settr(3273,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3273,2,3055,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3055] = settr(3271,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3271,2,3038,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3271,2,3041,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3271,2,3044,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3271,2,3047,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3271,2,3050,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3271,2,3053,0,0,"IF", 1, 2, 0);
	trans[1][3038]	= settr(3254,4,3058,1887,1887,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3039 -> 3058,0 */
	reached1[3039] = 1;
	trans[1][3039]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3040]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3056]	= settr(3272,0,3058,1888,1888,".(goto)", 1, 2, 0);
	trans[1][3041]	= settr(3257,4,3058,1889,1889,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3042 -> 3058,0 */
	reached1[3042] = 1;
	trans[1][3042]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3043]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3044]	= settr(3260,4,3058,1890,1890,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3045 -> 3058,0 */
	reached1[3045] = 1;
	trans[1][3045]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3046]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3047]	= settr(3263,4,3058,1891,1891,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3048 -> 3058,0 */
	reached1[3048] = 1;
	trans[1][3048]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3049]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3050]	= settr(3266,4,3058,1892,1892,"((START==ABORT))", 1, 2, 0); /* m: 3051 -> 3058,0 */
	reached1[3051] = 1;
	trans[1][3051]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3052]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3053]	= settr(3269,2,3054,2,0,"else", 1, 2, 0);
	trans[1][3054]	= settr(3270,4,3058,1893,1893,"(1)", 1, 2, 0); /* m: 3056 -> 3058,0 */
	reached1[3056] = 1;
	trans[1][3058]	= settr(3274,0,3064,1894,1894,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3064] = settr(3280,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3280,0,3059,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3280,0,3062,0,0,"IF", 0, 2, 0);
	trans[1][3059]	= settr(3275,0,3061,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3061] = settr(3277,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3277,0,3060,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3060]	= settr(3276,0,3157,1895,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3065]	= settr(3281,0,3157,1,0,".(goto)", 0, 2, 0); /* m: 3157 -> 0,3161 */
	reached1[3157] = 1;
	trans[1][3062]	= settr(3278,0,3063,2,0,"else", 0, 2, 0);
	trans[1][3063]	= settr(3279,0,3161,1896,1896,"(1)", 0, 2, 0); /* m: 3157 -> 3161,0 */
	reached1[3157] = 1;
	trans[1][3155]	= settr(3371,0,3157,1,0,".(goto)", 0, 2, 0); /* m: 3157 -> 0,3161 */
	reached1[3157] = 1;
	trans[1][3067]	= settr(3283,0,3095,1897,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][3095] = settr(3311,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3311,0,3087,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3087] = settr(3303,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3303,2,3085,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3085] = settr(3301,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3301,2,3068,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3301,2,3071,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3301,2,3074,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3301,2,3077,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3301,2,3080,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3301,2,3083,0,0,"IF", 1, 2, 0);
	trans[1][3068]	= settr(3284,4,3093,1898,1898,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3069 -> 3093,0 */
	reached1[3069] = 1;
	trans[1][3069]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3070]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3086]	= settr(3302,0,3093,1899,1899,".(goto)", 1, 2, 0);
	trans[1][3071]	= settr(3287,4,3093,1900,1900,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3072 -> 3093,0 */
	reached1[3072] = 1;
	trans[1][3072]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3073]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3074]	= settr(3290,4,3093,1901,1901,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3075 -> 3093,0 */
	reached1[3075] = 1;
	trans[1][3075]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3076]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3077]	= settr(3293,4,3093,1902,1902,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3078 -> 3093,0 */
	reached1[3078] = 1;
	trans[1][3078]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3079]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3080]	= settr(3296,4,3093,1903,1903,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3081 -> 3093,0 */
	reached1[3081] = 1;
	trans[1][3081]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3082]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3083]	= settr(3299,2,3084,2,0,"else", 1, 2, 0);
	trans[1][3084]	= settr(3300,4,3093,1904,1904,"(1)", 1, 2, 0); /* m: 3086 -> 3093,0 */
	reached1[3086] = 1;
	T = trans[1][3093] = settr(3309,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3309,0,3088,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3309,0,3091,0,0,"IF", 0, 2, 0);
	trans[1][3088]	= settr(3304,0,3090,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3090] = settr(3306,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3306,0,3089,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3089]	= settr(3305,0,3157,1905,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3094]	= settr(3310,0,3157,1,0,".(goto)", 0, 2, 0); /* m: 3157 -> 0,3161 */
	reached1[3157] = 1;
	trans[1][3091]	= settr(3307,0,3092,2,0,"else", 0, 2, 0);
	trans[1][3092]	= settr(3308,0,3161,1906,1906,"(1)", 0, 2, 0); /* m: 3157 -> 3161,0 */
	reached1[3157] = 1;
	trans[1][3096]	= settr(3312,0,3124,1907,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3124] = settr(3340,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3340,0,3116,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3116] = settr(3332,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3332,2,3114,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3114] = settr(3330,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3330,2,3097,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3330,2,3100,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3330,2,3103,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3330,2,3106,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3330,2,3109,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3330,2,3112,0,0,"IF", 1, 2, 0);
	trans[1][3097]	= settr(3313,4,3122,1908,1908,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3098 -> 3122,0 */
	reached1[3098] = 1;
	trans[1][3098]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3099]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3115]	= settr(3331,0,3122,1909,1909,".(goto)", 1, 2, 0);
	trans[1][3100]	= settr(3316,4,3122,1910,1910,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3101 -> 3122,0 */
	reached1[3101] = 1;
	trans[1][3101]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3102]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3103]	= settr(3319,4,3122,1911,1911,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3104 -> 3122,0 */
	reached1[3104] = 1;
	trans[1][3104]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3105]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3106]	= settr(3322,4,3122,1912,1912,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3107 -> 3122,0 */
	reached1[3107] = 1;
	trans[1][3107]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3108]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3109]	= settr(3325,4,3122,1913,1913,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3110 -> 3122,0 */
	reached1[3110] = 1;
	trans[1][3110]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3111]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3112]	= settr(3328,2,3113,2,0,"else", 1, 2, 0);
	trans[1][3113]	= settr(3329,4,3122,1914,1914,"(1)", 1, 2, 0); /* m: 3115 -> 3122,0 */
	reached1[3115] = 1;
	T = trans[1][3122] = settr(3338,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3338,0,3117,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3338,0,3120,0,0,"IF", 0, 2, 0);
	trans[1][3117]	= settr(3333,0,3119,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3119] = settr(3335,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3335,0,3118,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3118]	= settr(3334,0,3157,1915,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3123]	= settr(3339,0,3157,1,0,".(goto)", 0, 2, 0); /* m: 3157 -> 0,3161 */
	reached1[3157] = 1;
	trans[1][3120]	= settr(3336,0,3121,2,0,"else", 0, 2, 0);
	trans[1][3121]	= settr(3337,0,3161,1916,1916,"(1)", 0, 2, 0); /* m: 3157 -> 3161,0 */
	reached1[3157] = 1;
	trans[1][3125]	= settr(3341,0,3153,1917,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][3153] = settr(3369,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3369,0,3145,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3145] = settr(3361,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3361,2,3143,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3143] = settr(3359,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3359,2,3126,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3359,2,3129,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3359,2,3132,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3359,2,3135,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3359,2,3138,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3359,2,3141,0,0,"IF", 1, 2, 0);
	trans[1][3126]	= settr(3342,4,3151,1918,1918,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3127 -> 3151,0 */
	reached1[3127] = 1;
	trans[1][3127]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3128]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3144]	= settr(3360,0,3151,1919,1919,".(goto)", 1, 2, 0);
	trans[1][3129]	= settr(3345,4,3151,1920,1920,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3130 -> 3151,0 */
	reached1[3130] = 1;
	trans[1][3130]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3131]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3132]	= settr(3348,4,3151,1921,1921,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3133 -> 3151,0 */
	reached1[3133] = 1;
	trans[1][3133]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3134]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3135]	= settr(3351,4,3151,1922,1922,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3136 -> 3151,0 */
	reached1[3136] = 1;
	trans[1][3136]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3137]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3138]	= settr(3354,4,3151,1923,1923,"((STOP==ABORT))", 1, 2, 0); /* m: 3139 -> 3151,0 */
	reached1[3139] = 1;
	trans[1][3139]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3140]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3141]	= settr(3357,2,3142,2,0,"else", 1, 2, 0);
	trans[1][3142]	= settr(3358,4,3151,1924,1924,"(1)", 1, 2, 0); /* m: 3144 -> 3151,0 */
	reached1[3144] = 1;
	T = trans[1][3151] = settr(3367,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3367,0,3146,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3367,0,3149,0,0,"IF", 0, 2, 0);
	trans[1][3146]	= settr(3362,0,3148,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3148] = settr(3364,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3364,0,3147,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3147]	= settr(3363,0,3157,1925,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3152]	= settr(3368,0,3157,1,0,".(goto)", 0, 2, 0); /* m: 3157 -> 0,3161 */
	reached1[3157] = 1;
	trans[1][3149]	= settr(3365,0,3150,2,0,"else", 0, 2, 0);
	trans[1][3150]	= settr(3366,0,3161,1926,1926,"(1)", 0, 2, 0); /* m: 3157 -> 3161,0 */
	reached1[3157] = 1;
	trans[1][3157]	= settr(3373,0,3161,1927,1927,"j = (j+1)", 0, 2, 0);
	trans[1][3158]	= settr(3374,0,3159,2,0,"else", 0, 2, 0);
	trans[1][3159]	= settr(3375,0,4397,1928,1928,"j = 1", 0, 2, 0);
	trans[1][3160]	= settr(3376,0,4397,1,0,"goto :b30", 0, 2, 0);
	trans[1][3163]	= settr(3379,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3297]	= settr(3513,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3165]	= settr(3381,0,3295,2,0,"else", 0, 2, 0);
	T = trans[ 1][3295] = settr(3511,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3511,0,3166,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3166]	= settr(3382,0,3292,1929,1929,"j = (3-1)", 0, 2, 0);
	trans[1][3293]	= settr(3509,0,3292,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3292] = settr(3508,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3508,0,3167,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3508,0,3289,0,0,"DO", 0, 2, 0);
	trans[1][3167]	= settr(3383,0,3287,1930,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][3287] = settr(3503,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3503,0,3285,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3285] = settr(3501,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3501,0,3168,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3501,0,3198,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3501,0,3227,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3501,0,3256,0,0,"IF", 0, 2, 0);
	trans[1][3168]	= settr(3384,0,3197,1931,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][3197] = settr(3413,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3413,0,3188,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3188] = settr(3404,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3404,2,3186,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3186] = settr(3402,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3402,2,3169,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3402,2,3172,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3402,2,3175,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3402,2,3178,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3402,2,3181,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3402,2,3184,0,0,"IF", 1, 2, 0);
	trans[1][3169]	= settr(3385,4,3189,1932,1932,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3170 -> 3189,0 */
	reached1[3170] = 1;
	trans[1][3170]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3171]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3187]	= settr(3403,0,3189,1933,1933,".(goto)", 1, 2, 0);
	trans[1][3172]	= settr(3388,4,3189,1934,1934,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3173 -> 3189,0 */
	reached1[3173] = 1;
	trans[1][3173]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3174]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3175]	= settr(3391,4,3189,1935,1935,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3176 -> 3189,0 */
	reached1[3176] = 1;
	trans[1][3176]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3177]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3178]	= settr(3394,4,3189,1936,1936,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3179 -> 3189,0 */
	reached1[3179] = 1;
	trans[1][3179]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3180]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3181]	= settr(3397,4,3189,1937,1937,"((START==ABORT))", 1, 2, 0); /* m: 3182 -> 3189,0 */
	reached1[3182] = 1;
	trans[1][3182]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3183]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3184]	= settr(3400,2,3185,2,0,"else", 1, 2, 0);
	trans[1][3185]	= settr(3401,4,3189,1938,1938,"(1)", 1, 2, 0); /* m: 3187 -> 3189,0 */
	reached1[3187] = 1;
	trans[1][3189]	= settr(3405,0,3195,1939,1939,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3195] = settr(3411,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3411,0,3190,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3411,0,3193,0,0,"IF", 0, 2, 0);
	trans[1][3190]	= settr(3406,0,3192,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3192] = settr(3408,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3408,0,3191,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3191]	= settr(3407,0,3288,1940,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3196]	= settr(3412,0,3288,1,0,".(goto)", 0, 2, 0); /* m: 3288 -> 0,3292 */
	reached1[3288] = 1;
	trans[1][3193]	= settr(3409,0,3194,2,0,"else", 0, 2, 0);
	trans[1][3194]	= settr(3410,0,3292,1941,1941,"(1)", 0, 2, 0); /* m: 3288 -> 3292,0 */
	reached1[3288] = 1;
	trans[1][3286]	= settr(3502,0,3288,1,0,".(goto)", 0, 2, 0); /* m: 3288 -> 0,3292 */
	reached1[3288] = 1;
	trans[1][3198]	= settr(3414,0,3226,1942,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][3226] = settr(3442,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3442,0,3218,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3218] = settr(3434,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3434,2,3216,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3216] = settr(3432,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3432,2,3199,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3432,2,3202,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3432,2,3205,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3432,2,3208,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3432,2,3211,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3432,2,3214,0,0,"IF", 1, 2, 0);
	trans[1][3199]	= settr(3415,4,3224,1943,1943,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3200 -> 3224,0 */
	reached1[3200] = 1;
	trans[1][3200]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3201]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3217]	= settr(3433,0,3224,1944,1944,".(goto)", 1, 2, 0);
	trans[1][3202]	= settr(3418,4,3224,1945,1945,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3203 -> 3224,0 */
	reached1[3203] = 1;
	trans[1][3203]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3204]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3205]	= settr(3421,4,3224,1946,1946,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3206 -> 3224,0 */
	reached1[3206] = 1;
	trans[1][3206]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3207]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3208]	= settr(3424,4,3224,1947,1947,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3209 -> 3224,0 */
	reached1[3209] = 1;
	trans[1][3209]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3210]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3211]	= settr(3427,4,3224,1948,1948,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3212 -> 3224,0 */
	reached1[3212] = 1;
	trans[1][3212]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3213]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3214]	= settr(3430,2,3215,2,0,"else", 1, 2, 0);
	trans[1][3215]	= settr(3431,4,3224,1949,1949,"(1)", 1, 2, 0); /* m: 3217 -> 3224,0 */
	reached1[3217] = 1;
	T = trans[1][3224] = settr(3440,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3440,0,3219,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3440,0,3222,0,0,"IF", 0, 2, 0);
	trans[1][3219]	= settr(3435,0,3221,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3221] = settr(3437,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3437,0,3220,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3220]	= settr(3436,0,3288,1950,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3225]	= settr(3441,0,3288,1,0,".(goto)", 0, 2, 0); /* m: 3288 -> 0,3292 */
	reached1[3288] = 1;
	trans[1][3222]	= settr(3438,0,3223,2,0,"else", 0, 2, 0);
	trans[1][3223]	= settr(3439,0,3292,1951,1951,"(1)", 0, 2, 0); /* m: 3288 -> 3292,0 */
	reached1[3288] = 1;
	trans[1][3227]	= settr(3443,0,3255,1952,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3255] = settr(3471,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3471,0,3247,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3247] = settr(3463,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3463,2,3245,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3245] = settr(3461,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3461,2,3228,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3461,2,3231,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3461,2,3234,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3461,2,3237,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3461,2,3240,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3461,2,3243,0,0,"IF", 1, 2, 0);
	trans[1][3228]	= settr(3444,4,3253,1953,1953,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3229 -> 3253,0 */
	reached1[3229] = 1;
	trans[1][3229]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3230]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3246]	= settr(3462,0,3253,1954,1954,".(goto)", 1, 2, 0);
	trans[1][3231]	= settr(3447,4,3253,1955,1955,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3232 -> 3253,0 */
	reached1[3232] = 1;
	trans[1][3232]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3233]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3234]	= settr(3450,4,3253,1956,1956,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3235 -> 3253,0 */
	reached1[3235] = 1;
	trans[1][3235]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3236]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3237]	= settr(3453,4,3253,1957,1957,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3238 -> 3253,0 */
	reached1[3238] = 1;
	trans[1][3238]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3239]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3240]	= settr(3456,4,3253,1958,1958,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3241 -> 3253,0 */
	reached1[3241] = 1;
	trans[1][3241]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3242]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3243]	= settr(3459,2,3244,2,0,"else", 1, 2, 0);
	trans[1][3244]	= settr(3460,4,3253,1959,1959,"(1)", 1, 2, 0); /* m: 3246 -> 3253,0 */
	reached1[3246] = 1;
	T = trans[1][3253] = settr(3469,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3469,0,3248,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3469,0,3251,0,0,"IF", 0, 2, 0);
	trans[1][3248]	= settr(3464,0,3250,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3250] = settr(3466,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3466,0,3249,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3249]	= settr(3465,0,3288,1960,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3254]	= settr(3470,0,3288,1,0,".(goto)", 0, 2, 0); /* m: 3288 -> 0,3292 */
	reached1[3288] = 1;
	trans[1][3251]	= settr(3467,0,3252,2,0,"else", 0, 2, 0);
	trans[1][3252]	= settr(3468,0,3292,1961,1961,"(1)", 0, 2, 0); /* m: 3288 -> 3292,0 */
	reached1[3288] = 1;
	trans[1][3256]	= settr(3472,0,3284,1962,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][3284] = settr(3500,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3500,0,3276,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3276] = settr(3492,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3492,2,3274,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3274] = settr(3490,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3490,2,3257,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3490,2,3260,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3490,2,3263,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3490,2,3266,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3490,2,3269,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3490,2,3272,0,0,"IF", 1, 2, 0);
	trans[1][3257]	= settr(3473,4,3282,1963,1963,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3258 -> 3282,0 */
	reached1[3258] = 1;
	trans[1][3258]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3259]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3275]	= settr(3491,0,3282,1964,1964,".(goto)", 1, 2, 0);
	trans[1][3260]	= settr(3476,4,3282,1965,1965,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3261 -> 3282,0 */
	reached1[3261] = 1;
	trans[1][3261]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3262]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3263]	= settr(3479,4,3282,1966,1966,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3264 -> 3282,0 */
	reached1[3264] = 1;
	trans[1][3264]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3265]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3266]	= settr(3482,4,3282,1967,1967,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3267 -> 3282,0 */
	reached1[3267] = 1;
	trans[1][3267]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3268]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3269]	= settr(3485,4,3282,1968,1968,"((STOP==ABORT))", 1, 2, 0); /* m: 3270 -> 3282,0 */
	reached1[3270] = 1;
	trans[1][3270]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3271]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3272]	= settr(3488,2,3273,2,0,"else", 1, 2, 0);
	trans[1][3273]	= settr(3489,4,3282,1969,1969,"(1)", 1, 2, 0); /* m: 3275 -> 3282,0 */
	reached1[3275] = 1;
	T = trans[1][3282] = settr(3498,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3498,0,3277,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3498,0,3280,0,0,"IF", 0, 2, 0);
	trans[1][3277]	= settr(3493,0,3279,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3279] = settr(3495,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3495,0,3278,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3278]	= settr(3494,0,3288,1970,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3283]	= settr(3499,0,3288,1,0,".(goto)", 0, 2, 0); /* m: 3288 -> 0,3292 */
	reached1[3288] = 1;
	trans[1][3280]	= settr(3496,0,3281,2,0,"else", 0, 2, 0);
	trans[1][3281]	= settr(3497,0,3292,1971,1971,"(1)", 0, 2, 0); /* m: 3288 -> 3292,0 */
	reached1[3288] = 1;
	trans[1][3288]	= settr(3504,0,3292,1972,1972,"j = (j-1)", 0, 2, 0);
	trans[1][3289]	= settr(3505,0,3290,2,0,"else", 0, 2, 0);
	trans[1][3290]	= settr(3506,0,4397,1973,1973,"j = 1", 0, 2, 0);
	trans[1][3291]	= settr(3507,0,4397,1,0,"goto :b31", 0, 2, 0);
	trans[1][3294]	= settr(3510,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3453]	= settr(3669,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3299]	= settr(3515,0,3451,2,0,"else", 0, 2, 0);
	T = trans[ 1][3451] = settr(3667,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3667,0,3428,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3428] = settr(3644,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3644,0,3425,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3426]	= settr(3642,0,3425,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3425] = settr(3641,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3641,0,3300,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3641,0,3422,0,0,"DO", 0, 2, 0);
	trans[1][3300]	= settr(3516,0,3420,1974,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][3420] = settr(3636,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3636,0,3418,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3418] = settr(3634,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3634,0,3301,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3634,0,3331,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3634,0,3360,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3634,0,3389,0,0,"IF", 0, 2, 0);
	trans[1][3301]	= settr(3517,0,3330,1975,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][3330] = settr(3546,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3546,0,3321,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3321] = settr(3537,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3537,2,3319,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3319] = settr(3535,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3535,2,3302,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3535,2,3305,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3535,2,3308,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3535,2,3311,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3535,2,3314,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3535,2,3317,0,0,"IF", 1, 2, 0);
	trans[1][3302]	= settr(3518,4,3322,1976,1976,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3303 -> 3322,0 */
	reached1[3303] = 1;
	trans[1][3303]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3304]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3320]	= settr(3536,0,3322,1977,1977,".(goto)", 1, 2, 0);
	trans[1][3305]	= settr(3521,4,3322,1978,1978,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3306 -> 3322,0 */
	reached1[3306] = 1;
	trans[1][3306]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3307]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3308]	= settr(3524,4,3322,1979,1979,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3309 -> 3322,0 */
	reached1[3309] = 1;
	trans[1][3309]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3310]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3311]	= settr(3527,4,3322,1980,1980,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3312 -> 3322,0 */
	reached1[3312] = 1;
	trans[1][3312]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3313]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3314]	= settr(3530,4,3322,1981,1981,"((START==ABORT))", 1, 2, 0); /* m: 3315 -> 3322,0 */
	reached1[3315] = 1;
	trans[1][3315]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3316]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3317]	= settr(3533,2,3318,2,0,"else", 1, 2, 0);
	trans[1][3318]	= settr(3534,4,3322,1982,1982,"(1)", 1, 2, 0); /* m: 3320 -> 3322,0 */
	reached1[3320] = 1;
	trans[1][3322]	= settr(3538,0,3328,1983,1983,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3328] = settr(3544,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3544,0,3323,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3544,0,3326,0,0,"IF", 0, 2, 0);
	trans[1][3323]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3325] = settr(3541,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3541,0,3324,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3324]	= settr(3540,0,3421,1984,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3329]	= settr(3545,0,3421,1,0,".(goto)", 0, 2, 0); /* m: 3421 -> 0,3425 */
	reached1[3421] = 1;
	trans[1][3326]	= settr(3542,0,3327,2,0,"else", 0, 2, 0);
	trans[1][3327]	= settr(3543,0,3425,1985,1985,"(1)", 0, 2, 0); /* m: 3421 -> 3425,0 */
	reached1[3421] = 1;
	trans[1][3419]	= settr(3635,0,3421,1,0,".(goto)", 0, 2, 0); /* m: 3421 -> 0,3425 */
	reached1[3421] = 1;
	trans[1][3331]	= settr(3547,0,3359,1986,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][3359] = settr(3575,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3575,0,3351,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3351] = settr(3567,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3567,2,3349,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3349] = settr(3565,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3565,2,3332,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3565,2,3335,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3565,2,3338,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3565,2,3341,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3565,2,3344,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3565,2,3347,0,0,"IF", 1, 2, 0);
	trans[1][3332]	= settr(3548,4,3357,1987,1987,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3333 -> 3357,0 */
	reached1[3333] = 1;
	trans[1][3333]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3334]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3350]	= settr(3566,0,3357,1988,1988,".(goto)", 1, 2, 0);
	trans[1][3335]	= settr(3551,4,3357,1989,1989,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3336 -> 3357,0 */
	reached1[3336] = 1;
	trans[1][3336]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3337]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3338]	= settr(3554,4,3357,1990,1990,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3339 -> 3357,0 */
	reached1[3339] = 1;
	trans[1][3339]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3340]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3341]	= settr(3557,4,3357,1991,1991,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3342 -> 3357,0 */
	reached1[3342] = 1;
	trans[1][3342]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3343]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3344]	= settr(3560,4,3357,1992,1992,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3345 -> 3357,0 */
	reached1[3345] = 1;
	trans[1][3345]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3346]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3347]	= settr(3563,2,3348,2,0,"else", 1, 2, 0);
	trans[1][3348]	= settr(3564,4,3357,1993,1993,"(1)", 1, 2, 0); /* m: 3350 -> 3357,0 */
	reached1[3350] = 1;
	T = trans[1][3357] = settr(3573,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3573,0,3352,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3573,0,3355,0,0,"IF", 0, 2, 0);
	trans[1][3352]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3354] = settr(3570,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3570,0,3353,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3353]	= settr(3569,0,3421,1994,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3358]	= settr(3574,0,3421,1,0,".(goto)", 0, 2, 0); /* m: 3421 -> 0,3425 */
	reached1[3421] = 1;
	trans[1][3355]	= settr(3571,0,3356,2,0,"else", 0, 2, 0);
	trans[1][3356]	= settr(3572,0,3425,1995,1995,"(1)", 0, 2, 0); /* m: 3421 -> 3425,0 */
	reached1[3421] = 1;
	trans[1][3360]	= settr(3576,0,3388,1996,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3388] = settr(3604,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3604,0,3380,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3380] = settr(3596,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3596,2,3378,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3378] = settr(3594,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3594,2,3361,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3594,2,3364,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3594,2,3367,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3594,2,3370,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3594,2,3373,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3594,2,3376,0,0,"IF", 1, 2, 0);
	trans[1][3361]	= settr(3577,4,3386,1997,1997,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3362 -> 3386,0 */
	reached1[3362] = 1;
	trans[1][3362]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3363]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3379]	= settr(3595,0,3386,1998,1998,".(goto)", 1, 2, 0);
	trans[1][3364]	= settr(3580,4,3386,1999,1999,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3365 -> 3386,0 */
	reached1[3365] = 1;
	trans[1][3365]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3366]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3367]	= settr(3583,4,3386,2000,2000,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3368 -> 3386,0 */
	reached1[3368] = 1;
	trans[1][3368]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3369]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3370]	= settr(3586,4,3386,2001,2001,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3371 -> 3386,0 */
	reached1[3371] = 1;
	trans[1][3371]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3372]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3373]	= settr(3589,4,3386,2002,2002,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3374 -> 3386,0 */
	reached1[3374] = 1;
	trans[1][3374]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3375]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3376]	= settr(3592,2,3377,2,0,"else", 1, 2, 0);
	trans[1][3377]	= settr(3593,4,3386,2003,2003,"(1)", 1, 2, 0); /* m: 3379 -> 3386,0 */
	reached1[3379] = 1;
	T = trans[1][3386] = settr(3602,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3602,0,3381,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3602,0,3384,0,0,"IF", 0, 2, 0);
	trans[1][3381]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3383] = settr(3599,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3599,0,3382,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3382]	= settr(3598,0,3421,2004,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3387]	= settr(3603,0,3421,1,0,".(goto)", 0, 2, 0); /* m: 3421 -> 0,3425 */
	reached1[3421] = 1;
	trans[1][3384]	= settr(3600,0,3385,2,0,"else", 0, 2, 0);
	trans[1][3385]	= settr(3601,0,3425,2005,2005,"(1)", 0, 2, 0); /* m: 3421 -> 3425,0 */
	reached1[3421] = 1;
	trans[1][3389]	= settr(3605,0,3417,2006,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][3417] = settr(3633,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3633,0,3409,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3409] = settr(3625,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3625,2,3407,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3407] = settr(3623,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3623,2,3390,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3623,2,3393,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3623,2,3396,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3623,2,3399,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3623,2,3402,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3623,2,3405,0,0,"IF", 1, 2, 0);
	trans[1][3390]	= settr(3606,4,3415,2007,2007,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3391 -> 3415,0 */
	reached1[3391] = 1;
	trans[1][3391]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3392]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3408]	= settr(3624,0,3415,2008,2008,".(goto)", 1, 2, 0);
	trans[1][3393]	= settr(3609,4,3415,2009,2009,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3394 -> 3415,0 */
	reached1[3394] = 1;
	trans[1][3394]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3395]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3396]	= settr(3612,4,3415,2010,2010,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3397 -> 3415,0 */
	reached1[3397] = 1;
	trans[1][3397]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3398]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3399]	= settr(3615,4,3415,2011,2011,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3400 -> 3415,0 */
	reached1[3400] = 1;
	trans[1][3400]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3401]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3402]	= settr(3618,4,3415,2012,2012,"((STOP==ABORT))", 1, 2, 0); /* m: 3403 -> 3415,0 */
	reached1[3403] = 1;
	trans[1][3403]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3404]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3405]	= settr(3621,2,3406,2,0,"else", 1, 2, 0);
	trans[1][3406]	= settr(3622,4,3415,2013,2013,"(1)", 1, 2, 0); /* m: 3408 -> 3415,0 */
	reached1[3408] = 1;
	T = trans[1][3415] = settr(3631,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3631,0,3410,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3631,0,3413,0,0,"IF", 0, 2, 0);
	trans[1][3410]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3412] = settr(3628,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3628,0,3411,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3411]	= settr(3627,0,3421,2014,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3416]	= settr(3632,0,3421,1,0,".(goto)", 0, 2, 0); /* m: 3421 -> 0,3425 */
	reached1[3421] = 1;
	trans[1][3413]	= settr(3629,0,3414,2,0,"else", 0, 2, 0);
	trans[1][3414]	= settr(3630,0,3425,2015,2015,"(1)", 0, 2, 0); /* m: 3421 -> 3425,0 */
	reached1[3421] = 1;
	trans[1][3421]	= settr(3637,0,3425,2016,2016,"j = (j+1)", 0, 2, 0);
	trans[1][3422]	= settr(3638,0,3423,2,0,"else", 0, 2, 0);
	trans[1][3423]	= settr(3639,0,3448,2017,2017,"j = 1", 0, 2, 0);
	trans[1][3424]	= settr(3640,0,3448,1,0,"goto :b32", 0, 2, 0);
	trans[1][3427]	= settr(3643,0,3448,1,0,"break", 0, 2, 0);
	trans[1][3449]	= settr(3665,0,3448,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3448] = settr(3664,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3664,0,3429,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3664,0,3445,0,0,"DO", 0, 2, 0);
	trans[1][3429]	= settr(3645,0,3442,2018,0,"((j<3))", 0, 2, 0);
	T = trans[1][3442] = settr(3658,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3658,0,3430,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3658,0,3433,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3658,0,3436,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3658,0,3439,0,0,"IF", 0, 2, 0);
	trans[1][3430]	= settr(3646,0,3432,2019,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][3432] = settr(3648,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3648,0,3431,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3431]	= settr(3647,0,3444,2020,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3443]	= settr(3659,0,3444,1,0,".(goto)", 0, 2, 0); /* m: 3444 -> 0,3448 */
	reached1[3444] = 1;
	trans[1][3433]	= settr(3649,0,3435,2021,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3435] = settr(3651,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3651,0,3434,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3434]	= settr(3650,0,3444,2022,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3436]	= settr(3652,0,3438,2023,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][3438] = settr(3654,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3654,0,3437,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3437]	= settr(3653,0,3444,2024,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3439]	= settr(3655,0,3441,2025,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][3441] = settr(3657,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3657,0,3440,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3440]	= settr(3656,0,3444,2026,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3444]	= settr(3660,0,3448,2027,2027,"j = (j+1)", 0, 2, 0);
	trans[1][3445]	= settr(3661,0,3446,2,0,"else", 0, 2, 0);
	trans[1][3446]	= settr(3662,0,4397,2028,2028,"j = 1", 0, 2, 0);
	trans[1][3447]	= settr(3663,0,4397,1,0,"goto :b33", 0, 2, 0);
	trans[1][3450]	= settr(3666,0,4397,1,0,"break", 0, 2, 0);
	trans[1][4314]	= settr(4530,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3457]	= settr(3673,0,3883,2029,0,"((11==PAUSED))", 0, 2, 0);
	T = trans[ 1][3883] = settr(4099,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4099,0,3881,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3881] = settr(4097,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4097,0,3458,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4097,0,3460,0,0,"IF", 0, 2, 0);
	trans[1][3458]	= settr(3674,0,3459,2030,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][3459]	= settr(3675,0,4397,2031,2031,"supervisor_started = 1", 1, 2, 0);
	trans[1][3882]	= settr(4098,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3460]	= settr(3676,0,3879,2,0,"else", 0, 2, 0);
	T = trans[1][3879] = settr(4095,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4095,0,3461,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4095,0,3726,0,0,"IF", 0, 2, 0);
	trans[1][3461]	= settr(3677,0,3725,2032,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][3725] = settr(3941,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3941,0,3723,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3723] = settr(3939,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3939,0,3462,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3939,0,3592,0,0,"IF", 0, 2, 0);
	trans[1][3462]	= settr(3678,0,3591,2033,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][3591] = settr(3807,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3807,0,3588,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3589]	= settr(3805,0,3588,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3588] = settr(3804,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3804,0,3463,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3804,0,3585,0,0,"DO", 0, 2, 0);
	trans[1][3463]	= settr(3679,0,3583,2034,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][3583] = settr(3799,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3799,0,3581,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3581] = settr(3797,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3797,0,3464,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3797,0,3494,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3797,0,3523,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3797,0,3552,0,0,"IF", 0, 2, 0);
	trans[1][3464]	= settr(3680,0,3493,2035,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][3493] = settr(3709,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3709,0,3484,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3484] = settr(3700,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3700,2,3482,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3482] = settr(3698,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3698,2,3465,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3698,2,3468,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3698,2,3471,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3698,2,3474,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3698,2,3477,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3698,2,3480,0,0,"IF", 1, 2, 0);
	trans[1][3465]	= settr(3681,4,3485,2036,2036,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3466 -> 3485,0 */
	reached1[3466] = 1;
	trans[1][3466]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3467]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3483]	= settr(3699,0,3485,2037,2037,".(goto)", 1, 2, 0);
	trans[1][3468]	= settr(3684,4,3485,2038,2038,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3469 -> 3485,0 */
	reached1[3469] = 1;
	trans[1][3469]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3470]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3471]	= settr(3687,4,3485,2039,2039,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3472 -> 3485,0 */
	reached1[3472] = 1;
	trans[1][3472]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3473]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3474]	= settr(3690,4,3485,2040,2040,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3475 -> 3485,0 */
	reached1[3475] = 1;
	trans[1][3475]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3476]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3477]	= settr(3693,4,3485,2041,2041,"((START==ABORT))", 1, 2, 0); /* m: 3478 -> 3485,0 */
	reached1[3478] = 1;
	trans[1][3478]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3479]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3480]	= settr(3696,2,3481,2,0,"else", 1, 2, 0);
	trans[1][3481]	= settr(3697,4,3485,2042,2042,"(1)", 1, 2, 0); /* m: 3483 -> 3485,0 */
	reached1[3483] = 1;
	trans[1][3485]	= settr(3701,0,3491,2043,2043,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3491] = settr(3707,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3707,0,3486,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3707,0,3489,0,0,"IF", 0, 2, 0);
	trans[1][3486]	= settr(3702,0,3488,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3488] = settr(3704,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3704,0,3487,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3487]	= settr(3703,0,3584,2044,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3492]	= settr(3708,0,3584,1,0,".(goto)", 0, 2, 0); /* m: 3584 -> 0,3588 */
	reached1[3584] = 1;
	trans[1][3489]	= settr(3705,0,3490,2,0,"else", 0, 2, 0);
	trans[1][3490]	= settr(3706,0,3588,2045,2045,"(1)", 0, 2, 0); /* m: 3584 -> 3588,0 */
	reached1[3584] = 1;
	trans[1][3582]	= settr(3798,0,3584,1,0,".(goto)", 0, 2, 0); /* m: 3584 -> 0,3588 */
	reached1[3584] = 1;
	trans[1][3494]	= settr(3710,0,3522,2046,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][3522] = settr(3738,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3738,0,3514,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3514] = settr(3730,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3730,2,3512,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3512] = settr(3728,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3728,2,3495,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3728,2,3498,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3728,2,3501,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3728,2,3504,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3728,2,3507,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3728,2,3510,0,0,"IF", 1, 2, 0);
	trans[1][3495]	= settr(3711,4,3520,2047,2047,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3496 -> 3520,0 */
	reached1[3496] = 1;
	trans[1][3496]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3497]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3513]	= settr(3729,0,3520,2048,2048,".(goto)", 1, 2, 0);
	trans[1][3498]	= settr(3714,4,3520,2049,2049,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3499 -> 3520,0 */
	reached1[3499] = 1;
	trans[1][3499]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3500]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3501]	= settr(3717,4,3520,2050,2050,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3502 -> 3520,0 */
	reached1[3502] = 1;
	trans[1][3502]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3503]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3504]	= settr(3720,4,3520,2051,2051,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3505 -> 3520,0 */
	reached1[3505] = 1;
	trans[1][3505]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3506]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3507]	= settr(3723,4,3520,2052,2052,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3508 -> 3520,0 */
	reached1[3508] = 1;
	trans[1][3508]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3509]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3510]	= settr(3726,2,3511,2,0,"else", 1, 2, 0);
	trans[1][3511]	= settr(3727,4,3520,2053,2053,"(1)", 1, 2, 0); /* m: 3513 -> 3520,0 */
	reached1[3513] = 1;
	T = trans[1][3520] = settr(3736,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3736,0,3515,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3736,0,3518,0,0,"IF", 0, 2, 0);
	trans[1][3515]	= settr(3731,0,3517,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3517] = settr(3733,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3733,0,3516,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3516]	= settr(3732,0,3584,2054,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3521]	= settr(3737,0,3584,1,0,".(goto)", 0, 2, 0); /* m: 3584 -> 0,3588 */
	reached1[3584] = 1;
	trans[1][3518]	= settr(3734,0,3519,2,0,"else", 0, 2, 0);
	trans[1][3519]	= settr(3735,0,3588,2055,2055,"(1)", 0, 2, 0); /* m: 3584 -> 3588,0 */
	reached1[3584] = 1;
	trans[1][3523]	= settr(3739,0,3551,2056,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3551] = settr(3767,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3767,0,3543,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3543] = settr(3759,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3759,2,3541,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3541] = settr(3757,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3757,2,3524,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3757,2,3527,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3757,2,3530,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3757,2,3533,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3757,2,3536,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3757,2,3539,0,0,"IF", 1, 2, 0);
	trans[1][3524]	= settr(3740,4,3549,2057,2057,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3525 -> 3549,0 */
	reached1[3525] = 1;
	trans[1][3525]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3526]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3542]	= settr(3758,0,3549,2058,2058,".(goto)", 1, 2, 0);
	trans[1][3527]	= settr(3743,4,3549,2059,2059,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3528 -> 3549,0 */
	reached1[3528] = 1;
	trans[1][3528]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3529]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3530]	= settr(3746,4,3549,2060,2060,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3531 -> 3549,0 */
	reached1[3531] = 1;
	trans[1][3531]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3532]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3533]	= settr(3749,4,3549,2061,2061,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3534 -> 3549,0 */
	reached1[3534] = 1;
	trans[1][3534]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3535]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3536]	= settr(3752,4,3549,2062,2062,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3537 -> 3549,0 */
	reached1[3537] = 1;
	trans[1][3537]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3538]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3539]	= settr(3755,2,3540,2,0,"else", 1, 2, 0);
	trans[1][3540]	= settr(3756,4,3549,2063,2063,"(1)", 1, 2, 0); /* m: 3542 -> 3549,0 */
	reached1[3542] = 1;
	T = trans[1][3549] = settr(3765,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3765,0,3544,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3765,0,3547,0,0,"IF", 0, 2, 0);
	trans[1][3544]	= settr(3760,0,3546,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3546] = settr(3762,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3762,0,3545,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3545]	= settr(3761,0,3584,2064,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3550]	= settr(3766,0,3584,1,0,".(goto)", 0, 2, 0); /* m: 3584 -> 0,3588 */
	reached1[3584] = 1;
	trans[1][3547]	= settr(3763,0,3548,2,0,"else", 0, 2, 0);
	trans[1][3548]	= settr(3764,0,3588,2065,2065,"(1)", 0, 2, 0); /* m: 3584 -> 3588,0 */
	reached1[3584] = 1;
	trans[1][3552]	= settr(3768,0,3580,2066,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][3580] = settr(3796,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3796,0,3572,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3572] = settr(3788,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3788,2,3570,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3570] = settr(3786,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3786,2,3553,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3786,2,3556,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3786,2,3559,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3786,2,3562,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3786,2,3565,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3786,2,3568,0,0,"IF", 1, 2, 0);
	trans[1][3553]	= settr(3769,4,3578,2067,2067,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3554 -> 3578,0 */
	reached1[3554] = 1;
	trans[1][3554]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3555]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3571]	= settr(3787,0,3578,2068,2068,".(goto)", 1, 2, 0);
	trans[1][3556]	= settr(3772,4,3578,2069,2069,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3557 -> 3578,0 */
	reached1[3557] = 1;
	trans[1][3557]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3558]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3559]	= settr(3775,4,3578,2070,2070,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3560 -> 3578,0 */
	reached1[3560] = 1;
	trans[1][3560]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3561]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3562]	= settr(3778,4,3578,2071,2071,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3563 -> 3578,0 */
	reached1[3563] = 1;
	trans[1][3563]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3564]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3565]	= settr(3781,4,3578,2072,2072,"((STOP==ABORT))", 1, 2, 0); /* m: 3566 -> 3578,0 */
	reached1[3566] = 1;
	trans[1][3566]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3567]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3568]	= settr(3784,2,3569,2,0,"else", 1, 2, 0);
	trans[1][3569]	= settr(3785,4,3578,2073,2073,"(1)", 1, 2, 0); /* m: 3571 -> 3578,0 */
	reached1[3571] = 1;
	T = trans[1][3578] = settr(3794,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3794,0,3573,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3794,0,3576,0,0,"IF", 0, 2, 0);
	trans[1][3573]	= settr(3789,0,3575,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3575] = settr(3791,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3791,0,3574,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3574]	= settr(3790,0,3584,2074,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3579]	= settr(3795,0,3584,1,0,".(goto)", 0, 2, 0); /* m: 3584 -> 0,3588 */
	reached1[3584] = 1;
	trans[1][3576]	= settr(3792,0,3577,2,0,"else", 0, 2, 0);
	trans[1][3577]	= settr(3793,0,3588,2075,2075,"(1)", 0, 2, 0); /* m: 3584 -> 3588,0 */
	reached1[3584] = 1;
	trans[1][3584]	= settr(3800,0,3588,2076,2076,"j = (j+1)", 0, 2, 0);
	trans[1][3585]	= settr(3801,0,3586,2,0,"else", 0, 2, 0);
	trans[1][3586]	= settr(3802,0,4397,2077,2077,"j = 1", 0, 2, 0);
	trans[1][3587]	= settr(3803,0,4397,1,0,"goto :b34", 0, 2, 0);
	trans[1][3590]	= settr(3806,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3724]	= settr(3940,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3592]	= settr(3808,0,3722,2,0,"else", 0, 2, 0);
	T = trans[ 1][3722] = settr(3938,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3938,0,3593,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3593]	= settr(3809,0,3719,2078,2078,"j = (3-1)", 0, 2, 0);
	trans[1][3720]	= settr(3936,0,3719,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3719] = settr(3935,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(3935,0,3594,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(3935,0,3716,0,0,"DO", 0, 2, 0);
	trans[1][3594]	= settr(3810,0,3714,2079,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][3714] = settr(3930,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3930,0,3712,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3712] = settr(3928,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3928,0,3595,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3928,0,3625,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3928,0,3654,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3928,0,3683,0,0,"IF", 0, 2, 0);
	trans[1][3595]	= settr(3811,0,3624,2080,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][3624] = settr(3840,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3840,0,3615,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3615] = settr(3831,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3831,2,3613,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3613] = settr(3829,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3829,2,3596,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3829,2,3599,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3829,2,3602,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3829,2,3605,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3829,2,3608,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3829,2,3611,0,0,"IF", 1, 2, 0);
	trans[1][3596]	= settr(3812,4,3616,2081,2081,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3597 -> 3616,0 */
	reached1[3597] = 1;
	trans[1][3597]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3598]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3614]	= settr(3830,0,3616,2082,2082,".(goto)", 1, 2, 0);
	trans[1][3599]	= settr(3815,4,3616,2083,2083,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3600 -> 3616,0 */
	reached1[3600] = 1;
	trans[1][3600]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3601]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3602]	= settr(3818,4,3616,2084,2084,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3603 -> 3616,0 */
	reached1[3603] = 1;
	trans[1][3603]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3604]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3605]	= settr(3821,4,3616,2085,2085,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3606 -> 3616,0 */
	reached1[3606] = 1;
	trans[1][3606]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3607]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3608]	= settr(3824,4,3616,2086,2086,"((START==ABORT))", 1, 2, 0); /* m: 3609 -> 3616,0 */
	reached1[3609] = 1;
	trans[1][3609]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3610]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3611]	= settr(3827,2,3612,2,0,"else", 1, 2, 0);
	trans[1][3612]	= settr(3828,4,3616,2087,2087,"(1)", 1, 2, 0); /* m: 3614 -> 3616,0 */
	reached1[3614] = 1;
	trans[1][3616]	= settr(3832,0,3622,2088,2088,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3622] = settr(3838,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3838,0,3617,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3838,0,3620,0,0,"IF", 0, 2, 0);
	trans[1][3617]	= settr(3833,0,3619,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3619] = settr(3835,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3835,0,3618,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3618]	= settr(3834,0,3715,2089,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3623]	= settr(3839,0,3715,1,0,".(goto)", 0, 2, 0); /* m: 3715 -> 0,3719 */
	reached1[3715] = 1;
	trans[1][3620]	= settr(3836,0,3621,2,0,"else", 0, 2, 0);
	trans[1][3621]	= settr(3837,0,3719,2090,2090,"(1)", 0, 2, 0); /* m: 3715 -> 3719,0 */
	reached1[3715] = 1;
	trans[1][3713]	= settr(3929,0,3715,1,0,".(goto)", 0, 2, 0); /* m: 3715 -> 0,3719 */
	reached1[3715] = 1;
	trans[1][3625]	= settr(3841,0,3653,2091,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][3653] = settr(3869,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3869,0,3645,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3645] = settr(3861,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3861,2,3643,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3643] = settr(3859,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3859,2,3626,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3859,2,3629,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3859,2,3632,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3859,2,3635,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3859,2,3638,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3859,2,3641,0,0,"IF", 1, 2, 0);
	trans[1][3626]	= settr(3842,4,3651,2092,2092,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3627 -> 3651,0 */
	reached1[3627] = 1;
	trans[1][3627]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3628]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3644]	= settr(3860,0,3651,2093,2093,".(goto)", 1, 2, 0);
	trans[1][3629]	= settr(3845,4,3651,2094,2094,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3630 -> 3651,0 */
	reached1[3630] = 1;
	trans[1][3630]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3631]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3632]	= settr(3848,4,3651,2095,2095,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3633 -> 3651,0 */
	reached1[3633] = 1;
	trans[1][3633]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3634]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3635]	= settr(3851,4,3651,2096,2096,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3636 -> 3651,0 */
	reached1[3636] = 1;
	trans[1][3636]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3637]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3638]	= settr(3854,4,3651,2097,2097,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3639 -> 3651,0 */
	reached1[3639] = 1;
	trans[1][3639]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3640]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3641]	= settr(3857,2,3642,2,0,"else", 1, 2, 0);
	trans[1][3642]	= settr(3858,4,3651,2098,2098,"(1)", 1, 2, 0); /* m: 3644 -> 3651,0 */
	reached1[3644] = 1;
	T = trans[1][3651] = settr(3867,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3867,0,3646,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3867,0,3649,0,0,"IF", 0, 2, 0);
	trans[1][3646]	= settr(3862,0,3648,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3648] = settr(3864,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3864,0,3647,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3647]	= settr(3863,0,3715,2099,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3652]	= settr(3868,0,3715,1,0,".(goto)", 0, 2, 0); /* m: 3715 -> 0,3719 */
	reached1[3715] = 1;
	trans[1][3649]	= settr(3865,0,3650,2,0,"else", 0, 2, 0);
	trans[1][3650]	= settr(3866,0,3719,2100,2100,"(1)", 0, 2, 0); /* m: 3715 -> 3719,0 */
	reached1[3715] = 1;
	trans[1][3654]	= settr(3870,0,3682,2101,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3682] = settr(3898,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3898,0,3674,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3674] = settr(3890,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3890,2,3672,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3672] = settr(3888,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3888,2,3655,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3888,2,3658,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3888,2,3661,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3888,2,3664,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3888,2,3667,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3888,2,3670,0,0,"IF", 1, 2, 0);
	trans[1][3655]	= settr(3871,4,3680,2102,2102,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3656 -> 3680,0 */
	reached1[3656] = 1;
	trans[1][3656]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3657]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3673]	= settr(3889,0,3680,2103,2103,".(goto)", 1, 2, 0);
	trans[1][3658]	= settr(3874,4,3680,2104,2104,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3659 -> 3680,0 */
	reached1[3659] = 1;
	trans[1][3659]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3660]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3661]	= settr(3877,4,3680,2105,2105,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3662 -> 3680,0 */
	reached1[3662] = 1;
	trans[1][3662]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3663]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3664]	= settr(3880,4,3680,2106,2106,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3665 -> 3680,0 */
	reached1[3665] = 1;
	trans[1][3665]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3666]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3667]	= settr(3883,4,3680,2107,2107,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3668 -> 3680,0 */
	reached1[3668] = 1;
	trans[1][3668]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3669]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3670]	= settr(3886,2,3671,2,0,"else", 1, 2, 0);
	trans[1][3671]	= settr(3887,4,3680,2108,2108,"(1)", 1, 2, 0); /* m: 3673 -> 3680,0 */
	reached1[3673] = 1;
	T = trans[1][3680] = settr(3896,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3896,0,3675,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3896,0,3678,0,0,"IF", 0, 2, 0);
	trans[1][3675]	= settr(3891,0,3677,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3677] = settr(3893,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3893,0,3676,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3676]	= settr(3892,0,3715,2109,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3681]	= settr(3897,0,3715,1,0,".(goto)", 0, 2, 0); /* m: 3715 -> 0,3719 */
	reached1[3715] = 1;
	trans[1][3678]	= settr(3894,0,3679,2,0,"else", 0, 2, 0);
	trans[1][3679]	= settr(3895,0,3719,2110,2110,"(1)", 0, 2, 0); /* m: 3715 -> 3719,0 */
	reached1[3715] = 1;
	trans[1][3683]	= settr(3899,0,3711,2111,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][3711] = settr(3927,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3927,0,3703,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3703] = settr(3919,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3919,2,3701,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3701] = settr(3917,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3917,2,3684,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3917,2,3687,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3917,2,3690,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3917,2,3693,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3917,2,3696,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3917,2,3699,0,0,"IF", 1, 2, 0);
	trans[1][3684]	= settr(3900,4,3709,2112,2112,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3685 -> 3709,0 */
	reached1[3685] = 1;
	trans[1][3685]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3686]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3702]	= settr(3918,0,3709,2113,2113,".(goto)", 1, 2, 0);
	trans[1][3687]	= settr(3903,4,3709,2114,2114,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3688 -> 3709,0 */
	reached1[3688] = 1;
	trans[1][3688]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3689]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3690]	= settr(3906,4,3709,2115,2115,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3691 -> 3709,0 */
	reached1[3691] = 1;
	trans[1][3691]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3692]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3693]	= settr(3909,4,3709,2116,2116,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3694 -> 3709,0 */
	reached1[3694] = 1;
	trans[1][3694]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3695]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3696]	= settr(3912,4,3709,2117,2117,"((STOP==ABORT))", 1, 2, 0); /* m: 3697 -> 3709,0 */
	reached1[3697] = 1;
	trans[1][3697]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3698]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3699]	= settr(3915,2,3700,2,0,"else", 1, 2, 0);
	trans[1][3700]	= settr(3916,4,3709,2118,2118,"(1)", 1, 2, 0); /* m: 3702 -> 3709,0 */
	reached1[3702] = 1;
	T = trans[1][3709] = settr(3925,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(3925,0,3704,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(3925,0,3707,0,0,"IF", 0, 2, 0);
	trans[1][3704]	= settr(3920,0,3706,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3706] = settr(3922,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3922,0,3705,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3705]	= settr(3921,0,3715,2119,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3710]	= settr(3926,0,3715,1,0,".(goto)", 0, 2, 0); /* m: 3715 -> 0,3719 */
	reached1[3715] = 1;
	trans[1][3707]	= settr(3923,0,3708,2,0,"else", 0, 2, 0);
	trans[1][3708]	= settr(3924,0,3719,2120,2120,"(1)", 0, 2, 0); /* m: 3715 -> 3719,0 */
	reached1[3715] = 1;
	trans[1][3715]	= settr(3931,0,3719,2121,2121,"j = (j-1)", 0, 2, 0);
	trans[1][3716]	= settr(3932,0,3717,2,0,"else", 0, 2, 0);
	trans[1][3717]	= settr(3933,0,4397,2122,2122,"j = 1", 0, 2, 0);
	trans[1][3718]	= settr(3934,0,4397,1,0,"goto :b35", 0, 2, 0);
	trans[1][3721]	= settr(3937,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3880]	= settr(4096,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3726]	= settr(3942,0,3878,2,0,"else", 0, 2, 0);
	T = trans[ 1][3878] = settr(4094,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4094,0,3855,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3855] = settr(4071,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4071,0,3852,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3853]	= settr(4069,0,3852,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3852] = settr(4068,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4068,0,3727,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4068,0,3849,0,0,"DO", 0, 2, 0);
	trans[1][3727]	= settr(3943,0,3847,2123,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][3847] = settr(4063,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4063,0,3845,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][3845] = settr(4061,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4061,0,3728,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4061,0,3758,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4061,0,3787,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4061,0,3816,0,0,"IF", 0, 2, 0);
	trans[1][3728]	= settr(3944,0,3757,2124,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][3757] = settr(3973,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3973,0,3748,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3748] = settr(3964,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3964,2,3746,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3746] = settr(3962,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3962,2,3729,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3962,2,3732,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3962,2,3735,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3962,2,3738,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3962,2,3741,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3962,2,3744,0,0,"IF", 1, 2, 0);
	trans[1][3729]	= settr(3945,4,3749,2125,2125,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3730 -> 3749,0 */
	reached1[3730] = 1;
	trans[1][3730]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3731]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3747]	= settr(3963,0,3749,2126,2126,".(goto)", 1, 2, 0);
	trans[1][3732]	= settr(3948,4,3749,2127,2127,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3733 -> 3749,0 */
	reached1[3733] = 1;
	trans[1][3733]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3734]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3735]	= settr(3951,4,3749,2128,2128,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3736 -> 3749,0 */
	reached1[3736] = 1;
	trans[1][3736]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3737]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3738]	= settr(3954,4,3749,2129,2129,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3739 -> 3749,0 */
	reached1[3739] = 1;
	trans[1][3739]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3740]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3741]	= settr(3957,4,3749,2130,2130,"((START==ABORT))", 1, 2, 0); /* m: 3742 -> 3749,0 */
	reached1[3742] = 1;
	trans[1][3742]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3743]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3744]	= settr(3960,2,3745,2,0,"else", 1, 2, 0);
	trans[1][3745]	= settr(3961,4,3749,2131,2131,"(1)", 1, 2, 0); /* m: 3747 -> 3749,0 */
	reached1[3747] = 1;
	trans[1][3749]	= settr(3965,0,3755,2132,2132,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3755] = settr(3971,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(3971,0,3750,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(3971,0,3753,0,0,"IF", 0, 2, 0);
	trans[1][3750]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3752] = settr(3968,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3968,0,3751,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3751]	= settr(3967,0,3848,2133,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3756]	= settr(3972,0,3848,1,0,".(goto)", 0, 2, 0); /* m: 3848 -> 0,3852 */
	reached1[3848] = 1;
	trans[1][3753]	= settr(3969,0,3754,2,0,"else", 0, 2, 0);
	trans[1][3754]	= settr(3970,0,3852,2134,2134,"(1)", 0, 2, 0); /* m: 3848 -> 3852,0 */
	reached1[3848] = 1;
	trans[1][3846]	= settr(4062,0,3848,1,0,".(goto)", 0, 2, 0); /* m: 3848 -> 0,3852 */
	reached1[3848] = 1;
	trans[1][3758]	= settr(3974,0,3786,2135,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][3786] = settr(4002,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4002,0,3778,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3778] = settr(3994,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(3994,2,3776,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3776] = settr(3992,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3992,2,3759,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3992,2,3762,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3992,2,3765,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3992,2,3768,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(3992,2,3771,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(3992,2,3774,0,0,"IF", 1, 2, 0);
	trans[1][3759]	= settr(3975,4,3784,2136,2136,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3760 -> 3784,0 */
	reached1[3760] = 1;
	trans[1][3760]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3761]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3777]	= settr(3993,0,3784,2137,2137,".(goto)", 1, 2, 0);
	trans[1][3762]	= settr(3978,4,3784,2138,2138,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3763 -> 3784,0 */
	reached1[3763] = 1;
	trans[1][3763]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3764]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3765]	= settr(3981,4,3784,2139,2139,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3766 -> 3784,0 */
	reached1[3766] = 1;
	trans[1][3766]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3767]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3768]	= settr(3984,4,3784,2140,2140,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3769 -> 3784,0 */
	reached1[3769] = 1;
	trans[1][3769]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3770]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3771]	= settr(3987,4,3784,2141,2141,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3772 -> 3784,0 */
	reached1[3772] = 1;
	trans[1][3772]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3773]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3774]	= settr(3990,2,3775,2,0,"else", 1, 2, 0);
	trans[1][3775]	= settr(3991,4,3784,2142,2142,"(1)", 1, 2, 0); /* m: 3777 -> 3784,0 */
	reached1[3777] = 1;
	T = trans[1][3784] = settr(4000,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4000,0,3779,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4000,0,3782,0,0,"IF", 0, 2, 0);
	trans[1][3779]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3781] = settr(3997,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(3997,0,3780,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3780]	= settr(3996,0,3848,2143,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3785]	= settr(4001,0,3848,1,0,".(goto)", 0, 2, 0); /* m: 3848 -> 0,3852 */
	reached1[3848] = 1;
	trans[1][3782]	= settr(3998,0,3783,2,0,"else", 0, 2, 0);
	trans[1][3783]	= settr(3999,0,3852,2144,2144,"(1)", 0, 2, 0); /* m: 3848 -> 3852,0 */
	reached1[3848] = 1;
	trans[1][3787]	= settr(4003,0,3815,2145,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3815] = settr(4031,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4031,0,3807,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3807] = settr(4023,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4023,2,3805,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3805] = settr(4021,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4021,2,3788,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4021,2,3791,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4021,2,3794,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4021,2,3797,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4021,2,3800,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4021,2,3803,0,0,"IF", 1, 2, 0);
	trans[1][3788]	= settr(4004,4,3813,2146,2146,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3789 -> 3813,0 */
	reached1[3789] = 1;
	trans[1][3789]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3790]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3806]	= settr(4022,0,3813,2147,2147,".(goto)", 1, 2, 0);
	trans[1][3791]	= settr(4007,4,3813,2148,2148,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3792 -> 3813,0 */
	reached1[3792] = 1;
	trans[1][3792]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3793]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3794]	= settr(4010,4,3813,2149,2149,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3795 -> 3813,0 */
	reached1[3795] = 1;
	trans[1][3795]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3796]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3797]	= settr(4013,4,3813,2150,2150,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3798 -> 3813,0 */
	reached1[3798] = 1;
	trans[1][3798]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3799]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3800]	= settr(4016,4,3813,2151,2151,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3801 -> 3813,0 */
	reached1[3801] = 1;
	trans[1][3801]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3802]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3803]	= settr(4019,2,3804,2,0,"else", 1, 2, 0);
	trans[1][3804]	= settr(4020,4,3813,2152,2152,"(1)", 1, 2, 0); /* m: 3806 -> 3813,0 */
	reached1[3806] = 1;
	T = trans[1][3813] = settr(4029,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4029,0,3808,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4029,0,3811,0,0,"IF", 0, 2, 0);
	trans[1][3808]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3810] = settr(4026,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4026,0,3809,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3809]	= settr(4025,0,3848,2153,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3814]	= settr(4030,0,3848,1,0,".(goto)", 0, 2, 0); /* m: 3848 -> 0,3852 */
	reached1[3848] = 1;
	trans[1][3811]	= settr(4027,0,3812,2,0,"else", 0, 2, 0);
	trans[1][3812]	= settr(4028,0,3852,2154,2154,"(1)", 0, 2, 0); /* m: 3848 -> 3852,0 */
	reached1[3848] = 1;
	trans[1][3816]	= settr(4032,0,3844,2155,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][3844] = settr(4060,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4060,0,3836,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3836] = settr(4052,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4052,2,3834,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3834] = settr(4050,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4050,2,3817,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4050,2,3820,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4050,2,3823,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4050,2,3826,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4050,2,3829,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4050,2,3832,0,0,"IF", 1, 2, 0);
	trans[1][3817]	= settr(4033,4,3842,2156,2156,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3818 -> 3842,0 */
	reached1[3818] = 1;
	trans[1][3818]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3819]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3835]	= settr(4051,0,3842,2157,2157,".(goto)", 1, 2, 0);
	trans[1][3820]	= settr(4036,4,3842,2158,2158,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3821 -> 3842,0 */
	reached1[3821] = 1;
	trans[1][3821]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3822]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3823]	= settr(4039,4,3842,2159,2159,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3824 -> 3842,0 */
	reached1[3824] = 1;
	trans[1][3824]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3825]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3826]	= settr(4042,4,3842,2160,2160,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3827 -> 3842,0 */
	reached1[3827] = 1;
	trans[1][3827]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3828]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3829]	= settr(4045,4,3842,2161,2161,"((STOP==ABORT))", 1, 2, 0); /* m: 3830 -> 3842,0 */
	reached1[3830] = 1;
	trans[1][3830]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3831]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3832]	= settr(4048,2,3833,2,0,"else", 1, 2, 0);
	trans[1][3833]	= settr(4049,4,3842,2162,2162,"(1)", 1, 2, 0); /* m: 3835 -> 3842,0 */
	reached1[3835] = 1;
	T = trans[1][3842] = settr(4058,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4058,0,3837,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4058,0,3840,0,0,"IF", 0, 2, 0);
	trans[1][3837]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][3839] = settr(4055,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4055,0,3838,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3838]	= settr(4054,0,3848,2163,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3843]	= settr(4059,0,3848,1,0,".(goto)", 0, 2, 0); /* m: 3848 -> 0,3852 */
	reached1[3848] = 1;
	trans[1][3840]	= settr(4056,0,3841,2,0,"else", 0, 2, 0);
	trans[1][3841]	= settr(4057,0,3852,2164,2164,"(1)", 0, 2, 0); /* m: 3848 -> 3852,0 */
	reached1[3848] = 1;
	trans[1][3848]	= settr(4064,0,3852,2165,2165,"j = (j+1)", 0, 2, 0);
	trans[1][3849]	= settr(4065,0,3850,2,0,"else", 0, 2, 0);
	trans[1][3850]	= settr(4066,0,3875,2166,2166,"j = 1", 0, 2, 0);
	trans[1][3851]	= settr(4067,0,3875,1,0,"goto :b36", 0, 2, 0);
	trans[1][3854]	= settr(4070,0,3875,1,0,"break", 0, 2, 0);
	trans[1][3876]	= settr(4092,0,3875,1,0,".(goto)", 0, 2, 0);
	T = trans[1][3875] = settr(4091,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4091,0,3856,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4091,0,3872,0,0,"DO", 0, 2, 0);
	trans[1][3856]	= settr(4072,0,3869,2167,0,"((j<3))", 0, 2, 0);
	T = trans[1][3869] = settr(4085,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4085,0,3857,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4085,0,3860,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4085,0,3863,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4085,0,3866,0,0,"IF", 0, 2, 0);
	trans[1][3857]	= settr(4073,0,3859,2168,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][3859] = settr(4075,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4075,0,3858,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3858]	= settr(4074,0,3871,2169,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3870]	= settr(4086,0,3871,1,0,".(goto)", 0, 2, 0); /* m: 3871 -> 0,3875 */
	reached1[3871] = 1;
	trans[1][3860]	= settr(4076,0,3862,2170,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3862] = settr(4078,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4078,0,3861,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3861]	= settr(4077,0,3871,2171,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3863]	= settr(4079,0,3865,2172,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][3865] = settr(4081,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4081,0,3864,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3864]	= settr(4080,0,3871,2173,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3866]	= settr(4082,0,3868,2174,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][3868] = settr(4084,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4084,0,3867,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3867]	= settr(4083,0,3871,2175,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3871]	= settr(4087,0,3875,2176,2176,"j = (j+1)", 0, 2, 0);
	trans[1][3872]	= settr(4088,0,3873,2,0,"else", 0, 2, 0);
	trans[1][3873]	= settr(4089,0,4397,2177,2177,"j = 1", 0, 2, 0);
	trans[1][3874]	= settr(4090,0,4397,1,0,"goto :b37", 0, 2, 0);
	trans[1][3877]	= settr(4093,0,4397,1,0,"break", 0, 2, 0);
	trans[1][3884]	= settr(4100,0,4310,2178,0,"(((11==ABORTING)||(11==STOPPING)))", 0, 2, 0);
	T = trans[ 1][4310] = settr(4526,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4526,0,4308,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4308] = settr(4524,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4524,0,3885,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4524,0,3887,0,0,"IF", 0, 2, 0);
	trans[1][3885]	= settr(4101,0,3886,2179,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][3886]	= settr(4102,0,4397,2180,2180,"supervisor_started = 1", 1, 2, 0);
	trans[1][4309]	= settr(4525,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][3887]	= settr(4103,0,4306,2,0,"else", 0, 2, 0);
	T = trans[1][4306] = settr(4522,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4522,0,3888,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4522,0,4153,0,0,"IF", 0, 2, 0);
	trans[1][3888]	= settr(4104,0,4152,2181,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][4152] = settr(4368,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4368,0,4150,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4150] = settr(4366,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4366,0,3889,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4366,0,4019,0,0,"IF", 0, 2, 0);
	trans[1][3889]	= settr(4105,0,4018,2182,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][4018] = settr(4234,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4234,0,4015,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4016]	= settr(4232,0,4015,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4015] = settr(4231,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4231,0,3890,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4231,0,4012,0,0,"DO", 0, 2, 0);
	trans[1][3890]	= settr(4106,0,4010,2183,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][4010] = settr(4226,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4226,0,4008,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4008] = settr(4224,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4224,0,3891,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4224,0,3921,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4224,0,3950,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4224,0,3979,0,0,"IF", 0, 2, 0);
	trans[1][3891]	= settr(4107,0,3920,2184,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][3920] = settr(4136,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4136,0,3911,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3911] = settr(4127,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4127,2,3909,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3909] = settr(4125,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4125,2,3892,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4125,2,3895,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4125,2,3898,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4125,2,3901,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4125,2,3904,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4125,2,3907,0,0,"IF", 1, 2, 0);
	trans[1][3892]	= settr(4108,4,3912,2185,2185,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3893 -> 3912,0 */
	reached1[3893] = 1;
	trans[1][3893]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3894]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3910]	= settr(4126,0,3912,2186,2186,".(goto)", 1, 2, 0);
	trans[1][3895]	= settr(4111,4,3912,2187,2187,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3896 -> 3912,0 */
	reached1[3896] = 1;
	trans[1][3896]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3897]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3898]	= settr(4114,4,3912,2188,2188,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3899 -> 3912,0 */
	reached1[3899] = 1;
	trans[1][3899]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3900]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3901]	= settr(4117,4,3912,2189,2189,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3902 -> 3912,0 */
	reached1[3902] = 1;
	trans[1][3902]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3903]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3904]	= settr(4120,4,3912,2190,2190,"((START==ABORT))", 1, 2, 0); /* m: 3905 -> 3912,0 */
	reached1[3905] = 1;
	trans[1][3905]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3906]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3907]	= settr(4123,2,3908,2,0,"else", 1, 2, 0);
	trans[1][3908]	= settr(4124,4,3912,2191,2191,"(1)", 1, 2, 0); /* m: 3910 -> 3912,0 */
	reached1[3910] = 1;
	trans[1][3912]	= settr(4128,0,3918,2192,2192,"(run Thread(j))", 0, 2, 0);
	T = trans[1][3918] = settr(4134,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4134,0,3913,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4134,0,3916,0,0,"IF", 0, 2, 0);
	trans[1][3913]	= settr(4129,0,3915,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3915] = settr(4131,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4131,0,3914,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3914]	= settr(4130,0,4011,2193,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3919]	= settr(4135,0,4011,1,0,".(goto)", 0, 2, 0); /* m: 4011 -> 0,4015 */
	reached1[4011] = 1;
	trans[1][3916]	= settr(4132,0,3917,2,0,"else", 0, 2, 0);
	trans[1][3917]	= settr(4133,0,4015,2194,2194,"(1)", 0, 2, 0); /* m: 4011 -> 4015,0 */
	reached1[4011] = 1;
	trans[1][4009]	= settr(4225,0,4011,1,0,".(goto)", 0, 2, 0); /* m: 4011 -> 0,4015 */
	reached1[4011] = 1;
	trans[1][3921]	= settr(4137,0,3949,2195,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][3949] = settr(4165,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4165,0,3941,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3941] = settr(4157,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4157,2,3939,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3939] = settr(4155,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4155,2,3922,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4155,2,3925,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4155,2,3928,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4155,2,3931,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4155,2,3934,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4155,2,3937,0,0,"IF", 1, 2, 0);
	trans[1][3922]	= settr(4138,4,3947,2196,2196,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3923 -> 3947,0 */
	reached1[3923] = 1;
	trans[1][3923]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3924]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3940]	= settr(4156,0,3947,2197,2197,".(goto)", 1, 2, 0);
	trans[1][3925]	= settr(4141,4,3947,2198,2198,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3926 -> 3947,0 */
	reached1[3926] = 1;
	trans[1][3926]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3927]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3928]	= settr(4144,4,3947,2199,2199,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3929 -> 3947,0 */
	reached1[3929] = 1;
	trans[1][3929]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3930]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3931]	= settr(4147,4,3947,2200,2200,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3932 -> 3947,0 */
	reached1[3932] = 1;
	trans[1][3932]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3933]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3934]	= settr(4150,4,3947,2201,2201,"((PAUSE==ABORT))", 1, 2, 0); /* m: 3935 -> 3947,0 */
	reached1[3935] = 1;
	trans[1][3935]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3936]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3937]	= settr(4153,2,3938,2,0,"else", 1, 2, 0);
	trans[1][3938]	= settr(4154,4,3947,2202,2202,"(1)", 1, 2, 0); /* m: 3940 -> 3947,0 */
	reached1[3940] = 1;
	T = trans[1][3947] = settr(4163,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4163,0,3942,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4163,0,3945,0,0,"IF", 0, 2, 0);
	trans[1][3942]	= settr(4158,0,3944,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3944] = settr(4160,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4160,0,3943,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3943]	= settr(4159,0,4011,2203,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3948]	= settr(4164,0,4011,1,0,".(goto)", 0, 2, 0); /* m: 4011 -> 0,4015 */
	reached1[4011] = 1;
	trans[1][3945]	= settr(4161,0,3946,2,0,"else", 0, 2, 0);
	trans[1][3946]	= settr(4162,0,4015,2204,2204,"(1)", 0, 2, 0); /* m: 4011 -> 4015,0 */
	reached1[4011] = 1;
	trans[1][3950]	= settr(4166,0,3978,2205,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][3978] = settr(4194,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4194,0,3970,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3970] = settr(4186,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4186,2,3968,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3968] = settr(4184,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4184,2,3951,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4184,2,3954,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4184,2,3957,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4184,2,3960,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4184,2,3963,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4184,2,3966,0,0,"IF", 1, 2, 0);
	trans[1][3951]	= settr(4167,4,3976,2206,2206,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3952 -> 3976,0 */
	reached1[3952] = 1;
	trans[1][3952]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3953]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3969]	= settr(4185,0,3976,2207,2207,".(goto)", 1, 2, 0);
	trans[1][3954]	= settr(4170,4,3976,2208,2208,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3955 -> 3976,0 */
	reached1[3955] = 1;
	trans[1][3955]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3956]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3957]	= settr(4173,4,3976,2209,2209,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3958 -> 3976,0 */
	reached1[3958] = 1;
	trans[1][3958]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3959]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3960]	= settr(4176,4,3976,2210,2210,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3961 -> 3976,0 */
	reached1[3961] = 1;
	trans[1][3961]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3962]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3963]	= settr(4179,4,3976,2211,2211,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 3964 -> 3976,0 */
	reached1[3964] = 1;
	trans[1][3964]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3965]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3966]	= settr(4182,2,3967,2,0,"else", 1, 2, 0);
	trans[1][3967]	= settr(4183,4,3976,2212,2212,"(1)", 1, 2, 0); /* m: 3969 -> 3976,0 */
	reached1[3969] = 1;
	T = trans[1][3976] = settr(4192,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4192,0,3971,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4192,0,3974,0,0,"IF", 0, 2, 0);
	trans[1][3971]	= settr(4187,0,3973,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][3973] = settr(4189,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4189,0,3972,0,0,"sub-sequence", 0, 2, 0);
	trans[1][3972]	= settr(4188,0,4011,2213,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][3977]	= settr(4193,0,4011,1,0,".(goto)", 0, 2, 0); /* m: 4011 -> 0,4015 */
	reached1[4011] = 1;
	trans[1][3974]	= settr(4190,0,3975,2,0,"else", 0, 2, 0);
	trans[1][3975]	= settr(4191,0,4015,2214,2214,"(1)", 0, 2, 0); /* m: 4011 -> 4015,0 */
	reached1[4011] = 1;
	trans[1][3979]	= settr(4195,0,4007,2215,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][4007] = settr(4223,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4223,0,3999,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][3999] = settr(4215,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4215,2,3997,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][3997] = settr(4213,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4213,2,3980,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4213,2,3983,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4213,2,3986,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4213,2,3989,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4213,2,3992,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4213,2,3995,0,0,"IF", 1, 2, 0);
	trans[1][3980]	= settr(4196,4,4005,2216,2216,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3981 -> 4005,0 */
	reached1[3981] = 1;
	trans[1][3981]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][3982]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][3998]	= settr(4214,0,4005,2217,2217,".(goto)", 1, 2, 0);
	trans[1][3983]	= settr(4199,4,4005,2218,2218,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 3984 -> 4005,0 */
	reached1[3984] = 1;
	trans[1][3984]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][3985]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][3986]	= settr(4202,4,4005,2219,2219,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3987 -> 4005,0 */
	reached1[3987] = 1;
	trans[1][3987]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][3988]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][3989]	= settr(4205,4,4005,2220,2220,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 3990 -> 4005,0 */
	reached1[3990] = 1;
	trans[1][3990]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][3991]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][3992]	= settr(4208,4,4005,2221,2221,"((STOP==ABORT))", 1, 2, 0); /* m: 3993 -> 4005,0 */
	reached1[3993] = 1;
	trans[1][3993]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][3994]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][3995]	= settr(4211,2,3996,2,0,"else", 1, 2, 0);
	trans[1][3996]	= settr(4212,4,4005,2222,2222,"(1)", 1, 2, 0); /* m: 3998 -> 4005,0 */
	reached1[3998] = 1;
	T = trans[1][4005] = settr(4221,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4221,0,4000,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4221,0,4003,0,0,"IF", 0, 2, 0);
	trans[1][4000]	= settr(4216,0,4002,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4002] = settr(4218,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4218,0,4001,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4001]	= settr(4217,0,4011,2223,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4006]	= settr(4222,0,4011,1,0,".(goto)", 0, 2, 0); /* m: 4011 -> 0,4015 */
	reached1[4011] = 1;
	trans[1][4003]	= settr(4219,0,4004,2,0,"else", 0, 2, 0);
	trans[1][4004]	= settr(4220,0,4015,2224,2224,"(1)", 0, 2, 0); /* m: 4011 -> 4015,0 */
	reached1[4011] = 1;
	trans[1][4011]	= settr(4227,0,4015,2225,2225,"j = (j+1)", 0, 2, 0);
	trans[1][4012]	= settr(4228,0,4013,2,0,"else", 0, 2, 0);
	trans[1][4013]	= settr(4229,0,4397,2226,2226,"j = 1", 0, 2, 0);
	trans[1][4014]	= settr(4230,0,4397,1,0,"goto :b38", 0, 2, 0);
	trans[1][4017]	= settr(4233,0,4397,1,0,"break", 0, 2, 0);
	trans[1][4151]	= settr(4367,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][4019]	= settr(4235,0,4149,2,0,"else", 0, 2, 0);
	T = trans[ 1][4149] = settr(4365,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4365,0,4020,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4020]	= settr(4236,0,4146,2227,2227,"j = (3-1)", 0, 2, 0);
	trans[1][4147]	= settr(4363,0,4146,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4146] = settr(4362,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4362,0,4021,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4362,0,4143,0,0,"DO", 0, 2, 0);
	trans[1][4021]	= settr(4237,0,4141,2228,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][4141] = settr(4357,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4357,0,4139,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4139] = settr(4355,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4355,0,4022,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4355,0,4052,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4355,0,4081,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4355,0,4110,0,0,"IF", 0, 2, 0);
	trans[1][4022]	= settr(4238,0,4051,2229,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][4051] = settr(4267,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4267,0,4042,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4042] = settr(4258,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4258,2,4040,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4040] = settr(4256,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4256,2,4023,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4256,2,4026,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4256,2,4029,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4256,2,4032,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4256,2,4035,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4256,2,4038,0,0,"IF", 1, 2, 0);
	trans[1][4023]	= settr(4239,4,4043,2230,2230,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4024 -> 4043,0 */
	reached1[4024] = 1;
	trans[1][4024]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4025]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4041]	= settr(4257,0,4043,2231,2231,".(goto)", 1, 2, 0);
	trans[1][4026]	= settr(4242,4,4043,2232,2232,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4027 -> 4043,0 */
	reached1[4027] = 1;
	trans[1][4027]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4028]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4029]	= settr(4245,4,4043,2233,2233,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4030 -> 4043,0 */
	reached1[4030] = 1;
	trans[1][4030]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4031]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4032]	= settr(4248,4,4043,2234,2234,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4033 -> 4043,0 */
	reached1[4033] = 1;
	trans[1][4033]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4034]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4035]	= settr(4251,4,4043,2235,2235,"((START==ABORT))", 1, 2, 0); /* m: 4036 -> 4043,0 */
	reached1[4036] = 1;
	trans[1][4036]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4037]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4038]	= settr(4254,2,4039,2,0,"else", 1, 2, 0);
	trans[1][4039]	= settr(4255,4,4043,2236,2236,"(1)", 1, 2, 0); /* m: 4041 -> 4043,0 */
	reached1[4041] = 1;
	trans[1][4043]	= settr(4259,0,4049,2237,2237,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4049] = settr(4265,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4265,0,4044,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4265,0,4047,0,0,"IF", 0, 2, 0);
	trans[1][4044]	= settr(4260,0,4046,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4046] = settr(4262,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4262,0,4045,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4045]	= settr(4261,0,4142,2238,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4050]	= settr(4266,0,4142,1,0,".(goto)", 0, 2, 0); /* m: 4142 -> 0,4146 */
	reached1[4142] = 1;
	trans[1][4047]	= settr(4263,0,4048,2,0,"else", 0, 2, 0);
	trans[1][4048]	= settr(4264,0,4146,2239,2239,"(1)", 0, 2, 0); /* m: 4142 -> 4146,0 */
	reached1[4142] = 1;
	trans[1][4140]	= settr(4356,0,4142,1,0,".(goto)", 0, 2, 0); /* m: 4142 -> 0,4146 */
	reached1[4142] = 1;
	trans[1][4052]	= settr(4268,0,4080,2240,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][4080] = settr(4296,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4296,0,4072,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4072] = settr(4288,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4288,2,4070,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4070] = settr(4286,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4286,2,4053,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4286,2,4056,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4286,2,4059,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4286,2,4062,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4286,2,4065,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4286,2,4068,0,0,"IF", 1, 2, 0);
	trans[1][4053]	= settr(4269,4,4078,2241,2241,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4054 -> 4078,0 */
	reached1[4054] = 1;
	trans[1][4054]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4055]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4071]	= settr(4287,0,4078,2242,2242,".(goto)", 1, 2, 0);
	trans[1][4056]	= settr(4272,4,4078,2243,2243,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4057 -> 4078,0 */
	reached1[4057] = 1;
	trans[1][4057]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4058]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4059]	= settr(4275,4,4078,2244,2244,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4060 -> 4078,0 */
	reached1[4060] = 1;
	trans[1][4060]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4061]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4062]	= settr(4278,4,4078,2245,2245,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4063 -> 4078,0 */
	reached1[4063] = 1;
	trans[1][4063]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4064]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4065]	= settr(4281,4,4078,2246,2246,"((PAUSE==ABORT))", 1, 2, 0); /* m: 4066 -> 4078,0 */
	reached1[4066] = 1;
	trans[1][4066]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4067]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4068]	= settr(4284,2,4069,2,0,"else", 1, 2, 0);
	trans[1][4069]	= settr(4285,4,4078,2247,2247,"(1)", 1, 2, 0); /* m: 4071 -> 4078,0 */
	reached1[4071] = 1;
	T = trans[1][4078] = settr(4294,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4294,0,4073,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4294,0,4076,0,0,"IF", 0, 2, 0);
	trans[1][4073]	= settr(4289,0,4075,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4075] = settr(4291,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4291,0,4074,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4074]	= settr(4290,0,4142,2248,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4079]	= settr(4295,0,4142,1,0,".(goto)", 0, 2, 0); /* m: 4142 -> 0,4146 */
	reached1[4142] = 1;
	trans[1][4076]	= settr(4292,0,4077,2,0,"else", 0, 2, 0);
	trans[1][4077]	= settr(4293,0,4146,2249,2249,"(1)", 0, 2, 0); /* m: 4142 -> 4146,0 */
	reached1[4142] = 1;
	trans[1][4081]	= settr(4297,0,4109,2250,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4109] = settr(4325,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4325,0,4101,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4101] = settr(4317,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4317,2,4099,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4099] = settr(4315,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4315,2,4082,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4315,2,4085,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4315,2,4088,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4315,2,4091,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4315,2,4094,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4315,2,4097,0,0,"IF", 1, 2, 0);
	trans[1][4082]	= settr(4298,4,4107,2251,2251,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4083 -> 4107,0 */
	reached1[4083] = 1;
	trans[1][4083]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4084]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4100]	= settr(4316,0,4107,2252,2252,".(goto)", 1, 2, 0);
	trans[1][4085]	= settr(4301,4,4107,2253,2253,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4086 -> 4107,0 */
	reached1[4086] = 1;
	trans[1][4086]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4087]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4088]	= settr(4304,4,4107,2254,2254,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4089 -> 4107,0 */
	reached1[4089] = 1;
	trans[1][4089]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4090]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4091]	= settr(4307,4,4107,2255,2255,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4092 -> 4107,0 */
	reached1[4092] = 1;
	trans[1][4092]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4093]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4094]	= settr(4310,4,4107,2256,2256,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 4095 -> 4107,0 */
	reached1[4095] = 1;
	trans[1][4095]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4096]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4097]	= settr(4313,2,4098,2,0,"else", 1, 2, 0);
	trans[1][4098]	= settr(4314,4,4107,2257,2257,"(1)", 1, 2, 0); /* m: 4100 -> 4107,0 */
	reached1[4100] = 1;
	T = trans[1][4107] = settr(4323,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4323,0,4102,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4323,0,4105,0,0,"IF", 0, 2, 0);
	trans[1][4102]	= settr(4318,0,4104,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4104] = settr(4320,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4320,0,4103,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4103]	= settr(4319,0,4142,2258,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4108]	= settr(4324,0,4142,1,0,".(goto)", 0, 2, 0); /* m: 4142 -> 0,4146 */
	reached1[4142] = 1;
	trans[1][4105]	= settr(4321,0,4106,2,0,"else", 0, 2, 0);
	trans[1][4106]	= settr(4322,0,4146,2259,2259,"(1)", 0, 2, 0); /* m: 4142 -> 4146,0 */
	reached1[4142] = 1;
	trans[1][4110]	= settr(4326,0,4138,2260,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][4138] = settr(4354,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4354,0,4130,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4130] = settr(4346,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4346,2,4128,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4128] = settr(4344,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4344,2,4111,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4344,2,4114,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4344,2,4117,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4344,2,4120,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4344,2,4123,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4344,2,4126,0,0,"IF", 1, 2, 0);
	trans[1][4111]	= settr(4327,4,4136,2261,2261,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4112 -> 4136,0 */
	reached1[4112] = 1;
	trans[1][4112]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4113]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4129]	= settr(4345,0,4136,2262,2262,".(goto)", 1, 2, 0);
	trans[1][4114]	= settr(4330,4,4136,2263,2263,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4115 -> 4136,0 */
	reached1[4115] = 1;
	trans[1][4115]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4116]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4117]	= settr(4333,4,4136,2264,2264,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4118 -> 4136,0 */
	reached1[4118] = 1;
	trans[1][4118]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4119]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4120]	= settr(4336,4,4136,2265,2265,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4121 -> 4136,0 */
	reached1[4121] = 1;
	trans[1][4121]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4122]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4123]	= settr(4339,4,4136,2266,2266,"((STOP==ABORT))", 1, 2, 0); /* m: 4124 -> 4136,0 */
	reached1[4124] = 1;
	trans[1][4124]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4125]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4126]	= settr(4342,2,4127,2,0,"else", 1, 2, 0);
	trans[1][4127]	= settr(4343,4,4136,2267,2267,"(1)", 1, 2, 0); /* m: 4129 -> 4136,0 */
	reached1[4129] = 1;
	T = trans[1][4136] = settr(4352,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4352,0,4131,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4352,0,4134,0,0,"IF", 0, 2, 0);
	trans[1][4131]	= settr(4347,0,4133,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4133] = settr(4349,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4349,0,4132,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4132]	= settr(4348,0,4142,2268,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4137]	= settr(4353,0,4142,1,0,".(goto)", 0, 2, 0); /* m: 4142 -> 0,4146 */
	reached1[4142] = 1;
	trans[1][4134]	= settr(4350,0,4135,2,0,"else", 0, 2, 0);
	trans[1][4135]	= settr(4351,0,4146,2269,2269,"(1)", 0, 2, 0); /* m: 4142 -> 4146,0 */
	reached1[4142] = 1;
	trans[1][4142]	= settr(4358,0,4146,2270,2270,"j = (j-1)", 0, 2, 0);
	trans[1][4143]	= settr(4359,0,4144,2,0,"else", 0, 2, 0);
	trans[1][4144]	= settr(4360,0,4397,2271,2271,"j = 1", 0, 2, 0);
	trans[1][4145]	= settr(4361,0,4397,1,0,"goto :b39", 0, 2, 0);
	trans[1][4148]	= settr(4364,0,4397,1,0,"break", 0, 2, 0);
	trans[1][4307]	= settr(4523,0,4397,1,0,".(goto)", 0, 2, 0);
	trans[1][4153]	= settr(4369,0,4305,2,0,"else", 0, 2, 0);
	T = trans[ 1][4305] = settr(4521,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4521,0,4282,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4282] = settr(4498,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4498,0,4279,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4280]	= settr(4496,0,4279,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4279] = settr(4495,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4495,0,4154,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4495,0,4276,0,0,"DO", 0, 2, 0);
	trans[1][4154]	= settr(4370,0,4274,2272,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][4274] = settr(4490,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4490,0,4272,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4272] = settr(4488,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4488,0,4155,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4488,0,4185,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4488,0,4214,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4488,0,4243,0,0,"IF", 0, 2, 0);
	trans[1][4155]	= settr(4371,0,4184,2273,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][4184] = settr(4400,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4400,0,4175,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4175] = settr(4391,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4391,2,4173,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4173] = settr(4389,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4389,2,4156,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4389,2,4159,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4389,2,4162,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4389,2,4165,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4389,2,4168,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4389,2,4171,0,0,"IF", 1, 2, 0);
	trans[1][4156]	= settr(4372,4,4176,2274,2274,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4157 -> 4176,0 */
	reached1[4157] = 1;
	trans[1][4157]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4158]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4174]	= settr(4390,0,4176,2275,2275,".(goto)", 1, 2, 0);
	trans[1][4159]	= settr(4375,4,4176,2276,2276,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4160 -> 4176,0 */
	reached1[4160] = 1;
	trans[1][4160]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4161]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4162]	= settr(4378,4,4176,2277,2277,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4163 -> 4176,0 */
	reached1[4163] = 1;
	trans[1][4163]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4164]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4165]	= settr(4381,4,4176,2278,2278,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4166 -> 4176,0 */
	reached1[4166] = 1;
	trans[1][4166]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4167]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4168]	= settr(4384,4,4176,2279,2279,"((START==ABORT))", 1, 2, 0); /* m: 4169 -> 4176,0 */
	reached1[4169] = 1;
	trans[1][4169]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4170]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4171]	= settr(4387,2,4172,2,0,"else", 1, 2, 0);
	trans[1][4172]	= settr(4388,4,4176,2280,2280,"(1)", 1, 2, 0); /* m: 4174 -> 4176,0 */
	reached1[4174] = 1;
	trans[1][4176]	= settr(4392,0,4182,2281,2281,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4182] = settr(4398,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4398,0,4177,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4398,0,4180,0,0,"IF", 0, 2, 0);
	trans[1][4177]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4179] = settr(4395,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4395,0,4178,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4178]	= settr(4394,0,4275,2282,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4183]	= settr(4399,0,4275,1,0,".(goto)", 0, 2, 0); /* m: 4275 -> 0,4279 */
	reached1[4275] = 1;
	trans[1][4180]	= settr(4396,0,4181,2,0,"else", 0, 2, 0);
	trans[1][4181]	= settr(4397,0,4279,2283,2283,"(1)", 0, 2, 0); /* m: 4275 -> 4279,0 */
	reached1[4275] = 1;
	trans[1][4273]	= settr(4489,0,4275,1,0,".(goto)", 0, 2, 0); /* m: 4275 -> 0,4279 */
	reached1[4275] = 1;
	trans[1][4185]	= settr(4401,0,4213,2284,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][4213] = settr(4429,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4429,0,4205,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4205] = settr(4421,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4421,2,4203,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4203] = settr(4419,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4419,2,4186,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4419,2,4189,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4419,2,4192,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4419,2,4195,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4419,2,4198,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4419,2,4201,0,0,"IF", 1, 2, 0);
	trans[1][4186]	= settr(4402,4,4211,2285,2285,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4187 -> 4211,0 */
	reached1[4187] = 1;
	trans[1][4187]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4188]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4204]	= settr(4420,0,4211,2286,2286,".(goto)", 1, 2, 0);
	trans[1][4189]	= settr(4405,4,4211,2287,2287,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4190 -> 4211,0 */
	reached1[4190] = 1;
	trans[1][4190]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4191]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4192]	= settr(4408,4,4211,2288,2288,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4193 -> 4211,0 */
	reached1[4193] = 1;
	trans[1][4193]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4194]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4195]	= settr(4411,4,4211,2289,2289,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4196 -> 4211,0 */
	reached1[4196] = 1;
	trans[1][4196]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4197]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4198]	= settr(4414,4,4211,2290,2290,"((PAUSE==ABORT))", 1, 2, 0); /* m: 4199 -> 4211,0 */
	reached1[4199] = 1;
	trans[1][4199]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4200]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4201]	= settr(4417,2,4202,2,0,"else", 1, 2, 0);
	trans[1][4202]	= settr(4418,4,4211,2291,2291,"(1)", 1, 2, 0); /* m: 4204 -> 4211,0 */
	reached1[4204] = 1;
	T = trans[1][4211] = settr(4427,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4427,0,4206,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4427,0,4209,0,0,"IF", 0, 2, 0);
	trans[1][4206]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4208] = settr(4424,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4424,0,4207,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4207]	= settr(4423,0,4275,2292,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4212]	= settr(4428,0,4275,1,0,".(goto)", 0, 2, 0); /* m: 4275 -> 0,4279 */
	reached1[4275] = 1;
	trans[1][4209]	= settr(4425,0,4210,2,0,"else", 0, 2, 0);
	trans[1][4210]	= settr(4426,0,4279,2293,2293,"(1)", 0, 2, 0); /* m: 4275 -> 4279,0 */
	reached1[4275] = 1;
	trans[1][4214]	= settr(4430,0,4242,2294,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4242] = settr(4458,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4458,0,4234,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4234] = settr(4450,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4450,2,4232,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4232] = settr(4448,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4448,2,4215,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4448,2,4218,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4448,2,4221,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4448,2,4224,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4448,2,4227,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4448,2,4230,0,0,"IF", 1, 2, 0);
	trans[1][4215]	= settr(4431,4,4240,2295,2295,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4216 -> 4240,0 */
	reached1[4216] = 1;
	trans[1][4216]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4217]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4233]	= settr(4449,0,4240,2296,2296,".(goto)", 1, 2, 0);
	trans[1][4218]	= settr(4434,4,4240,2297,2297,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4219 -> 4240,0 */
	reached1[4219] = 1;
	trans[1][4219]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4220]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4221]	= settr(4437,4,4240,2298,2298,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4222 -> 4240,0 */
	reached1[4222] = 1;
	trans[1][4222]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4223]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4224]	= settr(4440,4,4240,2299,2299,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4225 -> 4240,0 */
	reached1[4225] = 1;
	trans[1][4225]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4226]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4227]	= settr(4443,4,4240,2300,2300,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 4228 -> 4240,0 */
	reached1[4228] = 1;
	trans[1][4228]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4229]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4230]	= settr(4446,2,4231,2,0,"else", 1, 2, 0);
	trans[1][4231]	= settr(4447,4,4240,2301,2301,"(1)", 1, 2, 0); /* m: 4233 -> 4240,0 */
	reached1[4233] = 1;
	T = trans[1][4240] = settr(4456,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4456,0,4235,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4456,0,4238,0,0,"IF", 0, 2, 0);
	trans[1][4235]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4237] = settr(4453,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4453,0,4236,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4236]	= settr(4452,0,4275,2302,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4241]	= settr(4457,0,4275,1,0,".(goto)", 0, 2, 0); /* m: 4275 -> 0,4279 */
	reached1[4275] = 1;
	trans[1][4238]	= settr(4454,0,4239,2,0,"else", 0, 2, 0);
	trans[1][4239]	= settr(4455,0,4279,2303,2303,"(1)", 0, 2, 0); /* m: 4275 -> 4279,0 */
	reached1[4275] = 1;
	trans[1][4243]	= settr(4459,0,4271,2304,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][4271] = settr(4487,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4487,0,4263,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4263] = settr(4479,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4479,2,4261,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4261] = settr(4477,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4477,2,4244,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4477,2,4247,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4477,2,4250,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4477,2,4253,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4477,2,4256,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4477,2,4259,0,0,"IF", 1, 2, 0);
	trans[1][4244]	= settr(4460,4,4269,2305,2305,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4245 -> 4269,0 */
	reached1[4245] = 1;
	trans[1][4245]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4246]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4262]	= settr(4478,0,4269,2306,2306,".(goto)", 1, 2, 0);
	trans[1][4247]	= settr(4463,4,4269,2307,2307,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4248 -> 4269,0 */
	reached1[4248] = 1;
	trans[1][4248]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4249]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4250]	= settr(4466,4,4269,2308,2308,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4251 -> 4269,0 */
	reached1[4251] = 1;
	trans[1][4251]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4252]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4253]	= settr(4469,4,4269,2309,2309,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4254 -> 4269,0 */
	reached1[4254] = 1;
	trans[1][4254]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4255]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4256]	= settr(4472,4,4269,2310,2310,"((STOP==ABORT))", 1, 2, 0); /* m: 4257 -> 4269,0 */
	reached1[4257] = 1;
	trans[1][4257]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4258]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4259]	= settr(4475,2,4260,2,0,"else", 1, 2, 0);
	trans[1][4260]	= settr(4476,4,4269,2311,2311,"(1)", 1, 2, 0); /* m: 4262 -> 4269,0 */
	reached1[4262] = 1;
	T = trans[1][4269] = settr(4485,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4485,0,4264,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4485,0,4267,0,0,"IF", 0, 2, 0);
	trans[1][4264]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4266] = settr(4482,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4482,0,4265,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4265]	= settr(4481,0,4275,2312,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4270]	= settr(4486,0,4275,1,0,".(goto)", 0, 2, 0); /* m: 4275 -> 0,4279 */
	reached1[4275] = 1;
	trans[1][4267]	= settr(4483,0,4268,2,0,"else", 0, 2, 0);
	trans[1][4268]	= settr(4484,0,4279,2313,2313,"(1)", 0, 2, 0); /* m: 4275 -> 4279,0 */
	reached1[4275] = 1;
	trans[1][4275]	= settr(4491,0,4279,2314,2314,"j = (j+1)", 0, 2, 0);
	trans[1][4276]	= settr(4492,0,4277,2,0,"else", 0, 2, 0);
	trans[1][4277]	= settr(4493,0,4302,2315,2315,"j = 1", 0, 2, 0);
	trans[1][4278]	= settr(4494,0,4302,1,0,"goto :b40", 0, 2, 0);
	trans[1][4281]	= settr(4497,0,4302,1,0,"break", 0, 2, 0);
	trans[1][4303]	= settr(4519,0,4302,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4302] = settr(4518,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4518,0,4283,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4518,0,4299,0,0,"DO", 0, 2, 0);
	trans[1][4283]	= settr(4499,0,4296,2316,0,"((j<3))", 0, 2, 0);
	T = trans[1][4296] = settr(4512,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4512,0,4284,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4512,0,4287,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4512,0,4290,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4512,0,4293,0,0,"IF", 0, 2, 0);
	trans[1][4284]	= settr(4500,0,4286,2317,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][4286] = settr(4502,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4502,0,4285,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4285]	= settr(4501,0,4298,2318,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4297]	= settr(4513,0,4298,1,0,".(goto)", 0, 2, 0); /* m: 4298 -> 0,4302 */
	reached1[4298] = 1;
	trans[1][4287]	= settr(4503,0,4289,2319,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4289] = settr(4505,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4505,0,4288,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4288]	= settr(4504,0,4298,2320,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4290]	= settr(4506,0,4292,2321,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][4292] = settr(4508,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4508,0,4291,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4291]	= settr(4507,0,4298,2322,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4293]	= settr(4509,0,4295,2323,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][4295] = settr(4511,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4511,0,4294,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4294]	= settr(4510,0,4298,2324,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4298]	= settr(4514,0,4302,2325,2325,"j = (j+1)", 0, 2, 0);
	trans[1][4299]	= settr(4515,0,4300,2,0,"else", 0, 2, 0);
	trans[1][4300]	= settr(4516,0,4397,2326,2326,"j = 1", 0, 2, 0);
	trans[1][4301]	= settr(4517,0,4397,1,0,"goto :b41", 0, 2, 0);
	trans[1][4304]	= settr(4520,0,4397,1,0,"break", 0, 2, 0);
	trans[1][4311]	= settr(4527,0,4312,2,0,"else", 0, 2, 0);
	trans[1][4312]	= settr(4528,0,4397,1,0,"(1)", 0, 2, 0);
	trans[1][4317]	= settr(4533,0,4318,2,0,"else", 0, 2, 0);
	trans[1][4318]	= settr(4534,0,4397,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4397] = settr(4613,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4613,0,4321,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4321]	= settr(4537,0,4333,2327,2327,"executing[0] = 1", 1, 2, 0);
	T = trans[ 1][4333] = settr(4549,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4549,0,4322,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4322]	= settr(4538,0,4330,2328,2328,"all_workers_stopped = 1", 1, 2, 0);
	trans[1][4331]	= settr(4547,0,4330,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4330] = settr(4546,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4546,0,4323,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4546,0,4327,0,0,"DO", 0, 2, 0);
	trans[1][4323]	= settr(4539,0,4324,2329,0,"((j<3))", 0, 2, 0);
	trans[1][4324]	= settr(4540,0,4325,2330,2330,"all_workers_stopped = (all_workers_stopped&&(states[j]==STOPPED))", 1, 2, 0);
	trans[1][4325]	= settr(4541,0,4326,2331,2331,"exists_aborted_worker = (exists_aborted_worker||(states[j]==ABORTED))", 1, 2, 0);
	trans[1][4326]	= settr(4542,0,4330,2332,2332,"j = (j+1)", 0, 2, 0);
	trans[1][4327]	= settr(4543,0,4328,2,0,"else", 0, 2, 0);
	trans[1][4328]	= settr(4544,0,4394,2333,2333,"j = 1", 0, 2, 0);
	trans[1][4329]	= settr(4545,0,4394,1,0,"goto :b42", 0, 2, 0);
	trans[1][4332]	= settr(4548,0,4394,1,0,"break", 0, 2, 0);
	T = trans[1][4394] = settr(4610,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4610,0,4334,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4610,0,4363,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4610,0,4392,0,0,"IF", 0, 2, 0);
	trans[1][4334]	= settr(4550,0,4362,2334,0,"(all_workers_stopped)", 1, 2, 0);
	T = trans[ 1][4362] = settr(4578,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4578,0,4354,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4354] = settr(4570,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4570,2,4352,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4352] = settr(4568,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4568,2,4335,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4568,2,4338,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4568,2,4341,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4568,2,4344,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4568,2,4347,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4568,2,4350,0,0,"IF", 1, 2, 0);
	trans[1][4335]	= settr(4551,4,4360,2335,2335,"(((STOP==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 4336 -> 4360,0 */
	reached1[4336] = 1;
	trans[1][4336]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[1][4337]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[1][4353]	= settr(4569,0,4360,2336,2336,".(goto)", 1, 2, 0);
	trans[1][4338]	= settr(4554,4,4360,2337,2337,"(((STOP==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 4339 -> 4360,0 */
	reached1[4339] = 1;
	trans[1][4339]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[1][4340]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[1][4341]	= settr(4557,4,4360,2338,2338,"(((STOP==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 4342 -> 4360,0 */
	reached1[4342] = 1;
	trans[1][4342]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[1][4343]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[1][4344]	= settr(4560,4,4360,2339,2339,"(((STOP==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 4345 -> 4360,0 */
	reached1[4345] = 1;
	trans[1][4345]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[1][4346]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[1][4347]	= settr(4563,4,4360,2340,2340,"((STOP==ABORT))", 1, 2, 0); /* m: 4348 -> 4360,0 */
	reached1[4348] = 1;
	trans[1][4348]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[1][4349]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[1][4350]	= settr(4566,2,4351,2,0,"else", 1, 2, 0);
	trans[1][4351]	= settr(4567,4,4360,2341,2341,"(1)", 1, 2, 0); /* m: 4353 -> 4360,0 */
	reached1[4353] = 1;
	T = trans[1][4360] = settr(4576,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4576,0,4355,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4576,0,4358,0,0,"IF", 0, 2, 0);
	trans[1][4355]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4357] = settr(4573,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4573,0,4356,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4356]	= settr(4572,0,4396,2342,0,"(((states[0]==STOPPED)||(states[0]==ABORTED)))", 1, 2, 0);
	trans[1][4361]	= settr(4577,0,4396,1,0,".(goto)", 0, 2, 0);
	trans[1][4358]	= settr(4574,0,4359,2,0,"else", 0, 2, 0);
	trans[1][4359]	= settr(4575,0,4396,1,0,"(1)", 0, 2, 0);
	trans[1][4395]	= settr(4611,0,4396,1,0,".(goto)", 0, 2, 0);
	trans[1][4363]	= settr(4579,0,4391,2343,0,"(exists_aborted_worker)", 1, 2, 0);
	T = trans[ 1][4391] = settr(4607,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4607,0,4383,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4383] = settr(4599,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4599,2,4381,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4381] = settr(4597,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4597,2,4364,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4597,2,4367,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4597,2,4370,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4597,2,4373,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4597,2,4376,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4597,2,4379,0,0,"IF", 1, 2, 0);
	trans[1][4364]	= settr(4580,4,4389,2344,2344,"(((STOP==START)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 4365 -> 4389,0 */
	reached1[4365] = 1;
	trans[1][4365]	= settr(0,0,0,0,0,"assert((states[0]==READY))",0,0,0);
	trans[1][4366]	= settr(0,0,0,0,0,"commands[0] = START",0,0,0);
	trans[1][4382]	= settr(4598,0,4389,2345,2345,".(goto)", 1, 2, 0);
	trans[1][4367]	= settr(4583,4,4389,2346,2346,"(((STOP==PAUSE)&&(commands[0]==CONTINUE)))", 1, 2, 0); /* m: 4368 -> 4389,0 */
	reached1[4368] = 1;
	trans[1][4368]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==RUNNING)))",0,0,0);
	trans[1][4369]	= settr(0,0,0,0,0,"commands[0] = PAUSE",0,0,0);
	trans[1][4370]	= settr(4586,4,4389,2347,2347,"(((STOP==CONTINUE)&&((commands[0]==START)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 4371 -> 4389,0 */
	reached1[4371] = 1;
	trans[1][4371]	= settr(0,0,0,0,0,"assert(((states[0]==STARTING)||(states[0]==PAUSED)))",0,0,0);
	trans[1][4372]	= settr(0,0,0,0,0,"commands[0] = CONTINUE",0,0,0);
	trans[1][4373]	= settr(4589,4,4389,2348,2348,"(((STOP==STOP)&&((commands[0]==CONTINUE)||(commands[0]==PAUSE))))", 1, 2, 0); /* m: 4374 -> 4389,0 */
	reached1[4374] = 1;
	trans[1][4374]	= settr(0,0,0,0,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))",0,0,0);
	trans[1][4375]	= settr(0,0,0,0,0,"commands[0] = STOP",0,0,0);
	trans[1][4376]	= settr(4592,4,4389,2349,2349,"((STOP==ABORT))", 1, 2, 0); /* m: 4377 -> 4389,0 */
	reached1[4377] = 1;
	trans[1][4377]	= settr(0,0,0,0,0,"assert((states[0]!=READY))",0,0,0);
	trans[1][4378]	= settr(0,0,0,0,0,"commands[0] = ABORT",0,0,0);
	trans[1][4379]	= settr(4595,2,4380,2,0,"else", 1, 2, 0);
	trans[1][4380]	= settr(4596,4,4389,2350,2350,"(1)", 1, 2, 0); /* m: 4382 -> 4389,0 */
	reached1[4382] = 1;
	T = trans[1][4389] = settr(4605,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4605,0,4384,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4605,0,4387,0,0,"IF", 0, 2, 0);
	trans[1][4384]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4386] = settr(4602,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4602,0,4385,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4385]	= settr(4601,0,4396,2351,0,"(((states[0]==STOPPED)||(states[0]==ABORTED)))", 1, 2, 0);
	trans[1][4390]	= settr(4606,0,4396,1,0,".(goto)", 0, 2, 0);
	trans[1][4387]	= settr(4603,0,4388,2,0,"else", 0, 2, 0);
	trans[1][4388]	= settr(4604,0,4396,1,0,"(1)", 0, 2, 0);
	trans[1][4392]	= settr(4608,0,4393,2,0,"else", 0, 2, 0);
	trans[1][4393]	= settr(4609,0,4396,1,0,"(1)", 0, 2, 0);
	trans[1][4396]	= settr(4612,0,5700,2352,2352,"executing[0] = 0", 1, 2, 0);
	trans[1][4398]	= settr(4614,0,5696,2353,0,"((commands[0]==PAUSE))", 1, 2, 0);
	T = trans[1][5696] = settr(5912,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5912,0,4399,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5912,0,4401,0,0,"IF", 0, 2, 0);
	trans[1][4399]	= settr(4615,0,4400,2354,0,"((states[0]==PAUSED))", 1, 2, 0);
	trans[1][4400]	= settr(4616,0,5700,2355,0,"((commands[0]!=PAUSED))", 1, 2, 0);
	trans[1][5697]	= settr(5913,0,5700,1,0,".(goto)", 0, 2, 0);
	trans[1][4401]	= settr(4617,0,4402,2,0,"else", 0, 2, 0);
	trans[1][4402]	= settr(4618,0,5694,2356,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==STARTING)))", 1, 2, 0);
	T = trans[1][5694] = settr(5910,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5910,0,4403,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5910,0,5692,0,0,"IF", 0, 2, 0);
	trans[1][4403]	= settr(4619,0,5691,2357,0,"(((states[0]==STARTING)||(states[0]==RUNNING)))", 1, 2, 0);
	T = trans[ 1][5691] = settr(5907,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5907,0,5689,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5689] = settr(5905,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5905,0,5687,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5687] = settr(5903,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5903,0,4404,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5903,0,4831,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5903,0,5258,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5903,0,5685,0,0,"IF", 0, 2, 0);
	trans[1][4404]	= settr(4620,0,4830,2358,0,"((10==RUNNING))", 0, 2, 0);
	T = trans[ 1][4830] = settr(5046,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5046,0,4828,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4828] = settr(5044,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5044,0,4405,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5044,0,4407,0,0,"IF", 0, 2, 0);
	trans[1][4405]	= settr(4621,0,4406,2359,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][4406]	= settr(4622,0,5690,2360,2360,"supervisor_started = 1", 1, 2, 0);
	trans[1][4829]	= settr(5045,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][4407]	= settr(4623,0,4826,2,0,"else", 0, 2, 0);
	T = trans[1][4826] = settr(5042,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5042,0,4408,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5042,0,4673,0,0,"IF", 0, 2, 0);
	trans[1][4408]	= settr(4624,0,4672,2361,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][4672] = settr(4888,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4888,0,4670,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4670] = settr(4886,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4886,0,4409,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4886,0,4539,0,0,"IF", 0, 2, 0);
	trans[1][4409]	= settr(4625,0,4538,2362,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][4538] = settr(4754,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4754,0,4535,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4536]	= settr(4752,0,4535,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4535] = settr(4751,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4751,0,4410,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4751,0,4532,0,0,"DO", 0, 2, 0);
	trans[1][4410]	= settr(4626,0,4530,2363,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][4530] = settr(4746,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4746,0,4528,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4528] = settr(4744,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4744,0,4411,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4744,0,4441,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4744,0,4470,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4744,0,4499,0,0,"IF", 0, 2, 0);
	trans[1][4411]	= settr(4627,0,4440,2364,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][4440] = settr(4656,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4656,0,4431,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4431] = settr(4647,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4647,2,4429,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4429] = settr(4645,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4645,2,4412,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4645,2,4415,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4645,2,4418,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4645,2,4421,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4645,2,4424,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4645,2,4427,0,0,"IF", 1, 2, 0);
	trans[1][4412]	= settr(4628,4,4432,2365,2365,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4413 -> 4432,0 */
	reached1[4413] = 1;
	trans[1][4413]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4414]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4430]	= settr(4646,0,4432,2366,2366,".(goto)", 1, 2, 0);
	trans[1][4415]	= settr(4631,4,4432,2367,2367,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4416 -> 4432,0 */
	reached1[4416] = 1;
	trans[1][4416]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4417]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4418]	= settr(4634,4,4432,2368,2368,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4419 -> 4432,0 */
	reached1[4419] = 1;
	trans[1][4419]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4420]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4421]	= settr(4637,4,4432,2369,2369,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4422 -> 4432,0 */
	reached1[4422] = 1;
	trans[1][4422]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4423]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4424]	= settr(4640,4,4432,2370,2370,"((START==ABORT))", 1, 2, 0); /* m: 4425 -> 4432,0 */
	reached1[4425] = 1;
	trans[1][4425]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4426]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4427]	= settr(4643,2,4428,2,0,"else", 1, 2, 0);
	trans[1][4428]	= settr(4644,4,4432,2371,2371,"(1)", 1, 2, 0); /* m: 4430 -> 4432,0 */
	reached1[4430] = 1;
	trans[1][4432]	= settr(4648,0,4438,2372,2372,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4438] = settr(4654,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4654,0,4433,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4654,0,4436,0,0,"IF", 0, 2, 0);
	trans[1][4433]	= settr(4649,0,4435,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4435] = settr(4651,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4651,0,4434,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4434]	= settr(4650,0,4531,2373,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4439]	= settr(4655,0,4531,1,0,".(goto)", 0, 2, 0); /* m: 4531 -> 0,4535 */
	reached1[4531] = 1;
	trans[1][4436]	= settr(4652,0,4437,2,0,"else", 0, 2, 0);
	trans[1][4437]	= settr(4653,0,4535,2374,2374,"(1)", 0, 2, 0); /* m: 4531 -> 4535,0 */
	reached1[4531] = 1;
	trans[1][4529]	= settr(4745,0,4531,1,0,".(goto)", 0, 2, 0); /* m: 4531 -> 0,4535 */
	reached1[4531] = 1;
	trans[1][4441]	= settr(4657,0,4469,2375,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][4469] = settr(4685,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4685,0,4461,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4461] = settr(4677,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4677,2,4459,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4459] = settr(4675,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4675,2,4442,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4675,2,4445,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4675,2,4448,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4675,2,4451,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4675,2,4454,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4675,2,4457,0,0,"IF", 1, 2, 0);
	trans[1][4442]	= settr(4658,4,4467,2376,2376,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4443 -> 4467,0 */
	reached1[4443] = 1;
	trans[1][4443]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4444]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4460]	= settr(4676,0,4467,2377,2377,".(goto)", 1, 2, 0);
	trans[1][4445]	= settr(4661,4,4467,2378,2378,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4446 -> 4467,0 */
	reached1[4446] = 1;
	trans[1][4446]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4447]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4448]	= settr(4664,4,4467,2379,2379,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4449 -> 4467,0 */
	reached1[4449] = 1;
	trans[1][4449]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4450]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4451]	= settr(4667,4,4467,2380,2380,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4452 -> 4467,0 */
	reached1[4452] = 1;
	trans[1][4452]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4453]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4454]	= settr(4670,4,4467,2381,2381,"((PAUSE==ABORT))", 1, 2, 0); /* m: 4455 -> 4467,0 */
	reached1[4455] = 1;
	trans[1][4455]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4456]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4457]	= settr(4673,2,4458,2,0,"else", 1, 2, 0);
	trans[1][4458]	= settr(4674,4,4467,2382,2382,"(1)", 1, 2, 0); /* m: 4460 -> 4467,0 */
	reached1[4460] = 1;
	T = trans[1][4467] = settr(4683,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4683,0,4462,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4683,0,4465,0,0,"IF", 0, 2, 0);
	trans[1][4462]	= settr(4678,0,4464,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4464] = settr(4680,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4680,0,4463,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4463]	= settr(4679,0,4531,2383,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4468]	= settr(4684,0,4531,1,0,".(goto)", 0, 2, 0); /* m: 4531 -> 0,4535 */
	reached1[4531] = 1;
	trans[1][4465]	= settr(4681,0,4466,2,0,"else", 0, 2, 0);
	trans[1][4466]	= settr(4682,0,4535,2384,2384,"(1)", 0, 2, 0); /* m: 4531 -> 4535,0 */
	reached1[4531] = 1;
	trans[1][4470]	= settr(4686,0,4498,2385,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4498] = settr(4714,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4714,0,4490,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4490] = settr(4706,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4706,2,4488,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4488] = settr(4704,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4704,2,4471,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4704,2,4474,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4704,2,4477,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4704,2,4480,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4704,2,4483,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4704,2,4486,0,0,"IF", 1, 2, 0);
	trans[1][4471]	= settr(4687,4,4496,2386,2386,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4472 -> 4496,0 */
	reached1[4472] = 1;
	trans[1][4472]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4473]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4489]	= settr(4705,0,4496,2387,2387,".(goto)", 1, 2, 0);
	trans[1][4474]	= settr(4690,4,4496,2388,2388,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4475 -> 4496,0 */
	reached1[4475] = 1;
	trans[1][4475]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4476]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4477]	= settr(4693,4,4496,2389,2389,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4478 -> 4496,0 */
	reached1[4478] = 1;
	trans[1][4478]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4479]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4480]	= settr(4696,4,4496,2390,2390,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4481 -> 4496,0 */
	reached1[4481] = 1;
	trans[1][4481]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4482]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4483]	= settr(4699,4,4496,2391,2391,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 4484 -> 4496,0 */
	reached1[4484] = 1;
	trans[1][4484]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4485]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4486]	= settr(4702,2,4487,2,0,"else", 1, 2, 0);
	trans[1][4487]	= settr(4703,4,4496,2392,2392,"(1)", 1, 2, 0); /* m: 4489 -> 4496,0 */
	reached1[4489] = 1;
	T = trans[1][4496] = settr(4712,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4712,0,4491,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4712,0,4494,0,0,"IF", 0, 2, 0);
	trans[1][4491]	= settr(4707,0,4493,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4493] = settr(4709,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4709,0,4492,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4492]	= settr(4708,0,4531,2393,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4497]	= settr(4713,0,4531,1,0,".(goto)", 0, 2, 0); /* m: 4531 -> 0,4535 */
	reached1[4531] = 1;
	trans[1][4494]	= settr(4710,0,4495,2,0,"else", 0, 2, 0);
	trans[1][4495]	= settr(4711,0,4535,2394,2394,"(1)", 0, 2, 0); /* m: 4531 -> 4535,0 */
	reached1[4531] = 1;
	trans[1][4499]	= settr(4715,0,4527,2395,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][4527] = settr(4743,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4743,0,4519,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4519] = settr(4735,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4735,2,4517,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4517] = settr(4733,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4733,2,4500,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4733,2,4503,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4733,2,4506,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4733,2,4509,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4733,2,4512,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4733,2,4515,0,0,"IF", 1, 2, 0);
	trans[1][4500]	= settr(4716,4,4525,2396,2396,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4501 -> 4525,0 */
	reached1[4501] = 1;
	trans[1][4501]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4502]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4518]	= settr(4734,0,4525,2397,2397,".(goto)", 1, 2, 0);
	trans[1][4503]	= settr(4719,4,4525,2398,2398,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4504 -> 4525,0 */
	reached1[4504] = 1;
	trans[1][4504]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4505]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4506]	= settr(4722,4,4525,2399,2399,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4507 -> 4525,0 */
	reached1[4507] = 1;
	trans[1][4507]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4508]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4509]	= settr(4725,4,4525,2400,2400,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4510 -> 4525,0 */
	reached1[4510] = 1;
	trans[1][4510]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4511]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4512]	= settr(4728,4,4525,2401,2401,"((STOP==ABORT))", 1, 2, 0); /* m: 4513 -> 4525,0 */
	reached1[4513] = 1;
	trans[1][4513]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4514]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4515]	= settr(4731,2,4516,2,0,"else", 1, 2, 0);
	trans[1][4516]	= settr(4732,4,4525,2402,2402,"(1)", 1, 2, 0); /* m: 4518 -> 4525,0 */
	reached1[4518] = 1;
	T = trans[1][4525] = settr(4741,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4741,0,4520,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4741,0,4523,0,0,"IF", 0, 2, 0);
	trans[1][4520]	= settr(4736,0,4522,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4522] = settr(4738,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4738,0,4521,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4521]	= settr(4737,0,4531,2403,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4526]	= settr(4742,0,4531,1,0,".(goto)", 0, 2, 0); /* m: 4531 -> 0,4535 */
	reached1[4531] = 1;
	trans[1][4523]	= settr(4739,0,4524,2,0,"else", 0, 2, 0);
	trans[1][4524]	= settr(4740,0,4535,2404,2404,"(1)", 0, 2, 0); /* m: 4531 -> 4535,0 */
	reached1[4531] = 1;
	trans[1][4531]	= settr(4747,0,4535,2405,2405,"j = (j+1)", 0, 2, 0);
	trans[1][4532]	= settr(4748,0,4533,2,0,"else", 0, 2, 0);
	trans[1][4533]	= settr(4749,0,5690,2406,2406,"j = 1", 0, 2, 0);
	trans[1][4534]	= settr(4750,0,5690,1,0,"goto :b43", 0, 2, 0);
	trans[1][4537]	= settr(4753,0,5690,1,0,"break", 0, 2, 0);
	trans[1][4671]	= settr(4887,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][4539]	= settr(4755,0,4669,2,0,"else", 0, 2, 0);
	T = trans[ 1][4669] = settr(4885,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4885,0,4540,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4540]	= settr(4756,0,4666,2407,2407,"j = (3-1)", 0, 2, 0);
	trans[1][4667]	= settr(4883,0,4666,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4666] = settr(4882,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4882,0,4541,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4882,0,4663,0,0,"DO", 0, 2, 0);
	trans[1][4541]	= settr(4757,0,4661,2408,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][4661] = settr(4877,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4877,0,4659,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4659] = settr(4875,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4875,0,4542,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4875,0,4572,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4875,0,4601,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4875,0,4630,0,0,"IF", 0, 2, 0);
	trans[1][4542]	= settr(4758,0,4571,2409,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][4571] = settr(4787,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4787,0,4562,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4562] = settr(4778,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4778,2,4560,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4560] = settr(4776,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4776,2,4543,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4776,2,4546,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4776,2,4549,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4776,2,4552,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4776,2,4555,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4776,2,4558,0,0,"IF", 1, 2, 0);
	trans[1][4543]	= settr(4759,4,4563,2410,2410,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4544 -> 4563,0 */
	reached1[4544] = 1;
	trans[1][4544]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4545]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4561]	= settr(4777,0,4563,2411,2411,".(goto)", 1, 2, 0);
	trans[1][4546]	= settr(4762,4,4563,2412,2412,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4547 -> 4563,0 */
	reached1[4547] = 1;
	trans[1][4547]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4548]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4549]	= settr(4765,4,4563,2413,2413,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4550 -> 4563,0 */
	reached1[4550] = 1;
	trans[1][4550]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4551]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4552]	= settr(4768,4,4563,2414,2414,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4553 -> 4563,0 */
	reached1[4553] = 1;
	trans[1][4553]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4554]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4555]	= settr(4771,4,4563,2415,2415,"((START==ABORT))", 1, 2, 0); /* m: 4556 -> 4563,0 */
	reached1[4556] = 1;
	trans[1][4556]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4557]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4558]	= settr(4774,2,4559,2,0,"else", 1, 2, 0);
	trans[1][4559]	= settr(4775,4,4563,2416,2416,"(1)", 1, 2, 0); /* m: 4561 -> 4563,0 */
	reached1[4561] = 1;
	trans[1][4563]	= settr(4779,0,4569,2417,2417,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4569] = settr(4785,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4785,0,4564,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4785,0,4567,0,0,"IF", 0, 2, 0);
	trans[1][4564]	= settr(4780,0,4566,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4566] = settr(4782,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4782,0,4565,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4565]	= settr(4781,0,4662,2418,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4570]	= settr(4786,0,4662,1,0,".(goto)", 0, 2, 0); /* m: 4662 -> 0,4666 */
	reached1[4662] = 1;
	trans[1][4567]	= settr(4783,0,4568,2,0,"else", 0, 2, 0);
	trans[1][4568]	= settr(4784,0,4666,2419,2419,"(1)", 0, 2, 0); /* m: 4662 -> 4666,0 */
	reached1[4662] = 1;
	trans[1][4660]	= settr(4876,0,4662,1,0,".(goto)", 0, 2, 0); /* m: 4662 -> 0,4666 */
	reached1[4662] = 1;
	trans[1][4572]	= settr(4788,0,4600,2420,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][4600] = settr(4816,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4816,0,4592,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4592] = settr(4808,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4808,2,4590,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4590] = settr(4806,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4806,2,4573,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4806,2,4576,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4806,2,4579,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4806,2,4582,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4806,2,4585,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4806,2,4588,0,0,"IF", 1, 2, 0);
	trans[1][4573]	= settr(4789,4,4598,2421,2421,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4574 -> 4598,0 */
	reached1[4574] = 1;
	trans[1][4574]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4575]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4591]	= settr(4807,0,4598,2422,2422,".(goto)", 1, 2, 0);
	trans[1][4576]	= settr(4792,4,4598,2423,2423,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4577 -> 4598,0 */
	reached1[4577] = 1;
	trans[1][4577]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4578]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4579]	= settr(4795,4,4598,2424,2424,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4580 -> 4598,0 */
	reached1[4580] = 1;
	trans[1][4580]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4581]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4582]	= settr(4798,4,4598,2425,2425,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4583 -> 4598,0 */
	reached1[4583] = 1;
	trans[1][4583]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4584]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4585]	= settr(4801,4,4598,2426,2426,"((PAUSE==ABORT))", 1, 2, 0); /* m: 4586 -> 4598,0 */
	reached1[4586] = 1;
	trans[1][4586]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4587]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4588]	= settr(4804,2,4589,2,0,"else", 1, 2, 0);
	trans[1][4589]	= settr(4805,4,4598,2427,2427,"(1)", 1, 2, 0); /* m: 4591 -> 4598,0 */
	reached1[4591] = 1;
	T = trans[1][4598] = settr(4814,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4814,0,4593,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4814,0,4596,0,0,"IF", 0, 2, 0);
	trans[1][4593]	= settr(4809,0,4595,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4595] = settr(4811,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4811,0,4594,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4594]	= settr(4810,0,4662,2428,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4599]	= settr(4815,0,4662,1,0,".(goto)", 0, 2, 0); /* m: 4662 -> 0,4666 */
	reached1[4662] = 1;
	trans[1][4596]	= settr(4812,0,4597,2,0,"else", 0, 2, 0);
	trans[1][4597]	= settr(4813,0,4666,2429,2429,"(1)", 0, 2, 0); /* m: 4662 -> 4666,0 */
	reached1[4662] = 1;
	trans[1][4601]	= settr(4817,0,4629,2430,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4629] = settr(4845,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4845,0,4621,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4621] = settr(4837,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4837,2,4619,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4619] = settr(4835,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4835,2,4602,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4835,2,4605,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4835,2,4608,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4835,2,4611,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4835,2,4614,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4835,2,4617,0,0,"IF", 1, 2, 0);
	trans[1][4602]	= settr(4818,4,4627,2431,2431,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4603 -> 4627,0 */
	reached1[4603] = 1;
	trans[1][4603]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4604]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4620]	= settr(4836,0,4627,2432,2432,".(goto)", 1, 2, 0);
	trans[1][4605]	= settr(4821,4,4627,2433,2433,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4606 -> 4627,0 */
	reached1[4606] = 1;
	trans[1][4606]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4607]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4608]	= settr(4824,4,4627,2434,2434,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4609 -> 4627,0 */
	reached1[4609] = 1;
	trans[1][4609]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4610]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4611]	= settr(4827,4,4627,2435,2435,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4612 -> 4627,0 */
	reached1[4612] = 1;
	trans[1][4612]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4613]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4614]	= settr(4830,4,4627,2436,2436,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 4615 -> 4627,0 */
	reached1[4615] = 1;
	trans[1][4615]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4616]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4617]	= settr(4833,2,4618,2,0,"else", 1, 2, 0);
	trans[1][4618]	= settr(4834,4,4627,2437,2437,"(1)", 1, 2, 0); /* m: 4620 -> 4627,0 */
	reached1[4620] = 1;
	T = trans[1][4627] = settr(4843,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4843,0,4622,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4843,0,4625,0,0,"IF", 0, 2, 0);
	trans[1][4622]	= settr(4838,0,4624,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4624] = settr(4840,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4840,0,4623,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4623]	= settr(4839,0,4662,2438,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4628]	= settr(4844,0,4662,1,0,".(goto)", 0, 2, 0); /* m: 4662 -> 0,4666 */
	reached1[4662] = 1;
	trans[1][4625]	= settr(4841,0,4626,2,0,"else", 0, 2, 0);
	trans[1][4626]	= settr(4842,0,4666,2439,2439,"(1)", 0, 2, 0); /* m: 4662 -> 4666,0 */
	reached1[4662] = 1;
	trans[1][4630]	= settr(4846,0,4658,2440,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][4658] = settr(4874,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4874,0,4650,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4650] = settr(4866,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4866,2,4648,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4648] = settr(4864,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4864,2,4631,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4864,2,4634,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4864,2,4637,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4864,2,4640,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4864,2,4643,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4864,2,4646,0,0,"IF", 1, 2, 0);
	trans[1][4631]	= settr(4847,4,4656,2441,2441,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4632 -> 4656,0 */
	reached1[4632] = 1;
	trans[1][4632]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4633]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4649]	= settr(4865,0,4656,2442,2442,".(goto)", 1, 2, 0);
	trans[1][4634]	= settr(4850,4,4656,2443,2443,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4635 -> 4656,0 */
	reached1[4635] = 1;
	trans[1][4635]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4636]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4637]	= settr(4853,4,4656,2444,2444,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4638 -> 4656,0 */
	reached1[4638] = 1;
	trans[1][4638]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4639]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4640]	= settr(4856,4,4656,2445,2445,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4641 -> 4656,0 */
	reached1[4641] = 1;
	trans[1][4641]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4642]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4643]	= settr(4859,4,4656,2446,2446,"((STOP==ABORT))", 1, 2, 0); /* m: 4644 -> 4656,0 */
	reached1[4644] = 1;
	trans[1][4644]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4645]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4646]	= settr(4862,2,4647,2,0,"else", 1, 2, 0);
	trans[1][4647]	= settr(4863,4,4656,2447,2447,"(1)", 1, 2, 0); /* m: 4649 -> 4656,0 */
	reached1[4649] = 1;
	T = trans[1][4656] = settr(4872,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(4872,0,4651,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(4872,0,4654,0,0,"IF", 0, 2, 0);
	trans[1][4651]	= settr(4867,0,4653,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4653] = settr(4869,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4869,0,4652,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4652]	= settr(4868,0,4662,2448,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4657]	= settr(4873,0,4662,1,0,".(goto)", 0, 2, 0); /* m: 4662 -> 0,4666 */
	reached1[4662] = 1;
	trans[1][4654]	= settr(4870,0,4655,2,0,"else", 0, 2, 0);
	trans[1][4655]	= settr(4871,0,4666,2449,2449,"(1)", 0, 2, 0); /* m: 4662 -> 4666,0 */
	reached1[4662] = 1;
	trans[1][4662]	= settr(4878,0,4666,2450,2450,"j = (j-1)", 0, 2, 0);
	trans[1][4663]	= settr(4879,0,4664,2,0,"else", 0, 2, 0);
	trans[1][4664]	= settr(4880,0,5690,2451,2451,"j = 1", 0, 2, 0);
	trans[1][4665]	= settr(4881,0,5690,1,0,"goto :b44", 0, 2, 0);
	trans[1][4668]	= settr(4884,0,5690,1,0,"break", 0, 2, 0);
	trans[1][4827]	= settr(5043,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][4673]	= settr(4889,0,4825,2,0,"else", 0, 2, 0);
	T = trans[ 1][4825] = settr(5041,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5041,0,4802,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4802] = settr(5018,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5018,0,4799,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4800]	= settr(5016,0,4799,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4799] = settr(5015,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5015,0,4674,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5015,0,4796,0,0,"DO", 0, 2, 0);
	trans[1][4674]	= settr(4890,0,4794,2452,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][4794] = settr(5010,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5010,0,4792,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4792] = settr(5008,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5008,0,4675,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5008,0,4705,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5008,0,4734,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5008,0,4763,0,0,"IF", 0, 2, 0);
	trans[1][4675]	= settr(4891,0,4704,2453,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][4704] = settr(4920,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4920,0,4695,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4695] = settr(4911,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4911,2,4693,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4693] = settr(4909,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4909,2,4676,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4909,2,4679,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4909,2,4682,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4909,2,4685,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4909,2,4688,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4909,2,4691,0,0,"IF", 1, 2, 0);
	trans[1][4676]	= settr(4892,4,4696,2454,2454,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4677 -> 4696,0 */
	reached1[4677] = 1;
	trans[1][4677]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4678]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4694]	= settr(4910,0,4696,2455,2455,".(goto)", 1, 2, 0);
	trans[1][4679]	= settr(4895,4,4696,2456,2456,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4680 -> 4696,0 */
	reached1[4680] = 1;
	trans[1][4680]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4681]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4682]	= settr(4898,4,4696,2457,2457,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4683 -> 4696,0 */
	reached1[4683] = 1;
	trans[1][4683]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4684]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4685]	= settr(4901,4,4696,2458,2458,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4686 -> 4696,0 */
	reached1[4686] = 1;
	trans[1][4686]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4687]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4688]	= settr(4904,4,4696,2459,2459,"((START==ABORT))", 1, 2, 0); /* m: 4689 -> 4696,0 */
	reached1[4689] = 1;
	trans[1][4689]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4690]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4691]	= settr(4907,2,4692,2,0,"else", 1, 2, 0);
	trans[1][4692]	= settr(4908,4,4696,2460,2460,"(1)", 1, 2, 0); /* m: 4694 -> 4696,0 */
	reached1[4694] = 1;
	trans[1][4696]	= settr(4912,0,4702,2461,2461,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4702] = settr(4918,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4918,0,4697,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4918,0,4700,0,0,"IF", 0, 2, 0);
	trans[1][4697]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4699] = settr(4915,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4915,0,4698,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4698]	= settr(4914,0,4795,2462,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4703]	= settr(4919,0,4795,1,0,".(goto)", 0, 2, 0); /* m: 4795 -> 0,4799 */
	reached1[4795] = 1;
	trans[1][4700]	= settr(4916,0,4701,2,0,"else", 0, 2, 0);
	trans[1][4701]	= settr(4917,0,4799,2463,2463,"(1)", 0, 2, 0); /* m: 4795 -> 4799,0 */
	reached1[4795] = 1;
	trans[1][4793]	= settr(5009,0,4795,1,0,".(goto)", 0, 2, 0); /* m: 4795 -> 0,4799 */
	reached1[4795] = 1;
	trans[1][4705]	= settr(4921,0,4733,2464,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][4733] = settr(4949,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4949,0,4725,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4725] = settr(4941,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4941,2,4723,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4723] = settr(4939,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4939,2,4706,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4939,2,4709,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4939,2,4712,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4939,2,4715,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4939,2,4718,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4939,2,4721,0,0,"IF", 1, 2, 0);
	trans[1][4706]	= settr(4922,4,4731,2465,2465,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4707 -> 4731,0 */
	reached1[4707] = 1;
	trans[1][4707]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4708]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4724]	= settr(4940,0,4731,2466,2466,".(goto)", 1, 2, 0);
	trans[1][4709]	= settr(4925,4,4731,2467,2467,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4710 -> 4731,0 */
	reached1[4710] = 1;
	trans[1][4710]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4711]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4712]	= settr(4928,4,4731,2468,2468,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4713 -> 4731,0 */
	reached1[4713] = 1;
	trans[1][4713]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4714]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4715]	= settr(4931,4,4731,2469,2469,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4716 -> 4731,0 */
	reached1[4716] = 1;
	trans[1][4716]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4717]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4718]	= settr(4934,4,4731,2470,2470,"((PAUSE==ABORT))", 1, 2, 0); /* m: 4719 -> 4731,0 */
	reached1[4719] = 1;
	trans[1][4719]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4720]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4721]	= settr(4937,2,4722,2,0,"else", 1, 2, 0);
	trans[1][4722]	= settr(4938,4,4731,2471,2471,"(1)", 1, 2, 0); /* m: 4724 -> 4731,0 */
	reached1[4724] = 1;
	T = trans[1][4731] = settr(4947,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4947,0,4726,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4947,0,4729,0,0,"IF", 0, 2, 0);
	trans[1][4726]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4728] = settr(4944,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4944,0,4727,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4727]	= settr(4943,0,4795,2472,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4732]	= settr(4948,0,4795,1,0,".(goto)", 0, 2, 0); /* m: 4795 -> 0,4799 */
	reached1[4795] = 1;
	trans[1][4729]	= settr(4945,0,4730,2,0,"else", 0, 2, 0);
	trans[1][4730]	= settr(4946,0,4799,2473,2473,"(1)", 0, 2, 0); /* m: 4795 -> 4799,0 */
	reached1[4795] = 1;
	trans[1][4734]	= settr(4950,0,4762,2474,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4762] = settr(4978,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4978,0,4754,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4754] = settr(4970,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4970,2,4752,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4752] = settr(4968,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4968,2,4735,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4968,2,4738,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4968,2,4741,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4968,2,4744,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4968,2,4747,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4968,2,4750,0,0,"IF", 1, 2, 0);
	trans[1][4735]	= settr(4951,4,4760,2475,2475,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4736 -> 4760,0 */
	reached1[4736] = 1;
	trans[1][4736]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4737]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4753]	= settr(4969,0,4760,2476,2476,".(goto)", 1, 2, 0);
	trans[1][4738]	= settr(4954,4,4760,2477,2477,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4739 -> 4760,0 */
	reached1[4739] = 1;
	trans[1][4739]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4740]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4741]	= settr(4957,4,4760,2478,2478,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4742 -> 4760,0 */
	reached1[4742] = 1;
	trans[1][4742]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4743]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4744]	= settr(4960,4,4760,2479,2479,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4745 -> 4760,0 */
	reached1[4745] = 1;
	trans[1][4745]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4746]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4747]	= settr(4963,4,4760,2480,2480,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 4748 -> 4760,0 */
	reached1[4748] = 1;
	trans[1][4748]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4749]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4750]	= settr(4966,2,4751,2,0,"else", 1, 2, 0);
	trans[1][4751]	= settr(4967,4,4760,2481,2481,"(1)", 1, 2, 0); /* m: 4753 -> 4760,0 */
	reached1[4753] = 1;
	T = trans[1][4760] = settr(4976,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(4976,0,4755,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(4976,0,4758,0,0,"IF", 0, 2, 0);
	trans[1][4755]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4757] = settr(4973,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(4973,0,4756,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4756]	= settr(4972,0,4795,2482,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4761]	= settr(4977,0,4795,1,0,".(goto)", 0, 2, 0); /* m: 4795 -> 0,4799 */
	reached1[4795] = 1;
	trans[1][4758]	= settr(4974,0,4759,2,0,"else", 0, 2, 0);
	trans[1][4759]	= settr(4975,0,4799,2483,2483,"(1)", 0, 2, 0); /* m: 4795 -> 4799,0 */
	reached1[4795] = 1;
	trans[1][4763]	= settr(4979,0,4791,2484,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][4791] = settr(5007,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5007,0,4783,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4783] = settr(4999,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(4999,2,4781,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4781] = settr(4997,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4997,2,4764,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4997,2,4767,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4997,2,4770,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4997,2,4773,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(4997,2,4776,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(4997,2,4779,0,0,"IF", 1, 2, 0);
	trans[1][4764]	= settr(4980,4,4789,2485,2485,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4765 -> 4789,0 */
	reached1[4765] = 1;
	trans[1][4765]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4766]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4782]	= settr(4998,0,4789,2486,2486,".(goto)", 1, 2, 0);
	trans[1][4767]	= settr(4983,4,4789,2487,2487,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4768 -> 4789,0 */
	reached1[4768] = 1;
	trans[1][4768]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4769]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4770]	= settr(4986,4,4789,2488,2488,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4771 -> 4789,0 */
	reached1[4771] = 1;
	trans[1][4771]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4772]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4773]	= settr(4989,4,4789,2489,2489,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4774 -> 4789,0 */
	reached1[4774] = 1;
	trans[1][4774]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4775]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4776]	= settr(4992,4,4789,2490,2490,"((STOP==ABORT))", 1, 2, 0); /* m: 4777 -> 4789,0 */
	reached1[4777] = 1;
	trans[1][4777]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4778]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4779]	= settr(4995,2,4780,2,0,"else", 1, 2, 0);
	trans[1][4780]	= settr(4996,4,4789,2491,2491,"(1)", 1, 2, 0); /* m: 4782 -> 4789,0 */
	reached1[4782] = 1;
	T = trans[1][4789] = settr(5005,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5005,0,4784,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5005,0,4787,0,0,"IF", 0, 2, 0);
	trans[1][4784]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][4786] = settr(5002,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5002,0,4785,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4785]	= settr(5001,0,4795,2492,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4790]	= settr(5006,0,4795,1,0,".(goto)", 0, 2, 0); /* m: 4795 -> 0,4799 */
	reached1[4795] = 1;
	trans[1][4787]	= settr(5003,0,4788,2,0,"else", 0, 2, 0);
	trans[1][4788]	= settr(5004,0,4799,2493,2493,"(1)", 0, 2, 0); /* m: 4795 -> 4799,0 */
	reached1[4795] = 1;
	trans[1][4795]	= settr(5011,0,4799,2494,2494,"j = (j+1)", 0, 2, 0);
	trans[1][4796]	= settr(5012,0,4797,2,0,"else", 0, 2, 0);
	trans[1][4797]	= settr(5013,0,4822,2495,2495,"j = 1", 0, 2, 0);
	trans[1][4798]	= settr(5014,0,4822,1,0,"goto :b45", 0, 2, 0);
	trans[1][4801]	= settr(5017,0,4822,1,0,"break", 0, 2, 0);
	trans[1][4823]	= settr(5039,0,4822,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4822] = settr(5038,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5038,0,4803,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5038,0,4819,0,0,"DO", 0, 2, 0);
	trans[1][4803]	= settr(5019,0,4816,2496,0,"((j<3))", 0, 2, 0);
	T = trans[1][4816] = settr(5032,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5032,0,4804,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5032,0,4807,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5032,0,4810,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5032,0,4813,0,0,"IF", 0, 2, 0);
	trans[1][4804]	= settr(5020,0,4806,2497,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][4806] = settr(5022,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5022,0,4805,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4805]	= settr(5021,0,4818,2498,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4817]	= settr(5033,0,4818,1,0,".(goto)", 0, 2, 0); /* m: 4818 -> 0,4822 */
	reached1[4818] = 1;
	trans[1][4807]	= settr(5023,0,4809,2499,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4809] = settr(5025,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5025,0,4808,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4808]	= settr(5024,0,4818,2500,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4810]	= settr(5026,0,4812,2501,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][4812] = settr(5028,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5028,0,4811,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4811]	= settr(5027,0,4818,2502,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4813]	= settr(5029,0,4815,2503,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][4815] = settr(5031,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5031,0,4814,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4814]	= settr(5030,0,4818,2504,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4818]	= settr(5034,0,4822,2505,2505,"j = (j+1)", 0, 2, 0);
	trans[1][4819]	= settr(5035,0,4820,2,0,"else", 0, 2, 0);
	trans[1][4820]	= settr(5036,0,5690,2506,2506,"j = 1", 0, 2, 0);
	trans[1][4821]	= settr(5037,0,5690,1,0,"goto :b46", 0, 2, 0);
	trans[1][4824]	= settr(5040,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5688]	= settr(5904,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][4831]	= settr(5047,0,5257,2507,0,"((10==PAUSED))", 0, 2, 0);
	T = trans[ 1][5257] = settr(5473,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5473,0,5255,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5255] = settr(5471,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5471,0,4832,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5471,0,4834,0,0,"IF", 0, 2, 0);
	trans[1][4832]	= settr(5048,0,4833,2508,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][4833]	= settr(5049,0,5690,2509,2509,"supervisor_started = 1", 1, 2, 0);
	trans[1][5256]	= settr(5472,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][4834]	= settr(5050,0,5253,2,0,"else", 0, 2, 0);
	T = trans[1][5253] = settr(5469,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5469,0,4835,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5469,0,5100,0,0,"IF", 0, 2, 0);
	trans[1][4835]	= settr(5051,0,5099,2510,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][5099] = settr(5315,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5315,0,5097,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5097] = settr(5313,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5313,0,4836,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5313,0,4966,0,0,"IF", 0, 2, 0);
	trans[1][4836]	= settr(5052,0,4965,2511,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][4965] = settr(5181,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5181,0,4962,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4963]	= settr(5179,0,4962,1,0,".(goto)", 0, 2, 0);
	T = trans[1][4962] = settr(5178,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5178,0,4837,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5178,0,4959,0,0,"DO", 0, 2, 0);
	trans[1][4837]	= settr(5053,0,4957,2512,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][4957] = settr(5173,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5173,0,4955,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][4955] = settr(5171,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5171,0,4838,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5171,0,4868,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5171,0,4897,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5171,0,4926,0,0,"IF", 0, 2, 0);
	trans[1][4838]	= settr(5054,0,4867,2513,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][4867] = settr(5083,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5083,0,4858,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4858] = settr(5074,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5074,2,4856,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4856] = settr(5072,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5072,2,4839,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5072,2,4842,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5072,2,4845,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5072,2,4848,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5072,2,4851,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5072,2,4854,0,0,"IF", 1, 2, 0);
	trans[1][4839]	= settr(5055,4,4859,2514,2514,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4840 -> 4859,0 */
	reached1[4840] = 1;
	trans[1][4840]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4841]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4857]	= settr(5073,0,4859,2515,2515,".(goto)", 1, 2, 0);
	trans[1][4842]	= settr(5058,4,4859,2516,2516,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4843 -> 4859,0 */
	reached1[4843] = 1;
	trans[1][4843]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4844]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4845]	= settr(5061,4,4859,2517,2517,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4846 -> 4859,0 */
	reached1[4846] = 1;
	trans[1][4846]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4847]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4848]	= settr(5064,4,4859,2518,2518,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4849 -> 4859,0 */
	reached1[4849] = 1;
	trans[1][4849]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4850]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4851]	= settr(5067,4,4859,2519,2519,"((START==ABORT))", 1, 2, 0); /* m: 4852 -> 4859,0 */
	reached1[4852] = 1;
	trans[1][4852]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4853]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4854]	= settr(5070,2,4855,2,0,"else", 1, 2, 0);
	trans[1][4855]	= settr(5071,4,4859,2520,2520,"(1)", 1, 2, 0); /* m: 4857 -> 4859,0 */
	reached1[4857] = 1;
	trans[1][4859]	= settr(5075,0,4865,2521,2521,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4865] = settr(5081,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5081,0,4860,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5081,0,4863,0,0,"IF", 0, 2, 0);
	trans[1][4860]	= settr(5076,0,4862,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4862] = settr(5078,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5078,0,4861,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4861]	= settr(5077,0,4958,2522,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4866]	= settr(5082,0,4958,1,0,".(goto)", 0, 2, 0); /* m: 4958 -> 0,4962 */
	reached1[4958] = 1;
	trans[1][4863]	= settr(5079,0,4864,2,0,"else", 0, 2, 0);
	trans[1][4864]	= settr(5080,0,4962,2523,2523,"(1)", 0, 2, 0); /* m: 4958 -> 4962,0 */
	reached1[4958] = 1;
	trans[1][4956]	= settr(5172,0,4958,1,0,".(goto)", 0, 2, 0); /* m: 4958 -> 0,4962 */
	reached1[4958] = 1;
	trans[1][4868]	= settr(5084,0,4896,2524,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][4896] = settr(5112,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5112,0,4888,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4888] = settr(5104,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5104,2,4886,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4886] = settr(5102,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5102,2,4869,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5102,2,4872,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5102,2,4875,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5102,2,4878,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5102,2,4881,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5102,2,4884,0,0,"IF", 1, 2, 0);
	trans[1][4869]	= settr(5085,4,4894,2525,2525,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4870 -> 4894,0 */
	reached1[4870] = 1;
	trans[1][4870]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4871]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4887]	= settr(5103,0,4894,2526,2526,".(goto)", 1, 2, 0);
	trans[1][4872]	= settr(5088,4,4894,2527,2527,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4873 -> 4894,0 */
	reached1[4873] = 1;
	trans[1][4873]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4874]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4875]	= settr(5091,4,4894,2528,2528,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4876 -> 4894,0 */
	reached1[4876] = 1;
	trans[1][4876]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4877]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4878]	= settr(5094,4,4894,2529,2529,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4879 -> 4894,0 */
	reached1[4879] = 1;
	trans[1][4879]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4880]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4881]	= settr(5097,4,4894,2530,2530,"((PAUSE==ABORT))", 1, 2, 0); /* m: 4882 -> 4894,0 */
	reached1[4882] = 1;
	trans[1][4882]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4883]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4884]	= settr(5100,2,4885,2,0,"else", 1, 2, 0);
	trans[1][4885]	= settr(5101,4,4894,2531,2531,"(1)", 1, 2, 0); /* m: 4887 -> 4894,0 */
	reached1[4887] = 1;
	T = trans[1][4894] = settr(5110,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5110,0,4889,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5110,0,4892,0,0,"IF", 0, 2, 0);
	trans[1][4889]	= settr(5105,0,4891,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4891] = settr(5107,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5107,0,4890,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4890]	= settr(5106,0,4958,2532,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4895]	= settr(5111,0,4958,1,0,".(goto)", 0, 2, 0); /* m: 4958 -> 0,4962 */
	reached1[4958] = 1;
	trans[1][4892]	= settr(5108,0,4893,2,0,"else", 0, 2, 0);
	trans[1][4893]	= settr(5109,0,4962,2533,2533,"(1)", 0, 2, 0); /* m: 4958 -> 4962,0 */
	reached1[4958] = 1;
	trans[1][4897]	= settr(5113,0,4925,2534,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][4925] = settr(5141,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5141,0,4917,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4917] = settr(5133,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5133,2,4915,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4915] = settr(5131,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5131,2,4898,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5131,2,4901,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5131,2,4904,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5131,2,4907,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5131,2,4910,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5131,2,4913,0,0,"IF", 1, 2, 0);
	trans[1][4898]	= settr(5114,4,4923,2535,2535,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4899 -> 4923,0 */
	reached1[4899] = 1;
	trans[1][4899]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4900]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4916]	= settr(5132,0,4923,2536,2536,".(goto)", 1, 2, 0);
	trans[1][4901]	= settr(5117,4,4923,2537,2537,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4902 -> 4923,0 */
	reached1[4902] = 1;
	trans[1][4902]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4903]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4904]	= settr(5120,4,4923,2538,2538,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4905 -> 4923,0 */
	reached1[4905] = 1;
	trans[1][4905]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4906]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4907]	= settr(5123,4,4923,2539,2539,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4908 -> 4923,0 */
	reached1[4908] = 1;
	trans[1][4908]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4909]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4910]	= settr(5126,4,4923,2540,2540,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 4911 -> 4923,0 */
	reached1[4911] = 1;
	trans[1][4911]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4912]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4913]	= settr(5129,2,4914,2,0,"else", 1, 2, 0);
	trans[1][4914]	= settr(5130,4,4923,2541,2541,"(1)", 1, 2, 0); /* m: 4916 -> 4923,0 */
	reached1[4916] = 1;
	T = trans[1][4923] = settr(5139,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5139,0,4918,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5139,0,4921,0,0,"IF", 0, 2, 0);
	trans[1][4918]	= settr(5134,0,4920,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4920] = settr(5136,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5136,0,4919,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4919]	= settr(5135,0,4958,2542,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4924]	= settr(5140,0,4958,1,0,".(goto)", 0, 2, 0); /* m: 4958 -> 0,4962 */
	reached1[4958] = 1;
	trans[1][4921]	= settr(5137,0,4922,2,0,"else", 0, 2, 0);
	trans[1][4922]	= settr(5138,0,4962,2543,2543,"(1)", 0, 2, 0); /* m: 4958 -> 4962,0 */
	reached1[4958] = 1;
	trans[1][4926]	= settr(5142,0,4954,2544,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][4954] = settr(5170,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5170,0,4946,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4946] = settr(5162,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5162,2,4944,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4944] = settr(5160,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5160,2,4927,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5160,2,4930,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5160,2,4933,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5160,2,4936,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5160,2,4939,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5160,2,4942,0,0,"IF", 1, 2, 0);
	trans[1][4927]	= settr(5143,4,4952,2545,2545,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4928 -> 4952,0 */
	reached1[4928] = 1;
	trans[1][4928]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4929]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4945]	= settr(5161,0,4952,2546,2546,".(goto)", 1, 2, 0);
	trans[1][4930]	= settr(5146,4,4952,2547,2547,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4931 -> 4952,0 */
	reached1[4931] = 1;
	trans[1][4931]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4932]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4933]	= settr(5149,4,4952,2548,2548,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4934 -> 4952,0 */
	reached1[4934] = 1;
	trans[1][4934]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4935]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4936]	= settr(5152,4,4952,2549,2549,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4937 -> 4952,0 */
	reached1[4937] = 1;
	trans[1][4937]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4938]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4939]	= settr(5155,4,4952,2550,2550,"((STOP==ABORT))", 1, 2, 0); /* m: 4940 -> 4952,0 */
	reached1[4940] = 1;
	trans[1][4940]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4941]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4942]	= settr(5158,2,4943,2,0,"else", 1, 2, 0);
	trans[1][4943]	= settr(5159,4,4952,2551,2551,"(1)", 1, 2, 0); /* m: 4945 -> 4952,0 */
	reached1[4945] = 1;
	T = trans[1][4952] = settr(5168,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5168,0,4947,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5168,0,4950,0,0,"IF", 0, 2, 0);
	trans[1][4947]	= settr(5163,0,4949,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4949] = settr(5165,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5165,0,4948,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4948]	= settr(5164,0,4958,2552,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4953]	= settr(5169,0,4958,1,0,".(goto)", 0, 2, 0); /* m: 4958 -> 0,4962 */
	reached1[4958] = 1;
	trans[1][4950]	= settr(5166,0,4951,2,0,"else", 0, 2, 0);
	trans[1][4951]	= settr(5167,0,4962,2553,2553,"(1)", 0, 2, 0); /* m: 4958 -> 4962,0 */
	reached1[4958] = 1;
	trans[1][4958]	= settr(5174,0,4962,2554,2554,"j = (j+1)", 0, 2, 0);
	trans[1][4959]	= settr(5175,0,4960,2,0,"else", 0, 2, 0);
	trans[1][4960]	= settr(5176,0,5690,2555,2555,"j = 1", 0, 2, 0);
	trans[1][4961]	= settr(5177,0,5690,1,0,"goto :b47", 0, 2, 0);
	trans[1][4964]	= settr(5180,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5098]	= settr(5314,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][4966]	= settr(5182,0,5096,2,0,"else", 0, 2, 0);
	T = trans[ 1][5096] = settr(5312,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5312,0,4967,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4967]	= settr(5183,0,5093,2556,2556,"j = (3-1)", 0, 2, 0);
	trans[1][5094]	= settr(5310,0,5093,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5093] = settr(5309,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5309,0,4968,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5309,0,5090,0,0,"DO", 0, 2, 0);
	trans[1][4968]	= settr(5184,0,5088,2557,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][5088] = settr(5304,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5304,0,5086,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5086] = settr(5302,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5302,0,4969,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5302,0,4999,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5302,0,5028,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5302,0,5057,0,0,"IF", 0, 2, 0);
	trans[1][4969]	= settr(5185,0,4998,2558,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][4998] = settr(5214,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5214,0,4989,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][4989] = settr(5205,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5205,2,4987,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][4987] = settr(5203,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5203,2,4970,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5203,2,4973,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5203,2,4976,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5203,2,4979,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5203,2,4982,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5203,2,4985,0,0,"IF", 1, 2, 0);
	trans[1][4970]	= settr(5186,4,4990,2559,2559,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4971 -> 4990,0 */
	reached1[4971] = 1;
	trans[1][4971]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][4972]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][4988]	= settr(5204,0,4990,2560,2560,".(goto)", 1, 2, 0);
	trans[1][4973]	= settr(5189,4,4990,2561,2561,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 4974 -> 4990,0 */
	reached1[4974] = 1;
	trans[1][4974]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][4975]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][4976]	= settr(5192,4,4990,2562,2562,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4977 -> 4990,0 */
	reached1[4977] = 1;
	trans[1][4977]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][4978]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][4979]	= settr(5195,4,4990,2563,2563,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 4980 -> 4990,0 */
	reached1[4980] = 1;
	trans[1][4980]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][4981]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][4982]	= settr(5198,4,4990,2564,2564,"((START==ABORT))", 1, 2, 0); /* m: 4983 -> 4990,0 */
	reached1[4983] = 1;
	trans[1][4983]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][4984]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][4985]	= settr(5201,2,4986,2,0,"else", 1, 2, 0);
	trans[1][4986]	= settr(5202,4,4990,2565,2565,"(1)", 1, 2, 0); /* m: 4988 -> 4990,0 */
	reached1[4988] = 1;
	trans[1][4990]	= settr(5206,0,4996,2566,2566,"(run Thread(j))", 0, 2, 0);
	T = trans[1][4996] = settr(5212,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5212,0,4991,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5212,0,4994,0,0,"IF", 0, 2, 0);
	trans[1][4991]	= settr(5207,0,4993,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][4993] = settr(5209,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5209,0,4992,0,0,"sub-sequence", 0, 2, 0);
	trans[1][4992]	= settr(5208,0,5089,2567,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][4997]	= settr(5213,0,5089,1,0,".(goto)", 0, 2, 0); /* m: 5089 -> 0,5093 */
	reached1[5089] = 1;
	trans[1][4994]	= settr(5210,0,4995,2,0,"else", 0, 2, 0);
	trans[1][4995]	= settr(5211,0,5093,2568,2568,"(1)", 0, 2, 0); /* m: 5089 -> 5093,0 */
	reached1[5089] = 1;
	trans[1][5087]	= settr(5303,0,5089,1,0,".(goto)", 0, 2, 0); /* m: 5089 -> 0,5093 */
	reached1[5089] = 1;
	trans[1][4999]	= settr(5215,0,5027,2569,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][5027] = settr(5243,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5243,0,5019,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5019] = settr(5235,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5235,2,5017,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5017] = settr(5233,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5233,2,5000,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5233,2,5003,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5233,2,5006,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5233,2,5009,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5233,2,5012,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5233,2,5015,0,0,"IF", 1, 2, 0);
	trans[1][5000]	= settr(5216,4,5025,2570,2570,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5001 -> 5025,0 */
	reached1[5001] = 1;
	trans[1][5001]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5002]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5018]	= settr(5234,0,5025,2571,2571,".(goto)", 1, 2, 0);
	trans[1][5003]	= settr(5219,4,5025,2572,2572,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5004 -> 5025,0 */
	reached1[5004] = 1;
	trans[1][5004]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5005]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5006]	= settr(5222,4,5025,2573,2573,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5007 -> 5025,0 */
	reached1[5007] = 1;
	trans[1][5007]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5008]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5009]	= settr(5225,4,5025,2574,2574,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5010 -> 5025,0 */
	reached1[5010] = 1;
	trans[1][5010]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5011]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5012]	= settr(5228,4,5025,2575,2575,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5013 -> 5025,0 */
	reached1[5013] = 1;
	trans[1][5013]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5014]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5015]	= settr(5231,2,5016,2,0,"else", 1, 2, 0);
	trans[1][5016]	= settr(5232,4,5025,2576,2576,"(1)", 1, 2, 0); /* m: 5018 -> 5025,0 */
	reached1[5018] = 1;
	T = trans[1][5025] = settr(5241,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5241,0,5020,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5241,0,5023,0,0,"IF", 0, 2, 0);
	trans[1][5020]	= settr(5236,0,5022,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5022] = settr(5238,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5238,0,5021,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5021]	= settr(5237,0,5089,2577,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5026]	= settr(5242,0,5089,1,0,".(goto)", 0, 2, 0); /* m: 5089 -> 0,5093 */
	reached1[5089] = 1;
	trans[1][5023]	= settr(5239,0,5024,2,0,"else", 0, 2, 0);
	trans[1][5024]	= settr(5240,0,5093,2578,2578,"(1)", 0, 2, 0); /* m: 5089 -> 5093,0 */
	reached1[5089] = 1;
	trans[1][5028]	= settr(5244,0,5056,2579,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5056] = settr(5272,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5272,0,5048,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5048] = settr(5264,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5264,2,5046,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5046] = settr(5262,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5262,2,5029,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5262,2,5032,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5262,2,5035,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5262,2,5038,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5262,2,5041,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5262,2,5044,0,0,"IF", 1, 2, 0);
	trans[1][5029]	= settr(5245,4,5054,2580,2580,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5030 -> 5054,0 */
	reached1[5030] = 1;
	trans[1][5030]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5031]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5047]	= settr(5263,0,5054,2581,2581,".(goto)", 1, 2, 0);
	trans[1][5032]	= settr(5248,4,5054,2582,2582,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5033 -> 5054,0 */
	reached1[5033] = 1;
	trans[1][5033]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5034]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5035]	= settr(5251,4,5054,2583,2583,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5036 -> 5054,0 */
	reached1[5036] = 1;
	trans[1][5036]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5037]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5038]	= settr(5254,4,5054,2584,2584,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5039 -> 5054,0 */
	reached1[5039] = 1;
	trans[1][5039]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5040]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5041]	= settr(5257,4,5054,2585,2585,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5042 -> 5054,0 */
	reached1[5042] = 1;
	trans[1][5042]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5043]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5044]	= settr(5260,2,5045,2,0,"else", 1, 2, 0);
	trans[1][5045]	= settr(5261,4,5054,2586,2586,"(1)", 1, 2, 0); /* m: 5047 -> 5054,0 */
	reached1[5047] = 1;
	T = trans[1][5054] = settr(5270,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5270,0,5049,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5270,0,5052,0,0,"IF", 0, 2, 0);
	trans[1][5049]	= settr(5265,0,5051,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5051] = settr(5267,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5267,0,5050,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5050]	= settr(5266,0,5089,2587,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5055]	= settr(5271,0,5089,1,0,".(goto)", 0, 2, 0); /* m: 5089 -> 0,5093 */
	reached1[5089] = 1;
	trans[1][5052]	= settr(5268,0,5053,2,0,"else", 0, 2, 0);
	trans[1][5053]	= settr(5269,0,5093,2588,2588,"(1)", 0, 2, 0); /* m: 5089 -> 5093,0 */
	reached1[5089] = 1;
	trans[1][5057]	= settr(5273,0,5085,2589,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][5085] = settr(5301,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5301,0,5077,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5077] = settr(5293,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5293,2,5075,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5075] = settr(5291,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5291,2,5058,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5291,2,5061,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5291,2,5064,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5291,2,5067,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5291,2,5070,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5291,2,5073,0,0,"IF", 1, 2, 0);
	trans[1][5058]	= settr(5274,4,5083,2590,2590,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5059 -> 5083,0 */
	reached1[5059] = 1;
	trans[1][5059]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5060]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5076]	= settr(5292,0,5083,2591,2591,".(goto)", 1, 2, 0);
	trans[1][5061]	= settr(5277,4,5083,2592,2592,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5062 -> 5083,0 */
	reached1[5062] = 1;
	trans[1][5062]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5063]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5064]	= settr(5280,4,5083,2593,2593,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5065 -> 5083,0 */
	reached1[5065] = 1;
	trans[1][5065]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5066]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5067]	= settr(5283,4,5083,2594,2594,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5068 -> 5083,0 */
	reached1[5068] = 1;
	trans[1][5068]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5069]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5070]	= settr(5286,4,5083,2595,2595,"((STOP==ABORT))", 1, 2, 0); /* m: 5071 -> 5083,0 */
	reached1[5071] = 1;
	trans[1][5071]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5072]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5073]	= settr(5289,2,5074,2,0,"else", 1, 2, 0);
	trans[1][5074]	= settr(5290,4,5083,2596,2596,"(1)", 1, 2, 0); /* m: 5076 -> 5083,0 */
	reached1[5076] = 1;
	T = trans[1][5083] = settr(5299,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5299,0,5078,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5299,0,5081,0,0,"IF", 0, 2, 0);
	trans[1][5078]	= settr(5294,0,5080,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5080] = settr(5296,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5296,0,5079,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5079]	= settr(5295,0,5089,2597,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5084]	= settr(5300,0,5089,1,0,".(goto)", 0, 2, 0); /* m: 5089 -> 0,5093 */
	reached1[5089] = 1;
	trans[1][5081]	= settr(5297,0,5082,2,0,"else", 0, 2, 0);
	trans[1][5082]	= settr(5298,0,5093,2598,2598,"(1)", 0, 2, 0); /* m: 5089 -> 5093,0 */
	reached1[5089] = 1;
	trans[1][5089]	= settr(5305,0,5093,2599,2599,"j = (j-1)", 0, 2, 0);
	trans[1][5090]	= settr(5306,0,5091,2,0,"else", 0, 2, 0);
	trans[1][5091]	= settr(5307,0,5690,2600,2600,"j = 1", 0, 2, 0);
	trans[1][5092]	= settr(5308,0,5690,1,0,"goto :b48", 0, 2, 0);
	trans[1][5095]	= settr(5311,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5254]	= settr(5470,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][5100]	= settr(5316,0,5252,2,0,"else", 0, 2, 0);
	T = trans[ 1][5252] = settr(5468,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5468,0,5229,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5229] = settr(5445,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5445,0,5226,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5227]	= settr(5443,0,5226,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5226] = settr(5442,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5442,0,5101,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5442,0,5223,0,0,"DO", 0, 2, 0);
	trans[1][5101]	= settr(5317,0,5221,2601,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][5221] = settr(5437,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5437,0,5219,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5219] = settr(5435,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5435,0,5102,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5435,0,5132,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5435,0,5161,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5435,0,5190,0,0,"IF", 0, 2, 0);
	trans[1][5102]	= settr(5318,0,5131,2602,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][5131] = settr(5347,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5347,0,5122,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5122] = settr(5338,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5338,2,5120,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5120] = settr(5336,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5336,2,5103,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5336,2,5106,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5336,2,5109,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5336,2,5112,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5336,2,5115,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5336,2,5118,0,0,"IF", 1, 2, 0);
	trans[1][5103]	= settr(5319,4,5123,2603,2603,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5104 -> 5123,0 */
	reached1[5104] = 1;
	trans[1][5104]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5105]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5121]	= settr(5337,0,5123,2604,2604,".(goto)", 1, 2, 0);
	trans[1][5106]	= settr(5322,4,5123,2605,2605,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5107 -> 5123,0 */
	reached1[5107] = 1;
	trans[1][5107]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5108]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5109]	= settr(5325,4,5123,2606,2606,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5110 -> 5123,0 */
	reached1[5110] = 1;
	trans[1][5110]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5111]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5112]	= settr(5328,4,5123,2607,2607,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5113 -> 5123,0 */
	reached1[5113] = 1;
	trans[1][5113]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5114]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5115]	= settr(5331,4,5123,2608,2608,"((START==ABORT))", 1, 2, 0); /* m: 5116 -> 5123,0 */
	reached1[5116] = 1;
	trans[1][5116]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5117]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5118]	= settr(5334,2,5119,2,0,"else", 1, 2, 0);
	trans[1][5119]	= settr(5335,4,5123,2609,2609,"(1)", 1, 2, 0); /* m: 5121 -> 5123,0 */
	reached1[5121] = 1;
	trans[1][5123]	= settr(5339,0,5129,2610,2610,"(run Thread(j))", 0, 2, 0);
	T = trans[1][5129] = settr(5345,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5345,0,5124,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5345,0,5127,0,0,"IF", 0, 2, 0);
	trans[1][5124]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5126] = settr(5342,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5342,0,5125,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5125]	= settr(5341,0,5222,2611,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5130]	= settr(5346,0,5222,1,0,".(goto)", 0, 2, 0); /* m: 5222 -> 0,5226 */
	reached1[5222] = 1;
	trans[1][5127]	= settr(5343,0,5128,2,0,"else", 0, 2, 0);
	trans[1][5128]	= settr(5344,0,5226,2612,2612,"(1)", 0, 2, 0); /* m: 5222 -> 5226,0 */
	reached1[5222] = 1;
	trans[1][5220]	= settr(5436,0,5222,1,0,".(goto)", 0, 2, 0); /* m: 5222 -> 0,5226 */
	reached1[5222] = 1;
	trans[1][5132]	= settr(5348,0,5160,2613,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][5160] = settr(5376,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5376,0,5152,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5152] = settr(5368,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5368,2,5150,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5150] = settr(5366,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5366,2,5133,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5366,2,5136,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5366,2,5139,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5366,2,5142,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5366,2,5145,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5366,2,5148,0,0,"IF", 1, 2, 0);
	trans[1][5133]	= settr(5349,4,5158,2614,2614,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5134 -> 5158,0 */
	reached1[5134] = 1;
	trans[1][5134]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5135]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5151]	= settr(5367,0,5158,2615,2615,".(goto)", 1, 2, 0);
	trans[1][5136]	= settr(5352,4,5158,2616,2616,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5137 -> 5158,0 */
	reached1[5137] = 1;
	trans[1][5137]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5138]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5139]	= settr(5355,4,5158,2617,2617,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5140 -> 5158,0 */
	reached1[5140] = 1;
	trans[1][5140]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5141]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5142]	= settr(5358,4,5158,2618,2618,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5143 -> 5158,0 */
	reached1[5143] = 1;
	trans[1][5143]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5144]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5145]	= settr(5361,4,5158,2619,2619,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5146 -> 5158,0 */
	reached1[5146] = 1;
	trans[1][5146]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5147]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5148]	= settr(5364,2,5149,2,0,"else", 1, 2, 0);
	trans[1][5149]	= settr(5365,4,5158,2620,2620,"(1)", 1, 2, 0); /* m: 5151 -> 5158,0 */
	reached1[5151] = 1;
	T = trans[1][5158] = settr(5374,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5374,0,5153,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5374,0,5156,0,0,"IF", 0, 2, 0);
	trans[1][5153]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5155] = settr(5371,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5371,0,5154,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5154]	= settr(5370,0,5222,2621,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5159]	= settr(5375,0,5222,1,0,".(goto)", 0, 2, 0); /* m: 5222 -> 0,5226 */
	reached1[5222] = 1;
	trans[1][5156]	= settr(5372,0,5157,2,0,"else", 0, 2, 0);
	trans[1][5157]	= settr(5373,0,5226,2622,2622,"(1)", 0, 2, 0); /* m: 5222 -> 5226,0 */
	reached1[5222] = 1;
	trans[1][5161]	= settr(5377,0,5189,2623,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5189] = settr(5405,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5405,0,5181,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5181] = settr(5397,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5397,2,5179,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5179] = settr(5395,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5395,2,5162,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5395,2,5165,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5395,2,5168,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5395,2,5171,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5395,2,5174,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5395,2,5177,0,0,"IF", 1, 2, 0);
	trans[1][5162]	= settr(5378,4,5187,2624,2624,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5163 -> 5187,0 */
	reached1[5163] = 1;
	trans[1][5163]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5164]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5180]	= settr(5396,0,5187,2625,2625,".(goto)", 1, 2, 0);
	trans[1][5165]	= settr(5381,4,5187,2626,2626,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5166 -> 5187,0 */
	reached1[5166] = 1;
	trans[1][5166]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5167]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5168]	= settr(5384,4,5187,2627,2627,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5169 -> 5187,0 */
	reached1[5169] = 1;
	trans[1][5169]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5170]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5171]	= settr(5387,4,5187,2628,2628,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5172 -> 5187,0 */
	reached1[5172] = 1;
	trans[1][5172]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5173]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5174]	= settr(5390,4,5187,2629,2629,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5175 -> 5187,0 */
	reached1[5175] = 1;
	trans[1][5175]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5176]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5177]	= settr(5393,2,5178,2,0,"else", 1, 2, 0);
	trans[1][5178]	= settr(5394,4,5187,2630,2630,"(1)", 1, 2, 0); /* m: 5180 -> 5187,0 */
	reached1[5180] = 1;
	T = trans[1][5187] = settr(5403,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5403,0,5182,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5403,0,5185,0,0,"IF", 0, 2, 0);
	trans[1][5182]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5184] = settr(5400,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5400,0,5183,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5183]	= settr(5399,0,5222,2631,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5188]	= settr(5404,0,5222,1,0,".(goto)", 0, 2, 0); /* m: 5222 -> 0,5226 */
	reached1[5222] = 1;
	trans[1][5185]	= settr(5401,0,5186,2,0,"else", 0, 2, 0);
	trans[1][5186]	= settr(5402,0,5226,2632,2632,"(1)", 0, 2, 0); /* m: 5222 -> 5226,0 */
	reached1[5222] = 1;
	trans[1][5190]	= settr(5406,0,5218,2633,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][5218] = settr(5434,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5434,0,5210,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5210] = settr(5426,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5426,2,5208,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5208] = settr(5424,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5424,2,5191,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5424,2,5194,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5424,2,5197,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5424,2,5200,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5424,2,5203,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5424,2,5206,0,0,"IF", 1, 2, 0);
	trans[1][5191]	= settr(5407,4,5216,2634,2634,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5192 -> 5216,0 */
	reached1[5192] = 1;
	trans[1][5192]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5193]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5209]	= settr(5425,0,5216,2635,2635,".(goto)", 1, 2, 0);
	trans[1][5194]	= settr(5410,4,5216,2636,2636,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5195 -> 5216,0 */
	reached1[5195] = 1;
	trans[1][5195]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5196]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5197]	= settr(5413,4,5216,2637,2637,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5198 -> 5216,0 */
	reached1[5198] = 1;
	trans[1][5198]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5199]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5200]	= settr(5416,4,5216,2638,2638,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5201 -> 5216,0 */
	reached1[5201] = 1;
	trans[1][5201]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5202]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5203]	= settr(5419,4,5216,2639,2639,"((STOP==ABORT))", 1, 2, 0); /* m: 5204 -> 5216,0 */
	reached1[5204] = 1;
	trans[1][5204]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5205]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5206]	= settr(5422,2,5207,2,0,"else", 1, 2, 0);
	trans[1][5207]	= settr(5423,4,5216,2640,2640,"(1)", 1, 2, 0); /* m: 5209 -> 5216,0 */
	reached1[5209] = 1;
	T = trans[1][5216] = settr(5432,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5432,0,5211,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5432,0,5214,0,0,"IF", 0, 2, 0);
	trans[1][5211]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5213] = settr(5429,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5429,0,5212,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5212]	= settr(5428,0,5222,2641,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5217]	= settr(5433,0,5222,1,0,".(goto)", 0, 2, 0); /* m: 5222 -> 0,5226 */
	reached1[5222] = 1;
	trans[1][5214]	= settr(5430,0,5215,2,0,"else", 0, 2, 0);
	trans[1][5215]	= settr(5431,0,5226,2642,2642,"(1)", 0, 2, 0); /* m: 5222 -> 5226,0 */
	reached1[5222] = 1;
	trans[1][5222]	= settr(5438,0,5226,2643,2643,"j = (j+1)", 0, 2, 0);
	trans[1][5223]	= settr(5439,0,5224,2,0,"else", 0, 2, 0);
	trans[1][5224]	= settr(5440,0,5249,2644,2644,"j = 1", 0, 2, 0);
	trans[1][5225]	= settr(5441,0,5249,1,0,"goto :b49", 0, 2, 0);
	trans[1][5228]	= settr(5444,0,5249,1,0,"break", 0, 2, 0);
	trans[1][5250]	= settr(5466,0,5249,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5249] = settr(5465,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5465,0,5230,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5465,0,5246,0,0,"DO", 0, 2, 0);
	trans[1][5230]	= settr(5446,0,5243,2645,0,"((j<3))", 0, 2, 0);
	T = trans[1][5243] = settr(5459,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5459,0,5231,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5459,0,5234,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5459,0,5237,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5459,0,5240,0,0,"IF", 0, 2, 0);
	trans[1][5231]	= settr(5447,0,5233,2646,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][5233] = settr(5449,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5449,0,5232,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5232]	= settr(5448,0,5245,2647,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5244]	= settr(5460,0,5245,1,0,".(goto)", 0, 2, 0); /* m: 5245 -> 0,5249 */
	reached1[5245] = 1;
	trans[1][5234]	= settr(5450,0,5236,2648,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5236] = settr(5452,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5452,0,5235,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5235]	= settr(5451,0,5245,2649,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5237]	= settr(5453,0,5239,2650,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][5239] = settr(5455,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5455,0,5238,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5238]	= settr(5454,0,5245,2651,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5240]	= settr(5456,0,5242,2652,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][5242] = settr(5458,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5458,0,5241,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5241]	= settr(5457,0,5245,2653,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5245]	= settr(5461,0,5249,2654,2654,"j = (j+1)", 0, 2, 0);
	trans[1][5246]	= settr(5462,0,5247,2,0,"else", 0, 2, 0);
	trans[1][5247]	= settr(5463,0,5690,2655,2655,"j = 1", 0, 2, 0);
	trans[1][5248]	= settr(5464,0,5690,1,0,"goto :b50", 0, 2, 0);
	trans[1][5251]	= settr(5467,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5258]	= settr(5474,0,5684,2656,0,"(((10==ABORTING)||(10==STOPPING)))", 0, 2, 0);
	T = trans[ 1][5684] = settr(5900,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5900,0,5682,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5682] = settr(5898,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5898,0,5259,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5898,0,5261,0,0,"IF", 0, 2, 0);
	trans[1][5259]	= settr(5475,0,5260,2657,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][5260]	= settr(5476,0,5690,2658,2658,"supervisor_started = 1", 1, 2, 0);
	trans[1][5683]	= settr(5899,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][5261]	= settr(5477,0,5680,2,0,"else", 0, 2, 0);
	T = trans[1][5680] = settr(5896,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5896,0,5262,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5896,0,5527,0,0,"IF", 0, 2, 0);
	trans[1][5262]	= settr(5478,0,5526,2659,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][5526] = settr(5742,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5742,0,5524,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5524] = settr(5740,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5740,0,5263,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5740,0,5393,0,0,"IF", 0, 2, 0);
	trans[1][5263]	= settr(5479,0,5392,2660,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][5392] = settr(5608,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5608,0,5389,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5390]	= settr(5606,0,5389,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5389] = settr(5605,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5605,0,5264,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5605,0,5386,0,0,"DO", 0, 2, 0);
	trans[1][5264]	= settr(5480,0,5384,2661,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][5384] = settr(5600,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5600,0,5382,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5382] = settr(5598,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5598,0,5265,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5598,0,5295,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5598,0,5324,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5598,0,5353,0,0,"IF", 0, 2, 0);
	trans[1][5265]	= settr(5481,0,5294,2662,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][5294] = settr(5510,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5510,0,5285,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5285] = settr(5501,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5501,2,5283,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5283] = settr(5499,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5499,2,5266,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5499,2,5269,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5499,2,5272,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5499,2,5275,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5499,2,5278,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5499,2,5281,0,0,"IF", 1, 2, 0);
	trans[1][5266]	= settr(5482,4,5286,2663,2663,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5267 -> 5286,0 */
	reached1[5267] = 1;
	trans[1][5267]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5268]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5284]	= settr(5500,0,5286,2664,2664,".(goto)", 1, 2, 0);
	trans[1][5269]	= settr(5485,4,5286,2665,2665,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5270 -> 5286,0 */
	reached1[5270] = 1;
	trans[1][5270]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5271]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5272]	= settr(5488,4,5286,2666,2666,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5273 -> 5286,0 */
	reached1[5273] = 1;
	trans[1][5273]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5274]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5275]	= settr(5491,4,5286,2667,2667,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5276 -> 5286,0 */
	reached1[5276] = 1;
	trans[1][5276]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5277]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5278]	= settr(5494,4,5286,2668,2668,"((START==ABORT))", 1, 2, 0); /* m: 5279 -> 5286,0 */
	reached1[5279] = 1;
	trans[1][5279]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5280]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5281]	= settr(5497,2,5282,2,0,"else", 1, 2, 0);
	trans[1][5282]	= settr(5498,4,5286,2669,2669,"(1)", 1, 2, 0); /* m: 5284 -> 5286,0 */
	reached1[5284] = 1;
	trans[1][5286]	= settr(5502,0,5292,2670,2670,"(run Thread(j))", 0, 2, 0);
	T = trans[1][5292] = settr(5508,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5508,0,5287,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5508,0,5290,0,0,"IF", 0, 2, 0);
	trans[1][5287]	= settr(5503,0,5289,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5289] = settr(5505,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5505,0,5288,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5288]	= settr(5504,0,5385,2671,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5293]	= settr(5509,0,5385,1,0,".(goto)", 0, 2, 0); /* m: 5385 -> 0,5389 */
	reached1[5385] = 1;
	trans[1][5290]	= settr(5506,0,5291,2,0,"else", 0, 2, 0);
	trans[1][5291]	= settr(5507,0,5389,2672,2672,"(1)", 0, 2, 0); /* m: 5385 -> 5389,0 */
	reached1[5385] = 1;
	trans[1][5383]	= settr(5599,0,5385,1,0,".(goto)", 0, 2, 0); /* m: 5385 -> 0,5389 */
	reached1[5385] = 1;
	trans[1][5295]	= settr(5511,0,5323,2673,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][5323] = settr(5539,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5539,0,5315,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5315] = settr(5531,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5531,2,5313,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5313] = settr(5529,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5529,2,5296,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5529,2,5299,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5529,2,5302,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5529,2,5305,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5529,2,5308,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5529,2,5311,0,0,"IF", 1, 2, 0);
	trans[1][5296]	= settr(5512,4,5321,2674,2674,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5297 -> 5321,0 */
	reached1[5297] = 1;
	trans[1][5297]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5298]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5314]	= settr(5530,0,5321,2675,2675,".(goto)", 1, 2, 0);
	trans[1][5299]	= settr(5515,4,5321,2676,2676,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5300 -> 5321,0 */
	reached1[5300] = 1;
	trans[1][5300]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5301]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5302]	= settr(5518,4,5321,2677,2677,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5303 -> 5321,0 */
	reached1[5303] = 1;
	trans[1][5303]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5304]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5305]	= settr(5521,4,5321,2678,2678,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5306 -> 5321,0 */
	reached1[5306] = 1;
	trans[1][5306]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5307]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5308]	= settr(5524,4,5321,2679,2679,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5309 -> 5321,0 */
	reached1[5309] = 1;
	trans[1][5309]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5310]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5311]	= settr(5527,2,5312,2,0,"else", 1, 2, 0);
	trans[1][5312]	= settr(5528,4,5321,2680,2680,"(1)", 1, 2, 0); /* m: 5314 -> 5321,0 */
	reached1[5314] = 1;
	T = trans[1][5321] = settr(5537,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5537,0,5316,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5537,0,5319,0,0,"IF", 0, 2, 0);
	trans[1][5316]	= settr(5532,0,5318,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5318] = settr(5534,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5534,0,5317,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5317]	= settr(5533,0,5385,2681,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5322]	= settr(5538,0,5385,1,0,".(goto)", 0, 2, 0); /* m: 5385 -> 0,5389 */
	reached1[5385] = 1;
	trans[1][5319]	= settr(5535,0,5320,2,0,"else", 0, 2, 0);
	trans[1][5320]	= settr(5536,0,5389,2682,2682,"(1)", 0, 2, 0); /* m: 5385 -> 5389,0 */
	reached1[5385] = 1;
	trans[1][5324]	= settr(5540,0,5352,2683,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5352] = settr(5568,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5568,0,5344,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5344] = settr(5560,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5560,2,5342,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5342] = settr(5558,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5558,2,5325,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5558,2,5328,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5558,2,5331,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5558,2,5334,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5558,2,5337,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5558,2,5340,0,0,"IF", 1, 2, 0);
	trans[1][5325]	= settr(5541,4,5350,2684,2684,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5326 -> 5350,0 */
	reached1[5326] = 1;
	trans[1][5326]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5327]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5343]	= settr(5559,0,5350,2685,2685,".(goto)", 1, 2, 0);
	trans[1][5328]	= settr(5544,4,5350,2686,2686,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5329 -> 5350,0 */
	reached1[5329] = 1;
	trans[1][5329]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5330]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5331]	= settr(5547,4,5350,2687,2687,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5332 -> 5350,0 */
	reached1[5332] = 1;
	trans[1][5332]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5333]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5334]	= settr(5550,4,5350,2688,2688,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5335 -> 5350,0 */
	reached1[5335] = 1;
	trans[1][5335]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5336]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5337]	= settr(5553,4,5350,2689,2689,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5338 -> 5350,0 */
	reached1[5338] = 1;
	trans[1][5338]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5339]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5340]	= settr(5556,2,5341,2,0,"else", 1, 2, 0);
	trans[1][5341]	= settr(5557,4,5350,2690,2690,"(1)", 1, 2, 0); /* m: 5343 -> 5350,0 */
	reached1[5343] = 1;
	T = trans[1][5350] = settr(5566,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5566,0,5345,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5566,0,5348,0,0,"IF", 0, 2, 0);
	trans[1][5345]	= settr(5561,0,5347,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5347] = settr(5563,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5563,0,5346,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5346]	= settr(5562,0,5385,2691,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5351]	= settr(5567,0,5385,1,0,".(goto)", 0, 2, 0); /* m: 5385 -> 0,5389 */
	reached1[5385] = 1;
	trans[1][5348]	= settr(5564,0,5349,2,0,"else", 0, 2, 0);
	trans[1][5349]	= settr(5565,0,5389,2692,2692,"(1)", 0, 2, 0); /* m: 5385 -> 5389,0 */
	reached1[5385] = 1;
	trans[1][5353]	= settr(5569,0,5381,2693,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][5381] = settr(5597,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5597,0,5373,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5373] = settr(5589,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5589,2,5371,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5371] = settr(5587,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5587,2,5354,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5587,2,5357,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5587,2,5360,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5587,2,5363,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5587,2,5366,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5587,2,5369,0,0,"IF", 1, 2, 0);
	trans[1][5354]	= settr(5570,4,5379,2694,2694,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5355 -> 5379,0 */
	reached1[5355] = 1;
	trans[1][5355]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5356]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5372]	= settr(5588,0,5379,2695,2695,".(goto)", 1, 2, 0);
	trans[1][5357]	= settr(5573,4,5379,2696,2696,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5358 -> 5379,0 */
	reached1[5358] = 1;
	trans[1][5358]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5359]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5360]	= settr(5576,4,5379,2697,2697,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5361 -> 5379,0 */
	reached1[5361] = 1;
	trans[1][5361]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5362]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5363]	= settr(5579,4,5379,2698,2698,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5364 -> 5379,0 */
	reached1[5364] = 1;
	trans[1][5364]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5365]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5366]	= settr(5582,4,5379,2699,2699,"((STOP==ABORT))", 1, 2, 0); /* m: 5367 -> 5379,0 */
	reached1[5367] = 1;
	trans[1][5367]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5368]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5369]	= settr(5585,2,5370,2,0,"else", 1, 2, 0);
	trans[1][5370]	= settr(5586,4,5379,2700,2700,"(1)", 1, 2, 0); /* m: 5372 -> 5379,0 */
	reached1[5372] = 1;
	T = trans[1][5379] = settr(5595,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5595,0,5374,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5595,0,5377,0,0,"IF", 0, 2, 0);
	trans[1][5374]	= settr(5590,0,5376,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5376] = settr(5592,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5592,0,5375,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5375]	= settr(5591,0,5385,2701,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5380]	= settr(5596,0,5385,1,0,".(goto)", 0, 2, 0); /* m: 5385 -> 0,5389 */
	reached1[5385] = 1;
	trans[1][5377]	= settr(5593,0,5378,2,0,"else", 0, 2, 0);
	trans[1][5378]	= settr(5594,0,5389,2702,2702,"(1)", 0, 2, 0); /* m: 5385 -> 5389,0 */
	reached1[5385] = 1;
	trans[1][5385]	= settr(5601,0,5389,2703,2703,"j = (j+1)", 0, 2, 0);
	trans[1][5386]	= settr(5602,0,5387,2,0,"else", 0, 2, 0);
	trans[1][5387]	= settr(5603,0,5690,2704,2704,"j = 1", 0, 2, 0);
	trans[1][5388]	= settr(5604,0,5690,1,0,"goto :b51", 0, 2, 0);
	trans[1][5391]	= settr(5607,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5525]	= settr(5741,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][5393]	= settr(5609,0,5523,2,0,"else", 0, 2, 0);
	T = trans[ 1][5523] = settr(5739,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5739,0,5394,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5394]	= settr(5610,0,5520,2705,2705,"j = (3-1)", 0, 2, 0);
	trans[1][5521]	= settr(5737,0,5520,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5520] = settr(5736,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5736,0,5395,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5736,0,5517,0,0,"DO", 0, 2, 0);
	trans[1][5395]	= settr(5611,0,5515,2706,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][5515] = settr(5731,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5731,0,5513,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5513] = settr(5729,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5729,0,5396,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5729,0,5426,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5729,0,5455,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5729,0,5484,0,0,"IF", 0, 2, 0);
	trans[1][5396]	= settr(5612,0,5425,2707,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][5425] = settr(5641,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5641,0,5416,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5416] = settr(5632,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5632,2,5414,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5414] = settr(5630,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5630,2,5397,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5630,2,5400,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5630,2,5403,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5630,2,5406,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5630,2,5409,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5630,2,5412,0,0,"IF", 1, 2, 0);
	trans[1][5397]	= settr(5613,4,5417,2708,2708,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5398 -> 5417,0 */
	reached1[5398] = 1;
	trans[1][5398]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5399]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5415]	= settr(5631,0,5417,2709,2709,".(goto)", 1, 2, 0);
	trans[1][5400]	= settr(5616,4,5417,2710,2710,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5401 -> 5417,0 */
	reached1[5401] = 1;
	trans[1][5401]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5402]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5403]	= settr(5619,4,5417,2711,2711,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5404 -> 5417,0 */
	reached1[5404] = 1;
	trans[1][5404]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5405]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5406]	= settr(5622,4,5417,2712,2712,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5407 -> 5417,0 */
	reached1[5407] = 1;
	trans[1][5407]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5408]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5409]	= settr(5625,4,5417,2713,2713,"((START==ABORT))", 1, 2, 0); /* m: 5410 -> 5417,0 */
	reached1[5410] = 1;
	trans[1][5410]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5411]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5412]	= settr(5628,2,5413,2,0,"else", 1, 2, 0);
	trans[1][5413]	= settr(5629,4,5417,2714,2714,"(1)", 1, 2, 0); /* m: 5415 -> 5417,0 */
	reached1[5415] = 1;
	trans[1][5417]	= settr(5633,0,5423,2715,2715,"(run Thread(j))", 0, 2, 0);
	T = trans[1][5423] = settr(5639,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5639,0,5418,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5639,0,5421,0,0,"IF", 0, 2, 0);
	trans[1][5418]	= settr(5634,0,5420,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5420] = settr(5636,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5636,0,5419,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5419]	= settr(5635,0,5516,2716,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5424]	= settr(5640,0,5516,1,0,".(goto)", 0, 2, 0); /* m: 5516 -> 0,5520 */
	reached1[5516] = 1;
	trans[1][5421]	= settr(5637,0,5422,2,0,"else", 0, 2, 0);
	trans[1][5422]	= settr(5638,0,5520,2717,2717,"(1)", 0, 2, 0); /* m: 5516 -> 5520,0 */
	reached1[5516] = 1;
	trans[1][5514]	= settr(5730,0,5516,1,0,".(goto)", 0, 2, 0); /* m: 5516 -> 0,5520 */
	reached1[5516] = 1;
	trans[1][5426]	= settr(5642,0,5454,2718,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][5454] = settr(5670,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5670,0,5446,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5446] = settr(5662,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5662,2,5444,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5444] = settr(5660,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5660,2,5427,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5660,2,5430,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5660,2,5433,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5660,2,5436,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5660,2,5439,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5660,2,5442,0,0,"IF", 1, 2, 0);
	trans[1][5427]	= settr(5643,4,5452,2719,2719,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5428 -> 5452,0 */
	reached1[5428] = 1;
	trans[1][5428]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5429]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5445]	= settr(5661,0,5452,2720,2720,".(goto)", 1, 2, 0);
	trans[1][5430]	= settr(5646,4,5452,2721,2721,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5431 -> 5452,0 */
	reached1[5431] = 1;
	trans[1][5431]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5432]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5433]	= settr(5649,4,5452,2722,2722,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5434 -> 5452,0 */
	reached1[5434] = 1;
	trans[1][5434]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5435]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5436]	= settr(5652,4,5452,2723,2723,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5437 -> 5452,0 */
	reached1[5437] = 1;
	trans[1][5437]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5438]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5439]	= settr(5655,4,5452,2724,2724,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5440 -> 5452,0 */
	reached1[5440] = 1;
	trans[1][5440]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5441]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5442]	= settr(5658,2,5443,2,0,"else", 1, 2, 0);
	trans[1][5443]	= settr(5659,4,5452,2725,2725,"(1)", 1, 2, 0); /* m: 5445 -> 5452,0 */
	reached1[5445] = 1;
	T = trans[1][5452] = settr(5668,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5668,0,5447,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5668,0,5450,0,0,"IF", 0, 2, 0);
	trans[1][5447]	= settr(5663,0,5449,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5449] = settr(5665,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5665,0,5448,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5448]	= settr(5664,0,5516,2726,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5453]	= settr(5669,0,5516,1,0,".(goto)", 0, 2, 0); /* m: 5516 -> 0,5520 */
	reached1[5516] = 1;
	trans[1][5450]	= settr(5666,0,5451,2,0,"else", 0, 2, 0);
	trans[1][5451]	= settr(5667,0,5520,2727,2727,"(1)", 0, 2, 0); /* m: 5516 -> 5520,0 */
	reached1[5516] = 1;
	trans[1][5455]	= settr(5671,0,5483,2728,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5483] = settr(5699,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5699,0,5475,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5475] = settr(5691,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5691,2,5473,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5473] = settr(5689,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5689,2,5456,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5689,2,5459,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5689,2,5462,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5689,2,5465,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5689,2,5468,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5689,2,5471,0,0,"IF", 1, 2, 0);
	trans[1][5456]	= settr(5672,4,5481,2729,2729,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5457 -> 5481,0 */
	reached1[5457] = 1;
	trans[1][5457]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5458]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5474]	= settr(5690,0,5481,2730,2730,".(goto)", 1, 2, 0);
	trans[1][5459]	= settr(5675,4,5481,2731,2731,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5460 -> 5481,0 */
	reached1[5460] = 1;
	trans[1][5460]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5461]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5462]	= settr(5678,4,5481,2732,2732,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5463 -> 5481,0 */
	reached1[5463] = 1;
	trans[1][5463]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5464]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5465]	= settr(5681,4,5481,2733,2733,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5466 -> 5481,0 */
	reached1[5466] = 1;
	trans[1][5466]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5467]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5468]	= settr(5684,4,5481,2734,2734,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5469 -> 5481,0 */
	reached1[5469] = 1;
	trans[1][5469]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5470]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5471]	= settr(5687,2,5472,2,0,"else", 1, 2, 0);
	trans[1][5472]	= settr(5688,4,5481,2735,2735,"(1)", 1, 2, 0); /* m: 5474 -> 5481,0 */
	reached1[5474] = 1;
	T = trans[1][5481] = settr(5697,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5697,0,5476,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5697,0,5479,0,0,"IF", 0, 2, 0);
	trans[1][5476]	= settr(5692,0,5478,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5478] = settr(5694,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5694,0,5477,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5477]	= settr(5693,0,5516,2736,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5482]	= settr(5698,0,5516,1,0,".(goto)", 0, 2, 0); /* m: 5516 -> 0,5520 */
	reached1[5516] = 1;
	trans[1][5479]	= settr(5695,0,5480,2,0,"else", 0, 2, 0);
	trans[1][5480]	= settr(5696,0,5520,2737,2737,"(1)", 0, 2, 0); /* m: 5516 -> 5520,0 */
	reached1[5516] = 1;
	trans[1][5484]	= settr(5700,0,5512,2738,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][5512] = settr(5728,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5728,0,5504,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5504] = settr(5720,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5720,2,5502,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5502] = settr(5718,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5718,2,5485,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5718,2,5488,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5718,2,5491,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5718,2,5494,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5718,2,5497,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5718,2,5500,0,0,"IF", 1, 2, 0);
	trans[1][5485]	= settr(5701,4,5510,2739,2739,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5486 -> 5510,0 */
	reached1[5486] = 1;
	trans[1][5486]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5487]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5503]	= settr(5719,0,5510,2740,2740,".(goto)", 1, 2, 0);
	trans[1][5488]	= settr(5704,4,5510,2741,2741,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5489 -> 5510,0 */
	reached1[5489] = 1;
	trans[1][5489]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5490]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5491]	= settr(5707,4,5510,2742,2742,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5492 -> 5510,0 */
	reached1[5492] = 1;
	trans[1][5492]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5493]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5494]	= settr(5710,4,5510,2743,2743,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5495 -> 5510,0 */
	reached1[5495] = 1;
	trans[1][5495]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5496]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5497]	= settr(5713,4,5510,2744,2744,"((STOP==ABORT))", 1, 2, 0); /* m: 5498 -> 5510,0 */
	reached1[5498] = 1;
	trans[1][5498]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5499]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5500]	= settr(5716,2,5501,2,0,"else", 1, 2, 0);
	trans[1][5501]	= settr(5717,4,5510,2745,2745,"(1)", 1, 2, 0); /* m: 5503 -> 5510,0 */
	reached1[5503] = 1;
	T = trans[1][5510] = settr(5726,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5726,0,5505,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5726,0,5508,0,0,"IF", 0, 2, 0);
	trans[1][5505]	= settr(5721,0,5507,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5507] = settr(5723,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5723,0,5506,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5506]	= settr(5722,0,5516,2746,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5511]	= settr(5727,0,5516,1,0,".(goto)", 0, 2, 0); /* m: 5516 -> 0,5520 */
	reached1[5516] = 1;
	trans[1][5508]	= settr(5724,0,5509,2,0,"else", 0, 2, 0);
	trans[1][5509]	= settr(5725,0,5520,2747,2747,"(1)", 0, 2, 0); /* m: 5516 -> 5520,0 */
	reached1[5516] = 1;
	trans[1][5516]	= settr(5732,0,5520,2748,2748,"j = (j-1)", 0, 2, 0);
	trans[1][5517]	= settr(5733,0,5518,2,0,"else", 0, 2, 0);
	trans[1][5518]	= settr(5734,0,5690,2749,2749,"j = 1", 0, 2, 0);
	trans[1][5519]	= settr(5735,0,5690,1,0,"goto :b52", 0, 2, 0);
	trans[1][5522]	= settr(5738,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5681]	= settr(5897,0,5690,1,0,".(goto)", 0, 2, 0);
	trans[1][5527]	= settr(5743,0,5679,2,0,"else", 0, 2, 0);
	T = trans[ 1][5679] = settr(5895,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5895,0,5656,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5656] = settr(5872,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5872,0,5653,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5654]	= settr(5870,0,5653,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5653] = settr(5869,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5869,0,5528,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5869,0,5650,0,0,"DO", 0, 2, 0);
	trans[1][5528]	= settr(5744,0,5648,2750,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][5648] = settr(5864,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5864,0,5646,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5646] = settr(5862,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5862,0,5529,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5862,0,5559,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5862,0,5588,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5862,0,5617,0,0,"IF", 0, 2, 0);
	trans[1][5529]	= settr(5745,0,5558,2751,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][5558] = settr(5774,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5774,0,5549,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5549] = settr(5765,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5765,2,5547,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5547] = settr(5763,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5763,2,5530,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5763,2,5533,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5763,2,5536,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5763,2,5539,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5763,2,5542,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5763,2,5545,0,0,"IF", 1, 2, 0);
	trans[1][5530]	= settr(5746,4,5550,2752,2752,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5531 -> 5550,0 */
	reached1[5531] = 1;
	trans[1][5531]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5532]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5548]	= settr(5764,0,5550,2753,2753,".(goto)", 1, 2, 0);
	trans[1][5533]	= settr(5749,4,5550,2754,2754,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5534 -> 5550,0 */
	reached1[5534] = 1;
	trans[1][5534]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5535]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5536]	= settr(5752,4,5550,2755,2755,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5537 -> 5550,0 */
	reached1[5537] = 1;
	trans[1][5537]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5538]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5539]	= settr(5755,4,5550,2756,2756,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5540 -> 5550,0 */
	reached1[5540] = 1;
	trans[1][5540]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5541]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5542]	= settr(5758,4,5550,2757,2757,"((START==ABORT))", 1, 2, 0); /* m: 5543 -> 5550,0 */
	reached1[5543] = 1;
	trans[1][5543]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5544]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5545]	= settr(5761,2,5546,2,0,"else", 1, 2, 0);
	trans[1][5546]	= settr(5762,4,5550,2758,2758,"(1)", 1, 2, 0); /* m: 5548 -> 5550,0 */
	reached1[5548] = 1;
	trans[1][5550]	= settr(5766,0,5556,2759,2759,"(run Thread(j))", 0, 2, 0);
	T = trans[1][5556] = settr(5772,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5772,0,5551,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5772,0,5554,0,0,"IF", 0, 2, 0);
	trans[1][5551]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5553] = settr(5769,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5769,0,5552,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5552]	= settr(5768,0,5649,2760,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5557]	= settr(5773,0,5649,1,0,".(goto)", 0, 2, 0); /* m: 5649 -> 0,5653 */
	reached1[5649] = 1;
	trans[1][5554]	= settr(5770,0,5555,2,0,"else", 0, 2, 0);
	trans[1][5555]	= settr(5771,0,5653,2761,2761,"(1)", 0, 2, 0); /* m: 5649 -> 5653,0 */
	reached1[5649] = 1;
	trans[1][5647]	= settr(5863,0,5649,1,0,".(goto)", 0, 2, 0); /* m: 5649 -> 0,5653 */
	reached1[5649] = 1;
	trans[1][5559]	= settr(5775,0,5587,2762,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][5587] = settr(5803,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5803,0,5579,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5579] = settr(5795,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5795,2,5577,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5577] = settr(5793,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5793,2,5560,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5793,2,5563,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5793,2,5566,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5793,2,5569,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5793,2,5572,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5793,2,5575,0,0,"IF", 1, 2, 0);
	trans[1][5560]	= settr(5776,4,5585,2763,2763,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5561 -> 5585,0 */
	reached1[5561] = 1;
	trans[1][5561]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5562]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5578]	= settr(5794,0,5585,2764,2764,".(goto)", 1, 2, 0);
	trans[1][5563]	= settr(5779,4,5585,2765,2765,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5564 -> 5585,0 */
	reached1[5564] = 1;
	trans[1][5564]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5565]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5566]	= settr(5782,4,5585,2766,2766,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5567 -> 5585,0 */
	reached1[5567] = 1;
	trans[1][5567]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5568]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5569]	= settr(5785,4,5585,2767,2767,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5570 -> 5585,0 */
	reached1[5570] = 1;
	trans[1][5570]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5571]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5572]	= settr(5788,4,5585,2768,2768,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5573 -> 5585,0 */
	reached1[5573] = 1;
	trans[1][5573]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5574]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5575]	= settr(5791,2,5576,2,0,"else", 1, 2, 0);
	trans[1][5576]	= settr(5792,4,5585,2769,2769,"(1)", 1, 2, 0); /* m: 5578 -> 5585,0 */
	reached1[5578] = 1;
	T = trans[1][5585] = settr(5801,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5801,0,5580,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5801,0,5583,0,0,"IF", 0, 2, 0);
	trans[1][5580]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5582] = settr(5798,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5798,0,5581,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5581]	= settr(5797,0,5649,2770,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5586]	= settr(5802,0,5649,1,0,".(goto)", 0, 2, 0); /* m: 5649 -> 0,5653 */
	reached1[5649] = 1;
	trans[1][5583]	= settr(5799,0,5584,2,0,"else", 0, 2, 0);
	trans[1][5584]	= settr(5800,0,5653,2771,2771,"(1)", 0, 2, 0); /* m: 5649 -> 5653,0 */
	reached1[5649] = 1;
	trans[1][5588]	= settr(5804,0,5616,2772,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5616] = settr(5832,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5832,0,5608,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5608] = settr(5824,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5824,2,5606,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5606] = settr(5822,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5822,2,5589,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5822,2,5592,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5822,2,5595,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5822,2,5598,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5822,2,5601,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5822,2,5604,0,0,"IF", 1, 2, 0);
	trans[1][5589]	= settr(5805,4,5614,2773,2773,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5590 -> 5614,0 */
	reached1[5590] = 1;
	trans[1][5590]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5591]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5607]	= settr(5823,0,5614,2774,2774,".(goto)", 1, 2, 0);
	trans[1][5592]	= settr(5808,4,5614,2775,2775,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5593 -> 5614,0 */
	reached1[5593] = 1;
	trans[1][5593]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5594]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5595]	= settr(5811,4,5614,2776,2776,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5596 -> 5614,0 */
	reached1[5596] = 1;
	trans[1][5596]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5597]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5598]	= settr(5814,4,5614,2777,2777,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5599 -> 5614,0 */
	reached1[5599] = 1;
	trans[1][5599]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5600]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5601]	= settr(5817,4,5614,2778,2778,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5602 -> 5614,0 */
	reached1[5602] = 1;
	trans[1][5602]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5603]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5604]	= settr(5820,2,5605,2,0,"else", 1, 2, 0);
	trans[1][5605]	= settr(5821,4,5614,2779,2779,"(1)", 1, 2, 0); /* m: 5607 -> 5614,0 */
	reached1[5607] = 1;
	T = trans[1][5614] = settr(5830,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5830,0,5609,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5830,0,5612,0,0,"IF", 0, 2, 0);
	trans[1][5609]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5611] = settr(5827,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5827,0,5610,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5610]	= settr(5826,0,5649,2780,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5615]	= settr(5831,0,5649,1,0,".(goto)", 0, 2, 0); /* m: 5649 -> 0,5653 */
	reached1[5649] = 1;
	trans[1][5612]	= settr(5828,0,5613,2,0,"else", 0, 2, 0);
	trans[1][5613]	= settr(5829,0,5653,2781,2781,"(1)", 0, 2, 0); /* m: 5649 -> 5653,0 */
	reached1[5649] = 1;
	trans[1][5617]	= settr(5833,0,5645,2782,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][5645] = settr(5861,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5861,0,5637,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5637] = settr(5853,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5853,2,5635,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5635] = settr(5851,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5851,2,5618,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5851,2,5621,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5851,2,5624,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5851,2,5627,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5851,2,5630,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5851,2,5633,0,0,"IF", 1, 2, 0);
	trans[1][5618]	= settr(5834,4,5643,2783,2783,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5619 -> 5643,0 */
	reached1[5619] = 1;
	trans[1][5619]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5620]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5636]	= settr(5852,0,5643,2784,2784,".(goto)", 1, 2, 0);
	trans[1][5621]	= settr(5837,4,5643,2785,2785,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5622 -> 5643,0 */
	reached1[5622] = 1;
	trans[1][5622]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5623]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5624]	= settr(5840,4,5643,2786,2786,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5625 -> 5643,0 */
	reached1[5625] = 1;
	trans[1][5625]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5626]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5627]	= settr(5843,4,5643,2787,2787,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5628 -> 5643,0 */
	reached1[5628] = 1;
	trans[1][5628]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5629]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5630]	= settr(5846,4,5643,2788,2788,"((STOP==ABORT))", 1, 2, 0); /* m: 5631 -> 5643,0 */
	reached1[5631] = 1;
	trans[1][5631]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5632]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5633]	= settr(5849,2,5634,2,0,"else", 1, 2, 0);
	trans[1][5634]	= settr(5850,4,5643,2789,2789,"(1)", 1, 2, 0); /* m: 5636 -> 5643,0 */
	reached1[5636] = 1;
	T = trans[1][5643] = settr(5859,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(5859,0,5638,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(5859,0,5641,0,0,"IF", 0, 2, 0);
	trans[1][5638]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][5640] = settr(5856,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5856,0,5639,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5639]	= settr(5855,0,5649,2790,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5644]	= settr(5860,0,5649,1,0,".(goto)", 0, 2, 0); /* m: 5649 -> 0,5653 */
	reached1[5649] = 1;
	trans[1][5641]	= settr(5857,0,5642,2,0,"else", 0, 2, 0);
	trans[1][5642]	= settr(5858,0,5653,2791,2791,"(1)", 0, 2, 0); /* m: 5649 -> 5653,0 */
	reached1[5649] = 1;
	trans[1][5649]	= settr(5865,0,5653,2792,2792,"j = (j+1)", 0, 2, 0);
	trans[1][5650]	= settr(5866,0,5651,2,0,"else", 0, 2, 0);
	trans[1][5651]	= settr(5867,0,5676,2793,2793,"j = 1", 0, 2, 0);
	trans[1][5652]	= settr(5868,0,5676,1,0,"goto :b53", 0, 2, 0);
	trans[1][5655]	= settr(5871,0,5676,1,0,"break", 0, 2, 0);
	trans[1][5677]	= settr(5893,0,5676,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5676] = settr(5892,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(5892,0,5657,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(5892,0,5673,0,0,"DO", 0, 2, 0);
	trans[1][5657]	= settr(5873,0,5670,2794,0,"((j<3))", 0, 2, 0);
	T = trans[1][5670] = settr(5886,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5886,0,5658,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5886,0,5661,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5886,0,5664,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5886,0,5667,0,0,"IF", 0, 2, 0);
	trans[1][5658]	= settr(5874,0,5660,2795,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][5660] = settr(5876,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5876,0,5659,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5659]	= settr(5875,0,5672,2796,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5671]	= settr(5887,0,5672,1,0,".(goto)", 0, 2, 0); /* m: 5672 -> 0,5676 */
	reached1[5672] = 1;
	trans[1][5661]	= settr(5877,0,5663,2797,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5663] = settr(5879,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5879,0,5662,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5662]	= settr(5878,0,5672,2798,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5664]	= settr(5880,0,5666,2799,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][5666] = settr(5882,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5882,0,5665,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5665]	= settr(5881,0,5672,2800,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5667]	= settr(5883,0,5669,2801,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][5669] = settr(5885,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5885,0,5668,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5668]	= settr(5884,0,5672,2802,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5672]	= settr(5888,0,5676,2803,2803,"j = (j+1)", 0, 2, 0);
	trans[1][5673]	= settr(5889,0,5674,2,0,"else", 0, 2, 0);
	trans[1][5674]	= settr(5890,0,5690,2804,2804,"j = 1", 0, 2, 0);
	trans[1][5675]	= settr(5891,0,5690,1,0,"goto :b54", 0, 2, 0);
	trans[1][5678]	= settr(5894,0,5690,1,0,"break", 0, 2, 0);
	trans[1][5685]	= settr(5901,0,5686,2,0,"else", 0, 2, 0);
	trans[1][5686]	= settr(5902,0,5690,1,0,"(1)", 0, 2, 0);
	trans[1][5690]	= settr(5906,0,5700,2805,2805,"states[0] = 10", 1, 2, 0);
	trans[1][5695]	= settr(5911,0,5700,1,0,".(goto)", 0, 2, 0);
	trans[1][5692]	= settr(5908,0,5693,2,0,"else", 0, 2, 0);
	trans[1][5693]	= settr(5909,0,5700,1,0,"(1)", 0, 2, 0);
	trans[1][5698]	= settr(5914,0,10861,2806,0,"(((commands[0]==STOP)||(commands[0]==ABORT)))", 1, 2, 0);
	trans[1][5699]	= settr(5915,0,10861,1,0,"goto :b17", 0, 2, 0);
	trans[1][5702]	= settr(5918,0,10861,1,0,"break", 0, 2, 0);
	T = trans[1][10861] = settr(11077,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11077,0,5703,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11077,0,8281,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11077,0,10859,0,0,"IF", 0, 2, 0);
	trans[1][5703]	= settr(5919,0,5704,2807,0,"((commands[0]==STOP))", 1, 2, 0);
	trans[1][5704]	= settr(5920,0,6992,2808,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==PAUSED)))", 1, 2, 0);
	T = trans[ 1][6992] = settr(7208,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7208,0,5705,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5705]	= settr(5921,0,6991,2809,2809,"states[0] = 7", 1, 2, 0);
	T = trans[ 1][6991] = settr(7207,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7207,0,6989,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6989] = settr(7205,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7205,0,5706,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7205,0,6133,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7205,0,6560,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7205,0,6987,0,0,"IF", 0, 2, 0);
	trans[1][5706]	= settr(5922,0,6132,2810,0,"((7==RUNNING))", 0, 2, 0);
	T = trans[ 1][6132] = settr(6348,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6348,0,6130,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6130] = settr(6346,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6346,0,5707,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6346,0,5709,0,0,"IF", 0, 2, 0);
	trans[1][5707]	= settr(5923,0,5708,2811,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][5708]	= settr(5924,0,8280,2812,2812,"supervisor_started = 1", 1, 2, 0);
	trans[1][6131]	= settr(6347,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][5709]	= settr(5925,0,6128,2,0,"else", 0, 2, 0);
	T = trans[1][6128] = settr(6344,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6344,0,5710,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6344,0,5975,0,0,"IF", 0, 2, 0);
	trans[1][5710]	= settr(5926,0,5974,2813,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][5974] = settr(6190,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6190,0,5972,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5972] = settr(6188,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6188,0,5711,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6188,0,5841,0,0,"IF", 0, 2, 0);
	trans[1][5711]	= settr(5927,0,5840,2814,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][5840] = settr(6056,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6056,0,5837,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5838]	= settr(6054,0,5837,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5837] = settr(6053,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6053,0,5712,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6053,0,5834,0,0,"DO", 0, 2, 0);
	trans[1][5712]	= settr(5928,0,5832,2815,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][5832] = settr(6048,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6048,0,5830,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5830] = settr(6046,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6046,0,5713,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6046,0,5743,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6046,0,5772,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6046,0,5801,0,0,"IF", 0, 2, 0);
	trans[1][5713]	= settr(5929,0,5742,2816,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][5742] = settr(5958,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5958,0,5733,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5733] = settr(5949,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5949,2,5731,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5731] = settr(5947,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5947,2,5714,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5947,2,5717,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5947,2,5720,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5947,2,5723,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5947,2,5726,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5947,2,5729,0,0,"IF", 1, 2, 0);
	trans[1][5714]	= settr(5930,4,5734,2817,2817,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5715 -> 5734,0 */
	reached1[5715] = 1;
	trans[1][5715]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5716]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5732]	= settr(5948,0,5734,2818,2818,".(goto)", 1, 2, 0);
	trans[1][5717]	= settr(5933,4,5734,2819,2819,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5718 -> 5734,0 */
	reached1[5718] = 1;
	trans[1][5718]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5719]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5720]	= settr(5936,4,5734,2820,2820,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5721 -> 5734,0 */
	reached1[5721] = 1;
	trans[1][5721]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5722]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5723]	= settr(5939,4,5734,2821,2821,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5724 -> 5734,0 */
	reached1[5724] = 1;
	trans[1][5724]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5725]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5726]	= settr(5942,4,5734,2822,2822,"((START==ABORT))", 1, 2, 0); /* m: 5727 -> 5734,0 */
	reached1[5727] = 1;
	trans[1][5727]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5728]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5729]	= settr(5945,2,5730,2,0,"else", 1, 2, 0);
	trans[1][5730]	= settr(5946,4,5734,2823,2823,"(1)", 1, 2, 0); /* m: 5732 -> 5734,0 */
	reached1[5732] = 1;
	trans[1][5734]	= settr(5950,0,5740,2824,2824,"(run Thread(j))", 0, 2, 0);
	T = trans[1][5740] = settr(5956,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5956,0,5735,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5956,0,5738,0,0,"IF", 0, 2, 0);
	trans[1][5735]	= settr(5951,0,5737,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5737] = settr(5953,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5953,0,5736,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5736]	= settr(5952,0,5833,2825,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5741]	= settr(5957,0,5833,1,0,".(goto)", 0, 2, 0); /* m: 5833 -> 0,5837 */
	reached1[5833] = 1;
	trans[1][5738]	= settr(5954,0,5739,2,0,"else", 0, 2, 0);
	trans[1][5739]	= settr(5955,0,5837,2826,2826,"(1)", 0, 2, 0); /* m: 5833 -> 5837,0 */
	reached1[5833] = 1;
	trans[1][5831]	= settr(6047,0,5833,1,0,".(goto)", 0, 2, 0); /* m: 5833 -> 0,5837 */
	reached1[5833] = 1;
	trans[1][5743]	= settr(5959,0,5771,2827,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][5771] = settr(5987,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5987,0,5763,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5763] = settr(5979,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(5979,2,5761,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5761] = settr(5977,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5977,2,5744,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5977,2,5747,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5977,2,5750,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5977,2,5753,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(5977,2,5756,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(5977,2,5759,0,0,"IF", 1, 2, 0);
	trans[1][5744]	= settr(5960,4,5769,2828,2828,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5745 -> 5769,0 */
	reached1[5745] = 1;
	trans[1][5745]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5746]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5762]	= settr(5978,0,5769,2829,2829,".(goto)", 1, 2, 0);
	trans[1][5747]	= settr(5963,4,5769,2830,2830,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5748 -> 5769,0 */
	reached1[5748] = 1;
	trans[1][5748]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5749]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5750]	= settr(5966,4,5769,2831,2831,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5751 -> 5769,0 */
	reached1[5751] = 1;
	trans[1][5751]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5752]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5753]	= settr(5969,4,5769,2832,2832,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5754 -> 5769,0 */
	reached1[5754] = 1;
	trans[1][5754]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5755]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5756]	= settr(5972,4,5769,2833,2833,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5757 -> 5769,0 */
	reached1[5757] = 1;
	trans[1][5757]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5758]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5759]	= settr(5975,2,5760,2,0,"else", 1, 2, 0);
	trans[1][5760]	= settr(5976,4,5769,2834,2834,"(1)", 1, 2, 0); /* m: 5762 -> 5769,0 */
	reached1[5762] = 1;
	T = trans[1][5769] = settr(5985,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(5985,0,5764,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(5985,0,5767,0,0,"IF", 0, 2, 0);
	trans[1][5764]	= settr(5980,0,5766,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5766] = settr(5982,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(5982,0,5765,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5765]	= settr(5981,0,5833,2835,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5770]	= settr(5986,0,5833,1,0,".(goto)", 0, 2, 0); /* m: 5833 -> 0,5837 */
	reached1[5833] = 1;
	trans[1][5767]	= settr(5983,0,5768,2,0,"else", 0, 2, 0);
	trans[1][5768]	= settr(5984,0,5837,2836,2836,"(1)", 0, 2, 0); /* m: 5833 -> 5837,0 */
	reached1[5833] = 1;
	trans[1][5772]	= settr(5988,0,5800,2837,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5800] = settr(6016,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6016,0,5792,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5792] = settr(6008,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6008,2,5790,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5790] = settr(6006,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6006,2,5773,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6006,2,5776,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6006,2,5779,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6006,2,5782,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6006,2,5785,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6006,2,5788,0,0,"IF", 1, 2, 0);
	trans[1][5773]	= settr(5989,4,5798,2838,2838,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5774 -> 5798,0 */
	reached1[5774] = 1;
	trans[1][5774]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5775]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5791]	= settr(6007,0,5798,2839,2839,".(goto)", 1, 2, 0);
	trans[1][5776]	= settr(5992,4,5798,2840,2840,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5777 -> 5798,0 */
	reached1[5777] = 1;
	trans[1][5777]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5778]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5779]	= settr(5995,4,5798,2841,2841,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5780 -> 5798,0 */
	reached1[5780] = 1;
	trans[1][5780]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5781]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5782]	= settr(5998,4,5798,2842,2842,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5783 -> 5798,0 */
	reached1[5783] = 1;
	trans[1][5783]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5784]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5785]	= settr(6001,4,5798,2843,2843,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5786 -> 5798,0 */
	reached1[5786] = 1;
	trans[1][5786]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5787]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5788]	= settr(6004,2,5789,2,0,"else", 1, 2, 0);
	trans[1][5789]	= settr(6005,4,5798,2844,2844,"(1)", 1, 2, 0); /* m: 5791 -> 5798,0 */
	reached1[5791] = 1;
	T = trans[1][5798] = settr(6014,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6014,0,5793,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6014,0,5796,0,0,"IF", 0, 2, 0);
	trans[1][5793]	= settr(6009,0,5795,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5795] = settr(6011,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6011,0,5794,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5794]	= settr(6010,0,5833,2845,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5799]	= settr(6015,0,5833,1,0,".(goto)", 0, 2, 0); /* m: 5833 -> 0,5837 */
	reached1[5833] = 1;
	trans[1][5796]	= settr(6012,0,5797,2,0,"else", 0, 2, 0);
	trans[1][5797]	= settr(6013,0,5837,2846,2846,"(1)", 0, 2, 0); /* m: 5833 -> 5837,0 */
	reached1[5833] = 1;
	trans[1][5801]	= settr(6017,0,5829,2847,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][5829] = settr(6045,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6045,0,5821,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5821] = settr(6037,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6037,2,5819,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5819] = settr(6035,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6035,2,5802,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6035,2,5805,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6035,2,5808,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6035,2,5811,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6035,2,5814,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6035,2,5817,0,0,"IF", 1, 2, 0);
	trans[1][5802]	= settr(6018,4,5827,2848,2848,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5803 -> 5827,0 */
	reached1[5803] = 1;
	trans[1][5803]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5804]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5820]	= settr(6036,0,5827,2849,2849,".(goto)", 1, 2, 0);
	trans[1][5805]	= settr(6021,4,5827,2850,2850,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5806 -> 5827,0 */
	reached1[5806] = 1;
	trans[1][5806]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5807]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5808]	= settr(6024,4,5827,2851,2851,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5809 -> 5827,0 */
	reached1[5809] = 1;
	trans[1][5809]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5810]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5811]	= settr(6027,4,5827,2852,2852,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5812 -> 5827,0 */
	reached1[5812] = 1;
	trans[1][5812]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5813]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5814]	= settr(6030,4,5827,2853,2853,"((STOP==ABORT))", 1, 2, 0); /* m: 5815 -> 5827,0 */
	reached1[5815] = 1;
	trans[1][5815]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5816]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5817]	= settr(6033,2,5818,2,0,"else", 1, 2, 0);
	trans[1][5818]	= settr(6034,4,5827,2854,2854,"(1)", 1, 2, 0); /* m: 5820 -> 5827,0 */
	reached1[5820] = 1;
	T = trans[1][5827] = settr(6043,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6043,0,5822,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6043,0,5825,0,0,"IF", 0, 2, 0);
	trans[1][5822]	= settr(6038,0,5824,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5824] = settr(6040,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6040,0,5823,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5823]	= settr(6039,0,5833,2855,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5828]	= settr(6044,0,5833,1,0,".(goto)", 0, 2, 0); /* m: 5833 -> 0,5837 */
	reached1[5833] = 1;
	trans[1][5825]	= settr(6041,0,5826,2,0,"else", 0, 2, 0);
	trans[1][5826]	= settr(6042,0,5837,2856,2856,"(1)", 0, 2, 0); /* m: 5833 -> 5837,0 */
	reached1[5833] = 1;
	trans[1][5833]	= settr(6049,0,5837,2857,2857,"j = (j+1)", 0, 2, 0);
	trans[1][5834]	= settr(6050,0,5835,2,0,"else", 0, 2, 0);
	trans[1][5835]	= settr(6051,0,8280,2858,2858,"j = 1", 0, 2, 0);
	trans[1][5836]	= settr(6052,0,8280,1,0,"goto :b55", 0, 2, 0);
	trans[1][5839]	= settr(6055,0,8280,1,0,"break", 0, 2, 0);
	trans[1][5973]	= settr(6189,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][5841]	= settr(6057,0,5971,2,0,"else", 0, 2, 0);
	T = trans[ 1][5971] = settr(6187,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6187,0,5842,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5842]	= settr(6058,0,5968,2859,2859,"j = (3-1)", 0, 2, 0);
	trans[1][5969]	= settr(6185,0,5968,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5968] = settr(6184,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6184,0,5843,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6184,0,5965,0,0,"DO", 0, 2, 0);
	trans[1][5843]	= settr(6059,0,5963,2860,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][5963] = settr(6179,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6179,0,5961,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][5961] = settr(6177,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6177,0,5844,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6177,0,5874,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6177,0,5903,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6177,0,5932,0,0,"IF", 0, 2, 0);
	trans[1][5844]	= settr(6060,0,5873,2861,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][5873] = settr(6089,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6089,0,5864,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5864] = settr(6080,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6080,2,5862,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5862] = settr(6078,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6078,2,5845,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6078,2,5848,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6078,2,5851,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6078,2,5854,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6078,2,5857,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6078,2,5860,0,0,"IF", 1, 2, 0);
	trans[1][5845]	= settr(6061,4,5865,2862,2862,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5846 -> 5865,0 */
	reached1[5846] = 1;
	trans[1][5846]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5847]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5863]	= settr(6079,0,5865,2863,2863,".(goto)", 1, 2, 0);
	trans[1][5848]	= settr(6064,4,5865,2864,2864,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5849 -> 5865,0 */
	reached1[5849] = 1;
	trans[1][5849]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5850]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5851]	= settr(6067,4,5865,2865,2865,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5852 -> 5865,0 */
	reached1[5852] = 1;
	trans[1][5852]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5853]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5854]	= settr(6070,4,5865,2866,2866,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5855 -> 5865,0 */
	reached1[5855] = 1;
	trans[1][5855]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5856]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5857]	= settr(6073,4,5865,2867,2867,"((START==ABORT))", 1, 2, 0); /* m: 5858 -> 5865,0 */
	reached1[5858] = 1;
	trans[1][5858]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5859]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5860]	= settr(6076,2,5861,2,0,"else", 1, 2, 0);
	trans[1][5861]	= settr(6077,4,5865,2868,2868,"(1)", 1, 2, 0); /* m: 5863 -> 5865,0 */
	reached1[5863] = 1;
	trans[1][5865]	= settr(6081,0,5871,2869,2869,"(run Thread(j))", 0, 2, 0);
	T = trans[1][5871] = settr(6087,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6087,0,5866,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6087,0,5869,0,0,"IF", 0, 2, 0);
	trans[1][5866]	= settr(6082,0,5868,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5868] = settr(6084,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6084,0,5867,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5867]	= settr(6083,0,5964,2870,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5872]	= settr(6088,0,5964,1,0,".(goto)", 0, 2, 0); /* m: 5964 -> 0,5968 */
	reached1[5964] = 1;
	trans[1][5869]	= settr(6085,0,5870,2,0,"else", 0, 2, 0);
	trans[1][5870]	= settr(6086,0,5968,2871,2871,"(1)", 0, 2, 0); /* m: 5964 -> 5968,0 */
	reached1[5964] = 1;
	trans[1][5962]	= settr(6178,0,5964,1,0,".(goto)", 0, 2, 0); /* m: 5964 -> 0,5968 */
	reached1[5964] = 1;
	trans[1][5874]	= settr(6090,0,5902,2872,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][5902] = settr(6118,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6118,0,5894,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5894] = settr(6110,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6110,2,5892,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5892] = settr(6108,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6108,2,5875,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6108,2,5878,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6108,2,5881,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6108,2,5884,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6108,2,5887,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6108,2,5890,0,0,"IF", 1, 2, 0);
	trans[1][5875]	= settr(6091,4,5900,2873,2873,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5876 -> 5900,0 */
	reached1[5876] = 1;
	trans[1][5876]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5877]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5893]	= settr(6109,0,5900,2874,2874,".(goto)", 1, 2, 0);
	trans[1][5878]	= settr(6094,4,5900,2875,2875,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5879 -> 5900,0 */
	reached1[5879] = 1;
	trans[1][5879]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5880]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5881]	= settr(6097,4,5900,2876,2876,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5882 -> 5900,0 */
	reached1[5882] = 1;
	trans[1][5882]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5883]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5884]	= settr(6100,4,5900,2877,2877,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5885 -> 5900,0 */
	reached1[5885] = 1;
	trans[1][5885]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5886]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5887]	= settr(6103,4,5900,2878,2878,"((PAUSE==ABORT))", 1, 2, 0); /* m: 5888 -> 5900,0 */
	reached1[5888] = 1;
	trans[1][5888]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5889]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5890]	= settr(6106,2,5891,2,0,"else", 1, 2, 0);
	trans[1][5891]	= settr(6107,4,5900,2879,2879,"(1)", 1, 2, 0); /* m: 5893 -> 5900,0 */
	reached1[5893] = 1;
	T = trans[1][5900] = settr(6116,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6116,0,5895,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6116,0,5898,0,0,"IF", 0, 2, 0);
	trans[1][5895]	= settr(6111,0,5897,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5897] = settr(6113,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6113,0,5896,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5896]	= settr(6112,0,5964,2880,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5901]	= settr(6117,0,5964,1,0,".(goto)", 0, 2, 0); /* m: 5964 -> 0,5968 */
	reached1[5964] = 1;
	trans[1][5898]	= settr(6114,0,5899,2,0,"else", 0, 2, 0);
	trans[1][5899]	= settr(6115,0,5968,2881,2881,"(1)", 0, 2, 0); /* m: 5964 -> 5968,0 */
	reached1[5964] = 1;
	trans[1][5903]	= settr(6119,0,5931,2882,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][5931] = settr(6147,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6147,0,5923,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5923] = settr(6139,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6139,2,5921,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5921] = settr(6137,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6137,2,5904,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6137,2,5907,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6137,2,5910,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6137,2,5913,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6137,2,5916,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6137,2,5919,0,0,"IF", 1, 2, 0);
	trans[1][5904]	= settr(6120,4,5929,2883,2883,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5905 -> 5929,0 */
	reached1[5905] = 1;
	trans[1][5905]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5906]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5922]	= settr(6138,0,5929,2884,2884,".(goto)", 1, 2, 0);
	trans[1][5907]	= settr(6123,4,5929,2885,2885,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5908 -> 5929,0 */
	reached1[5908] = 1;
	trans[1][5908]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5909]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5910]	= settr(6126,4,5929,2886,2886,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5911 -> 5929,0 */
	reached1[5911] = 1;
	trans[1][5911]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5912]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5913]	= settr(6129,4,5929,2887,2887,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5914 -> 5929,0 */
	reached1[5914] = 1;
	trans[1][5914]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5915]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5916]	= settr(6132,4,5929,2888,2888,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 5917 -> 5929,0 */
	reached1[5917] = 1;
	trans[1][5917]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5918]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5919]	= settr(6135,2,5920,2,0,"else", 1, 2, 0);
	trans[1][5920]	= settr(6136,4,5929,2889,2889,"(1)", 1, 2, 0); /* m: 5922 -> 5929,0 */
	reached1[5922] = 1;
	T = trans[1][5929] = settr(6145,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6145,0,5924,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6145,0,5927,0,0,"IF", 0, 2, 0);
	trans[1][5924]	= settr(6140,0,5926,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5926] = settr(6142,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6142,0,5925,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5925]	= settr(6141,0,5964,2890,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5930]	= settr(6146,0,5964,1,0,".(goto)", 0, 2, 0); /* m: 5964 -> 0,5968 */
	reached1[5964] = 1;
	trans[1][5927]	= settr(6143,0,5928,2,0,"else", 0, 2, 0);
	trans[1][5928]	= settr(6144,0,5968,2891,2891,"(1)", 0, 2, 0); /* m: 5964 -> 5968,0 */
	reached1[5964] = 1;
	trans[1][5932]	= settr(6148,0,5960,2892,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][5960] = settr(6176,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6176,0,5952,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5952] = settr(6168,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6168,2,5950,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5950] = settr(6166,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6166,2,5933,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6166,2,5936,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6166,2,5939,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6166,2,5942,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6166,2,5945,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6166,2,5948,0,0,"IF", 1, 2, 0);
	trans[1][5933]	= settr(6149,4,5958,2893,2893,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5934 -> 5958,0 */
	reached1[5934] = 1;
	trans[1][5934]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5935]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5951]	= settr(6167,0,5958,2894,2894,".(goto)", 1, 2, 0);
	trans[1][5936]	= settr(6152,4,5958,2895,2895,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5937 -> 5958,0 */
	reached1[5937] = 1;
	trans[1][5937]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5938]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5939]	= settr(6155,4,5958,2896,2896,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5940 -> 5958,0 */
	reached1[5940] = 1;
	trans[1][5940]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5941]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5942]	= settr(6158,4,5958,2897,2897,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5943 -> 5958,0 */
	reached1[5943] = 1;
	trans[1][5943]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5944]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5945]	= settr(6161,4,5958,2898,2898,"((STOP==ABORT))", 1, 2, 0); /* m: 5946 -> 5958,0 */
	reached1[5946] = 1;
	trans[1][5946]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5947]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5948]	= settr(6164,2,5949,2,0,"else", 1, 2, 0);
	trans[1][5949]	= settr(6165,4,5958,2899,2899,"(1)", 1, 2, 0); /* m: 5951 -> 5958,0 */
	reached1[5951] = 1;
	T = trans[1][5958] = settr(6174,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6174,0,5953,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6174,0,5956,0,0,"IF", 0, 2, 0);
	trans[1][5953]	= settr(6169,0,5955,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][5955] = settr(6171,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6171,0,5954,0,0,"sub-sequence", 0, 2, 0);
	trans[1][5954]	= settr(6170,0,5964,2900,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][5959]	= settr(6175,0,5964,1,0,".(goto)", 0, 2, 0); /* m: 5964 -> 0,5968 */
	reached1[5964] = 1;
	trans[1][5956]	= settr(6172,0,5957,2,0,"else", 0, 2, 0);
	trans[1][5957]	= settr(6173,0,5968,2901,2901,"(1)", 0, 2, 0); /* m: 5964 -> 5968,0 */
	reached1[5964] = 1;
	trans[1][5964]	= settr(6180,0,5968,2902,2902,"j = (j-1)", 0, 2, 0);
	trans[1][5965]	= settr(6181,0,5966,2,0,"else", 0, 2, 0);
	trans[1][5966]	= settr(6182,0,8280,2903,2903,"j = 1", 0, 2, 0);
	trans[1][5967]	= settr(6183,0,8280,1,0,"goto :b56", 0, 2, 0);
	trans[1][5970]	= settr(6186,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6129]	= settr(6345,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][5975]	= settr(6191,0,6127,2,0,"else", 0, 2, 0);
	T = trans[ 1][6127] = settr(6343,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6343,0,6104,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6104] = settr(6320,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6320,0,6101,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6102]	= settr(6318,0,6101,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6101] = settr(6317,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6317,0,5976,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6317,0,6098,0,0,"DO", 0, 2, 0);
	trans[1][5976]	= settr(6192,0,6096,2904,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][6096] = settr(6312,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6312,0,6094,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6094] = settr(6310,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6310,0,5977,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6310,0,6007,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6310,0,6036,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6310,0,6065,0,0,"IF", 0, 2, 0);
	trans[1][5977]	= settr(6193,0,6006,2905,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][6006] = settr(6222,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6222,0,5997,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][5997] = settr(6213,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6213,2,5995,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][5995] = settr(6211,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6211,2,5978,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6211,2,5981,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6211,2,5984,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6211,2,5987,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6211,2,5990,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6211,2,5993,0,0,"IF", 1, 2, 0);
	trans[1][5978]	= settr(6194,4,5998,2906,2906,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5979 -> 5998,0 */
	reached1[5979] = 1;
	trans[1][5979]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][5980]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][5996]	= settr(6212,0,5998,2907,2907,".(goto)", 1, 2, 0);
	trans[1][5981]	= settr(6197,4,5998,2908,2908,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 5982 -> 5998,0 */
	reached1[5982] = 1;
	trans[1][5982]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][5983]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][5984]	= settr(6200,4,5998,2909,2909,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5985 -> 5998,0 */
	reached1[5985] = 1;
	trans[1][5985]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][5986]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][5987]	= settr(6203,4,5998,2910,2910,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 5988 -> 5998,0 */
	reached1[5988] = 1;
	trans[1][5988]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][5989]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][5990]	= settr(6206,4,5998,2911,2911,"((START==ABORT))", 1, 2, 0); /* m: 5991 -> 5998,0 */
	reached1[5991] = 1;
	trans[1][5991]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][5992]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][5993]	= settr(6209,2,5994,2,0,"else", 1, 2, 0);
	trans[1][5994]	= settr(6210,4,5998,2912,2912,"(1)", 1, 2, 0); /* m: 5996 -> 5998,0 */
	reached1[5996] = 1;
	trans[1][5998]	= settr(6214,0,6004,2913,2913,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6004] = settr(6220,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6220,0,5999,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6220,0,6002,0,0,"IF", 0, 2, 0);
	trans[1][5999]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6001] = settr(6217,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6217,0,6000,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6000]	= settr(6216,0,6097,2914,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6005]	= settr(6221,0,6097,1,0,".(goto)", 0, 2, 0); /* m: 6097 -> 0,6101 */
	reached1[6097] = 1;
	trans[1][6002]	= settr(6218,0,6003,2,0,"else", 0, 2, 0);
	trans[1][6003]	= settr(6219,0,6101,2915,2915,"(1)", 0, 2, 0); /* m: 6097 -> 6101,0 */
	reached1[6097] = 1;
	trans[1][6095]	= settr(6311,0,6097,1,0,".(goto)", 0, 2, 0); /* m: 6097 -> 0,6101 */
	reached1[6097] = 1;
	trans[1][6007]	= settr(6223,0,6035,2916,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][6035] = settr(6251,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6251,0,6027,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6027] = settr(6243,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6243,2,6025,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6025] = settr(6241,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6241,2,6008,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6241,2,6011,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6241,2,6014,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6241,2,6017,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6241,2,6020,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6241,2,6023,0,0,"IF", 1, 2, 0);
	trans[1][6008]	= settr(6224,4,6033,2917,2917,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6009 -> 6033,0 */
	reached1[6009] = 1;
	trans[1][6009]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6010]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6026]	= settr(6242,0,6033,2918,2918,".(goto)", 1, 2, 0);
	trans[1][6011]	= settr(6227,4,6033,2919,2919,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6012 -> 6033,0 */
	reached1[6012] = 1;
	trans[1][6012]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6013]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6014]	= settr(6230,4,6033,2920,2920,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6015 -> 6033,0 */
	reached1[6015] = 1;
	trans[1][6015]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6016]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6017]	= settr(6233,4,6033,2921,2921,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6018 -> 6033,0 */
	reached1[6018] = 1;
	trans[1][6018]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6019]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6020]	= settr(6236,4,6033,2922,2922,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6021 -> 6033,0 */
	reached1[6021] = 1;
	trans[1][6021]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6022]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6023]	= settr(6239,2,6024,2,0,"else", 1, 2, 0);
	trans[1][6024]	= settr(6240,4,6033,2923,2923,"(1)", 1, 2, 0); /* m: 6026 -> 6033,0 */
	reached1[6026] = 1;
	T = trans[1][6033] = settr(6249,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6249,0,6028,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6249,0,6031,0,0,"IF", 0, 2, 0);
	trans[1][6028]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6030] = settr(6246,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6246,0,6029,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6029]	= settr(6245,0,6097,2924,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6034]	= settr(6250,0,6097,1,0,".(goto)", 0, 2, 0); /* m: 6097 -> 0,6101 */
	reached1[6097] = 1;
	trans[1][6031]	= settr(6247,0,6032,2,0,"else", 0, 2, 0);
	trans[1][6032]	= settr(6248,0,6101,2925,2925,"(1)", 0, 2, 0); /* m: 6097 -> 6101,0 */
	reached1[6097] = 1;
	trans[1][6036]	= settr(6252,0,6064,2926,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6064] = settr(6280,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6280,0,6056,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6056] = settr(6272,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6272,2,6054,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6054] = settr(6270,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6270,2,6037,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6270,2,6040,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6270,2,6043,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6270,2,6046,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6270,2,6049,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6270,2,6052,0,0,"IF", 1, 2, 0);
	trans[1][6037]	= settr(6253,4,6062,2927,2927,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6038 -> 6062,0 */
	reached1[6038] = 1;
	trans[1][6038]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6039]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6055]	= settr(6271,0,6062,2928,2928,".(goto)", 1, 2, 0);
	trans[1][6040]	= settr(6256,4,6062,2929,2929,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6041 -> 6062,0 */
	reached1[6041] = 1;
	trans[1][6041]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6042]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6043]	= settr(6259,4,6062,2930,2930,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6044 -> 6062,0 */
	reached1[6044] = 1;
	trans[1][6044]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6045]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6046]	= settr(6262,4,6062,2931,2931,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6047 -> 6062,0 */
	reached1[6047] = 1;
	trans[1][6047]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6048]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6049]	= settr(6265,4,6062,2932,2932,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6050 -> 6062,0 */
	reached1[6050] = 1;
	trans[1][6050]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6051]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6052]	= settr(6268,2,6053,2,0,"else", 1, 2, 0);
	trans[1][6053]	= settr(6269,4,6062,2933,2933,"(1)", 1, 2, 0); /* m: 6055 -> 6062,0 */
	reached1[6055] = 1;
	T = trans[1][6062] = settr(6278,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6278,0,6057,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6278,0,6060,0,0,"IF", 0, 2, 0);
	trans[1][6057]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6059] = settr(6275,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6275,0,6058,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6058]	= settr(6274,0,6097,2934,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6063]	= settr(6279,0,6097,1,0,".(goto)", 0, 2, 0); /* m: 6097 -> 0,6101 */
	reached1[6097] = 1;
	trans[1][6060]	= settr(6276,0,6061,2,0,"else", 0, 2, 0);
	trans[1][6061]	= settr(6277,0,6101,2935,2935,"(1)", 0, 2, 0); /* m: 6097 -> 6101,0 */
	reached1[6097] = 1;
	trans[1][6065]	= settr(6281,0,6093,2936,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][6093] = settr(6309,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6309,0,6085,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6085] = settr(6301,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6301,2,6083,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6083] = settr(6299,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6299,2,6066,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6299,2,6069,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6299,2,6072,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6299,2,6075,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6299,2,6078,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6299,2,6081,0,0,"IF", 1, 2, 0);
	trans[1][6066]	= settr(6282,4,6091,2937,2937,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6067 -> 6091,0 */
	reached1[6067] = 1;
	trans[1][6067]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6068]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6084]	= settr(6300,0,6091,2938,2938,".(goto)", 1, 2, 0);
	trans[1][6069]	= settr(6285,4,6091,2939,2939,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6070 -> 6091,0 */
	reached1[6070] = 1;
	trans[1][6070]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6071]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6072]	= settr(6288,4,6091,2940,2940,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6073 -> 6091,0 */
	reached1[6073] = 1;
	trans[1][6073]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6074]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6075]	= settr(6291,4,6091,2941,2941,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6076 -> 6091,0 */
	reached1[6076] = 1;
	trans[1][6076]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6077]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6078]	= settr(6294,4,6091,2942,2942,"((STOP==ABORT))", 1, 2, 0); /* m: 6079 -> 6091,0 */
	reached1[6079] = 1;
	trans[1][6079]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6080]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6081]	= settr(6297,2,6082,2,0,"else", 1, 2, 0);
	trans[1][6082]	= settr(6298,4,6091,2943,2943,"(1)", 1, 2, 0); /* m: 6084 -> 6091,0 */
	reached1[6084] = 1;
	T = trans[1][6091] = settr(6307,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6307,0,6086,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6307,0,6089,0,0,"IF", 0, 2, 0);
	trans[1][6086]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6088] = settr(6304,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6304,0,6087,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6087]	= settr(6303,0,6097,2944,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6092]	= settr(6308,0,6097,1,0,".(goto)", 0, 2, 0); /* m: 6097 -> 0,6101 */
	reached1[6097] = 1;
	trans[1][6089]	= settr(6305,0,6090,2,0,"else", 0, 2, 0);
	trans[1][6090]	= settr(6306,0,6101,2945,2945,"(1)", 0, 2, 0); /* m: 6097 -> 6101,0 */
	reached1[6097] = 1;
	trans[1][6097]	= settr(6313,0,6101,2946,2946,"j = (j+1)", 0, 2, 0);
	trans[1][6098]	= settr(6314,0,6099,2,0,"else", 0, 2, 0);
	trans[1][6099]	= settr(6315,0,6124,2947,2947,"j = 1", 0, 2, 0);
	trans[1][6100]	= settr(6316,0,6124,1,0,"goto :b57", 0, 2, 0);
	trans[1][6103]	= settr(6319,0,6124,1,0,"break", 0, 2, 0);
	trans[1][6125]	= settr(6341,0,6124,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6124] = settr(6340,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6340,0,6105,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6340,0,6121,0,0,"DO", 0, 2, 0);
	trans[1][6105]	= settr(6321,0,6118,2948,0,"((j<3))", 0, 2, 0);
	T = trans[1][6118] = settr(6334,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6334,0,6106,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6334,0,6109,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6334,0,6112,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6334,0,6115,0,0,"IF", 0, 2, 0);
	trans[1][6106]	= settr(6322,0,6108,2949,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][6108] = settr(6324,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6324,0,6107,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6107]	= settr(6323,0,6120,2950,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6119]	= settr(6335,0,6120,1,0,".(goto)", 0, 2, 0); /* m: 6120 -> 0,6124 */
	reached1[6120] = 1;
	trans[1][6109]	= settr(6325,0,6111,2951,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6111] = settr(6327,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6327,0,6110,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6110]	= settr(6326,0,6120,2952,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6112]	= settr(6328,0,6114,2953,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][6114] = settr(6330,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6330,0,6113,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6113]	= settr(6329,0,6120,2954,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6115]	= settr(6331,0,6117,2955,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][6117] = settr(6333,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6333,0,6116,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6116]	= settr(6332,0,6120,2956,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6120]	= settr(6336,0,6124,2957,2957,"j = (j+1)", 0, 2, 0);
	trans[1][6121]	= settr(6337,0,6122,2,0,"else", 0, 2, 0);
	trans[1][6122]	= settr(6338,0,8280,2958,2958,"j = 1", 0, 2, 0);
	trans[1][6123]	= settr(6339,0,8280,1,0,"goto :b58", 0, 2, 0);
	trans[1][6126]	= settr(6342,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6990]	= settr(7206,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6133]	= settr(6349,0,6559,2959,0,"((7==PAUSED))", 0, 2, 0);
	T = trans[ 1][6559] = settr(6775,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6775,0,6557,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6557] = settr(6773,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6773,0,6134,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6773,0,6136,0,0,"IF", 0, 2, 0);
	trans[1][6134]	= settr(6350,0,6135,2960,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][6135]	= settr(6351,0,8280,2961,2961,"supervisor_started = 1", 1, 2, 0);
	trans[1][6558]	= settr(6774,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6136]	= settr(6352,0,6555,2,0,"else", 0, 2, 0);
	T = trans[1][6555] = settr(6771,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6771,0,6137,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6771,0,6402,0,0,"IF", 0, 2, 0);
	trans[1][6137]	= settr(6353,0,6401,2962,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][6401] = settr(6617,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6617,0,6399,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6399] = settr(6615,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6615,0,6138,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6615,0,6268,0,0,"IF", 0, 2, 0);
	trans[1][6138]	= settr(6354,0,6267,2963,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][6267] = settr(6483,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6483,0,6264,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6265]	= settr(6481,0,6264,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6264] = settr(6480,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6480,0,6139,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6480,0,6261,0,0,"DO", 0, 2, 0);
	trans[1][6139]	= settr(6355,0,6259,2964,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][6259] = settr(6475,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6475,0,6257,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6257] = settr(6473,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6473,0,6140,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6473,0,6170,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6473,0,6199,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6473,0,6228,0,0,"IF", 0, 2, 0);
	trans[1][6140]	= settr(6356,0,6169,2965,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][6169] = settr(6385,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6385,0,6160,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6160] = settr(6376,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6376,2,6158,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6158] = settr(6374,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6374,2,6141,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6374,2,6144,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6374,2,6147,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6374,2,6150,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6374,2,6153,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6374,2,6156,0,0,"IF", 1, 2, 0);
	trans[1][6141]	= settr(6357,4,6161,2966,2966,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6142 -> 6161,0 */
	reached1[6142] = 1;
	trans[1][6142]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6143]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6159]	= settr(6375,0,6161,2967,2967,".(goto)", 1, 2, 0);
	trans[1][6144]	= settr(6360,4,6161,2968,2968,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6145 -> 6161,0 */
	reached1[6145] = 1;
	trans[1][6145]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6146]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6147]	= settr(6363,4,6161,2969,2969,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6148 -> 6161,0 */
	reached1[6148] = 1;
	trans[1][6148]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6149]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6150]	= settr(6366,4,6161,2970,2970,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6151 -> 6161,0 */
	reached1[6151] = 1;
	trans[1][6151]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6152]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6153]	= settr(6369,4,6161,2971,2971,"((START==ABORT))", 1, 2, 0); /* m: 6154 -> 6161,0 */
	reached1[6154] = 1;
	trans[1][6154]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6155]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6156]	= settr(6372,2,6157,2,0,"else", 1, 2, 0);
	trans[1][6157]	= settr(6373,4,6161,2972,2972,"(1)", 1, 2, 0); /* m: 6159 -> 6161,0 */
	reached1[6159] = 1;
	trans[1][6161]	= settr(6377,0,6167,2973,2973,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6167] = settr(6383,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6383,0,6162,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6383,0,6165,0,0,"IF", 0, 2, 0);
	trans[1][6162]	= settr(6378,0,6164,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6164] = settr(6380,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6380,0,6163,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6163]	= settr(6379,0,6260,2974,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6168]	= settr(6384,0,6260,1,0,".(goto)", 0, 2, 0); /* m: 6260 -> 0,6264 */
	reached1[6260] = 1;
	trans[1][6165]	= settr(6381,0,6166,2,0,"else", 0, 2, 0);
	trans[1][6166]	= settr(6382,0,6264,2975,2975,"(1)", 0, 2, 0); /* m: 6260 -> 6264,0 */
	reached1[6260] = 1;
	trans[1][6258]	= settr(6474,0,6260,1,0,".(goto)", 0, 2, 0); /* m: 6260 -> 0,6264 */
	reached1[6260] = 1;
	trans[1][6170]	= settr(6386,0,6198,2976,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][6198] = settr(6414,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6414,0,6190,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6190] = settr(6406,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6406,2,6188,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6188] = settr(6404,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6404,2,6171,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6404,2,6174,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6404,2,6177,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6404,2,6180,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6404,2,6183,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6404,2,6186,0,0,"IF", 1, 2, 0);
	trans[1][6171]	= settr(6387,4,6196,2977,2977,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6172 -> 6196,0 */
	reached1[6172] = 1;
	trans[1][6172]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6173]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6189]	= settr(6405,0,6196,2978,2978,".(goto)", 1, 2, 0);
	trans[1][6174]	= settr(6390,4,6196,2979,2979,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6175 -> 6196,0 */
	reached1[6175] = 1;
	trans[1][6175]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6176]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6177]	= settr(6393,4,6196,2980,2980,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6178 -> 6196,0 */
	reached1[6178] = 1;
	trans[1][6178]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6179]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6180]	= settr(6396,4,6196,2981,2981,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6181 -> 6196,0 */
	reached1[6181] = 1;
	trans[1][6181]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6182]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6183]	= settr(6399,4,6196,2982,2982,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6184 -> 6196,0 */
	reached1[6184] = 1;
	trans[1][6184]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6185]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6186]	= settr(6402,2,6187,2,0,"else", 1, 2, 0);
	trans[1][6187]	= settr(6403,4,6196,2983,2983,"(1)", 1, 2, 0); /* m: 6189 -> 6196,0 */
	reached1[6189] = 1;
	T = trans[1][6196] = settr(6412,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6412,0,6191,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6412,0,6194,0,0,"IF", 0, 2, 0);
	trans[1][6191]	= settr(6407,0,6193,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6193] = settr(6409,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6409,0,6192,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6192]	= settr(6408,0,6260,2984,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6197]	= settr(6413,0,6260,1,0,".(goto)", 0, 2, 0); /* m: 6260 -> 0,6264 */
	reached1[6260] = 1;
	trans[1][6194]	= settr(6410,0,6195,2,0,"else", 0, 2, 0);
	trans[1][6195]	= settr(6411,0,6264,2985,2985,"(1)", 0, 2, 0); /* m: 6260 -> 6264,0 */
	reached1[6260] = 1;
	trans[1][6199]	= settr(6415,0,6227,2986,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6227] = settr(6443,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6443,0,6219,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6219] = settr(6435,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6435,2,6217,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6217] = settr(6433,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6433,2,6200,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6433,2,6203,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6433,2,6206,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6433,2,6209,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6433,2,6212,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6433,2,6215,0,0,"IF", 1, 2, 0);
	trans[1][6200]	= settr(6416,4,6225,2987,2987,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6201 -> 6225,0 */
	reached1[6201] = 1;
	trans[1][6201]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6202]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6218]	= settr(6434,0,6225,2988,2988,".(goto)", 1, 2, 0);
	trans[1][6203]	= settr(6419,4,6225,2989,2989,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6204 -> 6225,0 */
	reached1[6204] = 1;
	trans[1][6204]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6205]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6206]	= settr(6422,4,6225,2990,2990,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6207 -> 6225,0 */
	reached1[6207] = 1;
	trans[1][6207]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6208]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6209]	= settr(6425,4,6225,2991,2991,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6210 -> 6225,0 */
	reached1[6210] = 1;
	trans[1][6210]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6211]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6212]	= settr(6428,4,6225,2992,2992,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6213 -> 6225,0 */
	reached1[6213] = 1;
	trans[1][6213]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6214]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6215]	= settr(6431,2,6216,2,0,"else", 1, 2, 0);
	trans[1][6216]	= settr(6432,4,6225,2993,2993,"(1)", 1, 2, 0); /* m: 6218 -> 6225,0 */
	reached1[6218] = 1;
	T = trans[1][6225] = settr(6441,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6441,0,6220,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6441,0,6223,0,0,"IF", 0, 2, 0);
	trans[1][6220]	= settr(6436,0,6222,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6222] = settr(6438,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6438,0,6221,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6221]	= settr(6437,0,6260,2994,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6226]	= settr(6442,0,6260,1,0,".(goto)", 0, 2, 0); /* m: 6260 -> 0,6264 */
	reached1[6260] = 1;
	trans[1][6223]	= settr(6439,0,6224,2,0,"else", 0, 2, 0);
	trans[1][6224]	= settr(6440,0,6264,2995,2995,"(1)", 0, 2, 0); /* m: 6260 -> 6264,0 */
	reached1[6260] = 1;
	trans[1][6228]	= settr(6444,0,6256,2996,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][6256] = settr(6472,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6472,0,6248,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6248] = settr(6464,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6464,2,6246,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6246] = settr(6462,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6462,2,6229,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6462,2,6232,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6462,2,6235,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6462,2,6238,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6462,2,6241,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6462,2,6244,0,0,"IF", 1, 2, 0);
	trans[1][6229]	= settr(6445,4,6254,2997,2997,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6230 -> 6254,0 */
	reached1[6230] = 1;
	trans[1][6230]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6231]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6247]	= settr(6463,0,6254,2998,2998,".(goto)", 1, 2, 0);
	trans[1][6232]	= settr(6448,4,6254,2999,2999,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6233 -> 6254,0 */
	reached1[6233] = 1;
	trans[1][6233]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6234]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6235]	= settr(6451,4,6254,3000,3000,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6236 -> 6254,0 */
	reached1[6236] = 1;
	trans[1][6236]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6237]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6238]	= settr(6454,4,6254,3001,3001,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6239 -> 6254,0 */
	reached1[6239] = 1;
	trans[1][6239]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6240]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6241]	= settr(6457,4,6254,3002,3002,"((STOP==ABORT))", 1, 2, 0); /* m: 6242 -> 6254,0 */
	reached1[6242] = 1;
	trans[1][6242]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6243]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6244]	= settr(6460,2,6245,2,0,"else", 1, 2, 0);
	trans[1][6245]	= settr(6461,4,6254,3003,3003,"(1)", 1, 2, 0); /* m: 6247 -> 6254,0 */
	reached1[6247] = 1;
	T = trans[1][6254] = settr(6470,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6470,0,6249,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6470,0,6252,0,0,"IF", 0, 2, 0);
	trans[1][6249]	= settr(6465,0,6251,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6251] = settr(6467,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6467,0,6250,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6250]	= settr(6466,0,6260,3004,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6255]	= settr(6471,0,6260,1,0,".(goto)", 0, 2, 0); /* m: 6260 -> 0,6264 */
	reached1[6260] = 1;
	trans[1][6252]	= settr(6468,0,6253,2,0,"else", 0, 2, 0);
	trans[1][6253]	= settr(6469,0,6264,3005,3005,"(1)", 0, 2, 0); /* m: 6260 -> 6264,0 */
	reached1[6260] = 1;
	trans[1][6260]	= settr(6476,0,6264,3006,3006,"j = (j+1)", 0, 2, 0);
	trans[1][6261]	= settr(6477,0,6262,2,0,"else", 0, 2, 0);
	trans[1][6262]	= settr(6478,0,8280,3007,3007,"j = 1", 0, 2, 0);
	trans[1][6263]	= settr(6479,0,8280,1,0,"goto :b59", 0, 2, 0);
	trans[1][6266]	= settr(6482,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6400]	= settr(6616,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6268]	= settr(6484,0,6398,2,0,"else", 0, 2, 0);
	T = trans[ 1][6398] = settr(6614,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6614,0,6269,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6269]	= settr(6485,0,6395,3008,3008,"j = (3-1)", 0, 2, 0);
	trans[1][6396]	= settr(6612,0,6395,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6395] = settr(6611,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6611,0,6270,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6611,0,6392,0,0,"DO", 0, 2, 0);
	trans[1][6270]	= settr(6486,0,6390,3009,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][6390] = settr(6606,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6606,0,6388,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6388] = settr(6604,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6604,0,6271,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6604,0,6301,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6604,0,6330,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6604,0,6359,0,0,"IF", 0, 2, 0);
	trans[1][6271]	= settr(6487,0,6300,3010,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][6300] = settr(6516,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6516,0,6291,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6291] = settr(6507,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6507,2,6289,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6289] = settr(6505,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6505,2,6272,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6505,2,6275,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6505,2,6278,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6505,2,6281,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6505,2,6284,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6505,2,6287,0,0,"IF", 1, 2, 0);
	trans[1][6272]	= settr(6488,4,6292,3011,3011,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6273 -> 6292,0 */
	reached1[6273] = 1;
	trans[1][6273]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6274]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6290]	= settr(6506,0,6292,3012,3012,".(goto)", 1, 2, 0);
	trans[1][6275]	= settr(6491,4,6292,3013,3013,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6276 -> 6292,0 */
	reached1[6276] = 1;
	trans[1][6276]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6277]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6278]	= settr(6494,4,6292,3014,3014,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6279 -> 6292,0 */
	reached1[6279] = 1;
	trans[1][6279]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6280]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6281]	= settr(6497,4,6292,3015,3015,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6282 -> 6292,0 */
	reached1[6282] = 1;
	trans[1][6282]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6283]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6284]	= settr(6500,4,6292,3016,3016,"((START==ABORT))", 1, 2, 0); /* m: 6285 -> 6292,0 */
	reached1[6285] = 1;
	trans[1][6285]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6286]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6287]	= settr(6503,2,6288,2,0,"else", 1, 2, 0);
	trans[1][6288]	= settr(6504,4,6292,3017,3017,"(1)", 1, 2, 0); /* m: 6290 -> 6292,0 */
	reached1[6290] = 1;
	trans[1][6292]	= settr(6508,0,6298,3018,3018,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6298] = settr(6514,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6514,0,6293,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6514,0,6296,0,0,"IF", 0, 2, 0);
	trans[1][6293]	= settr(6509,0,6295,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6295] = settr(6511,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6511,0,6294,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6294]	= settr(6510,0,6391,3019,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6299]	= settr(6515,0,6391,1,0,".(goto)", 0, 2, 0); /* m: 6391 -> 0,6395 */
	reached1[6391] = 1;
	trans[1][6296]	= settr(6512,0,6297,2,0,"else", 0, 2, 0);
	trans[1][6297]	= settr(6513,0,6395,3020,3020,"(1)", 0, 2, 0); /* m: 6391 -> 6395,0 */
	reached1[6391] = 1;
	trans[1][6389]	= settr(6605,0,6391,1,0,".(goto)", 0, 2, 0); /* m: 6391 -> 0,6395 */
	reached1[6391] = 1;
	trans[1][6301]	= settr(6517,0,6329,3021,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][6329] = settr(6545,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6545,0,6321,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6321] = settr(6537,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6537,2,6319,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6319] = settr(6535,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6535,2,6302,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6535,2,6305,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6535,2,6308,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6535,2,6311,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6535,2,6314,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6535,2,6317,0,0,"IF", 1, 2, 0);
	trans[1][6302]	= settr(6518,4,6327,3022,3022,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6303 -> 6327,0 */
	reached1[6303] = 1;
	trans[1][6303]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6304]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6320]	= settr(6536,0,6327,3023,3023,".(goto)", 1, 2, 0);
	trans[1][6305]	= settr(6521,4,6327,3024,3024,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6306 -> 6327,0 */
	reached1[6306] = 1;
	trans[1][6306]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6307]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6308]	= settr(6524,4,6327,3025,3025,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6309 -> 6327,0 */
	reached1[6309] = 1;
	trans[1][6309]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6310]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6311]	= settr(6527,4,6327,3026,3026,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6312 -> 6327,0 */
	reached1[6312] = 1;
	trans[1][6312]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6313]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6314]	= settr(6530,4,6327,3027,3027,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6315 -> 6327,0 */
	reached1[6315] = 1;
	trans[1][6315]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6316]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6317]	= settr(6533,2,6318,2,0,"else", 1, 2, 0);
	trans[1][6318]	= settr(6534,4,6327,3028,3028,"(1)", 1, 2, 0); /* m: 6320 -> 6327,0 */
	reached1[6320] = 1;
	T = trans[1][6327] = settr(6543,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6543,0,6322,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6543,0,6325,0,0,"IF", 0, 2, 0);
	trans[1][6322]	= settr(6538,0,6324,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6324] = settr(6540,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6540,0,6323,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6323]	= settr(6539,0,6391,3029,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6328]	= settr(6544,0,6391,1,0,".(goto)", 0, 2, 0); /* m: 6391 -> 0,6395 */
	reached1[6391] = 1;
	trans[1][6325]	= settr(6541,0,6326,2,0,"else", 0, 2, 0);
	trans[1][6326]	= settr(6542,0,6395,3030,3030,"(1)", 0, 2, 0); /* m: 6391 -> 6395,0 */
	reached1[6391] = 1;
	trans[1][6330]	= settr(6546,0,6358,3031,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6358] = settr(6574,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6574,0,6350,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6350] = settr(6566,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6566,2,6348,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6348] = settr(6564,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6564,2,6331,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6564,2,6334,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6564,2,6337,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6564,2,6340,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6564,2,6343,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6564,2,6346,0,0,"IF", 1, 2, 0);
	trans[1][6331]	= settr(6547,4,6356,3032,3032,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6332 -> 6356,0 */
	reached1[6332] = 1;
	trans[1][6332]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6333]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6349]	= settr(6565,0,6356,3033,3033,".(goto)", 1, 2, 0);
	trans[1][6334]	= settr(6550,4,6356,3034,3034,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6335 -> 6356,0 */
	reached1[6335] = 1;
	trans[1][6335]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6336]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6337]	= settr(6553,4,6356,3035,3035,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6338 -> 6356,0 */
	reached1[6338] = 1;
	trans[1][6338]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6339]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6340]	= settr(6556,4,6356,3036,3036,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6341 -> 6356,0 */
	reached1[6341] = 1;
	trans[1][6341]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6342]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6343]	= settr(6559,4,6356,3037,3037,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6344 -> 6356,0 */
	reached1[6344] = 1;
	trans[1][6344]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6345]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6346]	= settr(6562,2,6347,2,0,"else", 1, 2, 0);
	trans[1][6347]	= settr(6563,4,6356,3038,3038,"(1)", 1, 2, 0); /* m: 6349 -> 6356,0 */
	reached1[6349] = 1;
	T = trans[1][6356] = settr(6572,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6572,0,6351,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6572,0,6354,0,0,"IF", 0, 2, 0);
	trans[1][6351]	= settr(6567,0,6353,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6353] = settr(6569,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6569,0,6352,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6352]	= settr(6568,0,6391,3039,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6357]	= settr(6573,0,6391,1,0,".(goto)", 0, 2, 0); /* m: 6391 -> 0,6395 */
	reached1[6391] = 1;
	trans[1][6354]	= settr(6570,0,6355,2,0,"else", 0, 2, 0);
	trans[1][6355]	= settr(6571,0,6395,3040,3040,"(1)", 0, 2, 0); /* m: 6391 -> 6395,0 */
	reached1[6391] = 1;
	trans[1][6359]	= settr(6575,0,6387,3041,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][6387] = settr(6603,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6603,0,6379,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6379] = settr(6595,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6595,2,6377,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6377] = settr(6593,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6593,2,6360,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6593,2,6363,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6593,2,6366,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6593,2,6369,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6593,2,6372,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6593,2,6375,0,0,"IF", 1, 2, 0);
	trans[1][6360]	= settr(6576,4,6385,3042,3042,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6361 -> 6385,0 */
	reached1[6361] = 1;
	trans[1][6361]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6362]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6378]	= settr(6594,0,6385,3043,3043,".(goto)", 1, 2, 0);
	trans[1][6363]	= settr(6579,4,6385,3044,3044,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6364 -> 6385,0 */
	reached1[6364] = 1;
	trans[1][6364]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6365]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6366]	= settr(6582,4,6385,3045,3045,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6367 -> 6385,0 */
	reached1[6367] = 1;
	trans[1][6367]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6368]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6369]	= settr(6585,4,6385,3046,3046,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6370 -> 6385,0 */
	reached1[6370] = 1;
	trans[1][6370]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6371]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6372]	= settr(6588,4,6385,3047,3047,"((STOP==ABORT))", 1, 2, 0); /* m: 6373 -> 6385,0 */
	reached1[6373] = 1;
	trans[1][6373]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6374]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6375]	= settr(6591,2,6376,2,0,"else", 1, 2, 0);
	trans[1][6376]	= settr(6592,4,6385,3048,3048,"(1)", 1, 2, 0); /* m: 6378 -> 6385,0 */
	reached1[6378] = 1;
	T = trans[1][6385] = settr(6601,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6601,0,6380,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6601,0,6383,0,0,"IF", 0, 2, 0);
	trans[1][6380]	= settr(6596,0,6382,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6382] = settr(6598,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6598,0,6381,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6381]	= settr(6597,0,6391,3049,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6386]	= settr(6602,0,6391,1,0,".(goto)", 0, 2, 0); /* m: 6391 -> 0,6395 */
	reached1[6391] = 1;
	trans[1][6383]	= settr(6599,0,6384,2,0,"else", 0, 2, 0);
	trans[1][6384]	= settr(6600,0,6395,3050,3050,"(1)", 0, 2, 0); /* m: 6391 -> 6395,0 */
	reached1[6391] = 1;
	trans[1][6391]	= settr(6607,0,6395,3051,3051,"j = (j-1)", 0, 2, 0);
	trans[1][6392]	= settr(6608,0,6393,2,0,"else", 0, 2, 0);
	trans[1][6393]	= settr(6609,0,8280,3052,3052,"j = 1", 0, 2, 0);
	trans[1][6394]	= settr(6610,0,8280,1,0,"goto :b60", 0, 2, 0);
	trans[1][6397]	= settr(6613,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6556]	= settr(6772,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6402]	= settr(6618,0,6554,2,0,"else", 0, 2, 0);
	T = trans[ 1][6554] = settr(6770,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6770,0,6531,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6531] = settr(6747,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6747,0,6528,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6529]	= settr(6745,0,6528,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6528] = settr(6744,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6744,0,6403,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6744,0,6525,0,0,"DO", 0, 2, 0);
	trans[1][6403]	= settr(6619,0,6523,3053,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][6523] = settr(6739,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6739,0,6521,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6521] = settr(6737,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6737,0,6404,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6737,0,6434,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6737,0,6463,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6737,0,6492,0,0,"IF", 0, 2, 0);
	trans[1][6404]	= settr(6620,0,6433,3054,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][6433] = settr(6649,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6649,0,6424,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6424] = settr(6640,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6640,2,6422,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6422] = settr(6638,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6638,2,6405,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6638,2,6408,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6638,2,6411,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6638,2,6414,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6638,2,6417,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6638,2,6420,0,0,"IF", 1, 2, 0);
	trans[1][6405]	= settr(6621,4,6425,3055,3055,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6406 -> 6425,0 */
	reached1[6406] = 1;
	trans[1][6406]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6407]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6423]	= settr(6639,0,6425,3056,3056,".(goto)", 1, 2, 0);
	trans[1][6408]	= settr(6624,4,6425,3057,3057,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6409 -> 6425,0 */
	reached1[6409] = 1;
	trans[1][6409]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6410]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6411]	= settr(6627,4,6425,3058,3058,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6412 -> 6425,0 */
	reached1[6412] = 1;
	trans[1][6412]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6413]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6414]	= settr(6630,4,6425,3059,3059,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6415 -> 6425,0 */
	reached1[6415] = 1;
	trans[1][6415]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6416]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6417]	= settr(6633,4,6425,3060,3060,"((START==ABORT))", 1, 2, 0); /* m: 6418 -> 6425,0 */
	reached1[6418] = 1;
	trans[1][6418]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6419]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6420]	= settr(6636,2,6421,2,0,"else", 1, 2, 0);
	trans[1][6421]	= settr(6637,4,6425,3061,3061,"(1)", 1, 2, 0); /* m: 6423 -> 6425,0 */
	reached1[6423] = 1;
	trans[1][6425]	= settr(6641,0,6431,3062,3062,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6431] = settr(6647,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6647,0,6426,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6647,0,6429,0,0,"IF", 0, 2, 0);
	trans[1][6426]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6428] = settr(6644,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6644,0,6427,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6427]	= settr(6643,0,6524,3063,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6432]	= settr(6648,0,6524,1,0,".(goto)", 0, 2, 0); /* m: 6524 -> 0,6528 */
	reached1[6524] = 1;
	trans[1][6429]	= settr(6645,0,6430,2,0,"else", 0, 2, 0);
	trans[1][6430]	= settr(6646,0,6528,3064,3064,"(1)", 0, 2, 0); /* m: 6524 -> 6528,0 */
	reached1[6524] = 1;
	trans[1][6522]	= settr(6738,0,6524,1,0,".(goto)", 0, 2, 0); /* m: 6524 -> 0,6528 */
	reached1[6524] = 1;
	trans[1][6434]	= settr(6650,0,6462,3065,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][6462] = settr(6678,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6678,0,6454,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6454] = settr(6670,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6670,2,6452,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6452] = settr(6668,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6668,2,6435,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6668,2,6438,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6668,2,6441,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6668,2,6444,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6668,2,6447,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6668,2,6450,0,0,"IF", 1, 2, 0);
	trans[1][6435]	= settr(6651,4,6460,3066,3066,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6436 -> 6460,0 */
	reached1[6436] = 1;
	trans[1][6436]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6437]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6453]	= settr(6669,0,6460,3067,3067,".(goto)", 1, 2, 0);
	trans[1][6438]	= settr(6654,4,6460,3068,3068,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6439 -> 6460,0 */
	reached1[6439] = 1;
	trans[1][6439]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6440]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6441]	= settr(6657,4,6460,3069,3069,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6442 -> 6460,0 */
	reached1[6442] = 1;
	trans[1][6442]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6443]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6444]	= settr(6660,4,6460,3070,3070,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6445 -> 6460,0 */
	reached1[6445] = 1;
	trans[1][6445]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6446]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6447]	= settr(6663,4,6460,3071,3071,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6448 -> 6460,0 */
	reached1[6448] = 1;
	trans[1][6448]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6449]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6450]	= settr(6666,2,6451,2,0,"else", 1, 2, 0);
	trans[1][6451]	= settr(6667,4,6460,3072,3072,"(1)", 1, 2, 0); /* m: 6453 -> 6460,0 */
	reached1[6453] = 1;
	T = trans[1][6460] = settr(6676,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6676,0,6455,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6676,0,6458,0,0,"IF", 0, 2, 0);
	trans[1][6455]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6457] = settr(6673,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6673,0,6456,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6456]	= settr(6672,0,6524,3073,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6461]	= settr(6677,0,6524,1,0,".(goto)", 0, 2, 0); /* m: 6524 -> 0,6528 */
	reached1[6524] = 1;
	trans[1][6458]	= settr(6674,0,6459,2,0,"else", 0, 2, 0);
	trans[1][6459]	= settr(6675,0,6528,3074,3074,"(1)", 0, 2, 0); /* m: 6524 -> 6528,0 */
	reached1[6524] = 1;
	trans[1][6463]	= settr(6679,0,6491,3075,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6491] = settr(6707,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6707,0,6483,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6483] = settr(6699,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6699,2,6481,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6481] = settr(6697,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6697,2,6464,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6697,2,6467,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6697,2,6470,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6697,2,6473,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6697,2,6476,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6697,2,6479,0,0,"IF", 1, 2, 0);
	trans[1][6464]	= settr(6680,4,6489,3076,3076,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6465 -> 6489,0 */
	reached1[6465] = 1;
	trans[1][6465]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6466]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6482]	= settr(6698,0,6489,3077,3077,".(goto)", 1, 2, 0);
	trans[1][6467]	= settr(6683,4,6489,3078,3078,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6468 -> 6489,0 */
	reached1[6468] = 1;
	trans[1][6468]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6469]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6470]	= settr(6686,4,6489,3079,3079,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6471 -> 6489,0 */
	reached1[6471] = 1;
	trans[1][6471]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6472]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6473]	= settr(6689,4,6489,3080,3080,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6474 -> 6489,0 */
	reached1[6474] = 1;
	trans[1][6474]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6475]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6476]	= settr(6692,4,6489,3081,3081,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6477 -> 6489,0 */
	reached1[6477] = 1;
	trans[1][6477]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6478]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6479]	= settr(6695,2,6480,2,0,"else", 1, 2, 0);
	trans[1][6480]	= settr(6696,4,6489,3082,3082,"(1)", 1, 2, 0); /* m: 6482 -> 6489,0 */
	reached1[6482] = 1;
	T = trans[1][6489] = settr(6705,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6705,0,6484,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6705,0,6487,0,0,"IF", 0, 2, 0);
	trans[1][6484]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6486] = settr(6702,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6702,0,6485,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6485]	= settr(6701,0,6524,3083,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6490]	= settr(6706,0,6524,1,0,".(goto)", 0, 2, 0); /* m: 6524 -> 0,6528 */
	reached1[6524] = 1;
	trans[1][6487]	= settr(6703,0,6488,2,0,"else", 0, 2, 0);
	trans[1][6488]	= settr(6704,0,6528,3084,3084,"(1)", 0, 2, 0); /* m: 6524 -> 6528,0 */
	reached1[6524] = 1;
	trans[1][6492]	= settr(6708,0,6520,3085,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][6520] = settr(6736,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6736,0,6512,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6512] = settr(6728,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6728,2,6510,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6510] = settr(6726,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6726,2,6493,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6726,2,6496,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6726,2,6499,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6726,2,6502,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6726,2,6505,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6726,2,6508,0,0,"IF", 1, 2, 0);
	trans[1][6493]	= settr(6709,4,6518,3086,3086,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6494 -> 6518,0 */
	reached1[6494] = 1;
	trans[1][6494]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6495]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6511]	= settr(6727,0,6518,3087,3087,".(goto)", 1, 2, 0);
	trans[1][6496]	= settr(6712,4,6518,3088,3088,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6497 -> 6518,0 */
	reached1[6497] = 1;
	trans[1][6497]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6498]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6499]	= settr(6715,4,6518,3089,3089,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6500 -> 6518,0 */
	reached1[6500] = 1;
	trans[1][6500]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6501]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6502]	= settr(6718,4,6518,3090,3090,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6503 -> 6518,0 */
	reached1[6503] = 1;
	trans[1][6503]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6504]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6505]	= settr(6721,4,6518,3091,3091,"((STOP==ABORT))", 1, 2, 0); /* m: 6506 -> 6518,0 */
	reached1[6506] = 1;
	trans[1][6506]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6507]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6508]	= settr(6724,2,6509,2,0,"else", 1, 2, 0);
	trans[1][6509]	= settr(6725,4,6518,3092,3092,"(1)", 1, 2, 0); /* m: 6511 -> 6518,0 */
	reached1[6511] = 1;
	T = trans[1][6518] = settr(6734,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(6734,0,6513,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(6734,0,6516,0,0,"IF", 0, 2, 0);
	trans[1][6513]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6515] = settr(6731,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6731,0,6514,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6514]	= settr(6730,0,6524,3093,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6519]	= settr(6735,0,6524,1,0,".(goto)", 0, 2, 0); /* m: 6524 -> 0,6528 */
	reached1[6524] = 1;
	trans[1][6516]	= settr(6732,0,6517,2,0,"else", 0, 2, 0);
	trans[1][6517]	= settr(6733,0,6528,3094,3094,"(1)", 0, 2, 0); /* m: 6524 -> 6528,0 */
	reached1[6524] = 1;
	trans[1][6524]	= settr(6740,0,6528,3095,3095,"j = (j+1)", 0, 2, 0);
	trans[1][6525]	= settr(6741,0,6526,2,0,"else", 0, 2, 0);
	trans[1][6526]	= settr(6742,0,6551,3096,3096,"j = 1", 0, 2, 0);
	trans[1][6527]	= settr(6743,0,6551,1,0,"goto :b61", 0, 2, 0);
	trans[1][6530]	= settr(6746,0,6551,1,0,"break", 0, 2, 0);
	trans[1][6552]	= settr(6768,0,6551,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6551] = settr(6767,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6767,0,6532,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6767,0,6548,0,0,"DO", 0, 2, 0);
	trans[1][6532]	= settr(6748,0,6545,3097,0,"((j<3))", 0, 2, 0);
	T = trans[1][6545] = settr(6761,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6761,0,6533,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6761,0,6536,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6761,0,6539,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6761,0,6542,0,0,"IF", 0, 2, 0);
	trans[1][6533]	= settr(6749,0,6535,3098,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][6535] = settr(6751,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6751,0,6534,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6534]	= settr(6750,0,6547,3099,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6546]	= settr(6762,0,6547,1,0,".(goto)", 0, 2, 0); /* m: 6547 -> 0,6551 */
	reached1[6547] = 1;
	trans[1][6536]	= settr(6752,0,6538,3100,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6538] = settr(6754,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6754,0,6537,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6537]	= settr(6753,0,6547,3101,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6539]	= settr(6755,0,6541,3102,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][6541] = settr(6757,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6757,0,6540,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6540]	= settr(6756,0,6547,3103,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6542]	= settr(6758,0,6544,3104,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][6544] = settr(6760,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6760,0,6543,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6543]	= settr(6759,0,6547,3105,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6547]	= settr(6763,0,6551,3106,3106,"j = (j+1)", 0, 2, 0);
	trans[1][6548]	= settr(6764,0,6549,2,0,"else", 0, 2, 0);
	trans[1][6549]	= settr(6765,0,8280,3107,3107,"j = 1", 0, 2, 0);
	trans[1][6550]	= settr(6766,0,8280,1,0,"goto :b62", 0, 2, 0);
	trans[1][6553]	= settr(6769,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6560]	= settr(6776,0,6986,3108,0,"(((7==ABORTING)||(7==STOPPING)))", 0, 2, 0);
	T = trans[ 1][6986] = settr(7202,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7202,0,6984,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6984] = settr(7200,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7200,0,6561,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7200,0,6563,0,0,"IF", 0, 2, 0);
	trans[1][6561]	= settr(6777,0,6562,3109,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][6562]	= settr(6778,0,8280,3110,3110,"supervisor_started = 1", 1, 2, 0);
	trans[1][6985]	= settr(7201,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6563]	= settr(6779,0,6982,2,0,"else", 0, 2, 0);
	T = trans[1][6982] = settr(7198,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7198,0,6564,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7198,0,6829,0,0,"IF", 0, 2, 0);
	trans[1][6564]	= settr(6780,0,6828,3111,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][6828] = settr(7044,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7044,0,6826,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6826] = settr(7042,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7042,0,6565,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7042,0,6695,0,0,"IF", 0, 2, 0);
	trans[1][6565]	= settr(6781,0,6694,3112,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][6694] = settr(6910,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6910,0,6691,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6692]	= settr(6908,0,6691,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6691] = settr(6907,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(6907,0,6566,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(6907,0,6688,0,0,"DO", 0, 2, 0);
	trans[1][6566]	= settr(6782,0,6686,3113,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][6686] = settr(6902,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6902,0,6684,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6684] = settr(6900,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6900,0,6567,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6900,0,6597,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6900,0,6626,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6900,0,6655,0,0,"IF", 0, 2, 0);
	trans[1][6567]	= settr(6783,0,6596,3114,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][6596] = settr(6812,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6812,0,6587,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6587] = settr(6803,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6803,2,6585,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6585] = settr(6801,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6801,2,6568,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6801,2,6571,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6801,2,6574,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6801,2,6577,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6801,2,6580,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6801,2,6583,0,0,"IF", 1, 2, 0);
	trans[1][6568]	= settr(6784,4,6588,3115,3115,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6569 -> 6588,0 */
	reached1[6569] = 1;
	trans[1][6569]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6570]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6586]	= settr(6802,0,6588,3116,3116,".(goto)", 1, 2, 0);
	trans[1][6571]	= settr(6787,4,6588,3117,3117,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6572 -> 6588,0 */
	reached1[6572] = 1;
	trans[1][6572]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6573]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6574]	= settr(6790,4,6588,3118,3118,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6575 -> 6588,0 */
	reached1[6575] = 1;
	trans[1][6575]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6576]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6577]	= settr(6793,4,6588,3119,3119,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6578 -> 6588,0 */
	reached1[6578] = 1;
	trans[1][6578]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6579]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6580]	= settr(6796,4,6588,3120,3120,"((START==ABORT))", 1, 2, 0); /* m: 6581 -> 6588,0 */
	reached1[6581] = 1;
	trans[1][6581]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6582]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6583]	= settr(6799,2,6584,2,0,"else", 1, 2, 0);
	trans[1][6584]	= settr(6800,4,6588,3121,3121,"(1)", 1, 2, 0); /* m: 6586 -> 6588,0 */
	reached1[6586] = 1;
	trans[1][6588]	= settr(6804,0,6594,3122,3122,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6594] = settr(6810,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6810,0,6589,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6810,0,6592,0,0,"IF", 0, 2, 0);
	trans[1][6589]	= settr(6805,0,6591,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6591] = settr(6807,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6807,0,6590,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6590]	= settr(6806,0,6687,3123,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6595]	= settr(6811,0,6687,1,0,".(goto)", 0, 2, 0); /* m: 6687 -> 0,6691 */
	reached1[6687] = 1;
	trans[1][6592]	= settr(6808,0,6593,2,0,"else", 0, 2, 0);
	trans[1][6593]	= settr(6809,0,6691,3124,3124,"(1)", 0, 2, 0); /* m: 6687 -> 6691,0 */
	reached1[6687] = 1;
	trans[1][6685]	= settr(6901,0,6687,1,0,".(goto)", 0, 2, 0); /* m: 6687 -> 0,6691 */
	reached1[6687] = 1;
	trans[1][6597]	= settr(6813,0,6625,3125,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][6625] = settr(6841,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6841,0,6617,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6617] = settr(6833,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6833,2,6615,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6615] = settr(6831,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6831,2,6598,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6831,2,6601,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6831,2,6604,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6831,2,6607,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6831,2,6610,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6831,2,6613,0,0,"IF", 1, 2, 0);
	trans[1][6598]	= settr(6814,4,6623,3126,3126,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6599 -> 6623,0 */
	reached1[6599] = 1;
	trans[1][6599]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6600]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6616]	= settr(6832,0,6623,3127,3127,".(goto)", 1, 2, 0);
	trans[1][6601]	= settr(6817,4,6623,3128,3128,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6602 -> 6623,0 */
	reached1[6602] = 1;
	trans[1][6602]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6603]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6604]	= settr(6820,4,6623,3129,3129,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6605 -> 6623,0 */
	reached1[6605] = 1;
	trans[1][6605]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6606]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6607]	= settr(6823,4,6623,3130,3130,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6608 -> 6623,0 */
	reached1[6608] = 1;
	trans[1][6608]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6609]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6610]	= settr(6826,4,6623,3131,3131,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6611 -> 6623,0 */
	reached1[6611] = 1;
	trans[1][6611]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6612]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6613]	= settr(6829,2,6614,2,0,"else", 1, 2, 0);
	trans[1][6614]	= settr(6830,4,6623,3132,3132,"(1)", 1, 2, 0); /* m: 6616 -> 6623,0 */
	reached1[6616] = 1;
	T = trans[1][6623] = settr(6839,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6839,0,6618,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6839,0,6621,0,0,"IF", 0, 2, 0);
	trans[1][6618]	= settr(6834,0,6620,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6620] = settr(6836,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6836,0,6619,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6619]	= settr(6835,0,6687,3133,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6624]	= settr(6840,0,6687,1,0,".(goto)", 0, 2, 0); /* m: 6687 -> 0,6691 */
	reached1[6687] = 1;
	trans[1][6621]	= settr(6837,0,6622,2,0,"else", 0, 2, 0);
	trans[1][6622]	= settr(6838,0,6691,3134,3134,"(1)", 0, 2, 0); /* m: 6687 -> 6691,0 */
	reached1[6687] = 1;
	trans[1][6626]	= settr(6842,0,6654,3135,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6654] = settr(6870,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6870,0,6646,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6646] = settr(6862,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6862,2,6644,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6644] = settr(6860,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6860,2,6627,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6860,2,6630,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6860,2,6633,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6860,2,6636,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6860,2,6639,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6860,2,6642,0,0,"IF", 1, 2, 0);
	trans[1][6627]	= settr(6843,4,6652,3136,3136,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6628 -> 6652,0 */
	reached1[6628] = 1;
	trans[1][6628]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6629]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6645]	= settr(6861,0,6652,3137,3137,".(goto)", 1, 2, 0);
	trans[1][6630]	= settr(6846,4,6652,3138,3138,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6631 -> 6652,0 */
	reached1[6631] = 1;
	trans[1][6631]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6632]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6633]	= settr(6849,4,6652,3139,3139,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6634 -> 6652,0 */
	reached1[6634] = 1;
	trans[1][6634]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6635]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6636]	= settr(6852,4,6652,3140,3140,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6637 -> 6652,0 */
	reached1[6637] = 1;
	trans[1][6637]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6638]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6639]	= settr(6855,4,6652,3141,3141,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6640 -> 6652,0 */
	reached1[6640] = 1;
	trans[1][6640]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6641]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6642]	= settr(6858,2,6643,2,0,"else", 1, 2, 0);
	trans[1][6643]	= settr(6859,4,6652,3142,3142,"(1)", 1, 2, 0); /* m: 6645 -> 6652,0 */
	reached1[6645] = 1;
	T = trans[1][6652] = settr(6868,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6868,0,6647,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6868,0,6650,0,0,"IF", 0, 2, 0);
	trans[1][6647]	= settr(6863,0,6649,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6649] = settr(6865,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6865,0,6648,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6648]	= settr(6864,0,6687,3143,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6653]	= settr(6869,0,6687,1,0,".(goto)", 0, 2, 0); /* m: 6687 -> 0,6691 */
	reached1[6687] = 1;
	trans[1][6650]	= settr(6866,0,6651,2,0,"else", 0, 2, 0);
	trans[1][6651]	= settr(6867,0,6691,3144,3144,"(1)", 0, 2, 0); /* m: 6687 -> 6691,0 */
	reached1[6687] = 1;
	trans[1][6655]	= settr(6871,0,6683,3145,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][6683] = settr(6899,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6899,0,6675,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6675] = settr(6891,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6891,2,6673,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6673] = settr(6889,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6889,2,6656,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6889,2,6659,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6889,2,6662,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6889,2,6665,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6889,2,6668,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6889,2,6671,0,0,"IF", 1, 2, 0);
	trans[1][6656]	= settr(6872,4,6681,3146,3146,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6657 -> 6681,0 */
	reached1[6657] = 1;
	trans[1][6657]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6658]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6674]	= settr(6890,0,6681,3147,3147,".(goto)", 1, 2, 0);
	trans[1][6659]	= settr(6875,4,6681,3148,3148,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6660 -> 6681,0 */
	reached1[6660] = 1;
	trans[1][6660]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6661]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6662]	= settr(6878,4,6681,3149,3149,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6663 -> 6681,0 */
	reached1[6663] = 1;
	trans[1][6663]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6664]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6665]	= settr(6881,4,6681,3150,3150,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6666 -> 6681,0 */
	reached1[6666] = 1;
	trans[1][6666]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6667]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6668]	= settr(6884,4,6681,3151,3151,"((STOP==ABORT))", 1, 2, 0); /* m: 6669 -> 6681,0 */
	reached1[6669] = 1;
	trans[1][6669]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6670]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6671]	= settr(6887,2,6672,2,0,"else", 1, 2, 0);
	trans[1][6672]	= settr(6888,4,6681,3152,3152,"(1)", 1, 2, 0); /* m: 6674 -> 6681,0 */
	reached1[6674] = 1;
	T = trans[1][6681] = settr(6897,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6897,0,6676,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6897,0,6679,0,0,"IF", 0, 2, 0);
	trans[1][6676]	= settr(6892,0,6678,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6678] = settr(6894,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6894,0,6677,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6677]	= settr(6893,0,6687,3153,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6682]	= settr(6898,0,6687,1,0,".(goto)", 0, 2, 0); /* m: 6687 -> 0,6691 */
	reached1[6687] = 1;
	trans[1][6679]	= settr(6895,0,6680,2,0,"else", 0, 2, 0);
	trans[1][6680]	= settr(6896,0,6691,3154,3154,"(1)", 0, 2, 0); /* m: 6687 -> 6691,0 */
	reached1[6687] = 1;
	trans[1][6687]	= settr(6903,0,6691,3155,3155,"j = (j+1)", 0, 2, 0);
	trans[1][6688]	= settr(6904,0,6689,2,0,"else", 0, 2, 0);
	trans[1][6689]	= settr(6905,0,8280,3156,3156,"j = 1", 0, 2, 0);
	trans[1][6690]	= settr(6906,0,8280,1,0,"goto :b63", 0, 2, 0);
	trans[1][6693]	= settr(6909,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6827]	= settr(7043,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6695]	= settr(6911,0,6825,2,0,"else", 0, 2, 0);
	T = trans[ 1][6825] = settr(7041,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7041,0,6696,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6696]	= settr(6912,0,6822,3157,3157,"j = (3-1)", 0, 2, 0);
	trans[1][6823]	= settr(7039,0,6822,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6822] = settr(7038,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7038,0,6697,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7038,0,6819,0,0,"DO", 0, 2, 0);
	trans[1][6697]	= settr(6913,0,6817,3158,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][6817] = settr(7033,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7033,0,6815,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6815] = settr(7031,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7031,0,6698,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7031,0,6728,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7031,0,6757,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7031,0,6786,0,0,"IF", 0, 2, 0);
	trans[1][6698]	= settr(6914,0,6727,3159,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][6727] = settr(6943,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6943,0,6718,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6718] = settr(6934,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6934,2,6716,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6716] = settr(6932,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6932,2,6699,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6932,2,6702,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6932,2,6705,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6932,2,6708,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6932,2,6711,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6932,2,6714,0,0,"IF", 1, 2, 0);
	trans[1][6699]	= settr(6915,4,6719,3160,3160,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6700 -> 6719,0 */
	reached1[6700] = 1;
	trans[1][6700]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6701]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6717]	= settr(6933,0,6719,3161,3161,".(goto)", 1, 2, 0);
	trans[1][6702]	= settr(6918,4,6719,3162,3162,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6703 -> 6719,0 */
	reached1[6703] = 1;
	trans[1][6703]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6704]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6705]	= settr(6921,4,6719,3163,3163,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6706 -> 6719,0 */
	reached1[6706] = 1;
	trans[1][6706]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6707]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6708]	= settr(6924,4,6719,3164,3164,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6709 -> 6719,0 */
	reached1[6709] = 1;
	trans[1][6709]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6710]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6711]	= settr(6927,4,6719,3165,3165,"((START==ABORT))", 1, 2, 0); /* m: 6712 -> 6719,0 */
	reached1[6712] = 1;
	trans[1][6712]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6713]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6714]	= settr(6930,2,6715,2,0,"else", 1, 2, 0);
	trans[1][6715]	= settr(6931,4,6719,3166,3166,"(1)", 1, 2, 0); /* m: 6717 -> 6719,0 */
	reached1[6717] = 1;
	trans[1][6719]	= settr(6935,0,6725,3167,3167,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6725] = settr(6941,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6941,0,6720,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6941,0,6723,0,0,"IF", 0, 2, 0);
	trans[1][6720]	= settr(6936,0,6722,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6722] = settr(6938,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6938,0,6721,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6721]	= settr(6937,0,6818,3168,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6726]	= settr(6942,0,6818,1,0,".(goto)", 0, 2, 0); /* m: 6818 -> 0,6822 */
	reached1[6818] = 1;
	trans[1][6723]	= settr(6939,0,6724,2,0,"else", 0, 2, 0);
	trans[1][6724]	= settr(6940,0,6822,3169,3169,"(1)", 0, 2, 0); /* m: 6818 -> 6822,0 */
	reached1[6818] = 1;
	trans[1][6816]	= settr(7032,0,6818,1,0,".(goto)", 0, 2, 0); /* m: 6818 -> 0,6822 */
	reached1[6818] = 1;
	trans[1][6728]	= settr(6944,0,6756,3170,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][6756] = settr(6972,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6972,0,6748,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6748] = settr(6964,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6964,2,6746,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6746] = settr(6962,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6962,2,6729,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6962,2,6732,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6962,2,6735,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6962,2,6738,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6962,2,6741,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6962,2,6744,0,0,"IF", 1, 2, 0);
	trans[1][6729]	= settr(6945,4,6754,3171,3171,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6730 -> 6754,0 */
	reached1[6730] = 1;
	trans[1][6730]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6731]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6747]	= settr(6963,0,6754,3172,3172,".(goto)", 1, 2, 0);
	trans[1][6732]	= settr(6948,4,6754,3173,3173,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6733 -> 6754,0 */
	reached1[6733] = 1;
	trans[1][6733]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6734]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6735]	= settr(6951,4,6754,3174,3174,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6736 -> 6754,0 */
	reached1[6736] = 1;
	trans[1][6736]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6737]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6738]	= settr(6954,4,6754,3175,3175,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6739 -> 6754,0 */
	reached1[6739] = 1;
	trans[1][6739]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6740]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6741]	= settr(6957,4,6754,3176,3176,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6742 -> 6754,0 */
	reached1[6742] = 1;
	trans[1][6742]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6743]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6744]	= settr(6960,2,6745,2,0,"else", 1, 2, 0);
	trans[1][6745]	= settr(6961,4,6754,3177,3177,"(1)", 1, 2, 0); /* m: 6747 -> 6754,0 */
	reached1[6747] = 1;
	T = trans[1][6754] = settr(6970,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6970,0,6749,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6970,0,6752,0,0,"IF", 0, 2, 0);
	trans[1][6749]	= settr(6965,0,6751,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6751] = settr(6967,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6967,0,6750,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6750]	= settr(6966,0,6818,3178,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6755]	= settr(6971,0,6818,1,0,".(goto)", 0, 2, 0); /* m: 6818 -> 0,6822 */
	reached1[6818] = 1;
	trans[1][6752]	= settr(6968,0,6753,2,0,"else", 0, 2, 0);
	trans[1][6753]	= settr(6969,0,6822,3179,3179,"(1)", 0, 2, 0); /* m: 6818 -> 6822,0 */
	reached1[6818] = 1;
	trans[1][6757]	= settr(6973,0,6785,3180,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6785] = settr(7001,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7001,0,6777,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6777] = settr(6993,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(6993,2,6775,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6775] = settr(6991,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6991,2,6758,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6991,2,6761,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6991,2,6764,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6991,2,6767,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(6991,2,6770,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(6991,2,6773,0,0,"IF", 1, 2, 0);
	trans[1][6758]	= settr(6974,4,6783,3181,3181,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6759 -> 6783,0 */
	reached1[6759] = 1;
	trans[1][6759]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6760]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6776]	= settr(6992,0,6783,3182,3182,".(goto)", 1, 2, 0);
	trans[1][6761]	= settr(6977,4,6783,3183,3183,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6762 -> 6783,0 */
	reached1[6762] = 1;
	trans[1][6762]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6763]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6764]	= settr(6980,4,6783,3184,3184,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6765 -> 6783,0 */
	reached1[6765] = 1;
	trans[1][6765]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6766]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6767]	= settr(6983,4,6783,3185,3185,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6768 -> 6783,0 */
	reached1[6768] = 1;
	trans[1][6768]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6769]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6770]	= settr(6986,4,6783,3186,3186,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6771 -> 6783,0 */
	reached1[6771] = 1;
	trans[1][6771]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6772]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6773]	= settr(6989,2,6774,2,0,"else", 1, 2, 0);
	trans[1][6774]	= settr(6990,4,6783,3187,3187,"(1)", 1, 2, 0); /* m: 6776 -> 6783,0 */
	reached1[6776] = 1;
	T = trans[1][6783] = settr(6999,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(6999,0,6778,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(6999,0,6781,0,0,"IF", 0, 2, 0);
	trans[1][6778]	= settr(6994,0,6780,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6780] = settr(6996,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(6996,0,6779,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6779]	= settr(6995,0,6818,3188,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6784]	= settr(7000,0,6818,1,0,".(goto)", 0, 2, 0); /* m: 6818 -> 0,6822 */
	reached1[6818] = 1;
	trans[1][6781]	= settr(6997,0,6782,2,0,"else", 0, 2, 0);
	trans[1][6782]	= settr(6998,0,6822,3189,3189,"(1)", 0, 2, 0); /* m: 6818 -> 6822,0 */
	reached1[6818] = 1;
	trans[1][6786]	= settr(7002,0,6814,3190,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][6814] = settr(7030,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7030,0,6806,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6806] = settr(7022,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7022,2,6804,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6804] = settr(7020,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7020,2,6787,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7020,2,6790,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7020,2,6793,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7020,2,6796,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7020,2,6799,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7020,2,6802,0,0,"IF", 1, 2, 0);
	trans[1][6787]	= settr(7003,4,6812,3191,3191,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6788 -> 6812,0 */
	reached1[6788] = 1;
	trans[1][6788]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6789]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6805]	= settr(7021,0,6812,3192,3192,".(goto)", 1, 2, 0);
	trans[1][6790]	= settr(7006,4,6812,3193,3193,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6791 -> 6812,0 */
	reached1[6791] = 1;
	trans[1][6791]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6792]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6793]	= settr(7009,4,6812,3194,3194,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6794 -> 6812,0 */
	reached1[6794] = 1;
	trans[1][6794]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6795]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6796]	= settr(7012,4,6812,3195,3195,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6797 -> 6812,0 */
	reached1[6797] = 1;
	trans[1][6797]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6798]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6799]	= settr(7015,4,6812,3196,3196,"((STOP==ABORT))", 1, 2, 0); /* m: 6800 -> 6812,0 */
	reached1[6800] = 1;
	trans[1][6800]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6801]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6802]	= settr(7018,2,6803,2,0,"else", 1, 2, 0);
	trans[1][6803]	= settr(7019,4,6812,3197,3197,"(1)", 1, 2, 0); /* m: 6805 -> 6812,0 */
	reached1[6805] = 1;
	T = trans[1][6812] = settr(7028,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7028,0,6807,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7028,0,6810,0,0,"IF", 0, 2, 0);
	trans[1][6807]	= settr(7023,0,6809,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][6809] = settr(7025,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7025,0,6808,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6808]	= settr(7024,0,6818,3198,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6813]	= settr(7029,0,6818,1,0,".(goto)", 0, 2, 0); /* m: 6818 -> 0,6822 */
	reached1[6818] = 1;
	trans[1][6810]	= settr(7026,0,6811,2,0,"else", 0, 2, 0);
	trans[1][6811]	= settr(7027,0,6822,3199,3199,"(1)", 0, 2, 0); /* m: 6818 -> 6822,0 */
	reached1[6818] = 1;
	trans[1][6818]	= settr(7034,0,6822,3200,3200,"j = (j-1)", 0, 2, 0);
	trans[1][6819]	= settr(7035,0,6820,2,0,"else", 0, 2, 0);
	trans[1][6820]	= settr(7036,0,8280,3201,3201,"j = 1", 0, 2, 0);
	trans[1][6821]	= settr(7037,0,8280,1,0,"goto :b64", 0, 2, 0);
	trans[1][6824]	= settr(7040,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6983]	= settr(7199,0,8280,1,0,".(goto)", 0, 2, 0);
	trans[1][6829]	= settr(7045,0,6981,2,0,"else", 0, 2, 0);
	T = trans[ 1][6981] = settr(7197,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7197,0,6958,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6958] = settr(7174,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7174,0,6955,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6956]	= settr(7172,0,6955,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6955] = settr(7171,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7171,0,6830,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7171,0,6952,0,0,"DO", 0, 2, 0);
	trans[1][6830]	= settr(7046,0,6950,3202,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][6950] = settr(7166,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7166,0,6948,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][6948] = settr(7164,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7164,0,6831,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7164,0,6861,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7164,0,6890,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7164,0,6919,0,0,"IF", 0, 2, 0);
	trans[1][6831]	= settr(7047,0,6860,3203,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][6860] = settr(7076,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7076,0,6851,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6851] = settr(7067,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7067,2,6849,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6849] = settr(7065,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7065,2,6832,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7065,2,6835,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7065,2,6838,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7065,2,6841,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7065,2,6844,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7065,2,6847,0,0,"IF", 1, 2, 0);
	trans[1][6832]	= settr(7048,4,6852,3204,3204,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6833 -> 6852,0 */
	reached1[6833] = 1;
	trans[1][6833]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6834]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6850]	= settr(7066,0,6852,3205,3205,".(goto)", 1, 2, 0);
	trans[1][6835]	= settr(7051,4,6852,3206,3206,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6836 -> 6852,0 */
	reached1[6836] = 1;
	trans[1][6836]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6837]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6838]	= settr(7054,4,6852,3207,3207,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6839 -> 6852,0 */
	reached1[6839] = 1;
	trans[1][6839]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6840]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6841]	= settr(7057,4,6852,3208,3208,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6842 -> 6852,0 */
	reached1[6842] = 1;
	trans[1][6842]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6843]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6844]	= settr(7060,4,6852,3209,3209,"((START==ABORT))", 1, 2, 0); /* m: 6845 -> 6852,0 */
	reached1[6845] = 1;
	trans[1][6845]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6846]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6847]	= settr(7063,2,6848,2,0,"else", 1, 2, 0);
	trans[1][6848]	= settr(7064,4,6852,3210,3210,"(1)", 1, 2, 0); /* m: 6850 -> 6852,0 */
	reached1[6850] = 1;
	trans[1][6852]	= settr(7068,0,6858,3211,3211,"(run Thread(j))", 0, 2, 0);
	T = trans[1][6858] = settr(7074,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7074,0,6853,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7074,0,6856,0,0,"IF", 0, 2, 0);
	trans[1][6853]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6855] = settr(7071,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7071,0,6854,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6854]	= settr(7070,0,6951,3212,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6859]	= settr(7075,0,6951,1,0,".(goto)", 0, 2, 0); /* m: 6951 -> 0,6955 */
	reached1[6951] = 1;
	trans[1][6856]	= settr(7072,0,6857,2,0,"else", 0, 2, 0);
	trans[1][6857]	= settr(7073,0,6955,3213,3213,"(1)", 0, 2, 0); /* m: 6951 -> 6955,0 */
	reached1[6951] = 1;
	trans[1][6949]	= settr(7165,0,6951,1,0,".(goto)", 0, 2, 0); /* m: 6951 -> 0,6955 */
	reached1[6951] = 1;
	trans[1][6861]	= settr(7077,0,6889,3214,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][6889] = settr(7105,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7105,0,6881,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6881] = settr(7097,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7097,2,6879,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6879] = settr(7095,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7095,2,6862,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7095,2,6865,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7095,2,6868,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7095,2,6871,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7095,2,6874,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7095,2,6877,0,0,"IF", 1, 2, 0);
	trans[1][6862]	= settr(7078,4,6887,3215,3215,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6863 -> 6887,0 */
	reached1[6863] = 1;
	trans[1][6863]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6864]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6880]	= settr(7096,0,6887,3216,3216,".(goto)", 1, 2, 0);
	trans[1][6865]	= settr(7081,4,6887,3217,3217,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6866 -> 6887,0 */
	reached1[6866] = 1;
	trans[1][6866]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6867]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6868]	= settr(7084,4,6887,3218,3218,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6869 -> 6887,0 */
	reached1[6869] = 1;
	trans[1][6869]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6870]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6871]	= settr(7087,4,6887,3219,3219,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6872 -> 6887,0 */
	reached1[6872] = 1;
	trans[1][6872]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6873]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6874]	= settr(7090,4,6887,3220,3220,"((PAUSE==ABORT))", 1, 2, 0); /* m: 6875 -> 6887,0 */
	reached1[6875] = 1;
	trans[1][6875]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6876]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6877]	= settr(7093,2,6878,2,0,"else", 1, 2, 0);
	trans[1][6878]	= settr(7094,4,6887,3221,3221,"(1)", 1, 2, 0); /* m: 6880 -> 6887,0 */
	reached1[6880] = 1;
	T = trans[1][6887] = settr(7103,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7103,0,6882,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7103,0,6885,0,0,"IF", 0, 2, 0);
	trans[1][6882]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6884] = settr(7100,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7100,0,6883,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6883]	= settr(7099,0,6951,3222,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6888]	= settr(7104,0,6951,1,0,".(goto)", 0, 2, 0); /* m: 6951 -> 0,6955 */
	reached1[6951] = 1;
	trans[1][6885]	= settr(7101,0,6886,2,0,"else", 0, 2, 0);
	trans[1][6886]	= settr(7102,0,6955,3223,3223,"(1)", 0, 2, 0); /* m: 6951 -> 6955,0 */
	reached1[6951] = 1;
	trans[1][6890]	= settr(7106,0,6918,3224,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6918] = settr(7134,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7134,0,6910,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6910] = settr(7126,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7126,2,6908,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6908] = settr(7124,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7124,2,6891,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7124,2,6894,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7124,2,6897,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7124,2,6900,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7124,2,6903,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7124,2,6906,0,0,"IF", 1, 2, 0);
	trans[1][6891]	= settr(7107,4,6916,3225,3225,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6892 -> 6916,0 */
	reached1[6892] = 1;
	trans[1][6892]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6893]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6909]	= settr(7125,0,6916,3226,3226,".(goto)", 1, 2, 0);
	trans[1][6894]	= settr(7110,4,6916,3227,3227,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6895 -> 6916,0 */
	reached1[6895] = 1;
	trans[1][6895]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6896]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6897]	= settr(7113,4,6916,3228,3228,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6898 -> 6916,0 */
	reached1[6898] = 1;
	trans[1][6898]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6899]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6900]	= settr(7116,4,6916,3229,3229,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6901 -> 6916,0 */
	reached1[6901] = 1;
	trans[1][6901]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6902]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6903]	= settr(7119,4,6916,3230,3230,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 6904 -> 6916,0 */
	reached1[6904] = 1;
	trans[1][6904]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6905]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6906]	= settr(7122,2,6907,2,0,"else", 1, 2, 0);
	trans[1][6907]	= settr(7123,4,6916,3231,3231,"(1)", 1, 2, 0); /* m: 6909 -> 6916,0 */
	reached1[6909] = 1;
	T = trans[1][6916] = settr(7132,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7132,0,6911,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7132,0,6914,0,0,"IF", 0, 2, 0);
	trans[1][6911]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6913] = settr(7129,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7129,0,6912,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6912]	= settr(7128,0,6951,3232,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6917]	= settr(7133,0,6951,1,0,".(goto)", 0, 2, 0); /* m: 6951 -> 0,6955 */
	reached1[6951] = 1;
	trans[1][6914]	= settr(7130,0,6915,2,0,"else", 0, 2, 0);
	trans[1][6915]	= settr(7131,0,6955,3233,3233,"(1)", 0, 2, 0); /* m: 6951 -> 6955,0 */
	reached1[6951] = 1;
	trans[1][6919]	= settr(7135,0,6947,3234,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][6947] = settr(7163,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7163,0,6939,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][6939] = settr(7155,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7155,2,6937,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][6937] = settr(7153,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7153,2,6920,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7153,2,6923,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7153,2,6926,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7153,2,6929,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7153,2,6932,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7153,2,6935,0,0,"IF", 1, 2, 0);
	trans[1][6920]	= settr(7136,4,6945,3235,3235,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6921 -> 6945,0 */
	reached1[6921] = 1;
	trans[1][6921]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][6922]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][6938]	= settr(7154,0,6945,3236,3236,".(goto)", 1, 2, 0);
	trans[1][6923]	= settr(7139,4,6945,3237,3237,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 6924 -> 6945,0 */
	reached1[6924] = 1;
	trans[1][6924]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][6925]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][6926]	= settr(7142,4,6945,3238,3238,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6927 -> 6945,0 */
	reached1[6927] = 1;
	trans[1][6927]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][6928]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][6929]	= settr(7145,4,6945,3239,3239,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 6930 -> 6945,0 */
	reached1[6930] = 1;
	trans[1][6930]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][6931]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][6932]	= settr(7148,4,6945,3240,3240,"((STOP==ABORT))", 1, 2, 0); /* m: 6933 -> 6945,0 */
	reached1[6933] = 1;
	trans[1][6933]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][6934]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][6935]	= settr(7151,2,6936,2,0,"else", 1, 2, 0);
	trans[1][6936]	= settr(7152,4,6945,3241,3241,"(1)", 1, 2, 0); /* m: 6938 -> 6945,0 */
	reached1[6938] = 1;
	T = trans[1][6945] = settr(7161,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7161,0,6940,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7161,0,6943,0,0,"IF", 0, 2, 0);
	trans[1][6940]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][6942] = settr(7158,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7158,0,6941,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6941]	= settr(7157,0,6951,3242,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6946]	= settr(7162,0,6951,1,0,".(goto)", 0, 2, 0); /* m: 6951 -> 0,6955 */
	reached1[6951] = 1;
	trans[1][6943]	= settr(7159,0,6944,2,0,"else", 0, 2, 0);
	trans[1][6944]	= settr(7160,0,6955,3243,3243,"(1)", 0, 2, 0); /* m: 6951 -> 6955,0 */
	reached1[6951] = 1;
	trans[1][6951]	= settr(7167,0,6955,3244,3244,"j = (j+1)", 0, 2, 0);
	trans[1][6952]	= settr(7168,0,6953,2,0,"else", 0, 2, 0);
	trans[1][6953]	= settr(7169,0,6978,3245,3245,"j = 1", 0, 2, 0);
	trans[1][6954]	= settr(7170,0,6978,1,0,"goto :b65", 0, 2, 0);
	trans[1][6957]	= settr(7173,0,6978,1,0,"break", 0, 2, 0);
	trans[1][6979]	= settr(7195,0,6978,1,0,".(goto)", 0, 2, 0);
	T = trans[1][6978] = settr(7194,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7194,0,6959,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7194,0,6975,0,0,"DO", 0, 2, 0);
	trans[1][6959]	= settr(7175,0,6972,3246,0,"((j<3))", 0, 2, 0);
	T = trans[1][6972] = settr(7188,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7188,0,6960,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7188,0,6963,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7188,0,6966,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7188,0,6969,0,0,"IF", 0, 2, 0);
	trans[1][6960]	= settr(7176,0,6962,3247,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][6962] = settr(7178,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7178,0,6961,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6961]	= settr(7177,0,6974,3248,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6973]	= settr(7189,0,6974,1,0,".(goto)", 0, 2, 0); /* m: 6974 -> 0,6978 */
	reached1[6974] = 1;
	trans[1][6963]	= settr(7179,0,6965,3249,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][6965] = settr(7181,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7181,0,6964,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6964]	= settr(7180,0,6974,3250,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6966]	= settr(7182,0,6968,3251,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][6968] = settr(7184,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7184,0,6967,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6967]	= settr(7183,0,6974,3252,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6969]	= settr(7185,0,6971,3253,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][6971] = settr(7187,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7187,0,6970,0,0,"sub-sequence", 0, 2, 0);
	trans[1][6970]	= settr(7186,0,6974,3254,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][6974]	= settr(7190,0,6978,3255,3255,"j = (j+1)", 0, 2, 0);
	trans[1][6975]	= settr(7191,0,6976,2,0,"else", 0, 2, 0);
	trans[1][6976]	= settr(7192,0,8280,3256,3256,"j = 1", 0, 2, 0);
	trans[1][6977]	= settr(7193,0,8280,1,0,"goto :b66", 0, 2, 0);
	trans[1][6980]	= settr(7196,0,8280,1,0,"break", 0, 2, 0);
	trans[1][6987]	= settr(7203,0,6988,2,0,"else", 0, 2, 0);
	trans[1][6988]	= settr(7204,0,8280,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8280] = settr(8496,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8496,0,8278,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8278] = settr(8494,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8494,0,8276,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8276] = settr(8492,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8492,0,6993,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8492,0,7420,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8492,0,7847,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8492,0,8274,0,0,"IF", 0, 2, 0);
	trans[1][6993]	= settr(7209,0,7419,3257,0,"((5==RUNNING))", 0, 2, 0);
	T = trans[ 1][7419] = settr(7635,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7635,0,7417,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7417] = settr(7633,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7633,0,6994,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7633,0,6996,0,0,"IF", 0, 2, 0);
	trans[1][6994]	= settr(7210,0,6995,3258,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][6995]	= settr(7211,0,8279,3259,3259,"supervisor_started = 1", 1, 2, 0);
	trans[1][7418]	= settr(7634,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][6996]	= settr(7212,0,7415,2,0,"else", 0, 2, 0);
	T = trans[1][7415] = settr(7631,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7631,0,6997,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7631,0,7262,0,0,"IF", 0, 2, 0);
	trans[1][6997]	= settr(7213,0,7261,3260,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][7261] = settr(7477,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7477,0,7259,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7259] = settr(7475,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7475,0,6998,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7475,0,7128,0,0,"IF", 0, 2, 0);
	trans[1][6998]	= settr(7214,0,7127,3261,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][7127] = settr(7343,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7343,0,7124,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7125]	= settr(7341,0,7124,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7124] = settr(7340,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7340,0,6999,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7340,0,7121,0,0,"DO", 0, 2, 0);
	trans[1][6999]	= settr(7215,0,7119,3262,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][7119] = settr(7335,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7335,0,7117,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7117] = settr(7333,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7333,0,7000,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7333,0,7030,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7333,0,7059,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7333,0,7088,0,0,"IF", 0, 2, 0);
	trans[1][7000]	= settr(7216,0,7029,3263,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][7029] = settr(7245,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7245,0,7020,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7020] = settr(7236,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7236,2,7018,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7018] = settr(7234,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7234,2,7001,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7234,2,7004,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7234,2,7007,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7234,2,7010,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7234,2,7013,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7234,2,7016,0,0,"IF", 1, 2, 0);
	trans[1][7001]	= settr(7217,4,7021,3264,3264,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7002 -> 7021,0 */
	reached1[7002] = 1;
	trans[1][7002]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7003]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7019]	= settr(7235,0,7021,3265,3265,".(goto)", 1, 2, 0);
	trans[1][7004]	= settr(7220,4,7021,3266,3266,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7005 -> 7021,0 */
	reached1[7005] = 1;
	trans[1][7005]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7006]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7007]	= settr(7223,4,7021,3267,3267,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7008 -> 7021,0 */
	reached1[7008] = 1;
	trans[1][7008]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7009]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7010]	= settr(7226,4,7021,3268,3268,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7011 -> 7021,0 */
	reached1[7011] = 1;
	trans[1][7011]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7012]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7013]	= settr(7229,4,7021,3269,3269,"((START==ABORT))", 1, 2, 0); /* m: 7014 -> 7021,0 */
	reached1[7014] = 1;
	trans[1][7014]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7015]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7016]	= settr(7232,2,7017,2,0,"else", 1, 2, 0);
	trans[1][7017]	= settr(7233,4,7021,3270,3270,"(1)", 1, 2, 0); /* m: 7019 -> 7021,0 */
	reached1[7019] = 1;
	trans[1][7021]	= settr(7237,0,7027,3271,3271,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7027] = settr(7243,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7243,0,7022,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7243,0,7025,0,0,"IF", 0, 2, 0);
	trans[1][7022]	= settr(7238,0,7024,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7024] = settr(7240,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7240,0,7023,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7023]	= settr(7239,0,7120,3272,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7028]	= settr(7244,0,7120,1,0,".(goto)", 0, 2, 0); /* m: 7120 -> 0,7124 */
	reached1[7120] = 1;
	trans[1][7025]	= settr(7241,0,7026,2,0,"else", 0, 2, 0);
	trans[1][7026]	= settr(7242,0,7124,3273,3273,"(1)", 0, 2, 0); /* m: 7120 -> 7124,0 */
	reached1[7120] = 1;
	trans[1][7118]	= settr(7334,0,7120,1,0,".(goto)", 0, 2, 0); /* m: 7120 -> 0,7124 */
	reached1[7120] = 1;
	trans[1][7030]	= settr(7246,0,7058,3274,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][7058] = settr(7274,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7274,0,7050,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7050] = settr(7266,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7266,2,7048,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7048] = settr(7264,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7264,2,7031,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7264,2,7034,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7264,2,7037,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7264,2,7040,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7264,2,7043,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7264,2,7046,0,0,"IF", 1, 2, 0);
	trans[1][7031]	= settr(7247,4,7056,3275,3275,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7032 -> 7056,0 */
	reached1[7032] = 1;
	trans[1][7032]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7033]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7049]	= settr(7265,0,7056,3276,3276,".(goto)", 1, 2, 0);
	trans[1][7034]	= settr(7250,4,7056,3277,3277,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7035 -> 7056,0 */
	reached1[7035] = 1;
	trans[1][7035]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7036]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7037]	= settr(7253,4,7056,3278,3278,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7038 -> 7056,0 */
	reached1[7038] = 1;
	trans[1][7038]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7039]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7040]	= settr(7256,4,7056,3279,3279,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7041 -> 7056,0 */
	reached1[7041] = 1;
	trans[1][7041]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7042]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7043]	= settr(7259,4,7056,3280,3280,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7044 -> 7056,0 */
	reached1[7044] = 1;
	trans[1][7044]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7045]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7046]	= settr(7262,2,7047,2,0,"else", 1, 2, 0);
	trans[1][7047]	= settr(7263,4,7056,3281,3281,"(1)", 1, 2, 0); /* m: 7049 -> 7056,0 */
	reached1[7049] = 1;
	T = trans[1][7056] = settr(7272,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7272,0,7051,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7272,0,7054,0,0,"IF", 0, 2, 0);
	trans[1][7051]	= settr(7267,0,7053,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7053] = settr(7269,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7269,0,7052,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7052]	= settr(7268,0,7120,3282,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7057]	= settr(7273,0,7120,1,0,".(goto)", 0, 2, 0); /* m: 7120 -> 0,7124 */
	reached1[7120] = 1;
	trans[1][7054]	= settr(7270,0,7055,2,0,"else", 0, 2, 0);
	trans[1][7055]	= settr(7271,0,7124,3283,3283,"(1)", 0, 2, 0); /* m: 7120 -> 7124,0 */
	reached1[7120] = 1;
	trans[1][7059]	= settr(7275,0,7087,3284,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7087] = settr(7303,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7303,0,7079,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7079] = settr(7295,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7295,2,7077,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7077] = settr(7293,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7293,2,7060,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7293,2,7063,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7293,2,7066,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7293,2,7069,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7293,2,7072,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7293,2,7075,0,0,"IF", 1, 2, 0);
	trans[1][7060]	= settr(7276,4,7085,3285,3285,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7061 -> 7085,0 */
	reached1[7061] = 1;
	trans[1][7061]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7062]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7078]	= settr(7294,0,7085,3286,3286,".(goto)", 1, 2, 0);
	trans[1][7063]	= settr(7279,4,7085,3287,3287,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7064 -> 7085,0 */
	reached1[7064] = 1;
	trans[1][7064]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7065]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7066]	= settr(7282,4,7085,3288,3288,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7067 -> 7085,0 */
	reached1[7067] = 1;
	trans[1][7067]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7068]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7069]	= settr(7285,4,7085,3289,3289,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7070 -> 7085,0 */
	reached1[7070] = 1;
	trans[1][7070]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7071]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7072]	= settr(7288,4,7085,3290,3290,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7073 -> 7085,0 */
	reached1[7073] = 1;
	trans[1][7073]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7074]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7075]	= settr(7291,2,7076,2,0,"else", 1, 2, 0);
	trans[1][7076]	= settr(7292,4,7085,3291,3291,"(1)", 1, 2, 0); /* m: 7078 -> 7085,0 */
	reached1[7078] = 1;
	T = trans[1][7085] = settr(7301,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7301,0,7080,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7301,0,7083,0,0,"IF", 0, 2, 0);
	trans[1][7080]	= settr(7296,0,7082,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7082] = settr(7298,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7298,0,7081,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7081]	= settr(7297,0,7120,3292,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7086]	= settr(7302,0,7120,1,0,".(goto)", 0, 2, 0); /* m: 7120 -> 0,7124 */
	reached1[7120] = 1;
	trans[1][7083]	= settr(7299,0,7084,2,0,"else", 0, 2, 0);
	trans[1][7084]	= settr(7300,0,7124,3293,3293,"(1)", 0, 2, 0); /* m: 7120 -> 7124,0 */
	reached1[7120] = 1;
	trans[1][7088]	= settr(7304,0,7116,3294,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][7116] = settr(7332,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7332,0,7108,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7108] = settr(7324,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7324,2,7106,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7106] = settr(7322,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7322,2,7089,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7322,2,7092,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7322,2,7095,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7322,2,7098,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7322,2,7101,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7322,2,7104,0,0,"IF", 1, 2, 0);
	trans[1][7089]	= settr(7305,4,7114,3295,3295,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7090 -> 7114,0 */
	reached1[7090] = 1;
	trans[1][7090]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7091]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7107]	= settr(7323,0,7114,3296,3296,".(goto)", 1, 2, 0);
	trans[1][7092]	= settr(7308,4,7114,3297,3297,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7093 -> 7114,0 */
	reached1[7093] = 1;
	trans[1][7093]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7094]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7095]	= settr(7311,4,7114,3298,3298,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7096 -> 7114,0 */
	reached1[7096] = 1;
	trans[1][7096]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7097]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7098]	= settr(7314,4,7114,3299,3299,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7099 -> 7114,0 */
	reached1[7099] = 1;
	trans[1][7099]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7100]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7101]	= settr(7317,4,7114,3300,3300,"((STOP==ABORT))", 1, 2, 0); /* m: 7102 -> 7114,0 */
	reached1[7102] = 1;
	trans[1][7102]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7103]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7104]	= settr(7320,2,7105,2,0,"else", 1, 2, 0);
	trans[1][7105]	= settr(7321,4,7114,3301,3301,"(1)", 1, 2, 0); /* m: 7107 -> 7114,0 */
	reached1[7107] = 1;
	T = trans[1][7114] = settr(7330,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7330,0,7109,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7330,0,7112,0,0,"IF", 0, 2, 0);
	trans[1][7109]	= settr(7325,0,7111,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7111] = settr(7327,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7327,0,7110,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7110]	= settr(7326,0,7120,3302,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7115]	= settr(7331,0,7120,1,0,".(goto)", 0, 2, 0); /* m: 7120 -> 0,7124 */
	reached1[7120] = 1;
	trans[1][7112]	= settr(7328,0,7113,2,0,"else", 0, 2, 0);
	trans[1][7113]	= settr(7329,0,7124,3303,3303,"(1)", 0, 2, 0); /* m: 7120 -> 7124,0 */
	reached1[7120] = 1;
	trans[1][7120]	= settr(7336,0,7124,3304,3304,"j = (j+1)", 0, 2, 0);
	trans[1][7121]	= settr(7337,0,7122,2,0,"else", 0, 2, 0);
	trans[1][7122]	= settr(7338,0,8279,3305,3305,"j = 1", 0, 2, 0);
	trans[1][7123]	= settr(7339,0,8279,1,0,"goto :b67", 0, 2, 0);
	trans[1][7126]	= settr(7342,0,8279,1,0,"break", 0, 2, 0);
	trans[1][7260]	= settr(7476,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7128]	= settr(7344,0,7258,2,0,"else", 0, 2, 0);
	T = trans[ 1][7258] = settr(7474,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7474,0,7129,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7129]	= settr(7345,0,7255,3306,3306,"j = (3-1)", 0, 2, 0);
	trans[1][7256]	= settr(7472,0,7255,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7255] = settr(7471,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7471,0,7130,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7471,0,7252,0,0,"DO", 0, 2, 0);
	trans[1][7130]	= settr(7346,0,7250,3307,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][7250] = settr(7466,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7466,0,7248,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7248] = settr(7464,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7464,0,7131,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7464,0,7161,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7464,0,7190,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7464,0,7219,0,0,"IF", 0, 2, 0);
	trans[1][7131]	= settr(7347,0,7160,3308,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][7160] = settr(7376,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7376,0,7151,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7151] = settr(7367,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7367,2,7149,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7149] = settr(7365,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7365,2,7132,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7365,2,7135,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7365,2,7138,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7365,2,7141,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7365,2,7144,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7365,2,7147,0,0,"IF", 1, 2, 0);
	trans[1][7132]	= settr(7348,4,7152,3309,3309,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7133 -> 7152,0 */
	reached1[7133] = 1;
	trans[1][7133]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7134]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7150]	= settr(7366,0,7152,3310,3310,".(goto)", 1, 2, 0);
	trans[1][7135]	= settr(7351,4,7152,3311,3311,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7136 -> 7152,0 */
	reached1[7136] = 1;
	trans[1][7136]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7137]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7138]	= settr(7354,4,7152,3312,3312,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7139 -> 7152,0 */
	reached1[7139] = 1;
	trans[1][7139]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7140]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7141]	= settr(7357,4,7152,3313,3313,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7142 -> 7152,0 */
	reached1[7142] = 1;
	trans[1][7142]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7143]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7144]	= settr(7360,4,7152,3314,3314,"((START==ABORT))", 1, 2, 0); /* m: 7145 -> 7152,0 */
	reached1[7145] = 1;
	trans[1][7145]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7146]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7147]	= settr(7363,2,7148,2,0,"else", 1, 2, 0);
	trans[1][7148]	= settr(7364,4,7152,3315,3315,"(1)", 1, 2, 0); /* m: 7150 -> 7152,0 */
	reached1[7150] = 1;
	trans[1][7152]	= settr(7368,0,7158,3316,3316,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7158] = settr(7374,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7374,0,7153,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7374,0,7156,0,0,"IF", 0, 2, 0);
	trans[1][7153]	= settr(7369,0,7155,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7155] = settr(7371,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7371,0,7154,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7154]	= settr(7370,0,7251,3317,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7159]	= settr(7375,0,7251,1,0,".(goto)", 0, 2, 0); /* m: 7251 -> 0,7255 */
	reached1[7251] = 1;
	trans[1][7156]	= settr(7372,0,7157,2,0,"else", 0, 2, 0);
	trans[1][7157]	= settr(7373,0,7255,3318,3318,"(1)", 0, 2, 0); /* m: 7251 -> 7255,0 */
	reached1[7251] = 1;
	trans[1][7249]	= settr(7465,0,7251,1,0,".(goto)", 0, 2, 0); /* m: 7251 -> 0,7255 */
	reached1[7251] = 1;
	trans[1][7161]	= settr(7377,0,7189,3319,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][7189] = settr(7405,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7405,0,7181,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7181] = settr(7397,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7397,2,7179,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7179] = settr(7395,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7395,2,7162,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7395,2,7165,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7395,2,7168,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7395,2,7171,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7395,2,7174,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7395,2,7177,0,0,"IF", 1, 2, 0);
	trans[1][7162]	= settr(7378,4,7187,3320,3320,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7163 -> 7187,0 */
	reached1[7163] = 1;
	trans[1][7163]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7164]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7180]	= settr(7396,0,7187,3321,3321,".(goto)", 1, 2, 0);
	trans[1][7165]	= settr(7381,4,7187,3322,3322,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7166 -> 7187,0 */
	reached1[7166] = 1;
	trans[1][7166]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7167]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7168]	= settr(7384,4,7187,3323,3323,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7169 -> 7187,0 */
	reached1[7169] = 1;
	trans[1][7169]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7170]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7171]	= settr(7387,4,7187,3324,3324,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7172 -> 7187,0 */
	reached1[7172] = 1;
	trans[1][7172]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7173]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7174]	= settr(7390,4,7187,3325,3325,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7175 -> 7187,0 */
	reached1[7175] = 1;
	trans[1][7175]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7176]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7177]	= settr(7393,2,7178,2,0,"else", 1, 2, 0);
	trans[1][7178]	= settr(7394,4,7187,3326,3326,"(1)", 1, 2, 0); /* m: 7180 -> 7187,0 */
	reached1[7180] = 1;
	T = trans[1][7187] = settr(7403,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7403,0,7182,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7403,0,7185,0,0,"IF", 0, 2, 0);
	trans[1][7182]	= settr(7398,0,7184,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7184] = settr(7400,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7400,0,7183,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7183]	= settr(7399,0,7251,3327,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7188]	= settr(7404,0,7251,1,0,".(goto)", 0, 2, 0); /* m: 7251 -> 0,7255 */
	reached1[7251] = 1;
	trans[1][7185]	= settr(7401,0,7186,2,0,"else", 0, 2, 0);
	trans[1][7186]	= settr(7402,0,7255,3328,3328,"(1)", 0, 2, 0); /* m: 7251 -> 7255,0 */
	reached1[7251] = 1;
	trans[1][7190]	= settr(7406,0,7218,3329,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7218] = settr(7434,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7434,0,7210,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7210] = settr(7426,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7426,2,7208,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7208] = settr(7424,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7424,2,7191,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7424,2,7194,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7424,2,7197,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7424,2,7200,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7424,2,7203,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7424,2,7206,0,0,"IF", 1, 2, 0);
	trans[1][7191]	= settr(7407,4,7216,3330,3330,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7192 -> 7216,0 */
	reached1[7192] = 1;
	trans[1][7192]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7193]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7209]	= settr(7425,0,7216,3331,3331,".(goto)", 1, 2, 0);
	trans[1][7194]	= settr(7410,4,7216,3332,3332,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7195 -> 7216,0 */
	reached1[7195] = 1;
	trans[1][7195]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7196]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7197]	= settr(7413,4,7216,3333,3333,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7198 -> 7216,0 */
	reached1[7198] = 1;
	trans[1][7198]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7199]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7200]	= settr(7416,4,7216,3334,3334,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7201 -> 7216,0 */
	reached1[7201] = 1;
	trans[1][7201]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7202]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7203]	= settr(7419,4,7216,3335,3335,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7204 -> 7216,0 */
	reached1[7204] = 1;
	trans[1][7204]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7205]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7206]	= settr(7422,2,7207,2,0,"else", 1, 2, 0);
	trans[1][7207]	= settr(7423,4,7216,3336,3336,"(1)", 1, 2, 0); /* m: 7209 -> 7216,0 */
	reached1[7209] = 1;
	T = trans[1][7216] = settr(7432,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7432,0,7211,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7432,0,7214,0,0,"IF", 0, 2, 0);
	trans[1][7211]	= settr(7427,0,7213,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7213] = settr(7429,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7429,0,7212,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7212]	= settr(7428,0,7251,3337,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7217]	= settr(7433,0,7251,1,0,".(goto)", 0, 2, 0); /* m: 7251 -> 0,7255 */
	reached1[7251] = 1;
	trans[1][7214]	= settr(7430,0,7215,2,0,"else", 0, 2, 0);
	trans[1][7215]	= settr(7431,0,7255,3338,3338,"(1)", 0, 2, 0); /* m: 7251 -> 7255,0 */
	reached1[7251] = 1;
	trans[1][7219]	= settr(7435,0,7247,3339,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][7247] = settr(7463,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7463,0,7239,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7239] = settr(7455,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7455,2,7237,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7237] = settr(7453,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7453,2,7220,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7453,2,7223,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7453,2,7226,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7453,2,7229,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7453,2,7232,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7453,2,7235,0,0,"IF", 1, 2, 0);
	trans[1][7220]	= settr(7436,4,7245,3340,3340,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7221 -> 7245,0 */
	reached1[7221] = 1;
	trans[1][7221]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7222]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7238]	= settr(7454,0,7245,3341,3341,".(goto)", 1, 2, 0);
	trans[1][7223]	= settr(7439,4,7245,3342,3342,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7224 -> 7245,0 */
	reached1[7224] = 1;
	trans[1][7224]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7225]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7226]	= settr(7442,4,7245,3343,3343,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7227 -> 7245,0 */
	reached1[7227] = 1;
	trans[1][7227]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7228]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7229]	= settr(7445,4,7245,3344,3344,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7230 -> 7245,0 */
	reached1[7230] = 1;
	trans[1][7230]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7231]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7232]	= settr(7448,4,7245,3345,3345,"((STOP==ABORT))", 1, 2, 0); /* m: 7233 -> 7245,0 */
	reached1[7233] = 1;
	trans[1][7233]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7234]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7235]	= settr(7451,2,7236,2,0,"else", 1, 2, 0);
	trans[1][7236]	= settr(7452,4,7245,3346,3346,"(1)", 1, 2, 0); /* m: 7238 -> 7245,0 */
	reached1[7238] = 1;
	T = trans[1][7245] = settr(7461,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7461,0,7240,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7461,0,7243,0,0,"IF", 0, 2, 0);
	trans[1][7240]	= settr(7456,0,7242,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7242] = settr(7458,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7458,0,7241,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7241]	= settr(7457,0,7251,3347,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7246]	= settr(7462,0,7251,1,0,".(goto)", 0, 2, 0); /* m: 7251 -> 0,7255 */
	reached1[7251] = 1;
	trans[1][7243]	= settr(7459,0,7244,2,0,"else", 0, 2, 0);
	trans[1][7244]	= settr(7460,0,7255,3348,3348,"(1)", 0, 2, 0); /* m: 7251 -> 7255,0 */
	reached1[7251] = 1;
	trans[1][7251]	= settr(7467,0,7255,3349,3349,"j = (j-1)", 0, 2, 0);
	trans[1][7252]	= settr(7468,0,7253,2,0,"else", 0, 2, 0);
	trans[1][7253]	= settr(7469,0,8279,3350,3350,"j = 1", 0, 2, 0);
	trans[1][7254]	= settr(7470,0,8279,1,0,"goto :b68", 0, 2, 0);
	trans[1][7257]	= settr(7473,0,8279,1,0,"break", 0, 2, 0);
	trans[1][7416]	= settr(7632,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7262]	= settr(7478,0,7414,2,0,"else", 0, 2, 0);
	T = trans[ 1][7414] = settr(7630,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7630,0,7391,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7391] = settr(7607,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7607,0,7388,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7389]	= settr(7605,0,7388,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7388] = settr(7604,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7604,0,7263,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7604,0,7385,0,0,"DO", 0, 2, 0);
	trans[1][7263]	= settr(7479,0,7383,3351,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][7383] = settr(7599,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7599,0,7381,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7381] = settr(7597,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7597,0,7264,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7597,0,7294,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7597,0,7323,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7597,0,7352,0,0,"IF", 0, 2, 0);
	trans[1][7264]	= settr(7480,0,7293,3352,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][7293] = settr(7509,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7509,0,7284,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7284] = settr(7500,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7500,2,7282,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7282] = settr(7498,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7498,2,7265,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7498,2,7268,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7498,2,7271,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7498,2,7274,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7498,2,7277,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7498,2,7280,0,0,"IF", 1, 2, 0);
	trans[1][7265]	= settr(7481,4,7285,3353,3353,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7266 -> 7285,0 */
	reached1[7266] = 1;
	trans[1][7266]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7267]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7283]	= settr(7499,0,7285,3354,3354,".(goto)", 1, 2, 0);
	trans[1][7268]	= settr(7484,4,7285,3355,3355,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7269 -> 7285,0 */
	reached1[7269] = 1;
	trans[1][7269]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7270]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7271]	= settr(7487,4,7285,3356,3356,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7272 -> 7285,0 */
	reached1[7272] = 1;
	trans[1][7272]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7273]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7274]	= settr(7490,4,7285,3357,3357,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7275 -> 7285,0 */
	reached1[7275] = 1;
	trans[1][7275]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7276]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7277]	= settr(7493,4,7285,3358,3358,"((START==ABORT))", 1, 2, 0); /* m: 7278 -> 7285,0 */
	reached1[7278] = 1;
	trans[1][7278]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7279]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7280]	= settr(7496,2,7281,2,0,"else", 1, 2, 0);
	trans[1][7281]	= settr(7497,4,7285,3359,3359,"(1)", 1, 2, 0); /* m: 7283 -> 7285,0 */
	reached1[7283] = 1;
	trans[1][7285]	= settr(7501,0,7291,3360,3360,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7291] = settr(7507,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7507,0,7286,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7507,0,7289,0,0,"IF", 0, 2, 0);
	trans[1][7286]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7288] = settr(7504,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7504,0,7287,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7287]	= settr(7503,0,7384,3361,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7292]	= settr(7508,0,7384,1,0,".(goto)", 0, 2, 0); /* m: 7384 -> 0,7388 */
	reached1[7384] = 1;
	trans[1][7289]	= settr(7505,0,7290,2,0,"else", 0, 2, 0);
	trans[1][7290]	= settr(7506,0,7388,3362,3362,"(1)", 0, 2, 0); /* m: 7384 -> 7388,0 */
	reached1[7384] = 1;
	trans[1][7382]	= settr(7598,0,7384,1,0,".(goto)", 0, 2, 0); /* m: 7384 -> 0,7388 */
	reached1[7384] = 1;
	trans[1][7294]	= settr(7510,0,7322,3363,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][7322] = settr(7538,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7538,0,7314,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7314] = settr(7530,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7530,2,7312,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7312] = settr(7528,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7528,2,7295,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7528,2,7298,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7528,2,7301,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7528,2,7304,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7528,2,7307,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7528,2,7310,0,0,"IF", 1, 2, 0);
	trans[1][7295]	= settr(7511,4,7320,3364,3364,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7296 -> 7320,0 */
	reached1[7296] = 1;
	trans[1][7296]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7297]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7313]	= settr(7529,0,7320,3365,3365,".(goto)", 1, 2, 0);
	trans[1][7298]	= settr(7514,4,7320,3366,3366,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7299 -> 7320,0 */
	reached1[7299] = 1;
	trans[1][7299]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7300]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7301]	= settr(7517,4,7320,3367,3367,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7302 -> 7320,0 */
	reached1[7302] = 1;
	trans[1][7302]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7303]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7304]	= settr(7520,4,7320,3368,3368,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7305 -> 7320,0 */
	reached1[7305] = 1;
	trans[1][7305]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7306]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7307]	= settr(7523,4,7320,3369,3369,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7308 -> 7320,0 */
	reached1[7308] = 1;
	trans[1][7308]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7309]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7310]	= settr(7526,2,7311,2,0,"else", 1, 2, 0);
	trans[1][7311]	= settr(7527,4,7320,3370,3370,"(1)", 1, 2, 0); /* m: 7313 -> 7320,0 */
	reached1[7313] = 1;
	T = trans[1][7320] = settr(7536,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7536,0,7315,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7536,0,7318,0,0,"IF", 0, 2, 0);
	trans[1][7315]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7317] = settr(7533,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7533,0,7316,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7316]	= settr(7532,0,7384,3371,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7321]	= settr(7537,0,7384,1,0,".(goto)", 0, 2, 0); /* m: 7384 -> 0,7388 */
	reached1[7384] = 1;
	trans[1][7318]	= settr(7534,0,7319,2,0,"else", 0, 2, 0);
	trans[1][7319]	= settr(7535,0,7388,3372,3372,"(1)", 0, 2, 0); /* m: 7384 -> 7388,0 */
	reached1[7384] = 1;
	trans[1][7323]	= settr(7539,0,7351,3373,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7351] = settr(7567,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7567,0,7343,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7343] = settr(7559,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7559,2,7341,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7341] = settr(7557,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7557,2,7324,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7557,2,7327,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7557,2,7330,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7557,2,7333,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7557,2,7336,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7557,2,7339,0,0,"IF", 1, 2, 0);
	trans[1][7324]	= settr(7540,4,7349,3374,3374,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7325 -> 7349,0 */
	reached1[7325] = 1;
	trans[1][7325]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7326]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7342]	= settr(7558,0,7349,3375,3375,".(goto)", 1, 2, 0);
	trans[1][7327]	= settr(7543,4,7349,3376,3376,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7328 -> 7349,0 */
	reached1[7328] = 1;
	trans[1][7328]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7329]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7330]	= settr(7546,4,7349,3377,3377,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7331 -> 7349,0 */
	reached1[7331] = 1;
	trans[1][7331]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7332]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7333]	= settr(7549,4,7349,3378,3378,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7334 -> 7349,0 */
	reached1[7334] = 1;
	trans[1][7334]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7335]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7336]	= settr(7552,4,7349,3379,3379,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7337 -> 7349,0 */
	reached1[7337] = 1;
	trans[1][7337]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7338]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7339]	= settr(7555,2,7340,2,0,"else", 1, 2, 0);
	trans[1][7340]	= settr(7556,4,7349,3380,3380,"(1)", 1, 2, 0); /* m: 7342 -> 7349,0 */
	reached1[7342] = 1;
	T = trans[1][7349] = settr(7565,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7565,0,7344,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7565,0,7347,0,0,"IF", 0, 2, 0);
	trans[1][7344]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7346] = settr(7562,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7562,0,7345,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7345]	= settr(7561,0,7384,3381,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7350]	= settr(7566,0,7384,1,0,".(goto)", 0, 2, 0); /* m: 7384 -> 0,7388 */
	reached1[7384] = 1;
	trans[1][7347]	= settr(7563,0,7348,2,0,"else", 0, 2, 0);
	trans[1][7348]	= settr(7564,0,7388,3382,3382,"(1)", 0, 2, 0); /* m: 7384 -> 7388,0 */
	reached1[7384] = 1;
	trans[1][7352]	= settr(7568,0,7380,3383,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][7380] = settr(7596,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7596,0,7372,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7372] = settr(7588,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7588,2,7370,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7370] = settr(7586,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7586,2,7353,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7586,2,7356,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7586,2,7359,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7586,2,7362,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7586,2,7365,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7586,2,7368,0,0,"IF", 1, 2, 0);
	trans[1][7353]	= settr(7569,4,7378,3384,3384,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7354 -> 7378,0 */
	reached1[7354] = 1;
	trans[1][7354]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7355]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7371]	= settr(7587,0,7378,3385,3385,".(goto)", 1, 2, 0);
	trans[1][7356]	= settr(7572,4,7378,3386,3386,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7357 -> 7378,0 */
	reached1[7357] = 1;
	trans[1][7357]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7358]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7359]	= settr(7575,4,7378,3387,3387,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7360 -> 7378,0 */
	reached1[7360] = 1;
	trans[1][7360]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7361]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7362]	= settr(7578,4,7378,3388,3388,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7363 -> 7378,0 */
	reached1[7363] = 1;
	trans[1][7363]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7364]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7365]	= settr(7581,4,7378,3389,3389,"((STOP==ABORT))", 1, 2, 0); /* m: 7366 -> 7378,0 */
	reached1[7366] = 1;
	trans[1][7366]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7367]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7368]	= settr(7584,2,7369,2,0,"else", 1, 2, 0);
	trans[1][7369]	= settr(7585,4,7378,3390,3390,"(1)", 1, 2, 0); /* m: 7371 -> 7378,0 */
	reached1[7371] = 1;
	T = trans[1][7378] = settr(7594,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7594,0,7373,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7594,0,7376,0,0,"IF", 0, 2, 0);
	trans[1][7373]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7375] = settr(7591,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7591,0,7374,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7374]	= settr(7590,0,7384,3391,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7379]	= settr(7595,0,7384,1,0,".(goto)", 0, 2, 0); /* m: 7384 -> 0,7388 */
	reached1[7384] = 1;
	trans[1][7376]	= settr(7592,0,7377,2,0,"else", 0, 2, 0);
	trans[1][7377]	= settr(7593,0,7388,3392,3392,"(1)", 0, 2, 0); /* m: 7384 -> 7388,0 */
	reached1[7384] = 1;
	trans[1][7384]	= settr(7600,0,7388,3393,3393,"j = (j+1)", 0, 2, 0);
	trans[1][7385]	= settr(7601,0,7386,2,0,"else", 0, 2, 0);
	trans[1][7386]	= settr(7602,0,7411,3394,3394,"j = 1", 0, 2, 0);
	trans[1][7387]	= settr(7603,0,7411,1,0,"goto :b69", 0, 2, 0);
	trans[1][7390]	= settr(7606,0,7411,1,0,"break", 0, 2, 0);
	trans[1][7412]	= settr(7628,0,7411,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7411] = settr(7627,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7627,0,7392,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7627,0,7408,0,0,"DO", 0, 2, 0);
	trans[1][7392]	= settr(7608,0,7405,3395,0,"((j<3))", 0, 2, 0);
	T = trans[1][7405] = settr(7621,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7621,0,7393,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7621,0,7396,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7621,0,7399,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7621,0,7402,0,0,"IF", 0, 2, 0);
	trans[1][7393]	= settr(7609,0,7395,3396,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][7395] = settr(7611,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7611,0,7394,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7394]	= settr(7610,0,7407,3397,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7406]	= settr(7622,0,7407,1,0,".(goto)", 0, 2, 0); /* m: 7407 -> 0,7411 */
	reached1[7407] = 1;
	trans[1][7396]	= settr(7612,0,7398,3398,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7398] = settr(7614,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7614,0,7397,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7397]	= settr(7613,0,7407,3399,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7399]	= settr(7615,0,7401,3400,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][7401] = settr(7617,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7617,0,7400,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7400]	= settr(7616,0,7407,3401,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7402]	= settr(7618,0,7404,3402,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][7404] = settr(7620,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7620,0,7403,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7403]	= settr(7619,0,7407,3403,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7407]	= settr(7623,0,7411,3404,3404,"j = (j+1)", 0, 2, 0);
	trans[1][7408]	= settr(7624,0,7409,2,0,"else", 0, 2, 0);
	trans[1][7409]	= settr(7625,0,8279,3405,3405,"j = 1", 0, 2, 0);
	trans[1][7410]	= settr(7626,0,8279,1,0,"goto :b70", 0, 2, 0);
	trans[1][7413]	= settr(7629,0,8279,1,0,"break", 0, 2, 0);
	trans[1][8277]	= settr(8493,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7420]	= settr(7636,0,7846,3406,0,"((5==PAUSED))", 0, 2, 0);
	T = trans[ 1][7846] = settr(8062,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8062,0,7844,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7844] = settr(8060,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8060,0,7421,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8060,0,7423,0,0,"IF", 0, 2, 0);
	trans[1][7421]	= settr(7637,0,7422,3407,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][7422]	= settr(7638,0,8279,3408,3408,"supervisor_started = 1", 1, 2, 0);
	trans[1][7845]	= settr(8061,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7423]	= settr(7639,0,7842,2,0,"else", 0, 2, 0);
	T = trans[1][7842] = settr(8058,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8058,0,7424,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8058,0,7689,0,0,"IF", 0, 2, 0);
	trans[1][7424]	= settr(7640,0,7688,3409,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][7688] = settr(7904,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7904,0,7686,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7686] = settr(7902,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7902,0,7425,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7902,0,7555,0,0,"IF", 0, 2, 0);
	trans[1][7425]	= settr(7641,0,7554,3410,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][7554] = settr(7770,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7770,0,7551,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7552]	= settr(7768,0,7551,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7551] = settr(7767,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7767,0,7426,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7767,0,7548,0,0,"DO", 0, 2, 0);
	trans[1][7426]	= settr(7642,0,7546,3411,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][7546] = settr(7762,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7762,0,7544,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7544] = settr(7760,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7760,0,7427,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7760,0,7457,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7760,0,7486,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7760,0,7515,0,0,"IF", 0, 2, 0);
	trans[1][7427]	= settr(7643,0,7456,3412,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][7456] = settr(7672,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7672,0,7447,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7447] = settr(7663,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7663,2,7445,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7445] = settr(7661,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7661,2,7428,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7661,2,7431,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7661,2,7434,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7661,2,7437,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7661,2,7440,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7661,2,7443,0,0,"IF", 1, 2, 0);
	trans[1][7428]	= settr(7644,4,7448,3413,3413,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7429 -> 7448,0 */
	reached1[7429] = 1;
	trans[1][7429]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7430]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7446]	= settr(7662,0,7448,3414,3414,".(goto)", 1, 2, 0);
	trans[1][7431]	= settr(7647,4,7448,3415,3415,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7432 -> 7448,0 */
	reached1[7432] = 1;
	trans[1][7432]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7433]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7434]	= settr(7650,4,7448,3416,3416,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7435 -> 7448,0 */
	reached1[7435] = 1;
	trans[1][7435]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7436]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7437]	= settr(7653,4,7448,3417,3417,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7438 -> 7448,0 */
	reached1[7438] = 1;
	trans[1][7438]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7439]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7440]	= settr(7656,4,7448,3418,3418,"((START==ABORT))", 1, 2, 0); /* m: 7441 -> 7448,0 */
	reached1[7441] = 1;
	trans[1][7441]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7442]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7443]	= settr(7659,2,7444,2,0,"else", 1, 2, 0);
	trans[1][7444]	= settr(7660,4,7448,3419,3419,"(1)", 1, 2, 0); /* m: 7446 -> 7448,0 */
	reached1[7446] = 1;
	trans[1][7448]	= settr(7664,0,7454,3420,3420,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7454] = settr(7670,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7670,0,7449,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7670,0,7452,0,0,"IF", 0, 2, 0);
	trans[1][7449]	= settr(7665,0,7451,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7451] = settr(7667,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7667,0,7450,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7450]	= settr(7666,0,7547,3421,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7455]	= settr(7671,0,7547,1,0,".(goto)", 0, 2, 0); /* m: 7547 -> 0,7551 */
	reached1[7547] = 1;
	trans[1][7452]	= settr(7668,0,7453,2,0,"else", 0, 2, 0);
	trans[1][7453]	= settr(7669,0,7551,3422,3422,"(1)", 0, 2, 0); /* m: 7547 -> 7551,0 */
	reached1[7547] = 1;
	trans[1][7545]	= settr(7761,0,7547,1,0,".(goto)", 0, 2, 0); /* m: 7547 -> 0,7551 */
	reached1[7547] = 1;
	trans[1][7457]	= settr(7673,0,7485,3423,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][7485] = settr(7701,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7701,0,7477,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7477] = settr(7693,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7693,2,7475,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7475] = settr(7691,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7691,2,7458,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7691,2,7461,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7691,2,7464,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7691,2,7467,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7691,2,7470,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7691,2,7473,0,0,"IF", 1, 2, 0);
	trans[1][7458]	= settr(7674,4,7483,3424,3424,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7459 -> 7483,0 */
	reached1[7459] = 1;
	trans[1][7459]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7460]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7476]	= settr(7692,0,7483,3425,3425,".(goto)", 1, 2, 0);
	trans[1][7461]	= settr(7677,4,7483,3426,3426,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7462 -> 7483,0 */
	reached1[7462] = 1;
	trans[1][7462]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7463]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7464]	= settr(7680,4,7483,3427,3427,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7465 -> 7483,0 */
	reached1[7465] = 1;
	trans[1][7465]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7466]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7467]	= settr(7683,4,7483,3428,3428,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7468 -> 7483,0 */
	reached1[7468] = 1;
	trans[1][7468]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7469]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7470]	= settr(7686,4,7483,3429,3429,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7471 -> 7483,0 */
	reached1[7471] = 1;
	trans[1][7471]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7472]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7473]	= settr(7689,2,7474,2,0,"else", 1, 2, 0);
	trans[1][7474]	= settr(7690,4,7483,3430,3430,"(1)", 1, 2, 0); /* m: 7476 -> 7483,0 */
	reached1[7476] = 1;
	T = trans[1][7483] = settr(7699,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7699,0,7478,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7699,0,7481,0,0,"IF", 0, 2, 0);
	trans[1][7478]	= settr(7694,0,7480,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7480] = settr(7696,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7696,0,7479,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7479]	= settr(7695,0,7547,3431,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7484]	= settr(7700,0,7547,1,0,".(goto)", 0, 2, 0); /* m: 7547 -> 0,7551 */
	reached1[7547] = 1;
	trans[1][7481]	= settr(7697,0,7482,2,0,"else", 0, 2, 0);
	trans[1][7482]	= settr(7698,0,7551,3432,3432,"(1)", 0, 2, 0); /* m: 7547 -> 7551,0 */
	reached1[7547] = 1;
	trans[1][7486]	= settr(7702,0,7514,3433,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7514] = settr(7730,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7730,0,7506,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7506] = settr(7722,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7722,2,7504,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7504] = settr(7720,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7720,2,7487,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7720,2,7490,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7720,2,7493,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7720,2,7496,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7720,2,7499,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7720,2,7502,0,0,"IF", 1, 2, 0);
	trans[1][7487]	= settr(7703,4,7512,3434,3434,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7488 -> 7512,0 */
	reached1[7488] = 1;
	trans[1][7488]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7489]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7505]	= settr(7721,0,7512,3435,3435,".(goto)", 1, 2, 0);
	trans[1][7490]	= settr(7706,4,7512,3436,3436,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7491 -> 7512,0 */
	reached1[7491] = 1;
	trans[1][7491]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7492]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7493]	= settr(7709,4,7512,3437,3437,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7494 -> 7512,0 */
	reached1[7494] = 1;
	trans[1][7494]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7495]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7496]	= settr(7712,4,7512,3438,3438,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7497 -> 7512,0 */
	reached1[7497] = 1;
	trans[1][7497]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7498]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7499]	= settr(7715,4,7512,3439,3439,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7500 -> 7512,0 */
	reached1[7500] = 1;
	trans[1][7500]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7501]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7502]	= settr(7718,2,7503,2,0,"else", 1, 2, 0);
	trans[1][7503]	= settr(7719,4,7512,3440,3440,"(1)", 1, 2, 0); /* m: 7505 -> 7512,0 */
	reached1[7505] = 1;
	T = trans[1][7512] = settr(7728,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7728,0,7507,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7728,0,7510,0,0,"IF", 0, 2, 0);
	trans[1][7507]	= settr(7723,0,7509,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7509] = settr(7725,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7725,0,7508,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7508]	= settr(7724,0,7547,3441,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7513]	= settr(7729,0,7547,1,0,".(goto)", 0, 2, 0); /* m: 7547 -> 0,7551 */
	reached1[7547] = 1;
	trans[1][7510]	= settr(7726,0,7511,2,0,"else", 0, 2, 0);
	trans[1][7511]	= settr(7727,0,7551,3442,3442,"(1)", 0, 2, 0); /* m: 7547 -> 7551,0 */
	reached1[7547] = 1;
	trans[1][7515]	= settr(7731,0,7543,3443,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][7543] = settr(7759,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7759,0,7535,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7535] = settr(7751,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7751,2,7533,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7533] = settr(7749,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7749,2,7516,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7749,2,7519,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7749,2,7522,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7749,2,7525,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7749,2,7528,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7749,2,7531,0,0,"IF", 1, 2, 0);
	trans[1][7516]	= settr(7732,4,7541,3444,3444,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7517 -> 7541,0 */
	reached1[7517] = 1;
	trans[1][7517]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7518]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7534]	= settr(7750,0,7541,3445,3445,".(goto)", 1, 2, 0);
	trans[1][7519]	= settr(7735,4,7541,3446,3446,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7520 -> 7541,0 */
	reached1[7520] = 1;
	trans[1][7520]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7521]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7522]	= settr(7738,4,7541,3447,3447,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7523 -> 7541,0 */
	reached1[7523] = 1;
	trans[1][7523]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7524]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7525]	= settr(7741,4,7541,3448,3448,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7526 -> 7541,0 */
	reached1[7526] = 1;
	trans[1][7526]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7527]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7528]	= settr(7744,4,7541,3449,3449,"((STOP==ABORT))", 1, 2, 0); /* m: 7529 -> 7541,0 */
	reached1[7529] = 1;
	trans[1][7529]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7530]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7531]	= settr(7747,2,7532,2,0,"else", 1, 2, 0);
	trans[1][7532]	= settr(7748,4,7541,3450,3450,"(1)", 1, 2, 0); /* m: 7534 -> 7541,0 */
	reached1[7534] = 1;
	T = trans[1][7541] = settr(7757,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7757,0,7536,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7757,0,7539,0,0,"IF", 0, 2, 0);
	trans[1][7536]	= settr(7752,0,7538,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7538] = settr(7754,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7754,0,7537,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7537]	= settr(7753,0,7547,3451,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7542]	= settr(7758,0,7547,1,0,".(goto)", 0, 2, 0); /* m: 7547 -> 0,7551 */
	reached1[7547] = 1;
	trans[1][7539]	= settr(7755,0,7540,2,0,"else", 0, 2, 0);
	trans[1][7540]	= settr(7756,0,7551,3452,3452,"(1)", 0, 2, 0); /* m: 7547 -> 7551,0 */
	reached1[7547] = 1;
	trans[1][7547]	= settr(7763,0,7551,3453,3453,"j = (j+1)", 0, 2, 0);
	trans[1][7548]	= settr(7764,0,7549,2,0,"else", 0, 2, 0);
	trans[1][7549]	= settr(7765,0,8279,3454,3454,"j = 1", 0, 2, 0);
	trans[1][7550]	= settr(7766,0,8279,1,0,"goto :b71", 0, 2, 0);
	trans[1][7553]	= settr(7769,0,8279,1,0,"break", 0, 2, 0);
	trans[1][7687]	= settr(7903,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7555]	= settr(7771,0,7685,2,0,"else", 0, 2, 0);
	T = trans[ 1][7685] = settr(7901,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7901,0,7556,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7556]	= settr(7772,0,7682,3455,3455,"j = (3-1)", 0, 2, 0);
	trans[1][7683]	= settr(7899,0,7682,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7682] = settr(7898,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(7898,0,7557,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(7898,0,7679,0,0,"DO", 0, 2, 0);
	trans[1][7557]	= settr(7773,0,7677,3456,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][7677] = settr(7893,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7893,0,7675,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7675] = settr(7891,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7891,0,7558,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7891,0,7588,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7891,0,7617,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7891,0,7646,0,0,"IF", 0, 2, 0);
	trans[1][7558]	= settr(7774,0,7587,3457,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][7587] = settr(7803,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7803,0,7578,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7578] = settr(7794,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7794,2,7576,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7576] = settr(7792,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7792,2,7559,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7792,2,7562,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7792,2,7565,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7792,2,7568,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7792,2,7571,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7792,2,7574,0,0,"IF", 1, 2, 0);
	trans[1][7559]	= settr(7775,4,7579,3458,3458,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7560 -> 7579,0 */
	reached1[7560] = 1;
	trans[1][7560]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7561]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7577]	= settr(7793,0,7579,3459,3459,".(goto)", 1, 2, 0);
	trans[1][7562]	= settr(7778,4,7579,3460,3460,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7563 -> 7579,0 */
	reached1[7563] = 1;
	trans[1][7563]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7564]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7565]	= settr(7781,4,7579,3461,3461,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7566 -> 7579,0 */
	reached1[7566] = 1;
	trans[1][7566]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7567]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7568]	= settr(7784,4,7579,3462,3462,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7569 -> 7579,0 */
	reached1[7569] = 1;
	trans[1][7569]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7570]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7571]	= settr(7787,4,7579,3463,3463,"((START==ABORT))", 1, 2, 0); /* m: 7572 -> 7579,0 */
	reached1[7572] = 1;
	trans[1][7572]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7573]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7574]	= settr(7790,2,7575,2,0,"else", 1, 2, 0);
	trans[1][7575]	= settr(7791,4,7579,3464,3464,"(1)", 1, 2, 0); /* m: 7577 -> 7579,0 */
	reached1[7577] = 1;
	trans[1][7579]	= settr(7795,0,7585,3465,3465,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7585] = settr(7801,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7801,0,7580,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7801,0,7583,0,0,"IF", 0, 2, 0);
	trans[1][7580]	= settr(7796,0,7582,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7582] = settr(7798,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7798,0,7581,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7581]	= settr(7797,0,7678,3466,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7586]	= settr(7802,0,7678,1,0,".(goto)", 0, 2, 0); /* m: 7678 -> 0,7682 */
	reached1[7678] = 1;
	trans[1][7583]	= settr(7799,0,7584,2,0,"else", 0, 2, 0);
	trans[1][7584]	= settr(7800,0,7682,3467,3467,"(1)", 0, 2, 0); /* m: 7678 -> 7682,0 */
	reached1[7678] = 1;
	trans[1][7676]	= settr(7892,0,7678,1,0,".(goto)", 0, 2, 0); /* m: 7678 -> 0,7682 */
	reached1[7678] = 1;
	trans[1][7588]	= settr(7804,0,7616,3468,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][7616] = settr(7832,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7832,0,7608,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7608] = settr(7824,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7824,2,7606,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7606] = settr(7822,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7822,2,7589,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7822,2,7592,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7822,2,7595,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7822,2,7598,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7822,2,7601,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7822,2,7604,0,0,"IF", 1, 2, 0);
	trans[1][7589]	= settr(7805,4,7614,3469,3469,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7590 -> 7614,0 */
	reached1[7590] = 1;
	trans[1][7590]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7591]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7607]	= settr(7823,0,7614,3470,3470,".(goto)", 1, 2, 0);
	trans[1][7592]	= settr(7808,4,7614,3471,3471,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7593 -> 7614,0 */
	reached1[7593] = 1;
	trans[1][7593]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7594]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7595]	= settr(7811,4,7614,3472,3472,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7596 -> 7614,0 */
	reached1[7596] = 1;
	trans[1][7596]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7597]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7598]	= settr(7814,4,7614,3473,3473,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7599 -> 7614,0 */
	reached1[7599] = 1;
	trans[1][7599]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7600]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7601]	= settr(7817,4,7614,3474,3474,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7602 -> 7614,0 */
	reached1[7602] = 1;
	trans[1][7602]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7603]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7604]	= settr(7820,2,7605,2,0,"else", 1, 2, 0);
	trans[1][7605]	= settr(7821,4,7614,3475,3475,"(1)", 1, 2, 0); /* m: 7607 -> 7614,0 */
	reached1[7607] = 1;
	T = trans[1][7614] = settr(7830,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7830,0,7609,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7830,0,7612,0,0,"IF", 0, 2, 0);
	trans[1][7609]	= settr(7825,0,7611,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7611] = settr(7827,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7827,0,7610,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7610]	= settr(7826,0,7678,3476,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7615]	= settr(7831,0,7678,1,0,".(goto)", 0, 2, 0); /* m: 7678 -> 0,7682 */
	reached1[7678] = 1;
	trans[1][7612]	= settr(7828,0,7613,2,0,"else", 0, 2, 0);
	trans[1][7613]	= settr(7829,0,7682,3477,3477,"(1)", 0, 2, 0); /* m: 7678 -> 7682,0 */
	reached1[7678] = 1;
	trans[1][7617]	= settr(7833,0,7645,3478,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7645] = settr(7861,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7861,0,7637,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7637] = settr(7853,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7853,2,7635,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7635] = settr(7851,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7851,2,7618,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7851,2,7621,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7851,2,7624,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7851,2,7627,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7851,2,7630,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7851,2,7633,0,0,"IF", 1, 2, 0);
	trans[1][7618]	= settr(7834,4,7643,3479,3479,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7619 -> 7643,0 */
	reached1[7619] = 1;
	trans[1][7619]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7620]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7636]	= settr(7852,0,7643,3480,3480,".(goto)", 1, 2, 0);
	trans[1][7621]	= settr(7837,4,7643,3481,3481,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7622 -> 7643,0 */
	reached1[7622] = 1;
	trans[1][7622]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7623]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7624]	= settr(7840,4,7643,3482,3482,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7625 -> 7643,0 */
	reached1[7625] = 1;
	trans[1][7625]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7626]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7627]	= settr(7843,4,7643,3483,3483,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7628 -> 7643,0 */
	reached1[7628] = 1;
	trans[1][7628]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7629]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7630]	= settr(7846,4,7643,3484,3484,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7631 -> 7643,0 */
	reached1[7631] = 1;
	trans[1][7631]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7632]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7633]	= settr(7849,2,7634,2,0,"else", 1, 2, 0);
	trans[1][7634]	= settr(7850,4,7643,3485,3485,"(1)", 1, 2, 0); /* m: 7636 -> 7643,0 */
	reached1[7636] = 1;
	T = trans[1][7643] = settr(7859,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7859,0,7638,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7859,0,7641,0,0,"IF", 0, 2, 0);
	trans[1][7638]	= settr(7854,0,7640,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7640] = settr(7856,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7856,0,7639,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7639]	= settr(7855,0,7678,3486,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7644]	= settr(7860,0,7678,1,0,".(goto)", 0, 2, 0); /* m: 7678 -> 0,7682 */
	reached1[7678] = 1;
	trans[1][7641]	= settr(7857,0,7642,2,0,"else", 0, 2, 0);
	trans[1][7642]	= settr(7858,0,7682,3487,3487,"(1)", 0, 2, 0); /* m: 7678 -> 7682,0 */
	reached1[7678] = 1;
	trans[1][7646]	= settr(7862,0,7674,3488,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][7674] = settr(7890,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7890,0,7666,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7666] = settr(7882,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7882,2,7664,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7664] = settr(7880,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7880,2,7647,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7880,2,7650,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7880,2,7653,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7880,2,7656,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7880,2,7659,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7880,2,7662,0,0,"IF", 1, 2, 0);
	trans[1][7647]	= settr(7863,4,7672,3489,3489,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7648 -> 7672,0 */
	reached1[7648] = 1;
	trans[1][7648]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7649]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7665]	= settr(7881,0,7672,3490,3490,".(goto)", 1, 2, 0);
	trans[1][7650]	= settr(7866,4,7672,3491,3491,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7651 -> 7672,0 */
	reached1[7651] = 1;
	trans[1][7651]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7652]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7653]	= settr(7869,4,7672,3492,3492,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7654 -> 7672,0 */
	reached1[7654] = 1;
	trans[1][7654]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7655]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7656]	= settr(7872,4,7672,3493,3493,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7657 -> 7672,0 */
	reached1[7657] = 1;
	trans[1][7657]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7658]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7659]	= settr(7875,4,7672,3494,3494,"((STOP==ABORT))", 1, 2, 0); /* m: 7660 -> 7672,0 */
	reached1[7660] = 1;
	trans[1][7660]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7661]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7662]	= settr(7878,2,7663,2,0,"else", 1, 2, 0);
	trans[1][7663]	= settr(7879,4,7672,3495,3495,"(1)", 1, 2, 0); /* m: 7665 -> 7672,0 */
	reached1[7665] = 1;
	T = trans[1][7672] = settr(7888,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(7888,0,7667,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(7888,0,7670,0,0,"IF", 0, 2, 0);
	trans[1][7667]	= settr(7883,0,7669,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7669] = settr(7885,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7885,0,7668,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7668]	= settr(7884,0,7678,3496,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7673]	= settr(7889,0,7678,1,0,".(goto)", 0, 2, 0); /* m: 7678 -> 0,7682 */
	reached1[7678] = 1;
	trans[1][7670]	= settr(7886,0,7671,2,0,"else", 0, 2, 0);
	trans[1][7671]	= settr(7887,0,7682,3497,3497,"(1)", 0, 2, 0); /* m: 7678 -> 7682,0 */
	reached1[7678] = 1;
	trans[1][7678]	= settr(7894,0,7682,3498,3498,"j = (j-1)", 0, 2, 0);
	trans[1][7679]	= settr(7895,0,7680,2,0,"else", 0, 2, 0);
	trans[1][7680]	= settr(7896,0,8279,3499,3499,"j = 1", 0, 2, 0);
	trans[1][7681]	= settr(7897,0,8279,1,0,"goto :b72", 0, 2, 0);
	trans[1][7684]	= settr(7900,0,8279,1,0,"break", 0, 2, 0);
	trans[1][7843]	= settr(8059,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7689]	= settr(7905,0,7841,2,0,"else", 0, 2, 0);
	T = trans[ 1][7841] = settr(8057,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8057,0,7818,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7818] = settr(8034,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8034,0,7815,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7816]	= settr(8032,0,7815,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7815] = settr(8031,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8031,0,7690,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8031,0,7812,0,0,"DO", 0, 2, 0);
	trans[1][7690]	= settr(7906,0,7810,3500,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][7810] = settr(8026,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8026,0,7808,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7808] = settr(8024,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8024,0,7691,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8024,0,7721,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8024,0,7750,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8024,0,7779,0,0,"IF", 0, 2, 0);
	trans[1][7691]	= settr(7907,0,7720,3501,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][7720] = settr(7936,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7936,0,7711,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7711] = settr(7927,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7927,2,7709,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7709] = settr(7925,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7925,2,7692,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7925,2,7695,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7925,2,7698,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7925,2,7701,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7925,2,7704,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7925,2,7707,0,0,"IF", 1, 2, 0);
	trans[1][7692]	= settr(7908,4,7712,3502,3502,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7693 -> 7712,0 */
	reached1[7693] = 1;
	trans[1][7693]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7694]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7710]	= settr(7926,0,7712,3503,3503,".(goto)", 1, 2, 0);
	trans[1][7695]	= settr(7911,4,7712,3504,3504,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7696 -> 7712,0 */
	reached1[7696] = 1;
	trans[1][7696]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7697]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7698]	= settr(7914,4,7712,3505,3505,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7699 -> 7712,0 */
	reached1[7699] = 1;
	trans[1][7699]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7700]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7701]	= settr(7917,4,7712,3506,3506,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7702 -> 7712,0 */
	reached1[7702] = 1;
	trans[1][7702]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7703]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7704]	= settr(7920,4,7712,3507,3507,"((START==ABORT))", 1, 2, 0); /* m: 7705 -> 7712,0 */
	reached1[7705] = 1;
	trans[1][7705]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7706]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7707]	= settr(7923,2,7708,2,0,"else", 1, 2, 0);
	trans[1][7708]	= settr(7924,4,7712,3508,3508,"(1)", 1, 2, 0); /* m: 7710 -> 7712,0 */
	reached1[7710] = 1;
	trans[1][7712]	= settr(7928,0,7718,3509,3509,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7718] = settr(7934,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7934,0,7713,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7934,0,7716,0,0,"IF", 0, 2, 0);
	trans[1][7713]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7715] = settr(7931,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7931,0,7714,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7714]	= settr(7930,0,7811,3510,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7719]	= settr(7935,0,7811,1,0,".(goto)", 0, 2, 0); /* m: 7811 -> 0,7815 */
	reached1[7811] = 1;
	trans[1][7716]	= settr(7932,0,7717,2,0,"else", 0, 2, 0);
	trans[1][7717]	= settr(7933,0,7815,3511,3511,"(1)", 0, 2, 0); /* m: 7811 -> 7815,0 */
	reached1[7811] = 1;
	trans[1][7809]	= settr(8025,0,7811,1,0,".(goto)", 0, 2, 0); /* m: 7811 -> 0,7815 */
	reached1[7811] = 1;
	trans[1][7721]	= settr(7937,0,7749,3512,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][7749] = settr(7965,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7965,0,7741,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7741] = settr(7957,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7957,2,7739,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7739] = settr(7955,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7955,2,7722,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7955,2,7725,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7955,2,7728,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7955,2,7731,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7955,2,7734,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7955,2,7737,0,0,"IF", 1, 2, 0);
	trans[1][7722]	= settr(7938,4,7747,3513,3513,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7723 -> 7747,0 */
	reached1[7723] = 1;
	trans[1][7723]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7724]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7740]	= settr(7956,0,7747,3514,3514,".(goto)", 1, 2, 0);
	trans[1][7725]	= settr(7941,4,7747,3515,3515,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7726 -> 7747,0 */
	reached1[7726] = 1;
	trans[1][7726]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7727]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7728]	= settr(7944,4,7747,3516,3516,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7729 -> 7747,0 */
	reached1[7729] = 1;
	trans[1][7729]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7730]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7731]	= settr(7947,4,7747,3517,3517,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7732 -> 7747,0 */
	reached1[7732] = 1;
	trans[1][7732]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7733]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7734]	= settr(7950,4,7747,3518,3518,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7735 -> 7747,0 */
	reached1[7735] = 1;
	trans[1][7735]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7736]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7737]	= settr(7953,2,7738,2,0,"else", 1, 2, 0);
	trans[1][7738]	= settr(7954,4,7747,3519,3519,"(1)", 1, 2, 0); /* m: 7740 -> 7747,0 */
	reached1[7740] = 1;
	T = trans[1][7747] = settr(7963,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7963,0,7742,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7963,0,7745,0,0,"IF", 0, 2, 0);
	trans[1][7742]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7744] = settr(7960,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7960,0,7743,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7743]	= settr(7959,0,7811,3520,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7748]	= settr(7964,0,7811,1,0,".(goto)", 0, 2, 0); /* m: 7811 -> 0,7815 */
	reached1[7811] = 1;
	trans[1][7745]	= settr(7961,0,7746,2,0,"else", 0, 2, 0);
	trans[1][7746]	= settr(7962,0,7815,3521,3521,"(1)", 0, 2, 0); /* m: 7811 -> 7815,0 */
	reached1[7811] = 1;
	trans[1][7750]	= settr(7966,0,7778,3522,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7778] = settr(7994,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7994,0,7770,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7770] = settr(7986,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(7986,2,7768,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7768] = settr(7984,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7984,2,7751,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7984,2,7754,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7984,2,7757,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7984,2,7760,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(7984,2,7763,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(7984,2,7766,0,0,"IF", 1, 2, 0);
	trans[1][7751]	= settr(7967,4,7776,3523,3523,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7752 -> 7776,0 */
	reached1[7752] = 1;
	trans[1][7752]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7753]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7769]	= settr(7985,0,7776,3524,3524,".(goto)", 1, 2, 0);
	trans[1][7754]	= settr(7970,4,7776,3525,3525,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7755 -> 7776,0 */
	reached1[7755] = 1;
	trans[1][7755]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7756]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7757]	= settr(7973,4,7776,3526,3526,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7758 -> 7776,0 */
	reached1[7758] = 1;
	trans[1][7758]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7759]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7760]	= settr(7976,4,7776,3527,3527,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7761 -> 7776,0 */
	reached1[7761] = 1;
	trans[1][7761]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7762]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7763]	= settr(7979,4,7776,3528,3528,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7764 -> 7776,0 */
	reached1[7764] = 1;
	trans[1][7764]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7765]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7766]	= settr(7982,2,7767,2,0,"else", 1, 2, 0);
	trans[1][7767]	= settr(7983,4,7776,3529,3529,"(1)", 1, 2, 0); /* m: 7769 -> 7776,0 */
	reached1[7769] = 1;
	T = trans[1][7776] = settr(7992,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(7992,0,7771,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(7992,0,7774,0,0,"IF", 0, 2, 0);
	trans[1][7771]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7773] = settr(7989,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(7989,0,7772,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7772]	= settr(7988,0,7811,3530,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7777]	= settr(7993,0,7811,1,0,".(goto)", 0, 2, 0); /* m: 7811 -> 0,7815 */
	reached1[7811] = 1;
	trans[1][7774]	= settr(7990,0,7775,2,0,"else", 0, 2, 0);
	trans[1][7775]	= settr(7991,0,7815,3531,3531,"(1)", 0, 2, 0); /* m: 7811 -> 7815,0 */
	reached1[7811] = 1;
	trans[1][7779]	= settr(7995,0,7807,3532,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][7807] = settr(8023,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8023,0,7799,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7799] = settr(8015,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8015,2,7797,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7797] = settr(8013,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8013,2,7780,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8013,2,7783,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8013,2,7786,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8013,2,7789,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8013,2,7792,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8013,2,7795,0,0,"IF", 1, 2, 0);
	trans[1][7780]	= settr(7996,4,7805,3533,3533,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7781 -> 7805,0 */
	reached1[7781] = 1;
	trans[1][7781]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7782]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7798]	= settr(8014,0,7805,3534,3534,".(goto)", 1, 2, 0);
	trans[1][7783]	= settr(7999,4,7805,3535,3535,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7784 -> 7805,0 */
	reached1[7784] = 1;
	trans[1][7784]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7785]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7786]	= settr(8002,4,7805,3536,3536,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7787 -> 7805,0 */
	reached1[7787] = 1;
	trans[1][7787]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7788]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7789]	= settr(8005,4,7805,3537,3537,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7790 -> 7805,0 */
	reached1[7790] = 1;
	trans[1][7790]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7791]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7792]	= settr(8008,4,7805,3538,3538,"((STOP==ABORT))", 1, 2, 0); /* m: 7793 -> 7805,0 */
	reached1[7793] = 1;
	trans[1][7793]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7794]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7795]	= settr(8011,2,7796,2,0,"else", 1, 2, 0);
	trans[1][7796]	= settr(8012,4,7805,3539,3539,"(1)", 1, 2, 0); /* m: 7798 -> 7805,0 */
	reached1[7798] = 1;
	T = trans[1][7805] = settr(8021,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8021,0,7800,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8021,0,7803,0,0,"IF", 0, 2, 0);
	trans[1][7800]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][7802] = settr(8018,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8018,0,7801,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7801]	= settr(8017,0,7811,3540,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7806]	= settr(8022,0,7811,1,0,".(goto)", 0, 2, 0); /* m: 7811 -> 0,7815 */
	reached1[7811] = 1;
	trans[1][7803]	= settr(8019,0,7804,2,0,"else", 0, 2, 0);
	trans[1][7804]	= settr(8020,0,7815,3541,3541,"(1)", 0, 2, 0); /* m: 7811 -> 7815,0 */
	reached1[7811] = 1;
	trans[1][7811]	= settr(8027,0,7815,3542,3542,"j = (j+1)", 0, 2, 0);
	trans[1][7812]	= settr(8028,0,7813,2,0,"else", 0, 2, 0);
	trans[1][7813]	= settr(8029,0,7838,3543,3543,"j = 1", 0, 2, 0);
	trans[1][7814]	= settr(8030,0,7838,1,0,"goto :b73", 0, 2, 0);
	trans[1][7817]	= settr(8033,0,7838,1,0,"break", 0, 2, 0);
	trans[1][7839]	= settr(8055,0,7838,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7838] = settr(8054,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8054,0,7819,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8054,0,7835,0,0,"DO", 0, 2, 0);
	trans[1][7819]	= settr(8035,0,7832,3544,0,"((j<3))", 0, 2, 0);
	T = trans[1][7832] = settr(8048,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8048,0,7820,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8048,0,7823,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8048,0,7826,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8048,0,7829,0,0,"IF", 0, 2, 0);
	trans[1][7820]	= settr(8036,0,7822,3545,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][7822] = settr(8038,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8038,0,7821,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7821]	= settr(8037,0,7834,3546,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7833]	= settr(8049,0,7834,1,0,".(goto)", 0, 2, 0); /* m: 7834 -> 0,7838 */
	reached1[7834] = 1;
	trans[1][7823]	= settr(8039,0,7825,3547,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7825] = settr(8041,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8041,0,7824,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7824]	= settr(8040,0,7834,3548,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7826]	= settr(8042,0,7828,3549,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][7828] = settr(8044,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8044,0,7827,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7827]	= settr(8043,0,7834,3550,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7829]	= settr(8045,0,7831,3551,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][7831] = settr(8047,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8047,0,7830,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7830]	= settr(8046,0,7834,3552,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7834]	= settr(8050,0,7838,3553,3553,"j = (j+1)", 0, 2, 0);
	trans[1][7835]	= settr(8051,0,7836,2,0,"else", 0, 2, 0);
	trans[1][7836]	= settr(8052,0,8279,3554,3554,"j = 1", 0, 2, 0);
	trans[1][7837]	= settr(8053,0,8279,1,0,"goto :b74", 0, 2, 0);
	trans[1][7840]	= settr(8056,0,8279,1,0,"break", 0, 2, 0);
	trans[1][7847]	= settr(8063,0,8273,3555,0,"(((5==ABORTING)||(5==STOPPING)))", 0, 2, 0);
	T = trans[ 1][8273] = settr(8489,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8489,0,8271,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8271] = settr(8487,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8487,0,7848,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8487,0,7850,0,0,"IF", 0, 2, 0);
	trans[1][7848]	= settr(8064,0,7849,3556,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][7849]	= settr(8065,0,8279,3557,3557,"supervisor_started = 1", 1, 2, 0);
	trans[1][8272]	= settr(8488,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7850]	= settr(8066,0,8269,2,0,"else", 0, 2, 0);
	T = trans[1][8269] = settr(8485,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8485,0,7851,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8485,0,8116,0,0,"IF", 0, 2, 0);
	trans[1][7851]	= settr(8067,0,8115,3558,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][8115] = settr(8331,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8331,0,8113,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8113] = settr(8329,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8329,0,7852,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8329,0,7982,0,0,"IF", 0, 2, 0);
	trans[1][7852]	= settr(8068,0,7981,3559,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][7981] = settr(8197,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8197,0,7978,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7979]	= settr(8195,0,7978,1,0,".(goto)", 0, 2, 0);
	T = trans[1][7978] = settr(8194,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8194,0,7853,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8194,0,7975,0,0,"DO", 0, 2, 0);
	trans[1][7853]	= settr(8069,0,7973,3560,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][7973] = settr(8189,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8189,0,7971,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][7971] = settr(8187,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8187,0,7854,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8187,0,7884,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8187,0,7913,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8187,0,7942,0,0,"IF", 0, 2, 0);
	trans[1][7854]	= settr(8070,0,7883,3561,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][7883] = settr(8099,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8099,0,7874,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7874] = settr(8090,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8090,2,7872,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7872] = settr(8088,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8088,2,7855,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8088,2,7858,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8088,2,7861,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8088,2,7864,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8088,2,7867,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8088,2,7870,0,0,"IF", 1, 2, 0);
	trans[1][7855]	= settr(8071,4,7875,3562,3562,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7856 -> 7875,0 */
	reached1[7856] = 1;
	trans[1][7856]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7857]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7873]	= settr(8089,0,7875,3563,3563,".(goto)", 1, 2, 0);
	trans[1][7858]	= settr(8074,4,7875,3564,3564,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7859 -> 7875,0 */
	reached1[7859] = 1;
	trans[1][7859]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7860]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7861]	= settr(8077,4,7875,3565,3565,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7862 -> 7875,0 */
	reached1[7862] = 1;
	trans[1][7862]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7863]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7864]	= settr(8080,4,7875,3566,3566,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7865 -> 7875,0 */
	reached1[7865] = 1;
	trans[1][7865]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7866]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7867]	= settr(8083,4,7875,3567,3567,"((START==ABORT))", 1, 2, 0); /* m: 7868 -> 7875,0 */
	reached1[7868] = 1;
	trans[1][7868]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7869]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7870]	= settr(8086,2,7871,2,0,"else", 1, 2, 0);
	trans[1][7871]	= settr(8087,4,7875,3568,3568,"(1)", 1, 2, 0); /* m: 7873 -> 7875,0 */
	reached1[7873] = 1;
	trans[1][7875]	= settr(8091,0,7881,3569,3569,"(run Thread(j))", 0, 2, 0);
	T = trans[1][7881] = settr(8097,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8097,0,7876,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8097,0,7879,0,0,"IF", 0, 2, 0);
	trans[1][7876]	= settr(8092,0,7878,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7878] = settr(8094,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8094,0,7877,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7877]	= settr(8093,0,7974,3570,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7882]	= settr(8098,0,7974,1,0,".(goto)", 0, 2, 0); /* m: 7974 -> 0,7978 */
	reached1[7974] = 1;
	trans[1][7879]	= settr(8095,0,7880,2,0,"else", 0, 2, 0);
	trans[1][7880]	= settr(8096,0,7978,3571,3571,"(1)", 0, 2, 0); /* m: 7974 -> 7978,0 */
	reached1[7974] = 1;
	trans[1][7972]	= settr(8188,0,7974,1,0,".(goto)", 0, 2, 0); /* m: 7974 -> 0,7978 */
	reached1[7974] = 1;
	trans[1][7884]	= settr(8100,0,7912,3572,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][7912] = settr(8128,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8128,0,7904,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7904] = settr(8120,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8120,2,7902,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7902] = settr(8118,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8118,2,7885,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8118,2,7888,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8118,2,7891,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8118,2,7894,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8118,2,7897,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8118,2,7900,0,0,"IF", 1, 2, 0);
	trans[1][7885]	= settr(8101,4,7910,3573,3573,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7886 -> 7910,0 */
	reached1[7886] = 1;
	trans[1][7886]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7887]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7903]	= settr(8119,0,7910,3574,3574,".(goto)", 1, 2, 0);
	trans[1][7888]	= settr(8104,4,7910,3575,3575,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7889 -> 7910,0 */
	reached1[7889] = 1;
	trans[1][7889]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7890]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7891]	= settr(8107,4,7910,3576,3576,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7892 -> 7910,0 */
	reached1[7892] = 1;
	trans[1][7892]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7893]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7894]	= settr(8110,4,7910,3577,3577,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7895 -> 7910,0 */
	reached1[7895] = 1;
	trans[1][7895]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7896]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7897]	= settr(8113,4,7910,3578,3578,"((PAUSE==ABORT))", 1, 2, 0); /* m: 7898 -> 7910,0 */
	reached1[7898] = 1;
	trans[1][7898]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7899]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7900]	= settr(8116,2,7901,2,0,"else", 1, 2, 0);
	trans[1][7901]	= settr(8117,4,7910,3579,3579,"(1)", 1, 2, 0); /* m: 7903 -> 7910,0 */
	reached1[7903] = 1;
	T = trans[1][7910] = settr(8126,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8126,0,7905,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8126,0,7908,0,0,"IF", 0, 2, 0);
	trans[1][7905]	= settr(8121,0,7907,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7907] = settr(8123,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8123,0,7906,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7906]	= settr(8122,0,7974,3580,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7911]	= settr(8127,0,7974,1,0,".(goto)", 0, 2, 0); /* m: 7974 -> 0,7978 */
	reached1[7974] = 1;
	trans[1][7908]	= settr(8124,0,7909,2,0,"else", 0, 2, 0);
	trans[1][7909]	= settr(8125,0,7978,3581,3581,"(1)", 0, 2, 0); /* m: 7974 -> 7978,0 */
	reached1[7974] = 1;
	trans[1][7913]	= settr(8129,0,7941,3582,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][7941] = settr(8157,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8157,0,7933,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7933] = settr(8149,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8149,2,7931,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7931] = settr(8147,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8147,2,7914,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8147,2,7917,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8147,2,7920,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8147,2,7923,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8147,2,7926,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8147,2,7929,0,0,"IF", 1, 2, 0);
	trans[1][7914]	= settr(8130,4,7939,3583,3583,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7915 -> 7939,0 */
	reached1[7915] = 1;
	trans[1][7915]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7916]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7932]	= settr(8148,0,7939,3584,3584,".(goto)", 1, 2, 0);
	trans[1][7917]	= settr(8133,4,7939,3585,3585,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7918 -> 7939,0 */
	reached1[7918] = 1;
	trans[1][7918]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7919]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7920]	= settr(8136,4,7939,3586,3586,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7921 -> 7939,0 */
	reached1[7921] = 1;
	trans[1][7921]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7922]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7923]	= settr(8139,4,7939,3587,3587,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7924 -> 7939,0 */
	reached1[7924] = 1;
	trans[1][7924]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7925]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7926]	= settr(8142,4,7939,3588,3588,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 7927 -> 7939,0 */
	reached1[7927] = 1;
	trans[1][7927]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7928]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7929]	= settr(8145,2,7930,2,0,"else", 1, 2, 0);
	trans[1][7930]	= settr(8146,4,7939,3589,3589,"(1)", 1, 2, 0); /* m: 7932 -> 7939,0 */
	reached1[7932] = 1;
	T = trans[1][7939] = settr(8155,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8155,0,7934,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8155,0,7937,0,0,"IF", 0, 2, 0);
	trans[1][7934]	= settr(8150,0,7936,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7936] = settr(8152,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8152,0,7935,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7935]	= settr(8151,0,7974,3590,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7940]	= settr(8156,0,7974,1,0,".(goto)", 0, 2, 0); /* m: 7974 -> 0,7978 */
	reached1[7974] = 1;
	trans[1][7937]	= settr(8153,0,7938,2,0,"else", 0, 2, 0);
	trans[1][7938]	= settr(8154,0,7978,3591,3591,"(1)", 0, 2, 0); /* m: 7974 -> 7978,0 */
	reached1[7974] = 1;
	trans[1][7942]	= settr(8158,0,7970,3592,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][7970] = settr(8186,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8186,0,7962,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][7962] = settr(8178,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8178,2,7960,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][7960] = settr(8176,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8176,2,7943,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8176,2,7946,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8176,2,7949,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8176,2,7952,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8176,2,7955,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8176,2,7958,0,0,"IF", 1, 2, 0);
	trans[1][7943]	= settr(8159,4,7968,3593,3593,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7944 -> 7968,0 */
	reached1[7944] = 1;
	trans[1][7944]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7945]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][7961]	= settr(8177,0,7968,3594,3594,".(goto)", 1, 2, 0);
	trans[1][7946]	= settr(8162,4,7968,3595,3595,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7947 -> 7968,0 */
	reached1[7947] = 1;
	trans[1][7947]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7948]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7949]	= settr(8165,4,7968,3596,3596,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7950 -> 7968,0 */
	reached1[7950] = 1;
	trans[1][7950]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7951]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7952]	= settr(8168,4,7968,3597,3597,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7953 -> 7968,0 */
	reached1[7953] = 1;
	trans[1][7953]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7954]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7955]	= settr(8171,4,7968,3598,3598,"((STOP==ABORT))", 1, 2, 0); /* m: 7956 -> 7968,0 */
	reached1[7956] = 1;
	trans[1][7956]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][7957]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][7958]	= settr(8174,2,7959,2,0,"else", 1, 2, 0);
	trans[1][7959]	= settr(8175,4,7968,3599,3599,"(1)", 1, 2, 0); /* m: 7961 -> 7968,0 */
	reached1[7961] = 1;
	T = trans[1][7968] = settr(8184,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8184,0,7963,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8184,0,7966,0,0,"IF", 0, 2, 0);
	trans[1][7963]	= settr(8179,0,7965,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][7965] = settr(8181,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8181,0,7964,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7964]	= settr(8180,0,7974,3600,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][7969]	= settr(8185,0,7974,1,0,".(goto)", 0, 2, 0); /* m: 7974 -> 0,7978 */
	reached1[7974] = 1;
	trans[1][7966]	= settr(8182,0,7967,2,0,"else", 0, 2, 0);
	trans[1][7967]	= settr(8183,0,7978,3601,3601,"(1)", 0, 2, 0); /* m: 7974 -> 7978,0 */
	reached1[7974] = 1;
	trans[1][7974]	= settr(8190,0,7978,3602,3602,"j = (j+1)", 0, 2, 0);
	trans[1][7975]	= settr(8191,0,7976,2,0,"else", 0, 2, 0);
	trans[1][7976]	= settr(8192,0,8279,3603,3603,"j = 1", 0, 2, 0);
	trans[1][7977]	= settr(8193,0,8279,1,0,"goto :b75", 0, 2, 0);
	trans[1][7980]	= settr(8196,0,8279,1,0,"break", 0, 2, 0);
	trans[1][8114]	= settr(8330,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][7982]	= settr(8198,0,8112,2,0,"else", 0, 2, 0);
	T = trans[ 1][8112] = settr(8328,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8328,0,7983,0,0,"sub-sequence", 0, 2, 0);
	trans[1][7983]	= settr(8199,0,8109,3604,3604,"j = (3-1)", 0, 2, 0);
	trans[1][8110]	= settr(8326,0,8109,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8109] = settr(8325,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8325,0,7984,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8325,0,8106,0,0,"DO", 0, 2, 0);
	trans[1][7984]	= settr(8200,0,8104,3605,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][8104] = settr(8320,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8320,0,8102,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8102] = settr(8318,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8318,0,7985,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8318,0,8015,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8318,0,8044,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8318,0,8073,0,0,"IF", 0, 2, 0);
	trans[1][7985]	= settr(8201,0,8014,3606,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][8014] = settr(8230,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8230,0,8005,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8005] = settr(8221,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8221,2,8003,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8003] = settr(8219,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8219,2,7986,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8219,2,7989,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8219,2,7992,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8219,2,7995,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8219,2,7998,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8219,2,8001,0,0,"IF", 1, 2, 0);
	trans[1][7986]	= settr(8202,4,8006,3607,3607,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7987 -> 8006,0 */
	reached1[7987] = 1;
	trans[1][7987]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][7988]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8004]	= settr(8220,0,8006,3608,3608,".(goto)", 1, 2, 0);
	trans[1][7989]	= settr(8205,4,8006,3609,3609,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 7990 -> 8006,0 */
	reached1[7990] = 1;
	trans[1][7990]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][7991]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][7992]	= settr(8208,4,8006,3610,3610,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7993 -> 8006,0 */
	reached1[7993] = 1;
	trans[1][7993]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][7994]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][7995]	= settr(8211,4,8006,3611,3611,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 7996 -> 8006,0 */
	reached1[7996] = 1;
	trans[1][7996]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][7997]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][7998]	= settr(8214,4,8006,3612,3612,"((START==ABORT))", 1, 2, 0); /* m: 7999 -> 8006,0 */
	reached1[7999] = 1;
	trans[1][7999]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8000]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8001]	= settr(8217,2,8002,2,0,"else", 1, 2, 0);
	trans[1][8002]	= settr(8218,4,8006,3613,3613,"(1)", 1, 2, 0); /* m: 8004 -> 8006,0 */
	reached1[8004] = 1;
	trans[1][8006]	= settr(8222,0,8012,3614,3614,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8012] = settr(8228,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8228,0,8007,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8228,0,8010,0,0,"IF", 0, 2, 0);
	trans[1][8007]	= settr(8223,0,8009,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8009] = settr(8225,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8225,0,8008,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8008]	= settr(8224,0,8105,3615,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8013]	= settr(8229,0,8105,1,0,".(goto)", 0, 2, 0); /* m: 8105 -> 0,8109 */
	reached1[8105] = 1;
	trans[1][8010]	= settr(8226,0,8011,2,0,"else", 0, 2, 0);
	trans[1][8011]	= settr(8227,0,8109,3616,3616,"(1)", 0, 2, 0); /* m: 8105 -> 8109,0 */
	reached1[8105] = 1;
	trans[1][8103]	= settr(8319,0,8105,1,0,".(goto)", 0, 2, 0); /* m: 8105 -> 0,8109 */
	reached1[8105] = 1;
	trans[1][8015]	= settr(8231,0,8043,3617,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][8043] = settr(8259,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8259,0,8035,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8035] = settr(8251,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8251,2,8033,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8033] = settr(8249,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8249,2,8016,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8249,2,8019,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8249,2,8022,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8249,2,8025,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8249,2,8028,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8249,2,8031,0,0,"IF", 1, 2, 0);
	trans[1][8016]	= settr(8232,4,8041,3618,3618,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8017 -> 8041,0 */
	reached1[8017] = 1;
	trans[1][8017]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8018]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8034]	= settr(8250,0,8041,3619,3619,".(goto)", 1, 2, 0);
	trans[1][8019]	= settr(8235,4,8041,3620,3620,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8020 -> 8041,0 */
	reached1[8020] = 1;
	trans[1][8020]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8021]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8022]	= settr(8238,4,8041,3621,3621,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8023 -> 8041,0 */
	reached1[8023] = 1;
	trans[1][8023]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8024]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8025]	= settr(8241,4,8041,3622,3622,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8026 -> 8041,0 */
	reached1[8026] = 1;
	trans[1][8026]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8027]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8028]	= settr(8244,4,8041,3623,3623,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8029 -> 8041,0 */
	reached1[8029] = 1;
	trans[1][8029]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8030]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8031]	= settr(8247,2,8032,2,0,"else", 1, 2, 0);
	trans[1][8032]	= settr(8248,4,8041,3624,3624,"(1)", 1, 2, 0); /* m: 8034 -> 8041,0 */
	reached1[8034] = 1;
	T = trans[1][8041] = settr(8257,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8257,0,8036,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8257,0,8039,0,0,"IF", 0, 2, 0);
	trans[1][8036]	= settr(8252,0,8038,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8038] = settr(8254,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8254,0,8037,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8037]	= settr(8253,0,8105,3625,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8042]	= settr(8258,0,8105,1,0,".(goto)", 0, 2, 0); /* m: 8105 -> 0,8109 */
	reached1[8105] = 1;
	trans[1][8039]	= settr(8255,0,8040,2,0,"else", 0, 2, 0);
	trans[1][8040]	= settr(8256,0,8109,3626,3626,"(1)", 0, 2, 0); /* m: 8105 -> 8109,0 */
	reached1[8105] = 1;
	trans[1][8044]	= settr(8260,0,8072,3627,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8072] = settr(8288,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8288,0,8064,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8064] = settr(8280,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8280,2,8062,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8062] = settr(8278,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8278,2,8045,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8278,2,8048,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8278,2,8051,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8278,2,8054,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8278,2,8057,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8278,2,8060,0,0,"IF", 1, 2, 0);
	trans[1][8045]	= settr(8261,4,8070,3628,3628,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8046 -> 8070,0 */
	reached1[8046] = 1;
	trans[1][8046]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8047]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8063]	= settr(8279,0,8070,3629,3629,".(goto)", 1, 2, 0);
	trans[1][8048]	= settr(8264,4,8070,3630,3630,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8049 -> 8070,0 */
	reached1[8049] = 1;
	trans[1][8049]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8050]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8051]	= settr(8267,4,8070,3631,3631,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8052 -> 8070,0 */
	reached1[8052] = 1;
	trans[1][8052]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8053]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8054]	= settr(8270,4,8070,3632,3632,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8055 -> 8070,0 */
	reached1[8055] = 1;
	trans[1][8055]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8056]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8057]	= settr(8273,4,8070,3633,3633,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8058 -> 8070,0 */
	reached1[8058] = 1;
	trans[1][8058]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8059]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8060]	= settr(8276,2,8061,2,0,"else", 1, 2, 0);
	trans[1][8061]	= settr(8277,4,8070,3634,3634,"(1)", 1, 2, 0); /* m: 8063 -> 8070,0 */
	reached1[8063] = 1;
	T = trans[1][8070] = settr(8286,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8286,0,8065,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8286,0,8068,0,0,"IF", 0, 2, 0);
	trans[1][8065]	= settr(8281,0,8067,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8067] = settr(8283,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8283,0,8066,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8066]	= settr(8282,0,8105,3635,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8071]	= settr(8287,0,8105,1,0,".(goto)", 0, 2, 0); /* m: 8105 -> 0,8109 */
	reached1[8105] = 1;
	trans[1][8068]	= settr(8284,0,8069,2,0,"else", 0, 2, 0);
	trans[1][8069]	= settr(8285,0,8109,3636,3636,"(1)", 0, 2, 0); /* m: 8105 -> 8109,0 */
	reached1[8105] = 1;
	trans[1][8073]	= settr(8289,0,8101,3637,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][8101] = settr(8317,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8317,0,8093,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8093] = settr(8309,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8309,2,8091,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8091] = settr(8307,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8307,2,8074,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8307,2,8077,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8307,2,8080,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8307,2,8083,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8307,2,8086,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8307,2,8089,0,0,"IF", 1, 2, 0);
	trans[1][8074]	= settr(8290,4,8099,3638,3638,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8075 -> 8099,0 */
	reached1[8075] = 1;
	trans[1][8075]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8076]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8092]	= settr(8308,0,8099,3639,3639,".(goto)", 1, 2, 0);
	trans[1][8077]	= settr(8293,4,8099,3640,3640,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8078 -> 8099,0 */
	reached1[8078] = 1;
	trans[1][8078]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8079]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8080]	= settr(8296,4,8099,3641,3641,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8081 -> 8099,0 */
	reached1[8081] = 1;
	trans[1][8081]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8082]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8083]	= settr(8299,4,8099,3642,3642,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8084 -> 8099,0 */
	reached1[8084] = 1;
	trans[1][8084]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8085]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8086]	= settr(8302,4,8099,3643,3643,"((STOP==ABORT))", 1, 2, 0); /* m: 8087 -> 8099,0 */
	reached1[8087] = 1;
	trans[1][8087]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8088]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8089]	= settr(8305,2,8090,2,0,"else", 1, 2, 0);
	trans[1][8090]	= settr(8306,4,8099,3644,3644,"(1)", 1, 2, 0); /* m: 8092 -> 8099,0 */
	reached1[8092] = 1;
	T = trans[1][8099] = settr(8315,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8315,0,8094,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8315,0,8097,0,0,"IF", 0, 2, 0);
	trans[1][8094]	= settr(8310,0,8096,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8096] = settr(8312,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8312,0,8095,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8095]	= settr(8311,0,8105,3645,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8100]	= settr(8316,0,8105,1,0,".(goto)", 0, 2, 0); /* m: 8105 -> 0,8109 */
	reached1[8105] = 1;
	trans[1][8097]	= settr(8313,0,8098,2,0,"else", 0, 2, 0);
	trans[1][8098]	= settr(8314,0,8109,3646,3646,"(1)", 0, 2, 0); /* m: 8105 -> 8109,0 */
	reached1[8105] = 1;
	trans[1][8105]	= settr(8321,0,8109,3647,3647,"j = (j-1)", 0, 2, 0);
	trans[1][8106]	= settr(8322,0,8107,2,0,"else", 0, 2, 0);
	trans[1][8107]	= settr(8323,0,8279,3648,3648,"j = 1", 0, 2, 0);
	trans[1][8108]	= settr(8324,0,8279,1,0,"goto :b76", 0, 2, 0);
	trans[1][8111]	= settr(8327,0,8279,1,0,"break", 0, 2, 0);
	trans[1][8270]	= settr(8486,0,8279,1,0,".(goto)", 0, 2, 0);
	trans[1][8116]	= settr(8332,0,8268,2,0,"else", 0, 2, 0);
	T = trans[ 1][8268] = settr(8484,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8484,0,8245,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8245] = settr(8461,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8461,0,8242,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8243]	= settr(8459,0,8242,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8242] = settr(8458,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8458,0,8117,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8458,0,8239,0,0,"DO", 0, 2, 0);
	trans[1][8117]	= settr(8333,0,8237,3649,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][8237] = settr(8453,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8453,0,8235,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8235] = settr(8451,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8451,0,8118,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8451,0,8148,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8451,0,8177,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8451,0,8206,0,0,"IF", 0, 2, 0);
	trans[1][8118]	= settr(8334,0,8147,3650,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][8147] = settr(8363,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8363,0,8138,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8138] = settr(8354,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8354,2,8136,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8136] = settr(8352,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8352,2,8119,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8352,2,8122,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8352,2,8125,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8352,2,8128,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8352,2,8131,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8352,2,8134,0,0,"IF", 1, 2, 0);
	trans[1][8119]	= settr(8335,4,8139,3651,3651,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8120 -> 8139,0 */
	reached1[8120] = 1;
	trans[1][8120]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8121]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8137]	= settr(8353,0,8139,3652,3652,".(goto)", 1, 2, 0);
	trans[1][8122]	= settr(8338,4,8139,3653,3653,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8123 -> 8139,0 */
	reached1[8123] = 1;
	trans[1][8123]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8124]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8125]	= settr(8341,4,8139,3654,3654,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8126 -> 8139,0 */
	reached1[8126] = 1;
	trans[1][8126]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8127]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8128]	= settr(8344,4,8139,3655,3655,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8129 -> 8139,0 */
	reached1[8129] = 1;
	trans[1][8129]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8130]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8131]	= settr(8347,4,8139,3656,3656,"((START==ABORT))", 1, 2, 0); /* m: 8132 -> 8139,0 */
	reached1[8132] = 1;
	trans[1][8132]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8133]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8134]	= settr(8350,2,8135,2,0,"else", 1, 2, 0);
	trans[1][8135]	= settr(8351,4,8139,3657,3657,"(1)", 1, 2, 0); /* m: 8137 -> 8139,0 */
	reached1[8137] = 1;
	trans[1][8139]	= settr(8355,0,8145,3658,3658,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8145] = settr(8361,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8361,0,8140,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8361,0,8143,0,0,"IF", 0, 2, 0);
	trans[1][8140]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8142] = settr(8358,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8358,0,8141,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8141]	= settr(8357,0,8238,3659,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8146]	= settr(8362,0,8238,1,0,".(goto)", 0, 2, 0); /* m: 8238 -> 0,8242 */
	reached1[8238] = 1;
	trans[1][8143]	= settr(8359,0,8144,2,0,"else", 0, 2, 0);
	trans[1][8144]	= settr(8360,0,8242,3660,3660,"(1)", 0, 2, 0); /* m: 8238 -> 8242,0 */
	reached1[8238] = 1;
	trans[1][8236]	= settr(8452,0,8238,1,0,".(goto)", 0, 2, 0); /* m: 8238 -> 0,8242 */
	reached1[8238] = 1;
	trans[1][8148]	= settr(8364,0,8176,3661,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][8176] = settr(8392,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8392,0,8168,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8168] = settr(8384,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8384,2,8166,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8166] = settr(8382,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8382,2,8149,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8382,2,8152,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8382,2,8155,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8382,2,8158,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8382,2,8161,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8382,2,8164,0,0,"IF", 1, 2, 0);
	trans[1][8149]	= settr(8365,4,8174,3662,3662,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8150 -> 8174,0 */
	reached1[8150] = 1;
	trans[1][8150]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8151]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8167]	= settr(8383,0,8174,3663,3663,".(goto)", 1, 2, 0);
	trans[1][8152]	= settr(8368,4,8174,3664,3664,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8153 -> 8174,0 */
	reached1[8153] = 1;
	trans[1][8153]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8154]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8155]	= settr(8371,4,8174,3665,3665,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8156 -> 8174,0 */
	reached1[8156] = 1;
	trans[1][8156]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8157]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8158]	= settr(8374,4,8174,3666,3666,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8159 -> 8174,0 */
	reached1[8159] = 1;
	trans[1][8159]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8160]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8161]	= settr(8377,4,8174,3667,3667,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8162 -> 8174,0 */
	reached1[8162] = 1;
	trans[1][8162]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8163]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8164]	= settr(8380,2,8165,2,0,"else", 1, 2, 0);
	trans[1][8165]	= settr(8381,4,8174,3668,3668,"(1)", 1, 2, 0); /* m: 8167 -> 8174,0 */
	reached1[8167] = 1;
	T = trans[1][8174] = settr(8390,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8390,0,8169,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8390,0,8172,0,0,"IF", 0, 2, 0);
	trans[1][8169]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8171] = settr(8387,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8387,0,8170,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8170]	= settr(8386,0,8238,3669,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8175]	= settr(8391,0,8238,1,0,".(goto)", 0, 2, 0); /* m: 8238 -> 0,8242 */
	reached1[8238] = 1;
	trans[1][8172]	= settr(8388,0,8173,2,0,"else", 0, 2, 0);
	trans[1][8173]	= settr(8389,0,8242,3670,3670,"(1)", 0, 2, 0); /* m: 8238 -> 8242,0 */
	reached1[8238] = 1;
	trans[1][8177]	= settr(8393,0,8205,3671,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8205] = settr(8421,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8421,0,8197,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8197] = settr(8413,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8413,2,8195,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8195] = settr(8411,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8411,2,8178,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8411,2,8181,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8411,2,8184,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8411,2,8187,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8411,2,8190,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8411,2,8193,0,0,"IF", 1, 2, 0);
	trans[1][8178]	= settr(8394,4,8203,3672,3672,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8179 -> 8203,0 */
	reached1[8179] = 1;
	trans[1][8179]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8180]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8196]	= settr(8412,0,8203,3673,3673,".(goto)", 1, 2, 0);
	trans[1][8181]	= settr(8397,4,8203,3674,3674,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8182 -> 8203,0 */
	reached1[8182] = 1;
	trans[1][8182]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8183]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8184]	= settr(8400,4,8203,3675,3675,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8185 -> 8203,0 */
	reached1[8185] = 1;
	trans[1][8185]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8186]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8187]	= settr(8403,4,8203,3676,3676,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8188 -> 8203,0 */
	reached1[8188] = 1;
	trans[1][8188]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8189]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8190]	= settr(8406,4,8203,3677,3677,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8191 -> 8203,0 */
	reached1[8191] = 1;
	trans[1][8191]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8192]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8193]	= settr(8409,2,8194,2,0,"else", 1, 2, 0);
	trans[1][8194]	= settr(8410,4,8203,3678,3678,"(1)", 1, 2, 0); /* m: 8196 -> 8203,0 */
	reached1[8196] = 1;
	T = trans[1][8203] = settr(8419,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8419,0,8198,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8419,0,8201,0,0,"IF", 0, 2, 0);
	trans[1][8198]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8200] = settr(8416,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8416,0,8199,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8199]	= settr(8415,0,8238,3679,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8204]	= settr(8420,0,8238,1,0,".(goto)", 0, 2, 0); /* m: 8238 -> 0,8242 */
	reached1[8238] = 1;
	trans[1][8201]	= settr(8417,0,8202,2,0,"else", 0, 2, 0);
	trans[1][8202]	= settr(8418,0,8242,3680,3680,"(1)", 0, 2, 0); /* m: 8238 -> 8242,0 */
	reached1[8238] = 1;
	trans[1][8206]	= settr(8422,0,8234,3681,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][8234] = settr(8450,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8450,0,8226,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8226] = settr(8442,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8442,2,8224,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8224] = settr(8440,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8440,2,8207,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8440,2,8210,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8440,2,8213,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8440,2,8216,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8440,2,8219,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8440,2,8222,0,0,"IF", 1, 2, 0);
	trans[1][8207]	= settr(8423,4,8232,3682,3682,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8208 -> 8232,0 */
	reached1[8208] = 1;
	trans[1][8208]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8209]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8225]	= settr(8441,0,8232,3683,3683,".(goto)", 1, 2, 0);
	trans[1][8210]	= settr(8426,4,8232,3684,3684,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8211 -> 8232,0 */
	reached1[8211] = 1;
	trans[1][8211]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8212]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8213]	= settr(8429,4,8232,3685,3685,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8214 -> 8232,0 */
	reached1[8214] = 1;
	trans[1][8214]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8215]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8216]	= settr(8432,4,8232,3686,3686,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8217 -> 8232,0 */
	reached1[8217] = 1;
	trans[1][8217]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8218]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8219]	= settr(8435,4,8232,3687,3687,"((STOP==ABORT))", 1, 2, 0); /* m: 8220 -> 8232,0 */
	reached1[8220] = 1;
	trans[1][8220]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8221]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8222]	= settr(8438,2,8223,2,0,"else", 1, 2, 0);
	trans[1][8223]	= settr(8439,4,8232,3688,3688,"(1)", 1, 2, 0); /* m: 8225 -> 8232,0 */
	reached1[8225] = 1;
	T = trans[1][8232] = settr(8448,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8448,0,8227,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8448,0,8230,0,0,"IF", 0, 2, 0);
	trans[1][8227]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8229] = settr(8445,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8445,0,8228,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8228]	= settr(8444,0,8238,3689,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8233]	= settr(8449,0,8238,1,0,".(goto)", 0, 2, 0); /* m: 8238 -> 0,8242 */
	reached1[8238] = 1;
	trans[1][8230]	= settr(8446,0,8231,2,0,"else", 0, 2, 0);
	trans[1][8231]	= settr(8447,0,8242,3690,3690,"(1)", 0, 2, 0); /* m: 8238 -> 8242,0 */
	reached1[8238] = 1;
	trans[1][8238]	= settr(8454,0,8242,3691,3691,"j = (j+1)", 0, 2, 0);
	trans[1][8239]	= settr(8455,0,8240,2,0,"else", 0, 2, 0);
	trans[1][8240]	= settr(8456,0,8265,3692,3692,"j = 1", 0, 2, 0);
	trans[1][8241]	= settr(8457,0,8265,1,0,"goto :b77", 0, 2, 0);
	trans[1][8244]	= settr(8460,0,8265,1,0,"break", 0, 2, 0);
	trans[1][8266]	= settr(8482,0,8265,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8265] = settr(8481,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8481,0,8246,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8481,0,8262,0,0,"DO", 0, 2, 0);
	trans[1][8246]	= settr(8462,0,8259,3693,0,"((j<3))", 0, 2, 0);
	T = trans[1][8259] = settr(8475,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8475,0,8247,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8475,0,8250,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8475,0,8253,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8475,0,8256,0,0,"IF", 0, 2, 0);
	trans[1][8247]	= settr(8463,0,8249,3694,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][8249] = settr(8465,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8465,0,8248,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8248]	= settr(8464,0,8261,3695,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8260]	= settr(8476,0,8261,1,0,".(goto)", 0, 2, 0); /* m: 8261 -> 0,8265 */
	reached1[8261] = 1;
	trans[1][8250]	= settr(8466,0,8252,3696,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8252] = settr(8468,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8468,0,8251,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8251]	= settr(8467,0,8261,3697,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8253]	= settr(8469,0,8255,3698,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][8255] = settr(8471,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8471,0,8254,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8254]	= settr(8470,0,8261,3699,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8256]	= settr(8472,0,8258,3700,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][8258] = settr(8474,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8474,0,8257,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8257]	= settr(8473,0,8261,3701,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8261]	= settr(8477,0,8265,3702,3702,"j = (j+1)", 0, 2, 0);
	trans[1][8262]	= settr(8478,0,8263,2,0,"else", 0, 2, 0);
	trans[1][8263]	= settr(8479,0,8279,3703,3703,"j = 1", 0, 2, 0);
	trans[1][8264]	= settr(8480,0,8279,1,0,"goto :b78", 0, 2, 0);
	trans[1][8267]	= settr(8483,0,8279,1,0,"break", 0, 2, 0);
	trans[1][8274]	= settr(8490,0,8275,2,0,"else", 0, 2, 0);
	trans[1][8275]	= settr(8491,0,8279,1,0,"(1)", 0, 2, 0);
	trans[1][8279]	= settr(8495,0,10863,3704,3704,"states[0] = 5", 1, 2, 0);
	trans[1][10862]	= settr(11078,0,10863,1,0,".(goto)", 0, 2, 0);
	trans[1][8281]	= settr(8497,0,8282,3705,0,"((commands[0]==ABORT))", 1, 2, 0);
	trans[1][8282]	= settr(8498,0,9570,3706,0,"assert((((states[0]==STARTING)||(states[0]==RUNNING))||(states[0]==STOPPING)))", 1, 2, 0);
	T = trans[ 1][9570] = settr(9786,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9786,0,8283,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8283]	= settr(8499,0,9569,3707,3707,"states[0] = 4", 1, 2, 0);
	T = trans[ 1][9569] = settr(9785,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9785,0,9567,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9567] = settr(9783,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9783,0,8284,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9783,0,8711,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9783,0,9138,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9783,0,9565,0,0,"IF", 0, 2, 0);
	trans[1][8284]	= settr(8500,0,8710,3708,0,"((4==RUNNING))", 0, 2, 0);
	T = trans[ 1][8710] = settr(8926,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8926,0,8708,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8708] = settr(8924,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8924,0,8285,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8924,0,8287,0,0,"IF", 0, 2, 0);
	trans[1][8285]	= settr(8501,0,8286,3709,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][8286]	= settr(8502,0,10858,3710,3710,"supervisor_started = 1", 1, 2, 0);
	trans[1][8709]	= settr(8925,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8287]	= settr(8503,0,8706,2,0,"else", 0, 2, 0);
	T = trans[1][8706] = settr(8922,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8922,0,8288,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8922,0,8553,0,0,"IF", 0, 2, 0);
	trans[1][8288]	= settr(8504,0,8552,3711,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][8552] = settr(8768,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8768,0,8550,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8550] = settr(8766,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8766,0,8289,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8766,0,8419,0,0,"IF", 0, 2, 0);
	trans[1][8289]	= settr(8505,0,8418,3712,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][8418] = settr(8634,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8634,0,8415,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8416]	= settr(8632,0,8415,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8415] = settr(8631,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8631,0,8290,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8631,0,8412,0,0,"DO", 0, 2, 0);
	trans[1][8290]	= settr(8506,0,8410,3713,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][8410] = settr(8626,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8626,0,8408,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8408] = settr(8624,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8624,0,8291,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8624,0,8321,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8624,0,8350,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8624,0,8379,0,0,"IF", 0, 2, 0);
	trans[1][8291]	= settr(8507,0,8320,3714,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][8320] = settr(8536,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8536,0,8311,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8311] = settr(8527,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8527,2,8309,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8309] = settr(8525,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8525,2,8292,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8525,2,8295,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8525,2,8298,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8525,2,8301,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8525,2,8304,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8525,2,8307,0,0,"IF", 1, 2, 0);
	trans[1][8292]	= settr(8508,4,8312,3715,3715,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8293 -> 8312,0 */
	reached1[8293] = 1;
	trans[1][8293]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8294]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8310]	= settr(8526,0,8312,3716,3716,".(goto)", 1, 2, 0);
	trans[1][8295]	= settr(8511,4,8312,3717,3717,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8296 -> 8312,0 */
	reached1[8296] = 1;
	trans[1][8296]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8297]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8298]	= settr(8514,4,8312,3718,3718,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8299 -> 8312,0 */
	reached1[8299] = 1;
	trans[1][8299]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8300]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8301]	= settr(8517,4,8312,3719,3719,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8302 -> 8312,0 */
	reached1[8302] = 1;
	trans[1][8302]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8303]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8304]	= settr(8520,4,8312,3720,3720,"((START==ABORT))", 1, 2, 0); /* m: 8305 -> 8312,0 */
	reached1[8305] = 1;
	trans[1][8305]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8306]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8307]	= settr(8523,2,8308,2,0,"else", 1, 2, 0);
	trans[1][8308]	= settr(8524,4,8312,3721,3721,"(1)", 1, 2, 0); /* m: 8310 -> 8312,0 */
	reached1[8310] = 1;
	trans[1][8312]	= settr(8528,0,8318,3722,3722,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8318] = settr(8534,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8534,0,8313,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8534,0,8316,0,0,"IF", 0, 2, 0);
	trans[1][8313]	= settr(8529,0,8315,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8315] = settr(8531,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8531,0,8314,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8314]	= settr(8530,0,8411,3723,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8319]	= settr(8535,0,8411,1,0,".(goto)", 0, 2, 0); /* m: 8411 -> 0,8415 */
	reached1[8411] = 1;
	trans[1][8316]	= settr(8532,0,8317,2,0,"else", 0, 2, 0);
	trans[1][8317]	= settr(8533,0,8415,3724,3724,"(1)", 0, 2, 0); /* m: 8411 -> 8415,0 */
	reached1[8411] = 1;
	trans[1][8409]	= settr(8625,0,8411,1,0,".(goto)", 0, 2, 0); /* m: 8411 -> 0,8415 */
	reached1[8411] = 1;
	trans[1][8321]	= settr(8537,0,8349,3725,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][8349] = settr(8565,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8565,0,8341,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8341] = settr(8557,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8557,2,8339,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8339] = settr(8555,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8555,2,8322,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8555,2,8325,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8555,2,8328,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8555,2,8331,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8555,2,8334,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8555,2,8337,0,0,"IF", 1, 2, 0);
	trans[1][8322]	= settr(8538,4,8347,3726,3726,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8323 -> 8347,0 */
	reached1[8323] = 1;
	trans[1][8323]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8324]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8340]	= settr(8556,0,8347,3727,3727,".(goto)", 1, 2, 0);
	trans[1][8325]	= settr(8541,4,8347,3728,3728,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8326 -> 8347,0 */
	reached1[8326] = 1;
	trans[1][8326]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8327]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8328]	= settr(8544,4,8347,3729,3729,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8329 -> 8347,0 */
	reached1[8329] = 1;
	trans[1][8329]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8330]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8331]	= settr(8547,4,8347,3730,3730,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8332 -> 8347,0 */
	reached1[8332] = 1;
	trans[1][8332]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8333]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8334]	= settr(8550,4,8347,3731,3731,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8335 -> 8347,0 */
	reached1[8335] = 1;
	trans[1][8335]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8336]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8337]	= settr(8553,2,8338,2,0,"else", 1, 2, 0);
	trans[1][8338]	= settr(8554,4,8347,3732,3732,"(1)", 1, 2, 0); /* m: 8340 -> 8347,0 */
	reached1[8340] = 1;
	T = trans[1][8347] = settr(8563,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8563,0,8342,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8563,0,8345,0,0,"IF", 0, 2, 0);
	trans[1][8342]	= settr(8558,0,8344,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8344] = settr(8560,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8560,0,8343,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8343]	= settr(8559,0,8411,3733,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8348]	= settr(8564,0,8411,1,0,".(goto)", 0, 2, 0); /* m: 8411 -> 0,8415 */
	reached1[8411] = 1;
	trans[1][8345]	= settr(8561,0,8346,2,0,"else", 0, 2, 0);
	trans[1][8346]	= settr(8562,0,8415,3734,3734,"(1)", 0, 2, 0); /* m: 8411 -> 8415,0 */
	reached1[8411] = 1;
	trans[1][8350]	= settr(8566,0,8378,3735,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8378] = settr(8594,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8594,0,8370,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8370] = settr(8586,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8586,2,8368,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8368] = settr(8584,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8584,2,8351,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8584,2,8354,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8584,2,8357,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8584,2,8360,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8584,2,8363,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8584,2,8366,0,0,"IF", 1, 2, 0);
	trans[1][8351]	= settr(8567,4,8376,3736,3736,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8352 -> 8376,0 */
	reached1[8352] = 1;
	trans[1][8352]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8353]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8369]	= settr(8585,0,8376,3737,3737,".(goto)", 1, 2, 0);
	trans[1][8354]	= settr(8570,4,8376,3738,3738,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8355 -> 8376,0 */
	reached1[8355] = 1;
	trans[1][8355]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8356]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8357]	= settr(8573,4,8376,3739,3739,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8358 -> 8376,0 */
	reached1[8358] = 1;
	trans[1][8358]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8359]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8360]	= settr(8576,4,8376,3740,3740,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8361 -> 8376,0 */
	reached1[8361] = 1;
	trans[1][8361]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8362]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8363]	= settr(8579,4,8376,3741,3741,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8364 -> 8376,0 */
	reached1[8364] = 1;
	trans[1][8364]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8365]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8366]	= settr(8582,2,8367,2,0,"else", 1, 2, 0);
	trans[1][8367]	= settr(8583,4,8376,3742,3742,"(1)", 1, 2, 0); /* m: 8369 -> 8376,0 */
	reached1[8369] = 1;
	T = trans[1][8376] = settr(8592,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8592,0,8371,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8592,0,8374,0,0,"IF", 0, 2, 0);
	trans[1][8371]	= settr(8587,0,8373,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8373] = settr(8589,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8589,0,8372,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8372]	= settr(8588,0,8411,3743,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8377]	= settr(8593,0,8411,1,0,".(goto)", 0, 2, 0); /* m: 8411 -> 0,8415 */
	reached1[8411] = 1;
	trans[1][8374]	= settr(8590,0,8375,2,0,"else", 0, 2, 0);
	trans[1][8375]	= settr(8591,0,8415,3744,3744,"(1)", 0, 2, 0); /* m: 8411 -> 8415,0 */
	reached1[8411] = 1;
	trans[1][8379]	= settr(8595,0,8407,3745,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][8407] = settr(8623,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8623,0,8399,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8399] = settr(8615,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8615,2,8397,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8397] = settr(8613,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8613,2,8380,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8613,2,8383,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8613,2,8386,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8613,2,8389,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8613,2,8392,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8613,2,8395,0,0,"IF", 1, 2, 0);
	trans[1][8380]	= settr(8596,4,8405,3746,3746,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8381 -> 8405,0 */
	reached1[8381] = 1;
	trans[1][8381]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8382]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8398]	= settr(8614,0,8405,3747,3747,".(goto)", 1, 2, 0);
	trans[1][8383]	= settr(8599,4,8405,3748,3748,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8384 -> 8405,0 */
	reached1[8384] = 1;
	trans[1][8384]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8385]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8386]	= settr(8602,4,8405,3749,3749,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8387 -> 8405,0 */
	reached1[8387] = 1;
	trans[1][8387]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8388]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8389]	= settr(8605,4,8405,3750,3750,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8390 -> 8405,0 */
	reached1[8390] = 1;
	trans[1][8390]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8391]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8392]	= settr(8608,4,8405,3751,3751,"((STOP==ABORT))", 1, 2, 0); /* m: 8393 -> 8405,0 */
	reached1[8393] = 1;
	trans[1][8393]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8394]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8395]	= settr(8611,2,8396,2,0,"else", 1, 2, 0);
	trans[1][8396]	= settr(8612,4,8405,3752,3752,"(1)", 1, 2, 0); /* m: 8398 -> 8405,0 */
	reached1[8398] = 1;
	T = trans[1][8405] = settr(8621,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8621,0,8400,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8621,0,8403,0,0,"IF", 0, 2, 0);
	trans[1][8400]	= settr(8616,0,8402,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8402] = settr(8618,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8618,0,8401,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8401]	= settr(8617,0,8411,3753,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8406]	= settr(8622,0,8411,1,0,".(goto)", 0, 2, 0); /* m: 8411 -> 0,8415 */
	reached1[8411] = 1;
	trans[1][8403]	= settr(8619,0,8404,2,0,"else", 0, 2, 0);
	trans[1][8404]	= settr(8620,0,8415,3754,3754,"(1)", 0, 2, 0); /* m: 8411 -> 8415,0 */
	reached1[8411] = 1;
	trans[1][8411]	= settr(8627,0,8415,3755,3755,"j = (j+1)", 0, 2, 0);
	trans[1][8412]	= settr(8628,0,8413,2,0,"else", 0, 2, 0);
	trans[1][8413]	= settr(8629,0,10858,3756,3756,"j = 1", 0, 2, 0);
	trans[1][8414]	= settr(8630,0,10858,1,0,"goto :b79", 0, 2, 0);
	trans[1][8417]	= settr(8633,0,10858,1,0,"break", 0, 2, 0);
	trans[1][8551]	= settr(8767,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8419]	= settr(8635,0,8549,2,0,"else", 0, 2, 0);
	T = trans[ 1][8549] = settr(8765,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8765,0,8420,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8420]	= settr(8636,0,8546,3757,3757,"j = (3-1)", 0, 2, 0);
	trans[1][8547]	= settr(8763,0,8546,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8546] = settr(8762,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8762,0,8421,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8762,0,8543,0,0,"DO", 0, 2, 0);
	trans[1][8421]	= settr(8637,0,8541,3758,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][8541] = settr(8757,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8757,0,8539,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8539] = settr(8755,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8755,0,8422,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8755,0,8452,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8755,0,8481,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8755,0,8510,0,0,"IF", 0, 2, 0);
	trans[1][8422]	= settr(8638,0,8451,3759,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][8451] = settr(8667,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8667,0,8442,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8442] = settr(8658,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8658,2,8440,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8440] = settr(8656,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8656,2,8423,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8656,2,8426,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8656,2,8429,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8656,2,8432,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8656,2,8435,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8656,2,8438,0,0,"IF", 1, 2, 0);
	trans[1][8423]	= settr(8639,4,8443,3760,3760,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8424 -> 8443,0 */
	reached1[8424] = 1;
	trans[1][8424]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8425]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8441]	= settr(8657,0,8443,3761,3761,".(goto)", 1, 2, 0);
	trans[1][8426]	= settr(8642,4,8443,3762,3762,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8427 -> 8443,0 */
	reached1[8427] = 1;
	trans[1][8427]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8428]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8429]	= settr(8645,4,8443,3763,3763,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8430 -> 8443,0 */
	reached1[8430] = 1;
	trans[1][8430]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8431]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8432]	= settr(8648,4,8443,3764,3764,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8433 -> 8443,0 */
	reached1[8433] = 1;
	trans[1][8433]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8434]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8435]	= settr(8651,4,8443,3765,3765,"((START==ABORT))", 1, 2, 0); /* m: 8436 -> 8443,0 */
	reached1[8436] = 1;
	trans[1][8436]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8437]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8438]	= settr(8654,2,8439,2,0,"else", 1, 2, 0);
	trans[1][8439]	= settr(8655,4,8443,3766,3766,"(1)", 1, 2, 0); /* m: 8441 -> 8443,0 */
	reached1[8441] = 1;
	trans[1][8443]	= settr(8659,0,8449,3767,3767,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8449] = settr(8665,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8665,0,8444,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8665,0,8447,0,0,"IF", 0, 2, 0);
	trans[1][8444]	= settr(8660,0,8446,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8446] = settr(8662,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8662,0,8445,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8445]	= settr(8661,0,8542,3768,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8450]	= settr(8666,0,8542,1,0,".(goto)", 0, 2, 0); /* m: 8542 -> 0,8546 */
	reached1[8542] = 1;
	trans[1][8447]	= settr(8663,0,8448,2,0,"else", 0, 2, 0);
	trans[1][8448]	= settr(8664,0,8546,3769,3769,"(1)", 0, 2, 0); /* m: 8542 -> 8546,0 */
	reached1[8542] = 1;
	trans[1][8540]	= settr(8756,0,8542,1,0,".(goto)", 0, 2, 0); /* m: 8542 -> 0,8546 */
	reached1[8542] = 1;
	trans[1][8452]	= settr(8668,0,8480,3770,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][8480] = settr(8696,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8696,0,8472,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8472] = settr(8688,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8688,2,8470,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8470] = settr(8686,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8686,2,8453,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8686,2,8456,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8686,2,8459,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8686,2,8462,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8686,2,8465,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8686,2,8468,0,0,"IF", 1, 2, 0);
	trans[1][8453]	= settr(8669,4,8478,3771,3771,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8454 -> 8478,0 */
	reached1[8454] = 1;
	trans[1][8454]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8455]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8471]	= settr(8687,0,8478,3772,3772,".(goto)", 1, 2, 0);
	trans[1][8456]	= settr(8672,4,8478,3773,3773,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8457 -> 8478,0 */
	reached1[8457] = 1;
	trans[1][8457]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8458]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8459]	= settr(8675,4,8478,3774,3774,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8460 -> 8478,0 */
	reached1[8460] = 1;
	trans[1][8460]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8461]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8462]	= settr(8678,4,8478,3775,3775,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8463 -> 8478,0 */
	reached1[8463] = 1;
	trans[1][8463]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8464]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8465]	= settr(8681,4,8478,3776,3776,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8466 -> 8478,0 */
	reached1[8466] = 1;
	trans[1][8466]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8467]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8468]	= settr(8684,2,8469,2,0,"else", 1, 2, 0);
	trans[1][8469]	= settr(8685,4,8478,3777,3777,"(1)", 1, 2, 0); /* m: 8471 -> 8478,0 */
	reached1[8471] = 1;
	T = trans[1][8478] = settr(8694,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8694,0,8473,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8694,0,8476,0,0,"IF", 0, 2, 0);
	trans[1][8473]	= settr(8689,0,8475,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8475] = settr(8691,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8691,0,8474,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8474]	= settr(8690,0,8542,3778,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8479]	= settr(8695,0,8542,1,0,".(goto)", 0, 2, 0); /* m: 8542 -> 0,8546 */
	reached1[8542] = 1;
	trans[1][8476]	= settr(8692,0,8477,2,0,"else", 0, 2, 0);
	trans[1][8477]	= settr(8693,0,8546,3779,3779,"(1)", 0, 2, 0); /* m: 8542 -> 8546,0 */
	reached1[8542] = 1;
	trans[1][8481]	= settr(8697,0,8509,3780,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8509] = settr(8725,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8725,0,8501,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8501] = settr(8717,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8717,2,8499,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8499] = settr(8715,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8715,2,8482,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8715,2,8485,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8715,2,8488,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8715,2,8491,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8715,2,8494,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8715,2,8497,0,0,"IF", 1, 2, 0);
	trans[1][8482]	= settr(8698,4,8507,3781,3781,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8483 -> 8507,0 */
	reached1[8483] = 1;
	trans[1][8483]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8484]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8500]	= settr(8716,0,8507,3782,3782,".(goto)", 1, 2, 0);
	trans[1][8485]	= settr(8701,4,8507,3783,3783,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8486 -> 8507,0 */
	reached1[8486] = 1;
	trans[1][8486]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8487]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8488]	= settr(8704,4,8507,3784,3784,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8489 -> 8507,0 */
	reached1[8489] = 1;
	trans[1][8489]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8490]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8491]	= settr(8707,4,8507,3785,3785,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8492 -> 8507,0 */
	reached1[8492] = 1;
	trans[1][8492]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8493]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8494]	= settr(8710,4,8507,3786,3786,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8495 -> 8507,0 */
	reached1[8495] = 1;
	trans[1][8495]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8496]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8497]	= settr(8713,2,8498,2,0,"else", 1, 2, 0);
	trans[1][8498]	= settr(8714,4,8507,3787,3787,"(1)", 1, 2, 0); /* m: 8500 -> 8507,0 */
	reached1[8500] = 1;
	T = trans[1][8507] = settr(8723,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8723,0,8502,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8723,0,8505,0,0,"IF", 0, 2, 0);
	trans[1][8502]	= settr(8718,0,8504,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8504] = settr(8720,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8720,0,8503,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8503]	= settr(8719,0,8542,3788,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8508]	= settr(8724,0,8542,1,0,".(goto)", 0, 2, 0); /* m: 8542 -> 0,8546 */
	reached1[8542] = 1;
	trans[1][8505]	= settr(8721,0,8506,2,0,"else", 0, 2, 0);
	trans[1][8506]	= settr(8722,0,8546,3789,3789,"(1)", 0, 2, 0); /* m: 8542 -> 8546,0 */
	reached1[8542] = 1;
	trans[1][8510]	= settr(8726,0,8538,3790,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][8538] = settr(8754,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8754,0,8530,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8530] = settr(8746,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8746,2,8528,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8528] = settr(8744,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8744,2,8511,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8744,2,8514,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8744,2,8517,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8744,2,8520,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8744,2,8523,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8744,2,8526,0,0,"IF", 1, 2, 0);
	trans[1][8511]	= settr(8727,4,8536,3791,3791,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8512 -> 8536,0 */
	reached1[8512] = 1;
	trans[1][8512]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8513]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8529]	= settr(8745,0,8536,3792,3792,".(goto)", 1, 2, 0);
	trans[1][8514]	= settr(8730,4,8536,3793,3793,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8515 -> 8536,0 */
	reached1[8515] = 1;
	trans[1][8515]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8516]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8517]	= settr(8733,4,8536,3794,3794,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8518 -> 8536,0 */
	reached1[8518] = 1;
	trans[1][8518]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8519]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8520]	= settr(8736,4,8536,3795,3795,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8521 -> 8536,0 */
	reached1[8521] = 1;
	trans[1][8521]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8522]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8523]	= settr(8739,4,8536,3796,3796,"((STOP==ABORT))", 1, 2, 0); /* m: 8524 -> 8536,0 */
	reached1[8524] = 1;
	trans[1][8524]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8525]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8526]	= settr(8742,2,8527,2,0,"else", 1, 2, 0);
	trans[1][8527]	= settr(8743,4,8536,3797,3797,"(1)", 1, 2, 0); /* m: 8529 -> 8536,0 */
	reached1[8529] = 1;
	T = trans[1][8536] = settr(8752,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8752,0,8531,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8752,0,8534,0,0,"IF", 0, 2, 0);
	trans[1][8531]	= settr(8747,0,8533,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8533] = settr(8749,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8749,0,8532,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8532]	= settr(8748,0,8542,3798,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8537]	= settr(8753,0,8542,1,0,".(goto)", 0, 2, 0); /* m: 8542 -> 0,8546 */
	reached1[8542] = 1;
	trans[1][8534]	= settr(8750,0,8535,2,0,"else", 0, 2, 0);
	trans[1][8535]	= settr(8751,0,8546,3799,3799,"(1)", 0, 2, 0); /* m: 8542 -> 8546,0 */
	reached1[8542] = 1;
	trans[1][8542]	= settr(8758,0,8546,3800,3800,"j = (j-1)", 0, 2, 0);
	trans[1][8543]	= settr(8759,0,8544,2,0,"else", 0, 2, 0);
	trans[1][8544]	= settr(8760,0,10858,3801,3801,"j = 1", 0, 2, 0);
	trans[1][8545]	= settr(8761,0,10858,1,0,"goto :b80", 0, 2, 0);
	trans[1][8548]	= settr(8764,0,10858,1,0,"break", 0, 2, 0);
	trans[1][8707]	= settr(8923,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8553]	= settr(8769,0,8705,2,0,"else", 0, 2, 0);
	T = trans[ 1][8705] = settr(8921,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8921,0,8682,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8682] = settr(8898,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8898,0,8679,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8680]	= settr(8896,0,8679,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8679] = settr(8895,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8895,0,8554,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8895,0,8676,0,0,"DO", 0, 2, 0);
	trans[1][8554]	= settr(8770,0,8674,3802,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][8674] = settr(8890,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8890,0,8672,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8672] = settr(8888,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8888,0,8555,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8888,0,8585,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8888,0,8614,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8888,0,8643,0,0,"IF", 0, 2, 0);
	trans[1][8555]	= settr(8771,0,8584,3803,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][8584] = settr(8800,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8800,0,8575,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8575] = settr(8791,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8791,2,8573,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8573] = settr(8789,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8789,2,8556,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8789,2,8559,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8789,2,8562,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8789,2,8565,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8789,2,8568,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8789,2,8571,0,0,"IF", 1, 2, 0);
	trans[1][8556]	= settr(8772,4,8576,3804,3804,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8557 -> 8576,0 */
	reached1[8557] = 1;
	trans[1][8557]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8558]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8574]	= settr(8790,0,8576,3805,3805,".(goto)", 1, 2, 0);
	trans[1][8559]	= settr(8775,4,8576,3806,3806,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8560 -> 8576,0 */
	reached1[8560] = 1;
	trans[1][8560]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8561]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8562]	= settr(8778,4,8576,3807,3807,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8563 -> 8576,0 */
	reached1[8563] = 1;
	trans[1][8563]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8564]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8565]	= settr(8781,4,8576,3808,3808,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8566 -> 8576,0 */
	reached1[8566] = 1;
	trans[1][8566]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8567]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8568]	= settr(8784,4,8576,3809,3809,"((START==ABORT))", 1, 2, 0); /* m: 8569 -> 8576,0 */
	reached1[8569] = 1;
	trans[1][8569]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8570]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8571]	= settr(8787,2,8572,2,0,"else", 1, 2, 0);
	trans[1][8572]	= settr(8788,4,8576,3810,3810,"(1)", 1, 2, 0); /* m: 8574 -> 8576,0 */
	reached1[8574] = 1;
	trans[1][8576]	= settr(8792,0,8582,3811,3811,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8582] = settr(8798,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8798,0,8577,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8798,0,8580,0,0,"IF", 0, 2, 0);
	trans[1][8577]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8579] = settr(8795,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8795,0,8578,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8578]	= settr(8794,0,8675,3812,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8583]	= settr(8799,0,8675,1,0,".(goto)", 0, 2, 0); /* m: 8675 -> 0,8679 */
	reached1[8675] = 1;
	trans[1][8580]	= settr(8796,0,8581,2,0,"else", 0, 2, 0);
	trans[1][8581]	= settr(8797,0,8679,3813,3813,"(1)", 0, 2, 0); /* m: 8675 -> 8679,0 */
	reached1[8675] = 1;
	trans[1][8673]	= settr(8889,0,8675,1,0,".(goto)", 0, 2, 0); /* m: 8675 -> 0,8679 */
	reached1[8675] = 1;
	trans[1][8585]	= settr(8801,0,8613,3814,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][8613] = settr(8829,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8829,0,8605,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8605] = settr(8821,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8821,2,8603,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8603] = settr(8819,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8819,2,8586,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8819,2,8589,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8819,2,8592,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8819,2,8595,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8819,2,8598,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8819,2,8601,0,0,"IF", 1, 2, 0);
	trans[1][8586]	= settr(8802,4,8611,3815,3815,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8587 -> 8611,0 */
	reached1[8587] = 1;
	trans[1][8587]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8588]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8604]	= settr(8820,0,8611,3816,3816,".(goto)", 1, 2, 0);
	trans[1][8589]	= settr(8805,4,8611,3817,3817,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8590 -> 8611,0 */
	reached1[8590] = 1;
	trans[1][8590]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8591]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8592]	= settr(8808,4,8611,3818,3818,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8593 -> 8611,0 */
	reached1[8593] = 1;
	trans[1][8593]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8594]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8595]	= settr(8811,4,8611,3819,3819,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8596 -> 8611,0 */
	reached1[8596] = 1;
	trans[1][8596]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8597]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8598]	= settr(8814,4,8611,3820,3820,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8599 -> 8611,0 */
	reached1[8599] = 1;
	trans[1][8599]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8600]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8601]	= settr(8817,2,8602,2,0,"else", 1, 2, 0);
	trans[1][8602]	= settr(8818,4,8611,3821,3821,"(1)", 1, 2, 0); /* m: 8604 -> 8611,0 */
	reached1[8604] = 1;
	T = trans[1][8611] = settr(8827,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8827,0,8606,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8827,0,8609,0,0,"IF", 0, 2, 0);
	trans[1][8606]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8608] = settr(8824,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8824,0,8607,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8607]	= settr(8823,0,8675,3822,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8612]	= settr(8828,0,8675,1,0,".(goto)", 0, 2, 0); /* m: 8675 -> 0,8679 */
	reached1[8675] = 1;
	trans[1][8609]	= settr(8825,0,8610,2,0,"else", 0, 2, 0);
	trans[1][8610]	= settr(8826,0,8679,3823,3823,"(1)", 0, 2, 0); /* m: 8675 -> 8679,0 */
	reached1[8675] = 1;
	trans[1][8614]	= settr(8830,0,8642,3824,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8642] = settr(8858,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8858,0,8634,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8634] = settr(8850,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8850,2,8632,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8632] = settr(8848,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8848,2,8615,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8848,2,8618,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8848,2,8621,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8848,2,8624,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8848,2,8627,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8848,2,8630,0,0,"IF", 1, 2, 0);
	trans[1][8615]	= settr(8831,4,8640,3825,3825,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8616 -> 8640,0 */
	reached1[8616] = 1;
	trans[1][8616]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8617]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8633]	= settr(8849,0,8640,3826,3826,".(goto)", 1, 2, 0);
	trans[1][8618]	= settr(8834,4,8640,3827,3827,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8619 -> 8640,0 */
	reached1[8619] = 1;
	trans[1][8619]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8620]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8621]	= settr(8837,4,8640,3828,3828,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8622 -> 8640,0 */
	reached1[8622] = 1;
	trans[1][8622]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8623]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8624]	= settr(8840,4,8640,3829,3829,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8625 -> 8640,0 */
	reached1[8625] = 1;
	trans[1][8625]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8626]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8627]	= settr(8843,4,8640,3830,3830,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8628 -> 8640,0 */
	reached1[8628] = 1;
	trans[1][8628]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8629]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8630]	= settr(8846,2,8631,2,0,"else", 1, 2, 0);
	trans[1][8631]	= settr(8847,4,8640,3831,3831,"(1)", 1, 2, 0); /* m: 8633 -> 8640,0 */
	reached1[8633] = 1;
	T = trans[1][8640] = settr(8856,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8856,0,8635,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8856,0,8638,0,0,"IF", 0, 2, 0);
	trans[1][8635]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8637] = settr(8853,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8853,0,8636,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8636]	= settr(8852,0,8675,3832,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8641]	= settr(8857,0,8675,1,0,".(goto)", 0, 2, 0); /* m: 8675 -> 0,8679 */
	reached1[8675] = 1;
	trans[1][8638]	= settr(8854,0,8639,2,0,"else", 0, 2, 0);
	trans[1][8639]	= settr(8855,0,8679,3833,3833,"(1)", 0, 2, 0); /* m: 8675 -> 8679,0 */
	reached1[8675] = 1;
	trans[1][8643]	= settr(8859,0,8671,3834,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][8671] = settr(8887,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8887,0,8663,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8663] = settr(8879,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8879,2,8661,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8661] = settr(8877,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8877,2,8644,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8877,2,8647,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8877,2,8650,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8877,2,8653,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8877,2,8656,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8877,2,8659,0,0,"IF", 1, 2, 0);
	trans[1][8644]	= settr(8860,4,8669,3835,3835,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8645 -> 8669,0 */
	reached1[8645] = 1;
	trans[1][8645]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8646]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8662]	= settr(8878,0,8669,3836,3836,".(goto)", 1, 2, 0);
	trans[1][8647]	= settr(8863,4,8669,3837,3837,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8648 -> 8669,0 */
	reached1[8648] = 1;
	trans[1][8648]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8649]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8650]	= settr(8866,4,8669,3838,3838,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8651 -> 8669,0 */
	reached1[8651] = 1;
	trans[1][8651]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8652]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8653]	= settr(8869,4,8669,3839,3839,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8654 -> 8669,0 */
	reached1[8654] = 1;
	trans[1][8654]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8655]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8656]	= settr(8872,4,8669,3840,3840,"((STOP==ABORT))", 1, 2, 0); /* m: 8657 -> 8669,0 */
	reached1[8657] = 1;
	trans[1][8657]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8658]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8659]	= settr(8875,2,8660,2,0,"else", 1, 2, 0);
	trans[1][8660]	= settr(8876,4,8669,3841,3841,"(1)", 1, 2, 0); /* m: 8662 -> 8669,0 */
	reached1[8662] = 1;
	T = trans[1][8669] = settr(8885,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(8885,0,8664,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(8885,0,8667,0,0,"IF", 0, 2, 0);
	trans[1][8664]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][8666] = settr(8882,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8882,0,8665,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8665]	= settr(8881,0,8675,3842,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8670]	= settr(8886,0,8675,1,0,".(goto)", 0, 2, 0); /* m: 8675 -> 0,8679 */
	reached1[8675] = 1;
	trans[1][8667]	= settr(8883,0,8668,2,0,"else", 0, 2, 0);
	trans[1][8668]	= settr(8884,0,8679,3843,3843,"(1)", 0, 2, 0); /* m: 8675 -> 8679,0 */
	reached1[8675] = 1;
	trans[1][8675]	= settr(8891,0,8679,3844,3844,"j = (j+1)", 0, 2, 0);
	trans[1][8676]	= settr(8892,0,8677,2,0,"else", 0, 2, 0);
	trans[1][8677]	= settr(8893,0,8702,3845,3845,"j = 1", 0, 2, 0);
	trans[1][8678]	= settr(8894,0,8702,1,0,"goto :b81", 0, 2, 0);
	trans[1][8681]	= settr(8897,0,8702,1,0,"break", 0, 2, 0);
	trans[1][8703]	= settr(8919,0,8702,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8702] = settr(8918,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(8918,0,8683,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(8918,0,8699,0,0,"DO", 0, 2, 0);
	trans[1][8683]	= settr(8899,0,8696,3846,0,"((j<3))", 0, 2, 0);
	T = trans[1][8696] = settr(8912,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8912,0,8684,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8912,0,8687,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8912,0,8690,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8912,0,8693,0,0,"IF", 0, 2, 0);
	trans[1][8684]	= settr(8900,0,8686,3847,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][8686] = settr(8902,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8902,0,8685,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8685]	= settr(8901,0,8698,3848,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8697]	= settr(8913,0,8698,1,0,".(goto)", 0, 2, 0); /* m: 8698 -> 0,8702 */
	reached1[8698] = 1;
	trans[1][8687]	= settr(8903,0,8689,3849,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8689] = settr(8905,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8905,0,8688,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8688]	= settr(8904,0,8698,3850,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8690]	= settr(8906,0,8692,3851,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][8692] = settr(8908,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8908,0,8691,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8691]	= settr(8907,0,8698,3852,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8693]	= settr(8909,0,8695,3853,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][8695] = settr(8911,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8911,0,8694,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8694]	= settr(8910,0,8698,3854,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8698]	= settr(8914,0,8702,3855,3855,"j = (j+1)", 0, 2, 0);
	trans[1][8699]	= settr(8915,0,8700,2,0,"else", 0, 2, 0);
	trans[1][8700]	= settr(8916,0,10858,3856,3856,"j = 1", 0, 2, 0);
	trans[1][8701]	= settr(8917,0,10858,1,0,"goto :b82", 0, 2, 0);
	trans[1][8704]	= settr(8920,0,10858,1,0,"break", 0, 2, 0);
	trans[1][9568]	= settr(9784,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8711]	= settr(8927,0,9137,3857,0,"((4==PAUSED))", 0, 2, 0);
	T = trans[ 1][9137] = settr(9353,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9353,0,9135,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9135] = settr(9351,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9351,0,8712,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9351,0,8714,0,0,"IF", 0, 2, 0);
	trans[1][8712]	= settr(8928,0,8713,3858,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][8713]	= settr(8929,0,10858,3859,3859,"supervisor_started = 1", 1, 2, 0);
	trans[1][9136]	= settr(9352,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8714]	= settr(8930,0,9133,2,0,"else", 0, 2, 0);
	T = trans[1][9133] = settr(9349,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9349,0,8715,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9349,0,8980,0,0,"IF", 0, 2, 0);
	trans[1][8715]	= settr(8931,0,8979,3860,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][8979] = settr(9195,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9195,0,8977,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8977] = settr(9193,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9193,0,8716,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9193,0,8846,0,0,"IF", 0, 2, 0);
	trans[1][8716]	= settr(8932,0,8845,3861,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][8845] = settr(9061,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9061,0,8842,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8843]	= settr(9059,0,8842,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8842] = settr(9058,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9058,0,8717,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9058,0,8839,0,0,"DO", 0, 2, 0);
	trans[1][8717]	= settr(8933,0,8837,3862,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][8837] = settr(9053,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9053,0,8835,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8835] = settr(9051,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9051,0,8718,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9051,0,8748,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9051,0,8777,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9051,0,8806,0,0,"IF", 0, 2, 0);
	trans[1][8718]	= settr(8934,0,8747,3863,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][8747] = settr(8963,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8963,0,8738,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8738] = settr(8954,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8954,2,8736,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8736] = settr(8952,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8952,2,8719,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8952,2,8722,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8952,2,8725,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8952,2,8728,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8952,2,8731,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8952,2,8734,0,0,"IF", 1, 2, 0);
	trans[1][8719]	= settr(8935,4,8739,3864,3864,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8720 -> 8739,0 */
	reached1[8720] = 1;
	trans[1][8720]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8721]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8737]	= settr(8953,0,8739,3865,3865,".(goto)", 1, 2, 0);
	trans[1][8722]	= settr(8938,4,8739,3866,3866,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8723 -> 8739,0 */
	reached1[8723] = 1;
	trans[1][8723]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8724]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8725]	= settr(8941,4,8739,3867,3867,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8726 -> 8739,0 */
	reached1[8726] = 1;
	trans[1][8726]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8727]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8728]	= settr(8944,4,8739,3868,3868,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8729 -> 8739,0 */
	reached1[8729] = 1;
	trans[1][8729]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8730]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8731]	= settr(8947,4,8739,3869,3869,"((START==ABORT))", 1, 2, 0); /* m: 8732 -> 8739,0 */
	reached1[8732] = 1;
	trans[1][8732]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8733]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8734]	= settr(8950,2,8735,2,0,"else", 1, 2, 0);
	trans[1][8735]	= settr(8951,4,8739,3870,3870,"(1)", 1, 2, 0); /* m: 8737 -> 8739,0 */
	reached1[8737] = 1;
	trans[1][8739]	= settr(8955,0,8745,3871,3871,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8745] = settr(8961,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8961,0,8740,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8961,0,8743,0,0,"IF", 0, 2, 0);
	trans[1][8740]	= settr(8956,0,8742,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8742] = settr(8958,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8958,0,8741,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8741]	= settr(8957,0,8838,3872,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8746]	= settr(8962,0,8838,1,0,".(goto)", 0, 2, 0); /* m: 8838 -> 0,8842 */
	reached1[8838] = 1;
	trans[1][8743]	= settr(8959,0,8744,2,0,"else", 0, 2, 0);
	trans[1][8744]	= settr(8960,0,8842,3873,3873,"(1)", 0, 2, 0); /* m: 8838 -> 8842,0 */
	reached1[8838] = 1;
	trans[1][8836]	= settr(9052,0,8838,1,0,".(goto)", 0, 2, 0); /* m: 8838 -> 0,8842 */
	reached1[8838] = 1;
	trans[1][8748]	= settr(8964,0,8776,3874,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][8776] = settr(8992,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8992,0,8768,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8768] = settr(8984,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(8984,2,8766,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8766] = settr(8982,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8982,2,8749,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8982,2,8752,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8982,2,8755,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8982,2,8758,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(8982,2,8761,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(8982,2,8764,0,0,"IF", 1, 2, 0);
	trans[1][8749]	= settr(8965,4,8774,3875,3875,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8750 -> 8774,0 */
	reached1[8750] = 1;
	trans[1][8750]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8751]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8767]	= settr(8983,0,8774,3876,3876,".(goto)", 1, 2, 0);
	trans[1][8752]	= settr(8968,4,8774,3877,3877,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8753 -> 8774,0 */
	reached1[8753] = 1;
	trans[1][8753]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8754]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8755]	= settr(8971,4,8774,3878,3878,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8756 -> 8774,0 */
	reached1[8756] = 1;
	trans[1][8756]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8757]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8758]	= settr(8974,4,8774,3879,3879,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8759 -> 8774,0 */
	reached1[8759] = 1;
	trans[1][8759]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8760]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8761]	= settr(8977,4,8774,3880,3880,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8762 -> 8774,0 */
	reached1[8762] = 1;
	trans[1][8762]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8763]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8764]	= settr(8980,2,8765,2,0,"else", 1, 2, 0);
	trans[1][8765]	= settr(8981,4,8774,3881,3881,"(1)", 1, 2, 0); /* m: 8767 -> 8774,0 */
	reached1[8767] = 1;
	T = trans[1][8774] = settr(8990,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(8990,0,8769,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(8990,0,8772,0,0,"IF", 0, 2, 0);
	trans[1][8769]	= settr(8985,0,8771,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8771] = settr(8987,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(8987,0,8770,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8770]	= settr(8986,0,8838,3882,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8775]	= settr(8991,0,8838,1,0,".(goto)", 0, 2, 0); /* m: 8838 -> 0,8842 */
	reached1[8838] = 1;
	trans[1][8772]	= settr(8988,0,8773,2,0,"else", 0, 2, 0);
	trans[1][8773]	= settr(8989,0,8842,3883,3883,"(1)", 0, 2, 0); /* m: 8838 -> 8842,0 */
	reached1[8838] = 1;
	trans[1][8777]	= settr(8993,0,8805,3884,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8805] = settr(9021,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9021,0,8797,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8797] = settr(9013,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9013,2,8795,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8795] = settr(9011,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9011,2,8778,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9011,2,8781,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9011,2,8784,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9011,2,8787,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9011,2,8790,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9011,2,8793,0,0,"IF", 1, 2, 0);
	trans[1][8778]	= settr(8994,4,8803,3885,3885,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8779 -> 8803,0 */
	reached1[8779] = 1;
	trans[1][8779]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8780]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8796]	= settr(9012,0,8803,3886,3886,".(goto)", 1, 2, 0);
	trans[1][8781]	= settr(8997,4,8803,3887,3887,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8782 -> 8803,0 */
	reached1[8782] = 1;
	trans[1][8782]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8783]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8784]	= settr(9000,4,8803,3888,3888,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8785 -> 8803,0 */
	reached1[8785] = 1;
	trans[1][8785]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8786]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8787]	= settr(9003,4,8803,3889,3889,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8788 -> 8803,0 */
	reached1[8788] = 1;
	trans[1][8788]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8789]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8790]	= settr(9006,4,8803,3890,3890,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8791 -> 8803,0 */
	reached1[8791] = 1;
	trans[1][8791]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8792]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8793]	= settr(9009,2,8794,2,0,"else", 1, 2, 0);
	trans[1][8794]	= settr(9010,4,8803,3891,3891,"(1)", 1, 2, 0); /* m: 8796 -> 8803,0 */
	reached1[8796] = 1;
	T = trans[1][8803] = settr(9019,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9019,0,8798,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9019,0,8801,0,0,"IF", 0, 2, 0);
	trans[1][8798]	= settr(9014,0,8800,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8800] = settr(9016,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9016,0,8799,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8799]	= settr(9015,0,8838,3892,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8804]	= settr(9020,0,8838,1,0,".(goto)", 0, 2, 0); /* m: 8838 -> 0,8842 */
	reached1[8838] = 1;
	trans[1][8801]	= settr(9017,0,8802,2,0,"else", 0, 2, 0);
	trans[1][8802]	= settr(9018,0,8842,3893,3893,"(1)", 0, 2, 0); /* m: 8838 -> 8842,0 */
	reached1[8838] = 1;
	trans[1][8806]	= settr(9022,0,8834,3894,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][8834] = settr(9050,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9050,0,8826,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8826] = settr(9042,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9042,2,8824,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8824] = settr(9040,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9040,2,8807,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9040,2,8810,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9040,2,8813,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9040,2,8816,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9040,2,8819,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9040,2,8822,0,0,"IF", 1, 2, 0);
	trans[1][8807]	= settr(9023,4,8832,3895,3895,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8808 -> 8832,0 */
	reached1[8808] = 1;
	trans[1][8808]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8809]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8825]	= settr(9041,0,8832,3896,3896,".(goto)", 1, 2, 0);
	trans[1][8810]	= settr(9026,4,8832,3897,3897,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8811 -> 8832,0 */
	reached1[8811] = 1;
	trans[1][8811]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8812]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8813]	= settr(9029,4,8832,3898,3898,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8814 -> 8832,0 */
	reached1[8814] = 1;
	trans[1][8814]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8815]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8816]	= settr(9032,4,8832,3899,3899,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8817 -> 8832,0 */
	reached1[8817] = 1;
	trans[1][8817]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8818]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8819]	= settr(9035,4,8832,3900,3900,"((STOP==ABORT))", 1, 2, 0); /* m: 8820 -> 8832,0 */
	reached1[8820] = 1;
	trans[1][8820]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8821]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8822]	= settr(9038,2,8823,2,0,"else", 1, 2, 0);
	trans[1][8823]	= settr(9039,4,8832,3901,3901,"(1)", 1, 2, 0); /* m: 8825 -> 8832,0 */
	reached1[8825] = 1;
	T = trans[1][8832] = settr(9048,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9048,0,8827,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9048,0,8830,0,0,"IF", 0, 2, 0);
	trans[1][8827]	= settr(9043,0,8829,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8829] = settr(9045,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9045,0,8828,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8828]	= settr(9044,0,8838,3902,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8833]	= settr(9049,0,8838,1,0,".(goto)", 0, 2, 0); /* m: 8838 -> 0,8842 */
	reached1[8838] = 1;
	trans[1][8830]	= settr(9046,0,8831,2,0,"else", 0, 2, 0);
	trans[1][8831]	= settr(9047,0,8842,3903,3903,"(1)", 0, 2, 0); /* m: 8838 -> 8842,0 */
	reached1[8838] = 1;
	trans[1][8838]	= settr(9054,0,8842,3904,3904,"j = (j+1)", 0, 2, 0);
	trans[1][8839]	= settr(9055,0,8840,2,0,"else", 0, 2, 0);
	trans[1][8840]	= settr(9056,0,10858,3905,3905,"j = 1", 0, 2, 0);
	trans[1][8841]	= settr(9057,0,10858,1,0,"goto :b83", 0, 2, 0);
	trans[1][8844]	= settr(9060,0,10858,1,0,"break", 0, 2, 0);
	trans[1][8978]	= settr(9194,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8846]	= settr(9062,0,8976,2,0,"else", 0, 2, 0);
	T = trans[ 1][8976] = settr(9192,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9192,0,8847,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8847]	= settr(9063,0,8973,3906,3906,"j = (3-1)", 0, 2, 0);
	trans[1][8974]	= settr(9190,0,8973,1,0,".(goto)", 0, 2, 0);
	T = trans[1][8973] = settr(9189,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9189,0,8848,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9189,0,8970,0,0,"DO", 0, 2, 0);
	trans[1][8848]	= settr(9064,0,8968,3907,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][8968] = settr(9184,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9184,0,8966,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][8966] = settr(9182,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9182,0,8849,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9182,0,8879,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9182,0,8908,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9182,0,8937,0,0,"IF", 0, 2, 0);
	trans[1][8849]	= settr(9065,0,8878,3908,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][8878] = settr(9094,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9094,0,8869,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8869] = settr(9085,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9085,2,8867,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8867] = settr(9083,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9083,2,8850,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9083,2,8853,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9083,2,8856,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9083,2,8859,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9083,2,8862,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9083,2,8865,0,0,"IF", 1, 2, 0);
	trans[1][8850]	= settr(9066,4,8870,3909,3909,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8851 -> 8870,0 */
	reached1[8851] = 1;
	trans[1][8851]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8852]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8868]	= settr(9084,0,8870,3910,3910,".(goto)", 1, 2, 0);
	trans[1][8853]	= settr(9069,4,8870,3911,3911,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8854 -> 8870,0 */
	reached1[8854] = 1;
	trans[1][8854]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8855]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8856]	= settr(9072,4,8870,3912,3912,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8857 -> 8870,0 */
	reached1[8857] = 1;
	trans[1][8857]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8858]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8859]	= settr(9075,4,8870,3913,3913,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8860 -> 8870,0 */
	reached1[8860] = 1;
	trans[1][8860]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8861]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8862]	= settr(9078,4,8870,3914,3914,"((START==ABORT))", 1, 2, 0); /* m: 8863 -> 8870,0 */
	reached1[8863] = 1;
	trans[1][8863]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8864]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8865]	= settr(9081,2,8866,2,0,"else", 1, 2, 0);
	trans[1][8866]	= settr(9082,4,8870,3915,3915,"(1)", 1, 2, 0); /* m: 8868 -> 8870,0 */
	reached1[8868] = 1;
	trans[1][8870]	= settr(9086,0,8876,3916,3916,"(run Thread(j))", 0, 2, 0);
	T = trans[1][8876] = settr(9092,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9092,0,8871,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9092,0,8874,0,0,"IF", 0, 2, 0);
	trans[1][8871]	= settr(9087,0,8873,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8873] = settr(9089,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9089,0,8872,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8872]	= settr(9088,0,8969,3917,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8877]	= settr(9093,0,8969,1,0,".(goto)", 0, 2, 0); /* m: 8969 -> 0,8973 */
	reached1[8969] = 1;
	trans[1][8874]	= settr(9090,0,8875,2,0,"else", 0, 2, 0);
	trans[1][8875]	= settr(9091,0,8973,3918,3918,"(1)", 0, 2, 0); /* m: 8969 -> 8973,0 */
	reached1[8969] = 1;
	trans[1][8967]	= settr(9183,0,8969,1,0,".(goto)", 0, 2, 0); /* m: 8969 -> 0,8973 */
	reached1[8969] = 1;
	trans[1][8879]	= settr(9095,0,8907,3919,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][8907] = settr(9123,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9123,0,8899,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8899] = settr(9115,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9115,2,8897,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8897] = settr(9113,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9113,2,8880,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9113,2,8883,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9113,2,8886,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9113,2,8889,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9113,2,8892,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9113,2,8895,0,0,"IF", 1, 2, 0);
	trans[1][8880]	= settr(9096,4,8905,3920,3920,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8881 -> 8905,0 */
	reached1[8881] = 1;
	trans[1][8881]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8882]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8898]	= settr(9114,0,8905,3921,3921,".(goto)", 1, 2, 0);
	trans[1][8883]	= settr(9099,4,8905,3922,3922,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8884 -> 8905,0 */
	reached1[8884] = 1;
	trans[1][8884]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8885]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8886]	= settr(9102,4,8905,3923,3923,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8887 -> 8905,0 */
	reached1[8887] = 1;
	trans[1][8887]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8888]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8889]	= settr(9105,4,8905,3924,3924,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8890 -> 8905,0 */
	reached1[8890] = 1;
	trans[1][8890]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8891]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8892]	= settr(9108,4,8905,3925,3925,"((PAUSE==ABORT))", 1, 2, 0); /* m: 8893 -> 8905,0 */
	reached1[8893] = 1;
	trans[1][8893]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8894]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8895]	= settr(9111,2,8896,2,0,"else", 1, 2, 0);
	trans[1][8896]	= settr(9112,4,8905,3926,3926,"(1)", 1, 2, 0); /* m: 8898 -> 8905,0 */
	reached1[8898] = 1;
	T = trans[1][8905] = settr(9121,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9121,0,8900,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9121,0,8903,0,0,"IF", 0, 2, 0);
	trans[1][8900]	= settr(9116,0,8902,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8902] = settr(9118,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9118,0,8901,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8901]	= settr(9117,0,8969,3927,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8906]	= settr(9122,0,8969,1,0,".(goto)", 0, 2, 0); /* m: 8969 -> 0,8973 */
	reached1[8969] = 1;
	trans[1][8903]	= settr(9119,0,8904,2,0,"else", 0, 2, 0);
	trans[1][8904]	= settr(9120,0,8973,3928,3928,"(1)", 0, 2, 0); /* m: 8969 -> 8973,0 */
	reached1[8969] = 1;
	trans[1][8908]	= settr(9124,0,8936,3929,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][8936] = settr(9152,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9152,0,8928,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8928] = settr(9144,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9144,2,8926,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8926] = settr(9142,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9142,2,8909,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9142,2,8912,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9142,2,8915,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9142,2,8918,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9142,2,8921,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9142,2,8924,0,0,"IF", 1, 2, 0);
	trans[1][8909]	= settr(9125,4,8934,3930,3930,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8910 -> 8934,0 */
	reached1[8910] = 1;
	trans[1][8910]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8911]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8927]	= settr(9143,0,8934,3931,3931,".(goto)", 1, 2, 0);
	trans[1][8912]	= settr(9128,4,8934,3932,3932,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8913 -> 8934,0 */
	reached1[8913] = 1;
	trans[1][8913]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8914]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8915]	= settr(9131,4,8934,3933,3933,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8916 -> 8934,0 */
	reached1[8916] = 1;
	trans[1][8916]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8917]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8918]	= settr(9134,4,8934,3934,3934,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8919 -> 8934,0 */
	reached1[8919] = 1;
	trans[1][8919]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8920]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8921]	= settr(9137,4,8934,3935,3935,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 8922 -> 8934,0 */
	reached1[8922] = 1;
	trans[1][8922]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8923]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8924]	= settr(9140,2,8925,2,0,"else", 1, 2, 0);
	trans[1][8925]	= settr(9141,4,8934,3936,3936,"(1)", 1, 2, 0); /* m: 8927 -> 8934,0 */
	reached1[8927] = 1;
	T = trans[1][8934] = settr(9150,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9150,0,8929,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9150,0,8932,0,0,"IF", 0, 2, 0);
	trans[1][8929]	= settr(9145,0,8931,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8931] = settr(9147,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9147,0,8930,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8930]	= settr(9146,0,8969,3937,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8935]	= settr(9151,0,8969,1,0,".(goto)", 0, 2, 0); /* m: 8969 -> 0,8973 */
	reached1[8969] = 1;
	trans[1][8932]	= settr(9148,0,8933,2,0,"else", 0, 2, 0);
	trans[1][8933]	= settr(9149,0,8973,3938,3938,"(1)", 0, 2, 0); /* m: 8969 -> 8973,0 */
	reached1[8969] = 1;
	trans[1][8937]	= settr(9153,0,8965,3939,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][8965] = settr(9181,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9181,0,8957,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][8957] = settr(9173,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9173,2,8955,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][8955] = settr(9171,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9171,2,8938,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9171,2,8941,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9171,2,8944,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9171,2,8947,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9171,2,8950,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9171,2,8953,0,0,"IF", 1, 2, 0);
	trans[1][8938]	= settr(9154,4,8963,3940,3940,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8939 -> 8963,0 */
	reached1[8939] = 1;
	trans[1][8939]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8940]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][8956]	= settr(9172,0,8963,3941,3941,".(goto)", 1, 2, 0);
	trans[1][8941]	= settr(9157,4,8963,3942,3942,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8942 -> 8963,0 */
	reached1[8942] = 1;
	trans[1][8942]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8943]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8944]	= settr(9160,4,8963,3943,3943,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8945 -> 8963,0 */
	reached1[8945] = 1;
	trans[1][8945]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8946]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8947]	= settr(9163,4,8963,3944,3944,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8948 -> 8963,0 */
	reached1[8948] = 1;
	trans[1][8948]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8949]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8950]	= settr(9166,4,8963,3945,3945,"((STOP==ABORT))", 1, 2, 0); /* m: 8951 -> 8963,0 */
	reached1[8951] = 1;
	trans[1][8951]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8952]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8953]	= settr(9169,2,8954,2,0,"else", 1, 2, 0);
	trans[1][8954]	= settr(9170,4,8963,3946,3946,"(1)", 1, 2, 0); /* m: 8956 -> 8963,0 */
	reached1[8956] = 1;
	T = trans[1][8963] = settr(9179,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9179,0,8958,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9179,0,8961,0,0,"IF", 0, 2, 0);
	trans[1][8958]	= settr(9174,0,8960,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][8960] = settr(9176,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9176,0,8959,0,0,"sub-sequence", 0, 2, 0);
	trans[1][8959]	= settr(9175,0,8969,3947,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][8964]	= settr(9180,0,8969,1,0,".(goto)", 0, 2, 0); /* m: 8969 -> 0,8973 */
	reached1[8969] = 1;
	trans[1][8961]	= settr(9177,0,8962,2,0,"else", 0, 2, 0);
	trans[1][8962]	= settr(9178,0,8973,3948,3948,"(1)", 0, 2, 0); /* m: 8969 -> 8973,0 */
	reached1[8969] = 1;
	trans[1][8969]	= settr(9185,0,8973,3949,3949,"j = (j-1)", 0, 2, 0);
	trans[1][8970]	= settr(9186,0,8971,2,0,"else", 0, 2, 0);
	trans[1][8971]	= settr(9187,0,10858,3950,3950,"j = 1", 0, 2, 0);
	trans[1][8972]	= settr(9188,0,10858,1,0,"goto :b84", 0, 2, 0);
	trans[1][8975]	= settr(9191,0,10858,1,0,"break", 0, 2, 0);
	trans[1][9134]	= settr(9350,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][8980]	= settr(9196,0,9132,2,0,"else", 0, 2, 0);
	T = trans[ 1][9132] = settr(9348,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9348,0,9109,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9109] = settr(9325,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9325,0,9106,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9107]	= settr(9323,0,9106,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9106] = settr(9322,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9322,0,8981,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9322,0,9103,0,0,"DO", 0, 2, 0);
	trans[1][8981]	= settr(9197,0,9101,3951,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][9101] = settr(9317,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9317,0,9099,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9099] = settr(9315,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9315,0,8982,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9315,0,9012,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9315,0,9041,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9315,0,9070,0,0,"IF", 0, 2, 0);
	trans[1][8982]	= settr(9198,0,9011,3952,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][9011] = settr(9227,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9227,0,9002,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9002] = settr(9218,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9218,2,9000,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9000] = settr(9216,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9216,2,8983,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9216,2,8986,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9216,2,8989,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9216,2,8992,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9216,2,8995,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9216,2,8998,0,0,"IF", 1, 2, 0);
	trans[1][8983]	= settr(9199,4,9003,3953,3953,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8984 -> 9003,0 */
	reached1[8984] = 1;
	trans[1][8984]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][8985]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9001]	= settr(9217,0,9003,3954,3954,".(goto)", 1, 2, 0);
	trans[1][8986]	= settr(9202,4,9003,3955,3955,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 8987 -> 9003,0 */
	reached1[8987] = 1;
	trans[1][8987]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][8988]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][8989]	= settr(9205,4,9003,3956,3956,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8990 -> 9003,0 */
	reached1[8990] = 1;
	trans[1][8990]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][8991]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][8992]	= settr(9208,4,9003,3957,3957,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 8993 -> 9003,0 */
	reached1[8993] = 1;
	trans[1][8993]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][8994]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][8995]	= settr(9211,4,9003,3958,3958,"((START==ABORT))", 1, 2, 0); /* m: 8996 -> 9003,0 */
	reached1[8996] = 1;
	trans[1][8996]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][8997]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][8998]	= settr(9214,2,8999,2,0,"else", 1, 2, 0);
	trans[1][8999]	= settr(9215,4,9003,3959,3959,"(1)", 1, 2, 0); /* m: 9001 -> 9003,0 */
	reached1[9001] = 1;
	trans[1][9003]	= settr(9219,0,9009,3960,3960,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9009] = settr(9225,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9225,0,9004,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9225,0,9007,0,0,"IF", 0, 2, 0);
	trans[1][9004]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9006] = settr(9222,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9222,0,9005,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9005]	= settr(9221,0,9102,3961,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9010]	= settr(9226,0,9102,1,0,".(goto)", 0, 2, 0); /* m: 9102 -> 0,9106 */
	reached1[9102] = 1;
	trans[1][9007]	= settr(9223,0,9008,2,0,"else", 0, 2, 0);
	trans[1][9008]	= settr(9224,0,9106,3962,3962,"(1)", 0, 2, 0); /* m: 9102 -> 9106,0 */
	reached1[9102] = 1;
	trans[1][9100]	= settr(9316,0,9102,1,0,".(goto)", 0, 2, 0); /* m: 9102 -> 0,9106 */
	reached1[9102] = 1;
	trans[1][9012]	= settr(9228,0,9040,3963,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][9040] = settr(9256,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9256,0,9032,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9032] = settr(9248,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9248,2,9030,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9030] = settr(9246,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9246,2,9013,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9246,2,9016,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9246,2,9019,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9246,2,9022,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9246,2,9025,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9246,2,9028,0,0,"IF", 1, 2, 0);
	trans[1][9013]	= settr(9229,4,9038,3964,3964,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9014 -> 9038,0 */
	reached1[9014] = 1;
	trans[1][9014]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9015]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9031]	= settr(9247,0,9038,3965,3965,".(goto)", 1, 2, 0);
	trans[1][9016]	= settr(9232,4,9038,3966,3966,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9017 -> 9038,0 */
	reached1[9017] = 1;
	trans[1][9017]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9018]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9019]	= settr(9235,4,9038,3967,3967,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9020 -> 9038,0 */
	reached1[9020] = 1;
	trans[1][9020]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9021]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9022]	= settr(9238,4,9038,3968,3968,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9023 -> 9038,0 */
	reached1[9023] = 1;
	trans[1][9023]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9024]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9025]	= settr(9241,4,9038,3969,3969,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9026 -> 9038,0 */
	reached1[9026] = 1;
	trans[1][9026]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9027]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9028]	= settr(9244,2,9029,2,0,"else", 1, 2, 0);
	trans[1][9029]	= settr(9245,4,9038,3970,3970,"(1)", 1, 2, 0); /* m: 9031 -> 9038,0 */
	reached1[9031] = 1;
	T = trans[1][9038] = settr(9254,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9254,0,9033,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9254,0,9036,0,0,"IF", 0, 2, 0);
	trans[1][9033]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9035] = settr(9251,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9251,0,9034,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9034]	= settr(9250,0,9102,3971,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9039]	= settr(9255,0,9102,1,0,".(goto)", 0, 2, 0); /* m: 9102 -> 0,9106 */
	reached1[9102] = 1;
	trans[1][9036]	= settr(9252,0,9037,2,0,"else", 0, 2, 0);
	trans[1][9037]	= settr(9253,0,9106,3972,3972,"(1)", 0, 2, 0); /* m: 9102 -> 9106,0 */
	reached1[9102] = 1;
	trans[1][9041]	= settr(9257,0,9069,3973,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9069] = settr(9285,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9285,0,9061,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9061] = settr(9277,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9277,2,9059,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9059] = settr(9275,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9275,2,9042,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9275,2,9045,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9275,2,9048,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9275,2,9051,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9275,2,9054,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9275,2,9057,0,0,"IF", 1, 2, 0);
	trans[1][9042]	= settr(9258,4,9067,3974,3974,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9043 -> 9067,0 */
	reached1[9043] = 1;
	trans[1][9043]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9044]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9060]	= settr(9276,0,9067,3975,3975,".(goto)", 1, 2, 0);
	trans[1][9045]	= settr(9261,4,9067,3976,3976,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9046 -> 9067,0 */
	reached1[9046] = 1;
	trans[1][9046]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9047]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9048]	= settr(9264,4,9067,3977,3977,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9049 -> 9067,0 */
	reached1[9049] = 1;
	trans[1][9049]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9050]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9051]	= settr(9267,4,9067,3978,3978,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9052 -> 9067,0 */
	reached1[9052] = 1;
	trans[1][9052]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9053]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9054]	= settr(9270,4,9067,3979,3979,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9055 -> 9067,0 */
	reached1[9055] = 1;
	trans[1][9055]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9056]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9057]	= settr(9273,2,9058,2,0,"else", 1, 2, 0);
	trans[1][9058]	= settr(9274,4,9067,3980,3980,"(1)", 1, 2, 0); /* m: 9060 -> 9067,0 */
	reached1[9060] = 1;
	T = trans[1][9067] = settr(9283,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9283,0,9062,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9283,0,9065,0,0,"IF", 0, 2, 0);
	trans[1][9062]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9064] = settr(9280,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9280,0,9063,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9063]	= settr(9279,0,9102,3981,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9068]	= settr(9284,0,9102,1,0,".(goto)", 0, 2, 0); /* m: 9102 -> 0,9106 */
	reached1[9102] = 1;
	trans[1][9065]	= settr(9281,0,9066,2,0,"else", 0, 2, 0);
	trans[1][9066]	= settr(9282,0,9106,3982,3982,"(1)", 0, 2, 0); /* m: 9102 -> 9106,0 */
	reached1[9102] = 1;
	trans[1][9070]	= settr(9286,0,9098,3983,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][9098] = settr(9314,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9314,0,9090,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9090] = settr(9306,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9306,2,9088,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9088] = settr(9304,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9304,2,9071,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9304,2,9074,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9304,2,9077,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9304,2,9080,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9304,2,9083,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9304,2,9086,0,0,"IF", 1, 2, 0);
	trans[1][9071]	= settr(9287,4,9096,3984,3984,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9072 -> 9096,0 */
	reached1[9072] = 1;
	trans[1][9072]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9073]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9089]	= settr(9305,0,9096,3985,3985,".(goto)", 1, 2, 0);
	trans[1][9074]	= settr(9290,4,9096,3986,3986,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9075 -> 9096,0 */
	reached1[9075] = 1;
	trans[1][9075]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9076]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9077]	= settr(9293,4,9096,3987,3987,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9078 -> 9096,0 */
	reached1[9078] = 1;
	trans[1][9078]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9079]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9080]	= settr(9296,4,9096,3988,3988,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9081 -> 9096,0 */
	reached1[9081] = 1;
	trans[1][9081]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9082]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9083]	= settr(9299,4,9096,3989,3989,"((STOP==ABORT))", 1, 2, 0); /* m: 9084 -> 9096,0 */
	reached1[9084] = 1;
	trans[1][9084]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9085]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9086]	= settr(9302,2,9087,2,0,"else", 1, 2, 0);
	trans[1][9087]	= settr(9303,4,9096,3990,3990,"(1)", 1, 2, 0); /* m: 9089 -> 9096,0 */
	reached1[9089] = 1;
	T = trans[1][9096] = settr(9312,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9312,0,9091,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9312,0,9094,0,0,"IF", 0, 2, 0);
	trans[1][9091]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9093] = settr(9309,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9309,0,9092,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9092]	= settr(9308,0,9102,3991,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9097]	= settr(9313,0,9102,1,0,".(goto)", 0, 2, 0); /* m: 9102 -> 0,9106 */
	reached1[9102] = 1;
	trans[1][9094]	= settr(9310,0,9095,2,0,"else", 0, 2, 0);
	trans[1][9095]	= settr(9311,0,9106,3992,3992,"(1)", 0, 2, 0); /* m: 9102 -> 9106,0 */
	reached1[9102] = 1;
	trans[1][9102]	= settr(9318,0,9106,3993,3993,"j = (j+1)", 0, 2, 0);
	trans[1][9103]	= settr(9319,0,9104,2,0,"else", 0, 2, 0);
	trans[1][9104]	= settr(9320,0,9129,3994,3994,"j = 1", 0, 2, 0);
	trans[1][9105]	= settr(9321,0,9129,1,0,"goto :b85", 0, 2, 0);
	trans[1][9108]	= settr(9324,0,9129,1,0,"break", 0, 2, 0);
	trans[1][9130]	= settr(9346,0,9129,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9129] = settr(9345,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9345,0,9110,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9345,0,9126,0,0,"DO", 0, 2, 0);
	trans[1][9110]	= settr(9326,0,9123,3995,0,"((j<3))", 0, 2, 0);
	T = trans[1][9123] = settr(9339,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9339,0,9111,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9339,0,9114,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9339,0,9117,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9339,0,9120,0,0,"IF", 0, 2, 0);
	trans[1][9111]	= settr(9327,0,9113,3996,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][9113] = settr(9329,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9329,0,9112,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9112]	= settr(9328,0,9125,3997,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9124]	= settr(9340,0,9125,1,0,".(goto)", 0, 2, 0); /* m: 9125 -> 0,9129 */
	reached1[9125] = 1;
	trans[1][9114]	= settr(9330,0,9116,3998,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9116] = settr(9332,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9332,0,9115,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9115]	= settr(9331,0,9125,3999,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9117]	= settr(9333,0,9119,4000,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][9119] = settr(9335,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9335,0,9118,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9118]	= settr(9334,0,9125,4001,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9120]	= settr(9336,0,9122,4002,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][9122] = settr(9338,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9338,0,9121,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9121]	= settr(9337,0,9125,4003,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9125]	= settr(9341,0,9129,4004,4004,"j = (j+1)", 0, 2, 0);
	trans[1][9126]	= settr(9342,0,9127,2,0,"else", 0, 2, 0);
	trans[1][9127]	= settr(9343,0,10858,4005,4005,"j = 1", 0, 2, 0);
	trans[1][9128]	= settr(9344,0,10858,1,0,"goto :b86", 0, 2, 0);
	trans[1][9131]	= settr(9347,0,10858,1,0,"break", 0, 2, 0);
	trans[1][9138]	= settr(9354,0,9564,4006,0,"(((4==ABORTING)||(4==STOPPING)))", 0, 2, 0);
	T = trans[ 1][9564] = settr(9780,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9780,0,9562,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9562] = settr(9778,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9778,0,9139,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9778,0,9141,0,0,"IF", 0, 2, 0);
	trans[1][9139]	= settr(9355,0,9140,4007,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][9140]	= settr(9356,0,10858,4008,4008,"supervisor_started = 1", 1, 2, 0);
	trans[1][9563]	= settr(9779,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][9141]	= settr(9357,0,9560,2,0,"else", 0, 2, 0);
	T = trans[1][9560] = settr(9776,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9776,0,9142,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9776,0,9407,0,0,"IF", 0, 2, 0);
	trans[1][9142]	= settr(9358,0,9406,4009,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][9406] = settr(9622,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9622,0,9404,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9404] = settr(9620,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9620,0,9143,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9620,0,9273,0,0,"IF", 0, 2, 0);
	trans[1][9143]	= settr(9359,0,9272,4010,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][9272] = settr(9488,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9488,0,9269,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9270]	= settr(9486,0,9269,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9269] = settr(9485,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9485,0,9144,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9485,0,9266,0,0,"DO", 0, 2, 0);
	trans[1][9144]	= settr(9360,0,9264,4011,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][9264] = settr(9480,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9480,0,9262,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9262] = settr(9478,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9478,0,9145,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9478,0,9175,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9478,0,9204,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9478,0,9233,0,0,"IF", 0, 2, 0);
	trans[1][9145]	= settr(9361,0,9174,4012,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][9174] = settr(9390,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9390,0,9165,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9165] = settr(9381,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9381,2,9163,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9163] = settr(9379,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9379,2,9146,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9379,2,9149,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9379,2,9152,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9379,2,9155,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9379,2,9158,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9379,2,9161,0,0,"IF", 1, 2, 0);
	trans[1][9146]	= settr(9362,4,9166,4013,4013,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9147 -> 9166,0 */
	reached1[9147] = 1;
	trans[1][9147]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9148]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9164]	= settr(9380,0,9166,4014,4014,".(goto)", 1, 2, 0);
	trans[1][9149]	= settr(9365,4,9166,4015,4015,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9150 -> 9166,0 */
	reached1[9150] = 1;
	trans[1][9150]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9151]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9152]	= settr(9368,4,9166,4016,4016,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9153 -> 9166,0 */
	reached1[9153] = 1;
	trans[1][9153]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9154]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9155]	= settr(9371,4,9166,4017,4017,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9156 -> 9166,0 */
	reached1[9156] = 1;
	trans[1][9156]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9157]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9158]	= settr(9374,4,9166,4018,4018,"((START==ABORT))", 1, 2, 0); /* m: 9159 -> 9166,0 */
	reached1[9159] = 1;
	trans[1][9159]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9160]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9161]	= settr(9377,2,9162,2,0,"else", 1, 2, 0);
	trans[1][9162]	= settr(9378,4,9166,4019,4019,"(1)", 1, 2, 0); /* m: 9164 -> 9166,0 */
	reached1[9164] = 1;
	trans[1][9166]	= settr(9382,0,9172,4020,4020,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9172] = settr(9388,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9388,0,9167,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9388,0,9170,0,0,"IF", 0, 2, 0);
	trans[1][9167]	= settr(9383,0,9169,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9169] = settr(9385,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9385,0,9168,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9168]	= settr(9384,0,9265,4021,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9173]	= settr(9389,0,9265,1,0,".(goto)", 0, 2, 0); /* m: 9265 -> 0,9269 */
	reached1[9265] = 1;
	trans[1][9170]	= settr(9386,0,9171,2,0,"else", 0, 2, 0);
	trans[1][9171]	= settr(9387,0,9269,4022,4022,"(1)", 0, 2, 0); /* m: 9265 -> 9269,0 */
	reached1[9265] = 1;
	trans[1][9263]	= settr(9479,0,9265,1,0,".(goto)", 0, 2, 0); /* m: 9265 -> 0,9269 */
	reached1[9265] = 1;
	trans[1][9175]	= settr(9391,0,9203,4023,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][9203] = settr(9419,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9419,0,9195,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9195] = settr(9411,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9411,2,9193,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9193] = settr(9409,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9409,2,9176,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9409,2,9179,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9409,2,9182,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9409,2,9185,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9409,2,9188,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9409,2,9191,0,0,"IF", 1, 2, 0);
	trans[1][9176]	= settr(9392,4,9201,4024,4024,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9177 -> 9201,0 */
	reached1[9177] = 1;
	trans[1][9177]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9178]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9194]	= settr(9410,0,9201,4025,4025,".(goto)", 1, 2, 0);
	trans[1][9179]	= settr(9395,4,9201,4026,4026,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9180 -> 9201,0 */
	reached1[9180] = 1;
	trans[1][9180]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9181]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9182]	= settr(9398,4,9201,4027,4027,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9183 -> 9201,0 */
	reached1[9183] = 1;
	trans[1][9183]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9184]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9185]	= settr(9401,4,9201,4028,4028,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9186 -> 9201,0 */
	reached1[9186] = 1;
	trans[1][9186]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9187]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9188]	= settr(9404,4,9201,4029,4029,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9189 -> 9201,0 */
	reached1[9189] = 1;
	trans[1][9189]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9190]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9191]	= settr(9407,2,9192,2,0,"else", 1, 2, 0);
	trans[1][9192]	= settr(9408,4,9201,4030,4030,"(1)", 1, 2, 0); /* m: 9194 -> 9201,0 */
	reached1[9194] = 1;
	T = trans[1][9201] = settr(9417,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9417,0,9196,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9417,0,9199,0,0,"IF", 0, 2, 0);
	trans[1][9196]	= settr(9412,0,9198,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9198] = settr(9414,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9414,0,9197,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9197]	= settr(9413,0,9265,4031,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9202]	= settr(9418,0,9265,1,0,".(goto)", 0, 2, 0); /* m: 9265 -> 0,9269 */
	reached1[9265] = 1;
	trans[1][9199]	= settr(9415,0,9200,2,0,"else", 0, 2, 0);
	trans[1][9200]	= settr(9416,0,9269,4032,4032,"(1)", 0, 2, 0); /* m: 9265 -> 9269,0 */
	reached1[9265] = 1;
	trans[1][9204]	= settr(9420,0,9232,4033,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9232] = settr(9448,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9448,0,9224,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9224] = settr(9440,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9440,2,9222,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9222] = settr(9438,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9438,2,9205,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9438,2,9208,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9438,2,9211,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9438,2,9214,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9438,2,9217,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9438,2,9220,0,0,"IF", 1, 2, 0);
	trans[1][9205]	= settr(9421,4,9230,4034,4034,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9206 -> 9230,0 */
	reached1[9206] = 1;
	trans[1][9206]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9207]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9223]	= settr(9439,0,9230,4035,4035,".(goto)", 1, 2, 0);
	trans[1][9208]	= settr(9424,4,9230,4036,4036,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9209 -> 9230,0 */
	reached1[9209] = 1;
	trans[1][9209]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9210]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9211]	= settr(9427,4,9230,4037,4037,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9212 -> 9230,0 */
	reached1[9212] = 1;
	trans[1][9212]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9213]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9214]	= settr(9430,4,9230,4038,4038,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9215 -> 9230,0 */
	reached1[9215] = 1;
	trans[1][9215]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9216]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9217]	= settr(9433,4,9230,4039,4039,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9218 -> 9230,0 */
	reached1[9218] = 1;
	trans[1][9218]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9219]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9220]	= settr(9436,2,9221,2,0,"else", 1, 2, 0);
	trans[1][9221]	= settr(9437,4,9230,4040,4040,"(1)", 1, 2, 0); /* m: 9223 -> 9230,0 */
	reached1[9223] = 1;
	T = trans[1][9230] = settr(9446,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9446,0,9225,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9446,0,9228,0,0,"IF", 0, 2, 0);
	trans[1][9225]	= settr(9441,0,9227,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9227] = settr(9443,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9443,0,9226,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9226]	= settr(9442,0,9265,4041,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9231]	= settr(9447,0,9265,1,0,".(goto)", 0, 2, 0); /* m: 9265 -> 0,9269 */
	reached1[9265] = 1;
	trans[1][9228]	= settr(9444,0,9229,2,0,"else", 0, 2, 0);
	trans[1][9229]	= settr(9445,0,9269,4042,4042,"(1)", 0, 2, 0); /* m: 9265 -> 9269,0 */
	reached1[9265] = 1;
	trans[1][9233]	= settr(9449,0,9261,4043,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][9261] = settr(9477,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9477,0,9253,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9253] = settr(9469,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9469,2,9251,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9251] = settr(9467,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9467,2,9234,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9467,2,9237,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9467,2,9240,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9467,2,9243,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9467,2,9246,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9467,2,9249,0,0,"IF", 1, 2, 0);
	trans[1][9234]	= settr(9450,4,9259,4044,4044,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9235 -> 9259,0 */
	reached1[9235] = 1;
	trans[1][9235]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9236]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9252]	= settr(9468,0,9259,4045,4045,".(goto)", 1, 2, 0);
	trans[1][9237]	= settr(9453,4,9259,4046,4046,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9238 -> 9259,0 */
	reached1[9238] = 1;
	trans[1][9238]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9239]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9240]	= settr(9456,4,9259,4047,4047,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9241 -> 9259,0 */
	reached1[9241] = 1;
	trans[1][9241]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9242]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9243]	= settr(9459,4,9259,4048,4048,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9244 -> 9259,0 */
	reached1[9244] = 1;
	trans[1][9244]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9245]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9246]	= settr(9462,4,9259,4049,4049,"((STOP==ABORT))", 1, 2, 0); /* m: 9247 -> 9259,0 */
	reached1[9247] = 1;
	trans[1][9247]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9248]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9249]	= settr(9465,2,9250,2,0,"else", 1, 2, 0);
	trans[1][9250]	= settr(9466,4,9259,4050,4050,"(1)", 1, 2, 0); /* m: 9252 -> 9259,0 */
	reached1[9252] = 1;
	T = trans[1][9259] = settr(9475,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9475,0,9254,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9475,0,9257,0,0,"IF", 0, 2, 0);
	trans[1][9254]	= settr(9470,0,9256,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9256] = settr(9472,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9472,0,9255,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9255]	= settr(9471,0,9265,4051,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9260]	= settr(9476,0,9265,1,0,".(goto)", 0, 2, 0); /* m: 9265 -> 0,9269 */
	reached1[9265] = 1;
	trans[1][9257]	= settr(9473,0,9258,2,0,"else", 0, 2, 0);
	trans[1][9258]	= settr(9474,0,9269,4052,4052,"(1)", 0, 2, 0); /* m: 9265 -> 9269,0 */
	reached1[9265] = 1;
	trans[1][9265]	= settr(9481,0,9269,4053,4053,"j = (j+1)", 0, 2, 0);
	trans[1][9266]	= settr(9482,0,9267,2,0,"else", 0, 2, 0);
	trans[1][9267]	= settr(9483,0,10858,4054,4054,"j = 1", 0, 2, 0);
	trans[1][9268]	= settr(9484,0,10858,1,0,"goto :b87", 0, 2, 0);
	trans[1][9271]	= settr(9487,0,10858,1,0,"break", 0, 2, 0);
	trans[1][9405]	= settr(9621,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][9273]	= settr(9489,0,9403,2,0,"else", 0, 2, 0);
	T = trans[ 1][9403] = settr(9619,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9619,0,9274,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9274]	= settr(9490,0,9400,4055,4055,"j = (3-1)", 0, 2, 0);
	trans[1][9401]	= settr(9617,0,9400,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9400] = settr(9616,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9616,0,9275,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9616,0,9397,0,0,"DO", 0, 2, 0);
	trans[1][9275]	= settr(9491,0,9395,4056,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][9395] = settr(9611,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9611,0,9393,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9393] = settr(9609,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9609,0,9276,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9609,0,9306,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9609,0,9335,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9609,0,9364,0,0,"IF", 0, 2, 0);
	trans[1][9276]	= settr(9492,0,9305,4057,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][9305] = settr(9521,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9521,0,9296,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9296] = settr(9512,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9512,2,9294,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9294] = settr(9510,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9510,2,9277,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9510,2,9280,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9510,2,9283,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9510,2,9286,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9510,2,9289,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9510,2,9292,0,0,"IF", 1, 2, 0);
	trans[1][9277]	= settr(9493,4,9297,4058,4058,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9278 -> 9297,0 */
	reached1[9278] = 1;
	trans[1][9278]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9279]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9295]	= settr(9511,0,9297,4059,4059,".(goto)", 1, 2, 0);
	trans[1][9280]	= settr(9496,4,9297,4060,4060,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9281 -> 9297,0 */
	reached1[9281] = 1;
	trans[1][9281]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9282]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9283]	= settr(9499,4,9297,4061,4061,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9284 -> 9297,0 */
	reached1[9284] = 1;
	trans[1][9284]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9285]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9286]	= settr(9502,4,9297,4062,4062,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9287 -> 9297,0 */
	reached1[9287] = 1;
	trans[1][9287]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9288]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9289]	= settr(9505,4,9297,4063,4063,"((START==ABORT))", 1, 2, 0); /* m: 9290 -> 9297,0 */
	reached1[9290] = 1;
	trans[1][9290]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9291]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9292]	= settr(9508,2,9293,2,0,"else", 1, 2, 0);
	trans[1][9293]	= settr(9509,4,9297,4064,4064,"(1)", 1, 2, 0); /* m: 9295 -> 9297,0 */
	reached1[9295] = 1;
	trans[1][9297]	= settr(9513,0,9303,4065,4065,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9303] = settr(9519,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9519,0,9298,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9519,0,9301,0,0,"IF", 0, 2, 0);
	trans[1][9298]	= settr(9514,0,9300,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9300] = settr(9516,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9516,0,9299,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9299]	= settr(9515,0,9396,4066,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9304]	= settr(9520,0,9396,1,0,".(goto)", 0, 2, 0); /* m: 9396 -> 0,9400 */
	reached1[9396] = 1;
	trans[1][9301]	= settr(9517,0,9302,2,0,"else", 0, 2, 0);
	trans[1][9302]	= settr(9518,0,9400,4067,4067,"(1)", 0, 2, 0); /* m: 9396 -> 9400,0 */
	reached1[9396] = 1;
	trans[1][9394]	= settr(9610,0,9396,1,0,".(goto)", 0, 2, 0); /* m: 9396 -> 0,9400 */
	reached1[9396] = 1;
	trans[1][9306]	= settr(9522,0,9334,4068,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][9334] = settr(9550,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9550,0,9326,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9326] = settr(9542,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9542,2,9324,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9324] = settr(9540,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9540,2,9307,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9540,2,9310,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9540,2,9313,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9540,2,9316,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9540,2,9319,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9540,2,9322,0,0,"IF", 1, 2, 0);
	trans[1][9307]	= settr(9523,4,9332,4069,4069,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9308 -> 9332,0 */
	reached1[9308] = 1;
	trans[1][9308]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9309]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9325]	= settr(9541,0,9332,4070,4070,".(goto)", 1, 2, 0);
	trans[1][9310]	= settr(9526,4,9332,4071,4071,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9311 -> 9332,0 */
	reached1[9311] = 1;
	trans[1][9311]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9312]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9313]	= settr(9529,4,9332,4072,4072,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9314 -> 9332,0 */
	reached1[9314] = 1;
	trans[1][9314]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9315]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9316]	= settr(9532,4,9332,4073,4073,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9317 -> 9332,0 */
	reached1[9317] = 1;
	trans[1][9317]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9318]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9319]	= settr(9535,4,9332,4074,4074,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9320 -> 9332,0 */
	reached1[9320] = 1;
	trans[1][9320]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9321]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9322]	= settr(9538,2,9323,2,0,"else", 1, 2, 0);
	trans[1][9323]	= settr(9539,4,9332,4075,4075,"(1)", 1, 2, 0); /* m: 9325 -> 9332,0 */
	reached1[9325] = 1;
	T = trans[1][9332] = settr(9548,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9548,0,9327,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9548,0,9330,0,0,"IF", 0, 2, 0);
	trans[1][9327]	= settr(9543,0,9329,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9329] = settr(9545,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9545,0,9328,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9328]	= settr(9544,0,9396,4076,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9333]	= settr(9549,0,9396,1,0,".(goto)", 0, 2, 0); /* m: 9396 -> 0,9400 */
	reached1[9396] = 1;
	trans[1][9330]	= settr(9546,0,9331,2,0,"else", 0, 2, 0);
	trans[1][9331]	= settr(9547,0,9400,4077,4077,"(1)", 0, 2, 0); /* m: 9396 -> 9400,0 */
	reached1[9396] = 1;
	trans[1][9335]	= settr(9551,0,9363,4078,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9363] = settr(9579,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9579,0,9355,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9355] = settr(9571,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9571,2,9353,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9353] = settr(9569,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9569,2,9336,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9569,2,9339,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9569,2,9342,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9569,2,9345,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9569,2,9348,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9569,2,9351,0,0,"IF", 1, 2, 0);
	trans[1][9336]	= settr(9552,4,9361,4079,4079,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9337 -> 9361,0 */
	reached1[9337] = 1;
	trans[1][9337]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9338]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9354]	= settr(9570,0,9361,4080,4080,".(goto)", 1, 2, 0);
	trans[1][9339]	= settr(9555,4,9361,4081,4081,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9340 -> 9361,0 */
	reached1[9340] = 1;
	trans[1][9340]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9341]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9342]	= settr(9558,4,9361,4082,4082,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9343 -> 9361,0 */
	reached1[9343] = 1;
	trans[1][9343]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9344]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9345]	= settr(9561,4,9361,4083,4083,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9346 -> 9361,0 */
	reached1[9346] = 1;
	trans[1][9346]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9347]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9348]	= settr(9564,4,9361,4084,4084,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9349 -> 9361,0 */
	reached1[9349] = 1;
	trans[1][9349]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9350]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9351]	= settr(9567,2,9352,2,0,"else", 1, 2, 0);
	trans[1][9352]	= settr(9568,4,9361,4085,4085,"(1)", 1, 2, 0); /* m: 9354 -> 9361,0 */
	reached1[9354] = 1;
	T = trans[1][9361] = settr(9577,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9577,0,9356,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9577,0,9359,0,0,"IF", 0, 2, 0);
	trans[1][9356]	= settr(9572,0,9358,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9358] = settr(9574,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9574,0,9357,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9357]	= settr(9573,0,9396,4086,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9362]	= settr(9578,0,9396,1,0,".(goto)", 0, 2, 0); /* m: 9396 -> 0,9400 */
	reached1[9396] = 1;
	trans[1][9359]	= settr(9575,0,9360,2,0,"else", 0, 2, 0);
	trans[1][9360]	= settr(9576,0,9400,4087,4087,"(1)", 0, 2, 0); /* m: 9396 -> 9400,0 */
	reached1[9396] = 1;
	trans[1][9364]	= settr(9580,0,9392,4088,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][9392] = settr(9608,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9608,0,9384,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9384] = settr(9600,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9600,2,9382,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9382] = settr(9598,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9598,2,9365,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9598,2,9368,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9598,2,9371,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9598,2,9374,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9598,2,9377,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9598,2,9380,0,0,"IF", 1, 2, 0);
	trans[1][9365]	= settr(9581,4,9390,4089,4089,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9366 -> 9390,0 */
	reached1[9366] = 1;
	trans[1][9366]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9367]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9383]	= settr(9599,0,9390,4090,4090,".(goto)", 1, 2, 0);
	trans[1][9368]	= settr(9584,4,9390,4091,4091,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9369 -> 9390,0 */
	reached1[9369] = 1;
	trans[1][9369]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9370]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9371]	= settr(9587,4,9390,4092,4092,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9372 -> 9390,0 */
	reached1[9372] = 1;
	trans[1][9372]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9373]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9374]	= settr(9590,4,9390,4093,4093,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9375 -> 9390,0 */
	reached1[9375] = 1;
	trans[1][9375]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9376]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9377]	= settr(9593,4,9390,4094,4094,"((STOP==ABORT))", 1, 2, 0); /* m: 9378 -> 9390,0 */
	reached1[9378] = 1;
	trans[1][9378]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9379]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9380]	= settr(9596,2,9381,2,0,"else", 1, 2, 0);
	trans[1][9381]	= settr(9597,4,9390,4095,4095,"(1)", 1, 2, 0); /* m: 9383 -> 9390,0 */
	reached1[9383] = 1;
	T = trans[1][9390] = settr(9606,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9606,0,9385,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9606,0,9388,0,0,"IF", 0, 2, 0);
	trans[1][9385]	= settr(9601,0,9387,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9387] = settr(9603,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9603,0,9386,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9386]	= settr(9602,0,9396,4096,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9391]	= settr(9607,0,9396,1,0,".(goto)", 0, 2, 0); /* m: 9396 -> 0,9400 */
	reached1[9396] = 1;
	trans[1][9388]	= settr(9604,0,9389,2,0,"else", 0, 2, 0);
	trans[1][9389]	= settr(9605,0,9400,4097,4097,"(1)", 0, 2, 0); /* m: 9396 -> 9400,0 */
	reached1[9396] = 1;
	trans[1][9396]	= settr(9612,0,9400,4098,4098,"j = (j-1)", 0, 2, 0);
	trans[1][9397]	= settr(9613,0,9398,2,0,"else", 0, 2, 0);
	trans[1][9398]	= settr(9614,0,10858,4099,4099,"j = 1", 0, 2, 0);
	trans[1][9399]	= settr(9615,0,10858,1,0,"goto :b88", 0, 2, 0);
	trans[1][9402]	= settr(9618,0,10858,1,0,"break", 0, 2, 0);
	trans[1][9561]	= settr(9777,0,10858,1,0,".(goto)", 0, 2, 0);
	trans[1][9407]	= settr(9623,0,9559,2,0,"else", 0, 2, 0);
	T = trans[ 1][9559] = settr(9775,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9775,0,9536,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9536] = settr(9752,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9752,0,9533,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9534]	= settr(9750,0,9533,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9533] = settr(9749,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9749,0,9408,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9749,0,9530,0,0,"DO", 0, 2, 0);
	trans[1][9408]	= settr(9624,0,9528,4100,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][9528] = settr(9744,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9744,0,9526,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9526] = settr(9742,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9742,0,9409,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9742,0,9439,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9742,0,9468,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9742,0,9497,0,0,"IF", 0, 2, 0);
	trans[1][9409]	= settr(9625,0,9438,4101,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][9438] = settr(9654,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9654,0,9429,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9429] = settr(9645,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9645,2,9427,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9427] = settr(9643,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9643,2,9410,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9643,2,9413,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9643,2,9416,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9643,2,9419,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9643,2,9422,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9643,2,9425,0,0,"IF", 1, 2, 0);
	trans[1][9410]	= settr(9626,4,9430,4102,4102,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9411 -> 9430,0 */
	reached1[9411] = 1;
	trans[1][9411]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9412]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9428]	= settr(9644,0,9430,4103,4103,".(goto)", 1, 2, 0);
	trans[1][9413]	= settr(9629,4,9430,4104,4104,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9414 -> 9430,0 */
	reached1[9414] = 1;
	trans[1][9414]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9415]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9416]	= settr(9632,4,9430,4105,4105,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9417 -> 9430,0 */
	reached1[9417] = 1;
	trans[1][9417]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9418]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9419]	= settr(9635,4,9430,4106,4106,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9420 -> 9430,0 */
	reached1[9420] = 1;
	trans[1][9420]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9421]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9422]	= settr(9638,4,9430,4107,4107,"((START==ABORT))", 1, 2, 0); /* m: 9423 -> 9430,0 */
	reached1[9423] = 1;
	trans[1][9423]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9424]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9425]	= settr(9641,2,9426,2,0,"else", 1, 2, 0);
	trans[1][9426]	= settr(9642,4,9430,4108,4108,"(1)", 1, 2, 0); /* m: 9428 -> 9430,0 */
	reached1[9428] = 1;
	trans[1][9430]	= settr(9646,0,9436,4109,4109,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9436] = settr(9652,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9652,0,9431,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9652,0,9434,0,0,"IF", 0, 2, 0);
	trans[1][9431]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9433] = settr(9649,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9649,0,9432,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9432]	= settr(9648,0,9529,4110,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9437]	= settr(9653,0,9529,1,0,".(goto)", 0, 2, 0); /* m: 9529 -> 0,9533 */
	reached1[9529] = 1;
	trans[1][9434]	= settr(9650,0,9435,2,0,"else", 0, 2, 0);
	trans[1][9435]	= settr(9651,0,9533,4111,4111,"(1)", 0, 2, 0); /* m: 9529 -> 9533,0 */
	reached1[9529] = 1;
	trans[1][9527]	= settr(9743,0,9529,1,0,".(goto)", 0, 2, 0); /* m: 9529 -> 0,9533 */
	reached1[9529] = 1;
	trans[1][9439]	= settr(9655,0,9467,4112,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][9467] = settr(9683,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9683,0,9459,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9459] = settr(9675,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9675,2,9457,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9457] = settr(9673,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9673,2,9440,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9673,2,9443,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9673,2,9446,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9673,2,9449,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9673,2,9452,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9673,2,9455,0,0,"IF", 1, 2, 0);
	trans[1][9440]	= settr(9656,4,9465,4113,4113,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9441 -> 9465,0 */
	reached1[9441] = 1;
	trans[1][9441]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9442]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9458]	= settr(9674,0,9465,4114,4114,".(goto)", 1, 2, 0);
	trans[1][9443]	= settr(9659,4,9465,4115,4115,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9444 -> 9465,0 */
	reached1[9444] = 1;
	trans[1][9444]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9445]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9446]	= settr(9662,4,9465,4116,4116,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9447 -> 9465,0 */
	reached1[9447] = 1;
	trans[1][9447]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9448]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9449]	= settr(9665,4,9465,4117,4117,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9450 -> 9465,0 */
	reached1[9450] = 1;
	trans[1][9450]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9451]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9452]	= settr(9668,4,9465,4118,4118,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9453 -> 9465,0 */
	reached1[9453] = 1;
	trans[1][9453]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9454]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9455]	= settr(9671,2,9456,2,0,"else", 1, 2, 0);
	trans[1][9456]	= settr(9672,4,9465,4119,4119,"(1)", 1, 2, 0); /* m: 9458 -> 9465,0 */
	reached1[9458] = 1;
	T = trans[1][9465] = settr(9681,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9681,0,9460,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9681,0,9463,0,0,"IF", 0, 2, 0);
	trans[1][9460]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9462] = settr(9678,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9678,0,9461,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9461]	= settr(9677,0,9529,4120,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9466]	= settr(9682,0,9529,1,0,".(goto)", 0, 2, 0); /* m: 9529 -> 0,9533 */
	reached1[9529] = 1;
	trans[1][9463]	= settr(9679,0,9464,2,0,"else", 0, 2, 0);
	trans[1][9464]	= settr(9680,0,9533,4121,4121,"(1)", 0, 2, 0); /* m: 9529 -> 9533,0 */
	reached1[9529] = 1;
	trans[1][9468]	= settr(9684,0,9496,4122,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9496] = settr(9712,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9712,0,9488,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9488] = settr(9704,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9704,2,9486,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9486] = settr(9702,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9702,2,9469,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9702,2,9472,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9702,2,9475,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9702,2,9478,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9702,2,9481,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9702,2,9484,0,0,"IF", 1, 2, 0);
	trans[1][9469]	= settr(9685,4,9494,4123,4123,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9470 -> 9494,0 */
	reached1[9470] = 1;
	trans[1][9470]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9471]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9487]	= settr(9703,0,9494,4124,4124,".(goto)", 1, 2, 0);
	trans[1][9472]	= settr(9688,4,9494,4125,4125,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9473 -> 9494,0 */
	reached1[9473] = 1;
	trans[1][9473]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9474]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9475]	= settr(9691,4,9494,4126,4126,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9476 -> 9494,0 */
	reached1[9476] = 1;
	trans[1][9476]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9477]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9478]	= settr(9694,4,9494,4127,4127,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9479 -> 9494,0 */
	reached1[9479] = 1;
	trans[1][9479]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9480]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9481]	= settr(9697,4,9494,4128,4128,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9482 -> 9494,0 */
	reached1[9482] = 1;
	trans[1][9482]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9483]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9484]	= settr(9700,2,9485,2,0,"else", 1, 2, 0);
	trans[1][9485]	= settr(9701,4,9494,4129,4129,"(1)", 1, 2, 0); /* m: 9487 -> 9494,0 */
	reached1[9487] = 1;
	T = trans[1][9494] = settr(9710,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9710,0,9489,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9710,0,9492,0,0,"IF", 0, 2, 0);
	trans[1][9489]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9491] = settr(9707,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9707,0,9490,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9490]	= settr(9706,0,9529,4130,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9495]	= settr(9711,0,9529,1,0,".(goto)", 0, 2, 0); /* m: 9529 -> 0,9533 */
	reached1[9529] = 1;
	trans[1][9492]	= settr(9708,0,9493,2,0,"else", 0, 2, 0);
	trans[1][9493]	= settr(9709,0,9533,4131,4131,"(1)", 0, 2, 0); /* m: 9529 -> 9533,0 */
	reached1[9529] = 1;
	trans[1][9497]	= settr(9713,0,9525,4132,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][9525] = settr(9741,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9741,0,9517,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9517] = settr(9733,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9733,2,9515,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9515] = settr(9731,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9731,2,9498,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9731,2,9501,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9731,2,9504,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9731,2,9507,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9731,2,9510,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9731,2,9513,0,0,"IF", 1, 2, 0);
	trans[1][9498]	= settr(9714,4,9523,4133,4133,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9499 -> 9523,0 */
	reached1[9499] = 1;
	trans[1][9499]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9500]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9516]	= settr(9732,0,9523,4134,4134,".(goto)", 1, 2, 0);
	trans[1][9501]	= settr(9717,4,9523,4135,4135,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9502 -> 9523,0 */
	reached1[9502] = 1;
	trans[1][9502]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9503]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9504]	= settr(9720,4,9523,4136,4136,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9505 -> 9523,0 */
	reached1[9505] = 1;
	trans[1][9505]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9506]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9507]	= settr(9723,4,9523,4137,4137,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9508 -> 9523,0 */
	reached1[9508] = 1;
	trans[1][9508]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9509]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9510]	= settr(9726,4,9523,4138,4138,"((STOP==ABORT))", 1, 2, 0); /* m: 9511 -> 9523,0 */
	reached1[9511] = 1;
	trans[1][9511]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9512]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9513]	= settr(9729,2,9514,2,0,"else", 1, 2, 0);
	trans[1][9514]	= settr(9730,4,9523,4139,4139,"(1)", 1, 2, 0); /* m: 9516 -> 9523,0 */
	reached1[9516] = 1;
	T = trans[1][9523] = settr(9739,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(9739,0,9518,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(9739,0,9521,0,0,"IF", 0, 2, 0);
	trans[1][9518]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9520] = settr(9736,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9736,0,9519,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9519]	= settr(9735,0,9529,4140,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9524]	= settr(9740,0,9529,1,0,".(goto)", 0, 2, 0); /* m: 9529 -> 0,9533 */
	reached1[9529] = 1;
	trans[1][9521]	= settr(9737,0,9522,2,0,"else", 0, 2, 0);
	trans[1][9522]	= settr(9738,0,9533,4141,4141,"(1)", 0, 2, 0); /* m: 9529 -> 9533,0 */
	reached1[9529] = 1;
	trans[1][9529]	= settr(9745,0,9533,4142,4142,"j = (j+1)", 0, 2, 0);
	trans[1][9530]	= settr(9746,0,9531,2,0,"else", 0, 2, 0);
	trans[1][9531]	= settr(9747,0,9556,4143,4143,"j = 1", 0, 2, 0);
	trans[1][9532]	= settr(9748,0,9556,1,0,"goto :b89", 0, 2, 0);
	trans[1][9535]	= settr(9751,0,9556,1,0,"break", 0, 2, 0);
	trans[1][9557]	= settr(9773,0,9556,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9556] = settr(9772,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9772,0,9537,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9772,0,9553,0,0,"DO", 0, 2, 0);
	trans[1][9537]	= settr(9753,0,9550,4144,0,"((j<3))", 0, 2, 0);
	T = trans[1][9550] = settr(9766,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9766,0,9538,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9766,0,9541,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9766,0,9544,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9766,0,9547,0,0,"IF", 0, 2, 0);
	trans[1][9538]	= settr(9754,0,9540,4145,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][9540] = settr(9756,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9756,0,9539,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9539]	= settr(9755,0,9552,4146,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9551]	= settr(9767,0,9552,1,0,".(goto)", 0, 2, 0); /* m: 9552 -> 0,9556 */
	reached1[9552] = 1;
	trans[1][9541]	= settr(9757,0,9543,4147,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9543] = settr(9759,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9759,0,9542,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9542]	= settr(9758,0,9552,4148,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9544]	= settr(9760,0,9546,4149,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][9546] = settr(9762,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9762,0,9545,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9545]	= settr(9761,0,9552,4150,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9547]	= settr(9763,0,9549,4151,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][9549] = settr(9765,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9765,0,9548,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9548]	= settr(9764,0,9552,4152,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9552]	= settr(9768,0,9556,4153,4153,"j = (j+1)", 0, 2, 0);
	trans[1][9553]	= settr(9769,0,9554,2,0,"else", 0, 2, 0);
	trans[1][9554]	= settr(9770,0,10858,4154,4154,"j = 1", 0, 2, 0);
	trans[1][9555]	= settr(9771,0,10858,1,0,"goto :b90", 0, 2, 0);
	trans[1][9558]	= settr(9774,0,10858,1,0,"break", 0, 2, 0);
	trans[1][9565]	= settr(9781,0,9566,2,0,"else", 0, 2, 0);
	trans[1][9566]	= settr(9782,0,10858,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10858] = settr(11074,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11074,0,10856,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10856] = settr(11072,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11072,0,10854,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10854] = settr(11070,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11070,0,9571,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11070,0,9998,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11070,0,10425,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11070,0,10852,0,0,"IF", 0, 2, 0);
	trans[1][9571]	= settr(9787,0,9997,4155,0,"((3==RUNNING))", 0, 2, 0);
	T = trans[ 1][9997] = settr(10213,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10213,0,9995,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9995] = settr(10211,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10211,0,9572,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10211,0,9574,0,0,"IF", 0, 2, 0);
	trans[1][9572]	= settr(9788,0,9573,4156,0,"(((8==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][9573]	= settr(9789,0,10857,4157,4157,"supervisor_started = 1", 1, 2, 0);
	trans[1][9996]	= settr(10212,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][9574]	= settr(9790,0,9993,2,0,"else", 0, 2, 0);
	T = trans[1][9993] = settr(10209,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10209,0,9575,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10209,0,9840,0,0,"IF", 0, 2, 0);
	trans[1][9575]	= settr(9791,0,9839,4158,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][9839] = settr(10055,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10055,0,9837,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9837] = settr(10053,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10053,0,9576,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10053,0,9706,0,0,"IF", 0, 2, 0);
	trans[1][9576]	= settr(9792,0,9705,4159,0,"(((8==START)||(8==PAUSED)))", 0, 2, 0);
	T = trans[ 1][9705] = settr(9921,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9921,0,9702,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9703]	= settr(9919,0,9702,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9702] = settr(9918,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(9918,0,9577,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(9918,0,9699,0,0,"DO", 0, 2, 0);
	trans[1][9577]	= settr(9793,0,9697,4160,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][9697] = settr(9913,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9913,0,9695,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9695] = settr(9911,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9911,0,9578,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9911,0,9608,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9911,0,9637,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9911,0,9666,0,0,"IF", 0, 2, 0);
	trans[1][9578]	= settr(9794,0,9607,4161,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][9607] = settr(9823,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9823,0,9598,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9598] = settr(9814,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9814,2,9596,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9596] = settr(9812,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9812,2,9579,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9812,2,9582,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9812,2,9585,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9812,2,9588,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9812,2,9591,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9812,2,9594,0,0,"IF", 1, 2, 0);
	trans[1][9579]	= settr(9795,4,9599,4162,4162,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9580 -> 9599,0 */
	reached1[9580] = 1;
	trans[1][9580]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9581]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9597]	= settr(9813,0,9599,4163,4163,".(goto)", 1, 2, 0);
	trans[1][9582]	= settr(9798,4,9599,4164,4164,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9583 -> 9599,0 */
	reached1[9583] = 1;
	trans[1][9583]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9584]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9585]	= settr(9801,4,9599,4165,4165,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9586 -> 9599,0 */
	reached1[9586] = 1;
	trans[1][9586]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9587]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9588]	= settr(9804,4,9599,4166,4166,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9589 -> 9599,0 */
	reached1[9589] = 1;
	trans[1][9589]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9590]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9591]	= settr(9807,4,9599,4167,4167,"((START==ABORT))", 1, 2, 0); /* m: 9592 -> 9599,0 */
	reached1[9592] = 1;
	trans[1][9592]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9593]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9594]	= settr(9810,2,9595,2,0,"else", 1, 2, 0);
	trans[1][9595]	= settr(9811,4,9599,4168,4168,"(1)", 1, 2, 0); /* m: 9597 -> 9599,0 */
	reached1[9597] = 1;
	trans[1][9599]	= settr(9815,0,9605,4169,4169,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9605] = settr(9821,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9821,0,9600,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9821,0,9603,0,0,"IF", 0, 2, 0);
	trans[1][9600]	= settr(9816,0,9602,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9602] = settr(9818,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9818,0,9601,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9601]	= settr(9817,0,9698,4170,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9606]	= settr(9822,0,9698,1,0,".(goto)", 0, 2, 0); /* m: 9698 -> 0,9702 */
	reached1[9698] = 1;
	trans[1][9603]	= settr(9819,0,9604,2,0,"else", 0, 2, 0);
	trans[1][9604]	= settr(9820,0,9702,4171,4171,"(1)", 0, 2, 0); /* m: 9698 -> 9702,0 */
	reached1[9698] = 1;
	trans[1][9696]	= settr(9912,0,9698,1,0,".(goto)", 0, 2, 0); /* m: 9698 -> 0,9702 */
	reached1[9698] = 1;
	trans[1][9608]	= settr(9824,0,9636,4172,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][9636] = settr(9852,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9852,0,9628,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9628] = settr(9844,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9844,2,9626,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9626] = settr(9842,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9842,2,9609,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9842,2,9612,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9842,2,9615,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9842,2,9618,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9842,2,9621,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9842,2,9624,0,0,"IF", 1, 2, 0);
	trans[1][9609]	= settr(9825,4,9634,4173,4173,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9610 -> 9634,0 */
	reached1[9610] = 1;
	trans[1][9610]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9611]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9627]	= settr(9843,0,9634,4174,4174,".(goto)", 1, 2, 0);
	trans[1][9612]	= settr(9828,4,9634,4175,4175,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9613 -> 9634,0 */
	reached1[9613] = 1;
	trans[1][9613]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9614]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9615]	= settr(9831,4,9634,4176,4176,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9616 -> 9634,0 */
	reached1[9616] = 1;
	trans[1][9616]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9617]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9618]	= settr(9834,4,9634,4177,4177,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9619 -> 9634,0 */
	reached1[9619] = 1;
	trans[1][9619]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9620]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9621]	= settr(9837,4,9634,4178,4178,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9622 -> 9634,0 */
	reached1[9622] = 1;
	trans[1][9622]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9623]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9624]	= settr(9840,2,9625,2,0,"else", 1, 2, 0);
	trans[1][9625]	= settr(9841,4,9634,4179,4179,"(1)", 1, 2, 0); /* m: 9627 -> 9634,0 */
	reached1[9627] = 1;
	T = trans[1][9634] = settr(9850,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9850,0,9629,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9850,0,9632,0,0,"IF", 0, 2, 0);
	trans[1][9629]	= settr(9845,0,9631,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9631] = settr(9847,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9847,0,9630,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9630]	= settr(9846,0,9698,4180,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9635]	= settr(9851,0,9698,1,0,".(goto)", 0, 2, 0); /* m: 9698 -> 0,9702 */
	reached1[9698] = 1;
	trans[1][9632]	= settr(9848,0,9633,2,0,"else", 0, 2, 0);
	trans[1][9633]	= settr(9849,0,9702,4181,4181,"(1)", 0, 2, 0); /* m: 9698 -> 9702,0 */
	reached1[9698] = 1;
	trans[1][9637]	= settr(9853,0,9665,4182,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9665] = settr(9881,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9881,0,9657,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9657] = settr(9873,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9873,2,9655,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9655] = settr(9871,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9871,2,9638,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9871,2,9641,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9871,2,9644,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9871,2,9647,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9871,2,9650,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9871,2,9653,0,0,"IF", 1, 2, 0);
	trans[1][9638]	= settr(9854,4,9663,4183,4183,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9639 -> 9663,0 */
	reached1[9639] = 1;
	trans[1][9639]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9640]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9656]	= settr(9872,0,9663,4184,4184,".(goto)", 1, 2, 0);
	trans[1][9641]	= settr(9857,4,9663,4185,4185,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9642 -> 9663,0 */
	reached1[9642] = 1;
	trans[1][9642]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9643]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9644]	= settr(9860,4,9663,4186,4186,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9645 -> 9663,0 */
	reached1[9645] = 1;
	trans[1][9645]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9646]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9647]	= settr(9863,4,9663,4187,4187,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9648 -> 9663,0 */
	reached1[9648] = 1;
	trans[1][9648]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9649]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9650]	= settr(9866,4,9663,4188,4188,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9651 -> 9663,0 */
	reached1[9651] = 1;
	trans[1][9651]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9652]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9653]	= settr(9869,2,9654,2,0,"else", 1, 2, 0);
	trans[1][9654]	= settr(9870,4,9663,4189,4189,"(1)", 1, 2, 0); /* m: 9656 -> 9663,0 */
	reached1[9656] = 1;
	T = trans[1][9663] = settr(9879,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9879,0,9658,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9879,0,9661,0,0,"IF", 0, 2, 0);
	trans[1][9658]	= settr(9874,0,9660,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9660] = settr(9876,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9876,0,9659,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9659]	= settr(9875,0,9698,4190,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9664]	= settr(9880,0,9698,1,0,".(goto)", 0, 2, 0); /* m: 9698 -> 0,9702 */
	reached1[9698] = 1;
	trans[1][9661]	= settr(9877,0,9662,2,0,"else", 0, 2, 0);
	trans[1][9662]	= settr(9878,0,9702,4191,4191,"(1)", 0, 2, 0); /* m: 9698 -> 9702,0 */
	reached1[9698] = 1;
	trans[1][9666]	= settr(9882,0,9694,4192,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][9694] = settr(9910,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9910,0,9686,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9686] = settr(9902,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9902,2,9684,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9684] = settr(9900,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9900,2,9667,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9900,2,9670,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9900,2,9673,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9900,2,9676,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9900,2,9679,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9900,2,9682,0,0,"IF", 1, 2, 0);
	trans[1][9667]	= settr(9883,4,9692,4193,4193,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9668 -> 9692,0 */
	reached1[9668] = 1;
	trans[1][9668]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9669]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9685]	= settr(9901,0,9692,4194,4194,".(goto)", 1, 2, 0);
	trans[1][9670]	= settr(9886,4,9692,4195,4195,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9671 -> 9692,0 */
	reached1[9671] = 1;
	trans[1][9671]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9672]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9673]	= settr(9889,4,9692,4196,4196,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9674 -> 9692,0 */
	reached1[9674] = 1;
	trans[1][9674]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9675]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9676]	= settr(9892,4,9692,4197,4197,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9677 -> 9692,0 */
	reached1[9677] = 1;
	trans[1][9677]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9678]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9679]	= settr(9895,4,9692,4198,4198,"((STOP==ABORT))", 1, 2, 0); /* m: 9680 -> 9692,0 */
	reached1[9680] = 1;
	trans[1][9680]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9681]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9682]	= settr(9898,2,9683,2,0,"else", 1, 2, 0);
	trans[1][9683]	= settr(9899,4,9692,4199,4199,"(1)", 1, 2, 0); /* m: 9685 -> 9692,0 */
	reached1[9685] = 1;
	T = trans[1][9692] = settr(9908,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9908,0,9687,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9908,0,9690,0,0,"IF", 0, 2, 0);
	trans[1][9687]	= settr(9903,0,9689,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9689] = settr(9905,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9905,0,9688,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9688]	= settr(9904,0,9698,4200,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9693]	= settr(9909,0,9698,1,0,".(goto)", 0, 2, 0); /* m: 9698 -> 0,9702 */
	reached1[9698] = 1;
	trans[1][9690]	= settr(9906,0,9691,2,0,"else", 0, 2, 0);
	trans[1][9691]	= settr(9907,0,9702,4201,4201,"(1)", 0, 2, 0); /* m: 9698 -> 9702,0 */
	reached1[9698] = 1;
	trans[1][9698]	= settr(9914,0,9702,4202,4202,"j = (j+1)", 0, 2, 0);
	trans[1][9699]	= settr(9915,0,9700,2,0,"else", 0, 2, 0);
	trans[1][9700]	= settr(9916,0,10857,4203,4203,"j = 1", 0, 2, 0);
	trans[1][9701]	= settr(9917,0,10857,1,0,"goto :b91", 0, 2, 0);
	trans[1][9704]	= settr(9920,0,10857,1,0,"break", 0, 2, 0);
	trans[1][9838]	= settr(10054,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][9706]	= settr(9922,0,9836,2,0,"else", 0, 2, 0);
	T = trans[ 1][9836] = settr(10052,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10052,0,9707,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9707]	= settr(9923,0,9833,4204,4204,"j = (3-1)", 0, 2, 0);
	trans[1][9834]	= settr(10050,0,9833,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9833] = settr(10049,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10049,0,9708,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10049,0,9830,0,0,"DO", 0, 2, 0);
	trans[1][9708]	= settr(9924,0,9828,4205,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][9828] = settr(10044,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10044,0,9826,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9826] = settr(10042,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10042,0,9709,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10042,0,9739,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10042,0,9768,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10042,0,9797,0,0,"IF", 0, 2, 0);
	trans[1][9709]	= settr(9925,0,9738,4206,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][9738] = settr(9954,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9954,0,9729,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9729] = settr(9945,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9945,2,9727,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9727] = settr(9943,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9943,2,9710,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9943,2,9713,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9943,2,9716,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9943,2,9719,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9943,2,9722,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9943,2,9725,0,0,"IF", 1, 2, 0);
	trans[1][9710]	= settr(9926,4,9730,4207,4207,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9711 -> 9730,0 */
	reached1[9711] = 1;
	trans[1][9711]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9712]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9728]	= settr(9944,0,9730,4208,4208,".(goto)", 1, 2, 0);
	trans[1][9713]	= settr(9929,4,9730,4209,4209,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9714 -> 9730,0 */
	reached1[9714] = 1;
	trans[1][9714]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9715]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9716]	= settr(9932,4,9730,4210,4210,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9717 -> 9730,0 */
	reached1[9717] = 1;
	trans[1][9717]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9718]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9719]	= settr(9935,4,9730,4211,4211,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9720 -> 9730,0 */
	reached1[9720] = 1;
	trans[1][9720]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9721]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9722]	= settr(9938,4,9730,4212,4212,"((START==ABORT))", 1, 2, 0); /* m: 9723 -> 9730,0 */
	reached1[9723] = 1;
	trans[1][9723]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9724]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9725]	= settr(9941,2,9726,2,0,"else", 1, 2, 0);
	trans[1][9726]	= settr(9942,4,9730,4213,4213,"(1)", 1, 2, 0); /* m: 9728 -> 9730,0 */
	reached1[9728] = 1;
	trans[1][9730]	= settr(9946,0,9736,4214,4214,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9736] = settr(9952,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9952,0,9731,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9952,0,9734,0,0,"IF", 0, 2, 0);
	trans[1][9731]	= settr(9947,0,9733,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9733] = settr(9949,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9949,0,9732,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9732]	= settr(9948,0,9829,4215,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9737]	= settr(9953,0,9829,1,0,".(goto)", 0, 2, 0); /* m: 9829 -> 0,9833 */
	reached1[9829] = 1;
	trans[1][9734]	= settr(9950,0,9735,2,0,"else", 0, 2, 0);
	trans[1][9735]	= settr(9951,0,9833,4216,4216,"(1)", 0, 2, 0); /* m: 9829 -> 9833,0 */
	reached1[9829] = 1;
	trans[1][9827]	= settr(10043,0,9829,1,0,".(goto)", 0, 2, 0); /* m: 9829 -> 0,9833 */
	reached1[9829] = 1;
	trans[1][9739]	= settr(9955,0,9767,4217,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][9767] = settr(9983,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9983,0,9759,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9759] = settr(9975,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(9975,2,9757,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9757] = settr(9973,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9973,2,9740,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9973,2,9743,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9973,2,9746,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9973,2,9749,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(9973,2,9752,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(9973,2,9755,0,0,"IF", 1, 2, 0);
	trans[1][9740]	= settr(9956,4,9765,4218,4218,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9741 -> 9765,0 */
	reached1[9741] = 1;
	trans[1][9741]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9742]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9758]	= settr(9974,0,9765,4219,4219,".(goto)", 1, 2, 0);
	trans[1][9743]	= settr(9959,4,9765,4220,4220,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9744 -> 9765,0 */
	reached1[9744] = 1;
	trans[1][9744]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9745]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9746]	= settr(9962,4,9765,4221,4221,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9747 -> 9765,0 */
	reached1[9747] = 1;
	trans[1][9747]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9748]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9749]	= settr(9965,4,9765,4222,4222,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9750 -> 9765,0 */
	reached1[9750] = 1;
	trans[1][9750]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9751]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9752]	= settr(9968,4,9765,4223,4223,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9753 -> 9765,0 */
	reached1[9753] = 1;
	trans[1][9753]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9754]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9755]	= settr(9971,2,9756,2,0,"else", 1, 2, 0);
	trans[1][9756]	= settr(9972,4,9765,4224,4224,"(1)", 1, 2, 0); /* m: 9758 -> 9765,0 */
	reached1[9758] = 1;
	T = trans[1][9765] = settr(9981,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(9981,0,9760,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(9981,0,9763,0,0,"IF", 0, 2, 0);
	trans[1][9760]	= settr(9976,0,9762,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9762] = settr(9978,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(9978,0,9761,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9761]	= settr(9977,0,9829,4225,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9766]	= settr(9982,0,9829,1,0,".(goto)", 0, 2, 0); /* m: 9829 -> 0,9833 */
	reached1[9829] = 1;
	trans[1][9763]	= settr(9979,0,9764,2,0,"else", 0, 2, 0);
	trans[1][9764]	= settr(9980,0,9833,4226,4226,"(1)", 0, 2, 0); /* m: 9829 -> 9833,0 */
	reached1[9829] = 1;
	trans[1][9768]	= settr(9984,0,9796,4227,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9796] = settr(10012,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10012,0,9788,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9788] = settr(10004,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10004,2,9786,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9786] = settr(10002,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10002,2,9769,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10002,2,9772,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10002,2,9775,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10002,2,9778,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10002,2,9781,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10002,2,9784,0,0,"IF", 1, 2, 0);
	trans[1][9769]	= settr(9985,4,9794,4228,4228,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9770 -> 9794,0 */
	reached1[9770] = 1;
	trans[1][9770]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9771]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9787]	= settr(10003,0,9794,4229,4229,".(goto)", 1, 2, 0);
	trans[1][9772]	= settr(9988,4,9794,4230,4230,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9773 -> 9794,0 */
	reached1[9773] = 1;
	trans[1][9773]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9774]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9775]	= settr(9991,4,9794,4231,4231,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9776 -> 9794,0 */
	reached1[9776] = 1;
	trans[1][9776]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9777]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9778]	= settr(9994,4,9794,4232,4232,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9779 -> 9794,0 */
	reached1[9779] = 1;
	trans[1][9779]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9780]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9781]	= settr(9997,4,9794,4233,4233,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9782 -> 9794,0 */
	reached1[9782] = 1;
	trans[1][9782]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9783]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9784]	= settr(10000,2,9785,2,0,"else", 1, 2, 0);
	trans[1][9785]	= settr(10001,4,9794,4234,4234,"(1)", 1, 2, 0); /* m: 9787 -> 9794,0 */
	reached1[9787] = 1;
	T = trans[1][9794] = settr(10010,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10010,0,9789,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10010,0,9792,0,0,"IF", 0, 2, 0);
	trans[1][9789]	= settr(10005,0,9791,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9791] = settr(10007,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10007,0,9790,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9790]	= settr(10006,0,9829,4235,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9795]	= settr(10011,0,9829,1,0,".(goto)", 0, 2, 0); /* m: 9829 -> 0,9833 */
	reached1[9829] = 1;
	trans[1][9792]	= settr(10008,0,9793,2,0,"else", 0, 2, 0);
	trans[1][9793]	= settr(10009,0,9833,4236,4236,"(1)", 0, 2, 0); /* m: 9829 -> 9833,0 */
	reached1[9829] = 1;
	trans[1][9797]	= settr(10013,0,9825,4237,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][9825] = settr(10041,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10041,0,9817,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9817] = settr(10033,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10033,2,9815,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9815] = settr(10031,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10031,2,9798,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10031,2,9801,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10031,2,9804,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10031,2,9807,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10031,2,9810,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10031,2,9813,0,0,"IF", 1, 2, 0);
	trans[1][9798]	= settr(10014,4,9823,4238,4238,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9799 -> 9823,0 */
	reached1[9799] = 1;
	trans[1][9799]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9800]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9816]	= settr(10032,0,9823,4239,4239,".(goto)", 1, 2, 0);
	trans[1][9801]	= settr(10017,4,9823,4240,4240,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9802 -> 9823,0 */
	reached1[9802] = 1;
	trans[1][9802]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9803]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9804]	= settr(10020,4,9823,4241,4241,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9805 -> 9823,0 */
	reached1[9805] = 1;
	trans[1][9805]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9806]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9807]	= settr(10023,4,9823,4242,4242,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9808 -> 9823,0 */
	reached1[9808] = 1;
	trans[1][9808]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9809]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9810]	= settr(10026,4,9823,4243,4243,"((STOP==ABORT))", 1, 2, 0); /* m: 9811 -> 9823,0 */
	reached1[9811] = 1;
	trans[1][9811]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9812]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9813]	= settr(10029,2,9814,2,0,"else", 1, 2, 0);
	trans[1][9814]	= settr(10030,4,9823,4244,4244,"(1)", 1, 2, 0); /* m: 9816 -> 9823,0 */
	reached1[9816] = 1;
	T = trans[1][9823] = settr(10039,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10039,0,9818,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10039,0,9821,0,0,"IF", 0, 2, 0);
	trans[1][9818]	= settr(10034,0,9820,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][9820] = settr(10036,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10036,0,9819,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9819]	= settr(10035,0,9829,4245,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9824]	= settr(10040,0,9829,1,0,".(goto)", 0, 2, 0); /* m: 9829 -> 0,9833 */
	reached1[9829] = 1;
	trans[1][9821]	= settr(10037,0,9822,2,0,"else", 0, 2, 0);
	trans[1][9822]	= settr(10038,0,9833,4246,4246,"(1)", 0, 2, 0); /* m: 9829 -> 9833,0 */
	reached1[9829] = 1;
	trans[1][9829]	= settr(10045,0,9833,4247,4247,"j = (j-1)", 0, 2, 0);
	trans[1][9830]	= settr(10046,0,9831,2,0,"else", 0, 2, 0);
	trans[1][9831]	= settr(10047,0,10857,4248,4248,"j = 1", 0, 2, 0);
	trans[1][9832]	= settr(10048,0,10857,1,0,"goto :b92", 0, 2, 0);
	trans[1][9835]	= settr(10051,0,10857,1,0,"break", 0, 2, 0);
	trans[1][9994]	= settr(10210,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][9840]	= settr(10056,0,9992,2,0,"else", 0, 2, 0);
	T = trans[ 1][9992] = settr(10208,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10208,0,9969,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9969] = settr(10185,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10185,0,9966,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9967]	= settr(10183,0,9966,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9966] = settr(10182,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10182,0,9841,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10182,0,9963,0,0,"DO", 0, 2, 0);
	trans[1][9841]	= settr(10057,0,9961,4249,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][9961] = settr(10177,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10177,0,9959,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][9959] = settr(10175,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10175,0,9842,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10175,0,9872,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10175,0,9901,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10175,0,9930,0,0,"IF", 0, 2, 0);
	trans[1][9842]	= settr(10058,0,9871,4250,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][9871] = settr(10087,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10087,0,9862,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9862] = settr(10078,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10078,2,9860,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9860] = settr(10076,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10076,2,9843,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10076,2,9846,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10076,2,9849,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10076,2,9852,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10076,2,9855,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10076,2,9858,0,0,"IF", 1, 2, 0);
	trans[1][9843]	= settr(10059,4,9863,4251,4251,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9844 -> 9863,0 */
	reached1[9844] = 1;
	trans[1][9844]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9845]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9861]	= settr(10077,0,9863,4252,4252,".(goto)", 1, 2, 0);
	trans[1][9846]	= settr(10062,4,9863,4253,4253,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9847 -> 9863,0 */
	reached1[9847] = 1;
	trans[1][9847]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9848]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9849]	= settr(10065,4,9863,4254,4254,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9850 -> 9863,0 */
	reached1[9850] = 1;
	trans[1][9850]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9851]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9852]	= settr(10068,4,9863,4255,4255,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9853 -> 9863,0 */
	reached1[9853] = 1;
	trans[1][9853]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9854]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9855]	= settr(10071,4,9863,4256,4256,"((START==ABORT))", 1, 2, 0); /* m: 9856 -> 9863,0 */
	reached1[9856] = 1;
	trans[1][9856]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9857]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9858]	= settr(10074,2,9859,2,0,"else", 1, 2, 0);
	trans[1][9859]	= settr(10075,4,9863,4257,4257,"(1)", 1, 2, 0); /* m: 9861 -> 9863,0 */
	reached1[9861] = 1;
	trans[1][9863]	= settr(10079,0,9869,4258,4258,"(run Thread(j))", 0, 2, 0);
	T = trans[1][9869] = settr(10085,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10085,0,9864,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10085,0,9867,0,0,"IF", 0, 2, 0);
	trans[1][9864]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9866] = settr(10082,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10082,0,9865,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9865]	= settr(10081,0,9962,4259,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9870]	= settr(10086,0,9962,1,0,".(goto)", 0, 2, 0); /* m: 9962 -> 0,9966 */
	reached1[9962] = 1;
	trans[1][9867]	= settr(10083,0,9868,2,0,"else", 0, 2, 0);
	trans[1][9868]	= settr(10084,0,9966,4260,4260,"(1)", 0, 2, 0); /* m: 9962 -> 9966,0 */
	reached1[9962] = 1;
	trans[1][9960]	= settr(10176,0,9962,1,0,".(goto)", 0, 2, 0); /* m: 9962 -> 0,9966 */
	reached1[9962] = 1;
	trans[1][9872]	= settr(10088,0,9900,4261,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][9900] = settr(10116,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10116,0,9892,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9892] = settr(10108,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10108,2,9890,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9890] = settr(10106,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10106,2,9873,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10106,2,9876,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10106,2,9879,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10106,2,9882,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10106,2,9885,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10106,2,9888,0,0,"IF", 1, 2, 0);
	trans[1][9873]	= settr(10089,4,9898,4262,4262,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9874 -> 9898,0 */
	reached1[9874] = 1;
	trans[1][9874]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9875]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9891]	= settr(10107,0,9898,4263,4263,".(goto)", 1, 2, 0);
	trans[1][9876]	= settr(10092,4,9898,4264,4264,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9877 -> 9898,0 */
	reached1[9877] = 1;
	trans[1][9877]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9878]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9879]	= settr(10095,4,9898,4265,4265,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9880 -> 9898,0 */
	reached1[9880] = 1;
	trans[1][9880]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9881]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9882]	= settr(10098,4,9898,4266,4266,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9883 -> 9898,0 */
	reached1[9883] = 1;
	trans[1][9883]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9884]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9885]	= settr(10101,4,9898,4267,4267,"((PAUSE==ABORT))", 1, 2, 0); /* m: 9886 -> 9898,0 */
	reached1[9886] = 1;
	trans[1][9886]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9887]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9888]	= settr(10104,2,9889,2,0,"else", 1, 2, 0);
	trans[1][9889]	= settr(10105,4,9898,4268,4268,"(1)", 1, 2, 0); /* m: 9891 -> 9898,0 */
	reached1[9891] = 1;
	T = trans[1][9898] = settr(10114,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10114,0,9893,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10114,0,9896,0,0,"IF", 0, 2, 0);
	trans[1][9893]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9895] = settr(10111,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10111,0,9894,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9894]	= settr(10110,0,9962,4269,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9899]	= settr(10115,0,9962,1,0,".(goto)", 0, 2, 0); /* m: 9962 -> 0,9966 */
	reached1[9962] = 1;
	trans[1][9896]	= settr(10112,0,9897,2,0,"else", 0, 2, 0);
	trans[1][9897]	= settr(10113,0,9966,4270,4270,"(1)", 0, 2, 0); /* m: 9962 -> 9966,0 */
	reached1[9962] = 1;
	trans[1][9901]	= settr(10117,0,9929,4271,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9929] = settr(10145,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10145,0,9921,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9921] = settr(10137,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10137,2,9919,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9919] = settr(10135,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10135,2,9902,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10135,2,9905,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10135,2,9908,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10135,2,9911,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10135,2,9914,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10135,2,9917,0,0,"IF", 1, 2, 0);
	trans[1][9902]	= settr(10118,4,9927,4272,4272,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9903 -> 9927,0 */
	reached1[9903] = 1;
	trans[1][9903]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9904]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9920]	= settr(10136,0,9927,4273,4273,".(goto)", 1, 2, 0);
	trans[1][9905]	= settr(10121,4,9927,4274,4274,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9906 -> 9927,0 */
	reached1[9906] = 1;
	trans[1][9906]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9907]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9908]	= settr(10124,4,9927,4275,4275,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9909 -> 9927,0 */
	reached1[9909] = 1;
	trans[1][9909]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9910]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9911]	= settr(10127,4,9927,4276,4276,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9912 -> 9927,0 */
	reached1[9912] = 1;
	trans[1][9912]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9913]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9914]	= settr(10130,4,9927,4277,4277,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 9915 -> 9927,0 */
	reached1[9915] = 1;
	trans[1][9915]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9916]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9917]	= settr(10133,2,9918,2,0,"else", 1, 2, 0);
	trans[1][9918]	= settr(10134,4,9927,4278,4278,"(1)", 1, 2, 0); /* m: 9920 -> 9927,0 */
	reached1[9920] = 1;
	T = trans[1][9927] = settr(10143,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10143,0,9922,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10143,0,9925,0,0,"IF", 0, 2, 0);
	trans[1][9922]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9924] = settr(10140,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10140,0,9923,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9923]	= settr(10139,0,9962,4279,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9928]	= settr(10144,0,9962,1,0,".(goto)", 0, 2, 0); /* m: 9962 -> 0,9966 */
	reached1[9962] = 1;
	trans[1][9925]	= settr(10141,0,9926,2,0,"else", 0, 2, 0);
	trans[1][9926]	= settr(10142,0,9966,4280,4280,"(1)", 0, 2, 0); /* m: 9962 -> 9966,0 */
	reached1[9962] = 1;
	trans[1][9930]	= settr(10146,0,9958,4281,0,"(((8==STOP)||(8==ABORT)))", 0, 2, 0);
	T = trans[ 1][9958] = settr(10174,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10174,0,9950,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][9950] = settr(10166,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10166,2,9948,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][9948] = settr(10164,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10164,2,9931,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10164,2,9934,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10164,2,9937,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10164,2,9940,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10164,2,9943,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10164,2,9946,0,0,"IF", 1, 2, 0);
	trans[1][9931]	= settr(10147,4,9956,4282,4282,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9932 -> 9956,0 */
	reached1[9932] = 1;
	trans[1][9932]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][9933]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][9949]	= settr(10165,0,9956,4283,4283,".(goto)", 1, 2, 0);
	trans[1][9934]	= settr(10150,4,9956,4284,4284,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 9935 -> 9956,0 */
	reached1[9935] = 1;
	trans[1][9935]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][9936]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][9937]	= settr(10153,4,9956,4285,4285,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9938 -> 9956,0 */
	reached1[9938] = 1;
	trans[1][9938]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][9939]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][9940]	= settr(10156,4,9956,4286,4286,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 9941 -> 9956,0 */
	reached1[9941] = 1;
	trans[1][9941]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][9942]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][9943]	= settr(10159,4,9956,4287,4287,"((STOP==ABORT))", 1, 2, 0); /* m: 9944 -> 9956,0 */
	reached1[9944] = 1;
	trans[1][9944]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][9945]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][9946]	= settr(10162,2,9947,2,0,"else", 1, 2, 0);
	trans[1][9947]	= settr(10163,4,9956,4288,4288,"(1)", 1, 2, 0); /* m: 9949 -> 9956,0 */
	reached1[9949] = 1;
	T = trans[1][9956] = settr(10172,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10172,0,9951,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10172,0,9954,0,0,"IF", 0, 2, 0);
	trans[1][9951]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][9953] = settr(10169,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10169,0,9952,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9952]	= settr(10168,0,9962,4289,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9957]	= settr(10173,0,9962,1,0,".(goto)", 0, 2, 0); /* m: 9962 -> 0,9966 */
	reached1[9962] = 1;
	trans[1][9954]	= settr(10170,0,9955,2,0,"else", 0, 2, 0);
	trans[1][9955]	= settr(10171,0,9966,4290,4290,"(1)", 0, 2, 0); /* m: 9962 -> 9966,0 */
	reached1[9962] = 1;
	trans[1][9962]	= settr(10178,0,9966,4291,4291,"j = (j+1)", 0, 2, 0);
	trans[1][9963]	= settr(10179,0,9964,2,0,"else", 0, 2, 0);
	trans[1][9964]	= settr(10180,0,9989,4292,4292,"j = 1", 0, 2, 0);
	trans[1][9965]	= settr(10181,0,9989,1,0,"goto :b93", 0, 2, 0);
	trans[1][9968]	= settr(10184,0,9989,1,0,"break", 0, 2, 0);
	trans[1][9990]	= settr(10206,0,9989,1,0,".(goto)", 0, 2, 0);
	T = trans[1][9989] = settr(10205,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10205,0,9970,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10205,0,9986,0,0,"DO", 0, 2, 0);
	trans[1][9970]	= settr(10186,0,9983,4293,0,"((j<3))", 0, 2, 0);
	T = trans[1][9983] = settr(10199,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10199,0,9971,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10199,0,9974,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10199,0,9977,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10199,0,9980,0,0,"IF", 0, 2, 0);
	trans[1][9971]	= settr(10187,0,9973,4294,0,"((8==START))", 0, 2, 0);
	T = trans[ 1][9973] = settr(10189,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10189,0,9972,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9972]	= settr(10188,0,9985,4295,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9984]	= settr(10200,0,9985,1,0,".(goto)", 0, 2, 0); /* m: 9985 -> 0,9989 */
	reached1[9985] = 1;
	trans[1][9974]	= settr(10190,0,9976,4296,0,"((8==CONTINUE))", 0, 2, 0);
	T = trans[ 1][9976] = settr(10192,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10192,0,9975,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9975]	= settr(10191,0,9985,4297,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9977]	= settr(10193,0,9979,4298,0,"((8==PAUSE))", 0, 2, 0);
	T = trans[ 1][9979] = settr(10195,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10195,0,9978,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9978]	= settr(10194,0,9985,4299,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9980]	= settr(10196,0,9982,4300,0,"((8==STOP))", 0, 2, 0);
	T = trans[ 1][9982] = settr(10198,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10198,0,9981,0,0,"sub-sequence", 0, 2, 0);
	trans[1][9981]	= settr(10197,0,9985,4301,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][9985]	= settr(10201,0,9989,4302,4302,"j = (j+1)", 0, 2, 0);
	trans[1][9986]	= settr(10202,0,9987,2,0,"else", 0, 2, 0);
	trans[1][9987]	= settr(10203,0,10857,4303,4303,"j = 1", 0, 2, 0);
	trans[1][9988]	= settr(10204,0,10857,1,0,"goto :b94", 0, 2, 0);
	trans[1][9991]	= settr(10207,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10855]	= settr(11071,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][9998]	= settr(10214,0,10424,4304,0,"((3==PAUSED))", 0, 2, 0);
	T = trans[ 1][10424] = settr(10640,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10640,0,10422,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10422] = settr(10638,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10638,0,9999,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10638,0,10001,0,0,"IF", 0, 2, 0);
	trans[1][9999]	= settr(10215,0,10000,4305,0,"(((6==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][10000]	= settr(10216,0,10857,4306,4306,"supervisor_started = 1", 1, 2, 0);
	trans[1][10423]	= settr(10639,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][10001]	= settr(10217,0,10420,2,0,"else", 0, 2, 0);
	T = trans[1][10420] = settr(10636,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10636,0,10002,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10636,0,10267,0,0,"IF", 0, 2, 0);
	trans[1][10002]	= settr(10218,0,10266,4307,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][10266] = settr(10482,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10482,0,10264,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10264] = settr(10480,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10480,0,10003,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10480,0,10133,0,0,"IF", 0, 2, 0);
	trans[1][10003]	= settr(10219,0,10132,4308,0,"(((6==START)||(6==PAUSED)))", 0, 2, 0);
	T = trans[ 1][10132] = settr(10348,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10348,0,10129,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10130]	= settr(10346,0,10129,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10129] = settr(10345,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10345,0,10004,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10345,0,10126,0,0,"DO", 0, 2, 0);
	trans[1][10004]	= settr(10220,0,10124,4309,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][10124] = settr(10340,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10340,0,10122,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10122] = settr(10338,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10338,0,10005,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10338,0,10035,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10338,0,10064,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10338,0,10093,0,0,"IF", 0, 2, 0);
	trans[1][10005]	= settr(10221,0,10034,4310,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][10034] = settr(10250,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10250,0,10025,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10025] = settr(10241,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10241,2,10023,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10023] = settr(10239,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10239,2,10006,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10239,2,10009,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10239,2,10012,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10239,2,10015,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10239,2,10018,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10239,2,10021,0,0,"IF", 1, 2, 0);
	trans[1][10006]	= settr(10222,4,10026,4311,4311,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10007 -> 10026,0 */
	reached1[10007] = 1;
	trans[1][10007]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10008]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10024]	= settr(10240,0,10026,4312,4312,".(goto)", 1, 2, 0);
	trans[1][10009]	= settr(10225,4,10026,4313,4313,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10010 -> 10026,0 */
	reached1[10010] = 1;
	trans[1][10010]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10011]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10012]	= settr(10228,4,10026,4314,4314,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10013 -> 10026,0 */
	reached1[10013] = 1;
	trans[1][10013]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10014]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10015]	= settr(10231,4,10026,4315,4315,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10016 -> 10026,0 */
	reached1[10016] = 1;
	trans[1][10016]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10017]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10018]	= settr(10234,4,10026,4316,4316,"((START==ABORT))", 1, 2, 0); /* m: 10019 -> 10026,0 */
	reached1[10019] = 1;
	trans[1][10019]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10020]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10021]	= settr(10237,2,10022,2,0,"else", 1, 2, 0);
	trans[1][10022]	= settr(10238,4,10026,4317,4317,"(1)", 1, 2, 0); /* m: 10024 -> 10026,0 */
	reached1[10024] = 1;
	trans[1][10026]	= settr(10242,0,10032,4318,4318,"(run Thread(j))", 0, 2, 0);
	T = trans[1][10032] = settr(10248,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10248,0,10027,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10248,0,10030,0,0,"IF", 0, 2, 0);
	trans[1][10027]	= settr(10243,0,10029,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10029] = settr(10245,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10245,0,10028,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10028]	= settr(10244,0,10125,4319,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10033]	= settr(10249,0,10125,1,0,".(goto)", 0, 2, 0); /* m: 10125 -> 0,10129 */
	reached1[10125] = 1;
	trans[1][10030]	= settr(10246,0,10031,2,0,"else", 0, 2, 0);
	trans[1][10031]	= settr(10247,0,10129,4320,4320,"(1)", 0, 2, 0); /* m: 10125 -> 10129,0 */
	reached1[10125] = 1;
	trans[1][10123]	= settr(10339,0,10125,1,0,".(goto)", 0, 2, 0); /* m: 10125 -> 0,10129 */
	reached1[10125] = 1;
	trans[1][10035]	= settr(10251,0,10063,4321,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][10063] = settr(10279,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10279,0,10055,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10055] = settr(10271,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10271,2,10053,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10053] = settr(10269,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10269,2,10036,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10269,2,10039,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10269,2,10042,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10269,2,10045,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10269,2,10048,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10269,2,10051,0,0,"IF", 1, 2, 0);
	trans[1][10036]	= settr(10252,4,10061,4322,4322,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10037 -> 10061,0 */
	reached1[10037] = 1;
	trans[1][10037]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10038]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10054]	= settr(10270,0,10061,4323,4323,".(goto)", 1, 2, 0);
	trans[1][10039]	= settr(10255,4,10061,4324,4324,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10040 -> 10061,0 */
	reached1[10040] = 1;
	trans[1][10040]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10041]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10042]	= settr(10258,4,10061,4325,4325,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10043 -> 10061,0 */
	reached1[10043] = 1;
	trans[1][10043]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10044]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10045]	= settr(10261,4,10061,4326,4326,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10046 -> 10061,0 */
	reached1[10046] = 1;
	trans[1][10046]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10047]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10048]	= settr(10264,4,10061,4327,4327,"((PAUSE==ABORT))", 1, 2, 0); /* m: 10049 -> 10061,0 */
	reached1[10049] = 1;
	trans[1][10049]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10050]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10051]	= settr(10267,2,10052,2,0,"else", 1, 2, 0);
	trans[1][10052]	= settr(10268,4,10061,4328,4328,"(1)", 1, 2, 0); /* m: 10054 -> 10061,0 */
	reached1[10054] = 1;
	T = trans[1][10061] = settr(10277,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10277,0,10056,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10277,0,10059,0,0,"IF", 0, 2, 0);
	trans[1][10056]	= settr(10272,0,10058,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10058] = settr(10274,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10274,0,10057,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10057]	= settr(10273,0,10125,4329,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10062]	= settr(10278,0,10125,1,0,".(goto)", 0, 2, 0); /* m: 10125 -> 0,10129 */
	reached1[10125] = 1;
	trans[1][10059]	= settr(10275,0,10060,2,0,"else", 0, 2, 0);
	trans[1][10060]	= settr(10276,0,10129,4330,4330,"(1)", 0, 2, 0); /* m: 10125 -> 10129,0 */
	reached1[10125] = 1;
	trans[1][10064]	= settr(10280,0,10092,4331,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10092] = settr(10308,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10308,0,10084,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10084] = settr(10300,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10300,2,10082,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10082] = settr(10298,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10298,2,10065,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10298,2,10068,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10298,2,10071,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10298,2,10074,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10298,2,10077,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10298,2,10080,0,0,"IF", 1, 2, 0);
	trans[1][10065]	= settr(10281,4,10090,4332,4332,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10066 -> 10090,0 */
	reached1[10066] = 1;
	trans[1][10066]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10067]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10083]	= settr(10299,0,10090,4333,4333,".(goto)", 1, 2, 0);
	trans[1][10068]	= settr(10284,4,10090,4334,4334,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10069 -> 10090,0 */
	reached1[10069] = 1;
	trans[1][10069]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10070]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10071]	= settr(10287,4,10090,4335,4335,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10072 -> 10090,0 */
	reached1[10072] = 1;
	trans[1][10072]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10073]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10074]	= settr(10290,4,10090,4336,4336,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10075 -> 10090,0 */
	reached1[10075] = 1;
	trans[1][10075]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10076]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10077]	= settr(10293,4,10090,4337,4337,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 10078 -> 10090,0 */
	reached1[10078] = 1;
	trans[1][10078]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10079]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10080]	= settr(10296,2,10081,2,0,"else", 1, 2, 0);
	trans[1][10081]	= settr(10297,4,10090,4338,4338,"(1)", 1, 2, 0); /* m: 10083 -> 10090,0 */
	reached1[10083] = 1;
	T = trans[1][10090] = settr(10306,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10306,0,10085,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10306,0,10088,0,0,"IF", 0, 2, 0);
	trans[1][10085]	= settr(10301,0,10087,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10087] = settr(10303,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10303,0,10086,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10086]	= settr(10302,0,10125,4339,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10091]	= settr(10307,0,10125,1,0,".(goto)", 0, 2, 0); /* m: 10125 -> 0,10129 */
	reached1[10125] = 1;
	trans[1][10088]	= settr(10304,0,10089,2,0,"else", 0, 2, 0);
	trans[1][10089]	= settr(10305,0,10129,4340,4340,"(1)", 0, 2, 0); /* m: 10125 -> 10129,0 */
	reached1[10125] = 1;
	trans[1][10093]	= settr(10309,0,10121,4341,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][10121] = settr(10337,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10337,0,10113,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10113] = settr(10329,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10329,2,10111,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10111] = settr(10327,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10327,2,10094,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10327,2,10097,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10327,2,10100,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10327,2,10103,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10327,2,10106,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10327,2,10109,0,0,"IF", 1, 2, 0);
	trans[1][10094]	= settr(10310,4,10119,4342,4342,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10095 -> 10119,0 */
	reached1[10095] = 1;
	trans[1][10095]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10096]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10112]	= settr(10328,0,10119,4343,4343,".(goto)", 1, 2, 0);
	trans[1][10097]	= settr(10313,4,10119,4344,4344,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10098 -> 10119,0 */
	reached1[10098] = 1;
	trans[1][10098]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10099]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10100]	= settr(10316,4,10119,4345,4345,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10101 -> 10119,0 */
	reached1[10101] = 1;
	trans[1][10101]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10102]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10103]	= settr(10319,4,10119,4346,4346,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10104 -> 10119,0 */
	reached1[10104] = 1;
	trans[1][10104]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10105]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10106]	= settr(10322,4,10119,4347,4347,"((STOP==ABORT))", 1, 2, 0); /* m: 10107 -> 10119,0 */
	reached1[10107] = 1;
	trans[1][10107]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10108]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10109]	= settr(10325,2,10110,2,0,"else", 1, 2, 0);
	trans[1][10110]	= settr(10326,4,10119,4348,4348,"(1)", 1, 2, 0); /* m: 10112 -> 10119,0 */
	reached1[10112] = 1;
	T = trans[1][10119] = settr(10335,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10335,0,10114,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10335,0,10117,0,0,"IF", 0, 2, 0);
	trans[1][10114]	= settr(10330,0,10116,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10116] = settr(10332,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10332,0,10115,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10115]	= settr(10331,0,10125,4349,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10120]	= settr(10336,0,10125,1,0,".(goto)", 0, 2, 0); /* m: 10125 -> 0,10129 */
	reached1[10125] = 1;
	trans[1][10117]	= settr(10333,0,10118,2,0,"else", 0, 2, 0);
	trans[1][10118]	= settr(10334,0,10129,4350,4350,"(1)", 0, 2, 0); /* m: 10125 -> 10129,0 */
	reached1[10125] = 1;
	trans[1][10125]	= settr(10341,0,10129,4351,4351,"j = (j+1)", 0, 2, 0);
	trans[1][10126]	= settr(10342,0,10127,2,0,"else", 0, 2, 0);
	trans[1][10127]	= settr(10343,0,10857,4352,4352,"j = 1", 0, 2, 0);
	trans[1][10128]	= settr(10344,0,10857,1,0,"goto :b95", 0, 2, 0);
	trans[1][10131]	= settr(10347,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10265]	= settr(10481,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][10133]	= settr(10349,0,10263,2,0,"else", 0, 2, 0);
	T = trans[ 1][10263] = settr(10479,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10479,0,10134,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10134]	= settr(10350,0,10260,4353,4353,"j = (3-1)", 0, 2, 0);
	trans[1][10261]	= settr(10477,0,10260,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10260] = settr(10476,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10476,0,10135,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10476,0,10257,0,0,"DO", 0, 2, 0);
	trans[1][10135]	= settr(10351,0,10255,4354,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][10255] = settr(10471,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10471,0,10253,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10253] = settr(10469,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10469,0,10136,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10469,0,10166,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10469,0,10195,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10469,0,10224,0,0,"IF", 0, 2, 0);
	trans[1][10136]	= settr(10352,0,10165,4355,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][10165] = settr(10381,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10381,0,10156,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10156] = settr(10372,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10372,2,10154,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10154] = settr(10370,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10370,2,10137,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10370,2,10140,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10370,2,10143,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10370,2,10146,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10370,2,10149,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10370,2,10152,0,0,"IF", 1, 2, 0);
	trans[1][10137]	= settr(10353,4,10157,4356,4356,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10138 -> 10157,0 */
	reached1[10138] = 1;
	trans[1][10138]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10139]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10155]	= settr(10371,0,10157,4357,4357,".(goto)", 1, 2, 0);
	trans[1][10140]	= settr(10356,4,10157,4358,4358,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10141 -> 10157,0 */
	reached1[10141] = 1;
	trans[1][10141]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10142]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10143]	= settr(10359,4,10157,4359,4359,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10144 -> 10157,0 */
	reached1[10144] = 1;
	trans[1][10144]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10145]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10146]	= settr(10362,4,10157,4360,4360,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10147 -> 10157,0 */
	reached1[10147] = 1;
	trans[1][10147]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10148]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10149]	= settr(10365,4,10157,4361,4361,"((START==ABORT))", 1, 2, 0); /* m: 10150 -> 10157,0 */
	reached1[10150] = 1;
	trans[1][10150]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10151]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10152]	= settr(10368,2,10153,2,0,"else", 1, 2, 0);
	trans[1][10153]	= settr(10369,4,10157,4362,4362,"(1)", 1, 2, 0); /* m: 10155 -> 10157,0 */
	reached1[10155] = 1;
	trans[1][10157]	= settr(10373,0,10163,4363,4363,"(run Thread(j))", 0, 2, 0);
	T = trans[1][10163] = settr(10379,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10379,0,10158,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10379,0,10161,0,0,"IF", 0, 2, 0);
	trans[1][10158]	= settr(10374,0,10160,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10160] = settr(10376,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10376,0,10159,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10159]	= settr(10375,0,10256,4364,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10164]	= settr(10380,0,10256,1,0,".(goto)", 0, 2, 0); /* m: 10256 -> 0,10260 */
	reached1[10256] = 1;
	trans[1][10161]	= settr(10377,0,10162,2,0,"else", 0, 2, 0);
	trans[1][10162]	= settr(10378,0,10260,4365,4365,"(1)", 0, 2, 0); /* m: 10256 -> 10260,0 */
	reached1[10256] = 1;
	trans[1][10254]	= settr(10470,0,10256,1,0,".(goto)", 0, 2, 0); /* m: 10256 -> 0,10260 */
	reached1[10256] = 1;
	trans[1][10166]	= settr(10382,0,10194,4366,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][10194] = settr(10410,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10410,0,10186,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10186] = settr(10402,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10402,2,10184,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10184] = settr(10400,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10400,2,10167,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10400,2,10170,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10400,2,10173,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10400,2,10176,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10400,2,10179,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10400,2,10182,0,0,"IF", 1, 2, 0);
	trans[1][10167]	= settr(10383,4,10192,4367,4367,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10168 -> 10192,0 */
	reached1[10168] = 1;
	trans[1][10168]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10169]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10185]	= settr(10401,0,10192,4368,4368,".(goto)", 1, 2, 0);
	trans[1][10170]	= settr(10386,4,10192,4369,4369,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10171 -> 10192,0 */
	reached1[10171] = 1;
	trans[1][10171]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10172]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10173]	= settr(10389,4,10192,4370,4370,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10174 -> 10192,0 */
	reached1[10174] = 1;
	trans[1][10174]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10175]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10176]	= settr(10392,4,10192,4371,4371,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10177 -> 10192,0 */
	reached1[10177] = 1;
	trans[1][10177]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10178]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10179]	= settr(10395,4,10192,4372,4372,"((PAUSE==ABORT))", 1, 2, 0); /* m: 10180 -> 10192,0 */
	reached1[10180] = 1;
	trans[1][10180]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10181]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10182]	= settr(10398,2,10183,2,0,"else", 1, 2, 0);
	trans[1][10183]	= settr(10399,4,10192,4373,4373,"(1)", 1, 2, 0); /* m: 10185 -> 10192,0 */
	reached1[10185] = 1;
	T = trans[1][10192] = settr(10408,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10408,0,10187,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10408,0,10190,0,0,"IF", 0, 2, 0);
	trans[1][10187]	= settr(10403,0,10189,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10189] = settr(10405,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10405,0,10188,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10188]	= settr(10404,0,10256,4374,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10193]	= settr(10409,0,10256,1,0,".(goto)", 0, 2, 0); /* m: 10256 -> 0,10260 */
	reached1[10256] = 1;
	trans[1][10190]	= settr(10406,0,10191,2,0,"else", 0, 2, 0);
	trans[1][10191]	= settr(10407,0,10260,4375,4375,"(1)", 0, 2, 0); /* m: 10256 -> 10260,0 */
	reached1[10256] = 1;
	trans[1][10195]	= settr(10411,0,10223,4376,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10223] = settr(10439,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10439,0,10215,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10215] = settr(10431,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10431,2,10213,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10213] = settr(10429,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10429,2,10196,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10429,2,10199,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10429,2,10202,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10429,2,10205,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10429,2,10208,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10429,2,10211,0,0,"IF", 1, 2, 0);
	trans[1][10196]	= settr(10412,4,10221,4377,4377,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10197 -> 10221,0 */
	reached1[10197] = 1;
	trans[1][10197]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10198]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10214]	= settr(10430,0,10221,4378,4378,".(goto)", 1, 2, 0);
	trans[1][10199]	= settr(10415,4,10221,4379,4379,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10200 -> 10221,0 */
	reached1[10200] = 1;
	trans[1][10200]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10201]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10202]	= settr(10418,4,10221,4380,4380,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10203 -> 10221,0 */
	reached1[10203] = 1;
	trans[1][10203]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10204]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10205]	= settr(10421,4,10221,4381,4381,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10206 -> 10221,0 */
	reached1[10206] = 1;
	trans[1][10206]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10207]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10208]	= settr(10424,4,10221,4382,4382,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 10209 -> 10221,0 */
	reached1[10209] = 1;
	trans[1][10209]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10210]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10211]	= settr(10427,2,10212,2,0,"else", 1, 2, 0);
	trans[1][10212]	= settr(10428,4,10221,4383,4383,"(1)", 1, 2, 0); /* m: 10214 -> 10221,0 */
	reached1[10214] = 1;
	T = trans[1][10221] = settr(10437,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10437,0,10216,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10437,0,10219,0,0,"IF", 0, 2, 0);
	trans[1][10216]	= settr(10432,0,10218,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10218] = settr(10434,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10434,0,10217,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10217]	= settr(10433,0,10256,4384,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10222]	= settr(10438,0,10256,1,0,".(goto)", 0, 2, 0); /* m: 10256 -> 0,10260 */
	reached1[10256] = 1;
	trans[1][10219]	= settr(10435,0,10220,2,0,"else", 0, 2, 0);
	trans[1][10220]	= settr(10436,0,10260,4385,4385,"(1)", 0, 2, 0); /* m: 10256 -> 10260,0 */
	reached1[10256] = 1;
	trans[1][10224]	= settr(10440,0,10252,4386,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][10252] = settr(10468,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10468,0,10244,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10244] = settr(10460,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10460,2,10242,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10242] = settr(10458,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10458,2,10225,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10458,2,10228,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10458,2,10231,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10458,2,10234,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10458,2,10237,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10458,2,10240,0,0,"IF", 1, 2, 0);
	trans[1][10225]	= settr(10441,4,10250,4387,4387,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10226 -> 10250,0 */
	reached1[10226] = 1;
	trans[1][10226]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10227]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10243]	= settr(10459,0,10250,4388,4388,".(goto)", 1, 2, 0);
	trans[1][10228]	= settr(10444,4,10250,4389,4389,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10229 -> 10250,0 */
	reached1[10229] = 1;
	trans[1][10229]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10230]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10231]	= settr(10447,4,10250,4390,4390,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10232 -> 10250,0 */
	reached1[10232] = 1;
	trans[1][10232]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10233]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10234]	= settr(10450,4,10250,4391,4391,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10235 -> 10250,0 */
	reached1[10235] = 1;
	trans[1][10235]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10236]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10237]	= settr(10453,4,10250,4392,4392,"((STOP==ABORT))", 1, 2, 0); /* m: 10238 -> 10250,0 */
	reached1[10238] = 1;
	trans[1][10238]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10239]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10240]	= settr(10456,2,10241,2,0,"else", 1, 2, 0);
	trans[1][10241]	= settr(10457,4,10250,4393,4393,"(1)", 1, 2, 0); /* m: 10243 -> 10250,0 */
	reached1[10243] = 1;
	T = trans[1][10250] = settr(10466,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10466,0,10245,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10466,0,10248,0,0,"IF", 0, 2, 0);
	trans[1][10245]	= settr(10461,0,10247,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10247] = settr(10463,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10463,0,10246,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10246]	= settr(10462,0,10256,4394,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10251]	= settr(10467,0,10256,1,0,".(goto)", 0, 2, 0); /* m: 10256 -> 0,10260 */
	reached1[10256] = 1;
	trans[1][10248]	= settr(10464,0,10249,2,0,"else", 0, 2, 0);
	trans[1][10249]	= settr(10465,0,10260,4395,4395,"(1)", 0, 2, 0); /* m: 10256 -> 10260,0 */
	reached1[10256] = 1;
	trans[1][10256]	= settr(10472,0,10260,4396,4396,"j = (j-1)", 0, 2, 0);
	trans[1][10257]	= settr(10473,0,10258,2,0,"else", 0, 2, 0);
	trans[1][10258]	= settr(10474,0,10857,4397,4397,"j = 1", 0, 2, 0);
	trans[1][10259]	= settr(10475,0,10857,1,0,"goto :b96", 0, 2, 0);
	trans[1][10262]	= settr(10478,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10421]	= settr(10637,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][10267]	= settr(10483,0,10419,2,0,"else", 0, 2, 0);
	T = trans[ 1][10419] = settr(10635,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10635,0,10396,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10396] = settr(10612,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10612,0,10393,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10394]	= settr(10610,0,10393,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10393] = settr(10609,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10609,0,10268,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10609,0,10390,0,0,"DO", 0, 2, 0);
	trans[1][10268]	= settr(10484,0,10388,4398,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][10388] = settr(10604,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10604,0,10386,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10386] = settr(10602,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10602,0,10269,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10602,0,10299,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10602,0,10328,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10602,0,10357,0,0,"IF", 0, 2, 0);
	trans[1][10269]	= settr(10485,0,10298,4399,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][10298] = settr(10514,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10514,0,10289,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10289] = settr(10505,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10505,2,10287,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10287] = settr(10503,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10503,2,10270,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10503,2,10273,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10503,2,10276,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10503,2,10279,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10503,2,10282,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10503,2,10285,0,0,"IF", 1, 2, 0);
	trans[1][10270]	= settr(10486,4,10290,4400,4400,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10271 -> 10290,0 */
	reached1[10271] = 1;
	trans[1][10271]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10272]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10288]	= settr(10504,0,10290,4401,4401,".(goto)", 1, 2, 0);
	trans[1][10273]	= settr(10489,4,10290,4402,4402,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10274 -> 10290,0 */
	reached1[10274] = 1;
	trans[1][10274]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10275]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10276]	= settr(10492,4,10290,4403,4403,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10277 -> 10290,0 */
	reached1[10277] = 1;
	trans[1][10277]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10278]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10279]	= settr(10495,4,10290,4404,4404,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10280 -> 10290,0 */
	reached1[10280] = 1;
	trans[1][10280]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10281]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10282]	= settr(10498,4,10290,4405,4405,"((START==ABORT))", 1, 2, 0); /* m: 10283 -> 10290,0 */
	reached1[10283] = 1;
	trans[1][10283]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10284]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10285]	= settr(10501,2,10286,2,0,"else", 1, 2, 0);
	trans[1][10286]	= settr(10502,4,10290,4406,4406,"(1)", 1, 2, 0); /* m: 10288 -> 10290,0 */
	reached1[10288] = 1;
	trans[1][10290]	= settr(10506,0,10296,4407,4407,"(run Thread(j))", 0, 2, 0);
	T = trans[1][10296] = settr(10512,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10512,0,10291,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10512,0,10294,0,0,"IF", 0, 2, 0);
	trans[1][10291]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10293] = settr(10509,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10509,0,10292,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10292]	= settr(10508,0,10389,4408,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10297]	= settr(10513,0,10389,1,0,".(goto)", 0, 2, 0); /* m: 10389 -> 0,10393 */
	reached1[10389] = 1;
	trans[1][10294]	= settr(10510,0,10295,2,0,"else", 0, 2, 0);
	trans[1][10295]	= settr(10511,0,10393,4409,4409,"(1)", 0, 2, 0); /* m: 10389 -> 10393,0 */
	reached1[10389] = 1;
	trans[1][10387]	= settr(10603,0,10389,1,0,".(goto)", 0, 2, 0); /* m: 10389 -> 0,10393 */
	reached1[10389] = 1;
	trans[1][10299]	= settr(10515,0,10327,4410,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][10327] = settr(10543,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10543,0,10319,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10319] = settr(10535,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10535,2,10317,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10317] = settr(10533,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10533,2,10300,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10533,2,10303,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10533,2,10306,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10533,2,10309,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10533,2,10312,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10533,2,10315,0,0,"IF", 1, 2, 0);
	trans[1][10300]	= settr(10516,4,10325,4411,4411,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10301 -> 10325,0 */
	reached1[10301] = 1;
	trans[1][10301]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10302]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10318]	= settr(10534,0,10325,4412,4412,".(goto)", 1, 2, 0);
	trans[1][10303]	= settr(10519,4,10325,4413,4413,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10304 -> 10325,0 */
	reached1[10304] = 1;
	trans[1][10304]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10305]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10306]	= settr(10522,4,10325,4414,4414,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10307 -> 10325,0 */
	reached1[10307] = 1;
	trans[1][10307]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10308]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10309]	= settr(10525,4,10325,4415,4415,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10310 -> 10325,0 */
	reached1[10310] = 1;
	trans[1][10310]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10311]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10312]	= settr(10528,4,10325,4416,4416,"((PAUSE==ABORT))", 1, 2, 0); /* m: 10313 -> 10325,0 */
	reached1[10313] = 1;
	trans[1][10313]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10314]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10315]	= settr(10531,2,10316,2,0,"else", 1, 2, 0);
	trans[1][10316]	= settr(10532,4,10325,4417,4417,"(1)", 1, 2, 0); /* m: 10318 -> 10325,0 */
	reached1[10318] = 1;
	T = trans[1][10325] = settr(10541,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10541,0,10320,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10541,0,10323,0,0,"IF", 0, 2, 0);
	trans[1][10320]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10322] = settr(10538,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10538,0,10321,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10321]	= settr(10537,0,10389,4418,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10326]	= settr(10542,0,10389,1,0,".(goto)", 0, 2, 0); /* m: 10389 -> 0,10393 */
	reached1[10389] = 1;
	trans[1][10323]	= settr(10539,0,10324,2,0,"else", 0, 2, 0);
	trans[1][10324]	= settr(10540,0,10393,4419,4419,"(1)", 0, 2, 0); /* m: 10389 -> 10393,0 */
	reached1[10389] = 1;
	trans[1][10328]	= settr(10544,0,10356,4420,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10356] = settr(10572,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10572,0,10348,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10348] = settr(10564,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10564,2,10346,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10346] = settr(10562,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10562,2,10329,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10562,2,10332,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10562,2,10335,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10562,2,10338,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10562,2,10341,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10562,2,10344,0,0,"IF", 1, 2, 0);
	trans[1][10329]	= settr(10545,4,10354,4421,4421,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10330 -> 10354,0 */
	reached1[10330] = 1;
	trans[1][10330]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10331]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10347]	= settr(10563,0,10354,4422,4422,".(goto)", 1, 2, 0);
	trans[1][10332]	= settr(10548,4,10354,4423,4423,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10333 -> 10354,0 */
	reached1[10333] = 1;
	trans[1][10333]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10334]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10335]	= settr(10551,4,10354,4424,4424,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10336 -> 10354,0 */
	reached1[10336] = 1;
	trans[1][10336]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10337]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10338]	= settr(10554,4,10354,4425,4425,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10339 -> 10354,0 */
	reached1[10339] = 1;
	trans[1][10339]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10340]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10341]	= settr(10557,4,10354,4426,4426,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 10342 -> 10354,0 */
	reached1[10342] = 1;
	trans[1][10342]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10343]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10344]	= settr(10560,2,10345,2,0,"else", 1, 2, 0);
	trans[1][10345]	= settr(10561,4,10354,4427,4427,"(1)", 1, 2, 0); /* m: 10347 -> 10354,0 */
	reached1[10347] = 1;
	T = trans[1][10354] = settr(10570,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10570,0,10349,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10570,0,10352,0,0,"IF", 0, 2, 0);
	trans[1][10349]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10351] = settr(10567,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10567,0,10350,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10350]	= settr(10566,0,10389,4428,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10355]	= settr(10571,0,10389,1,0,".(goto)", 0, 2, 0); /* m: 10389 -> 0,10393 */
	reached1[10389] = 1;
	trans[1][10352]	= settr(10568,0,10353,2,0,"else", 0, 2, 0);
	trans[1][10353]	= settr(10569,0,10393,4429,4429,"(1)", 0, 2, 0); /* m: 10389 -> 10393,0 */
	reached1[10389] = 1;
	trans[1][10357]	= settr(10573,0,10385,4430,0,"(((6==STOP)||(6==ABORT)))", 0, 2, 0);
	T = trans[ 1][10385] = settr(10601,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10601,0,10377,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10377] = settr(10593,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10593,2,10375,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10375] = settr(10591,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10591,2,10358,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10591,2,10361,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10591,2,10364,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10591,2,10367,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10591,2,10370,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10591,2,10373,0,0,"IF", 1, 2, 0);
	trans[1][10358]	= settr(10574,4,10383,4431,4431,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10359 -> 10383,0 */
	reached1[10359] = 1;
	trans[1][10359]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10360]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10376]	= settr(10592,0,10383,4432,4432,".(goto)", 1, 2, 0);
	trans[1][10361]	= settr(10577,4,10383,4433,4433,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10362 -> 10383,0 */
	reached1[10362] = 1;
	trans[1][10362]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10363]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10364]	= settr(10580,4,10383,4434,4434,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10365 -> 10383,0 */
	reached1[10365] = 1;
	trans[1][10365]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10366]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10367]	= settr(10583,4,10383,4435,4435,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10368 -> 10383,0 */
	reached1[10368] = 1;
	trans[1][10368]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10369]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10370]	= settr(10586,4,10383,4436,4436,"((STOP==ABORT))", 1, 2, 0); /* m: 10371 -> 10383,0 */
	reached1[10371] = 1;
	trans[1][10371]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10372]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10373]	= settr(10589,2,10374,2,0,"else", 1, 2, 0);
	trans[1][10374]	= settr(10590,4,10383,4437,4437,"(1)", 1, 2, 0); /* m: 10376 -> 10383,0 */
	reached1[10376] = 1;
	T = trans[1][10383] = settr(10599,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10599,0,10378,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10599,0,10381,0,0,"IF", 0, 2, 0);
	trans[1][10378]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10380] = settr(10596,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10596,0,10379,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10379]	= settr(10595,0,10389,4438,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10384]	= settr(10600,0,10389,1,0,".(goto)", 0, 2, 0); /* m: 10389 -> 0,10393 */
	reached1[10389] = 1;
	trans[1][10381]	= settr(10597,0,10382,2,0,"else", 0, 2, 0);
	trans[1][10382]	= settr(10598,0,10393,4439,4439,"(1)", 0, 2, 0); /* m: 10389 -> 10393,0 */
	reached1[10389] = 1;
	trans[1][10389]	= settr(10605,0,10393,4440,4440,"j = (j+1)", 0, 2, 0);
	trans[1][10390]	= settr(10606,0,10391,2,0,"else", 0, 2, 0);
	trans[1][10391]	= settr(10607,0,10416,4441,4441,"j = 1", 0, 2, 0);
	trans[1][10392]	= settr(10608,0,10416,1,0,"goto :b97", 0, 2, 0);
	trans[1][10395]	= settr(10611,0,10416,1,0,"break", 0, 2, 0);
	trans[1][10417]	= settr(10633,0,10416,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10416] = settr(10632,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10632,0,10397,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10632,0,10413,0,0,"DO", 0, 2, 0);
	trans[1][10397]	= settr(10613,0,10410,4442,0,"((j<3))", 0, 2, 0);
	T = trans[1][10410] = settr(10626,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10626,0,10398,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10626,0,10401,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10626,0,10404,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10626,0,10407,0,0,"IF", 0, 2, 0);
	trans[1][10398]	= settr(10614,0,10400,4443,0,"((6==START))", 0, 2, 0);
	T = trans[ 1][10400] = settr(10616,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10616,0,10399,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10399]	= settr(10615,0,10412,4444,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10411]	= settr(10627,0,10412,1,0,".(goto)", 0, 2, 0); /* m: 10412 -> 0,10416 */
	reached1[10412] = 1;
	trans[1][10401]	= settr(10617,0,10403,4445,0,"((6==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10403] = settr(10619,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10619,0,10402,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10402]	= settr(10618,0,10412,4446,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10404]	= settr(10620,0,10406,4447,0,"((6==PAUSE))", 0, 2, 0);
	T = trans[ 1][10406] = settr(10622,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10622,0,10405,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10405]	= settr(10621,0,10412,4448,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10407]	= settr(10623,0,10409,4449,0,"((6==STOP))", 0, 2, 0);
	T = trans[ 1][10409] = settr(10625,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10625,0,10408,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10408]	= settr(10624,0,10412,4450,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10412]	= settr(10628,0,10416,4451,4451,"j = (j+1)", 0, 2, 0);
	trans[1][10413]	= settr(10629,0,10414,2,0,"else", 0, 2, 0);
	trans[1][10414]	= settr(10630,0,10857,4452,4452,"j = 1", 0, 2, 0);
	trans[1][10415]	= settr(10631,0,10857,1,0,"goto :b98", 0, 2, 0);
	trans[1][10418]	= settr(10634,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10425]	= settr(10641,0,10851,4453,0,"(((3==ABORTING)||(3==STOPPING)))", 0, 2, 0);
	T = trans[ 1][10851] = settr(11067,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11067,0,10849,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10849] = settr(11065,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11065,0,10426,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11065,0,10428,0,0,"IF", 0, 2, 0);
	trans[1][10426]	= settr(10642,0,10427,4454,0,"(((2==CONTINUE)&&!(supervisor_started)))", 1, 2, 0);
	trans[1][10427]	= settr(10643,0,10857,4455,4455,"supervisor_started = 1", 1, 2, 0);
	trans[1][10850]	= settr(11066,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][10428]	= settr(10644,0,10847,2,0,"else", 0, 2, 0);
	T = trans[1][10847] = settr(11063,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11063,0,10429,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11063,0,10694,0,0,"IF", 0, 2, 0);
	trans[1][10429]	= settr(10645,0,10693,4456,0,"(serialize_commands)", 1, 2, 0);
	T = trans[ 1][10693] = settr(10909,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10909,0,10691,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10691] = settr(10907,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10907,0,10430,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10907,0,10560,0,0,"IF", 0, 2, 0);
	trans[1][10430]	= settr(10646,0,10559,4457,0,"(((2==START)||(2==PAUSED)))", 0, 2, 0);
	T = trans[ 1][10559] = settr(10775,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10775,0,10556,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10557]	= settr(10773,0,10556,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10556] = settr(10772,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10772,0,10431,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10772,0,10553,0,0,"DO", 0, 2, 0);
	trans[1][10431]	= settr(10647,0,10551,4458,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][10551] = settr(10767,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10767,0,10549,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10549] = settr(10765,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10765,0,10432,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10765,0,10462,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10765,0,10491,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10765,0,10520,0,0,"IF", 0, 2, 0);
	trans[1][10432]	= settr(10648,0,10461,4459,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][10461] = settr(10677,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10677,0,10452,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10452] = settr(10668,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10668,2,10450,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10450] = settr(10666,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10666,2,10433,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10666,2,10436,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10666,2,10439,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10666,2,10442,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10666,2,10445,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10666,2,10448,0,0,"IF", 1, 2, 0);
	trans[1][10433]	= settr(10649,4,10453,4460,4460,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10434 -> 10453,0 */
	reached1[10434] = 1;
	trans[1][10434]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10435]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10451]	= settr(10667,0,10453,4461,4461,".(goto)", 1, 2, 0);
	trans[1][10436]	= settr(10652,4,10453,4462,4462,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10437 -> 10453,0 */
	reached1[10437] = 1;
	trans[1][10437]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10438]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10439]	= settr(10655,4,10453,4463,4463,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10440 -> 10453,0 */
	reached1[10440] = 1;
	trans[1][10440]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10441]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10442]	= settr(10658,4,10453,4464,4464,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10443 -> 10453,0 */
	reached1[10443] = 1;
	trans[1][10443]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10444]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10445]	= settr(10661,4,10453,4465,4465,"((START==ABORT))", 1, 2, 0); /* m: 10446 -> 10453,0 */
	reached1[10446] = 1;
	trans[1][10446]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10447]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10448]	= settr(10664,2,10449,2,0,"else", 1, 2, 0);
	trans[1][10449]	= settr(10665,4,10453,4466,4466,"(1)", 1, 2, 0); /* m: 10451 -> 10453,0 */
	reached1[10451] = 1;
	trans[1][10453]	= settr(10669,0,10459,4467,4467,"(run Thread(j))", 0, 2, 0);
	T = trans[1][10459] = settr(10675,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10675,0,10454,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10675,0,10457,0,0,"IF", 0, 2, 0);
	trans[1][10454]	= settr(10670,0,10456,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10456] = settr(10672,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10672,0,10455,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10455]	= settr(10671,0,10552,4468,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10460]	= settr(10676,0,10552,1,0,".(goto)", 0, 2, 0); /* m: 10552 -> 0,10556 */
	reached1[10552] = 1;
	trans[1][10457]	= settr(10673,0,10458,2,0,"else", 0, 2, 0);
	trans[1][10458]	= settr(10674,0,10556,4469,4469,"(1)", 0, 2, 0); /* m: 10552 -> 10556,0 */
	reached1[10552] = 1;
	trans[1][10550]	= settr(10766,0,10552,1,0,".(goto)", 0, 2, 0); /* m: 10552 -> 0,10556 */
	reached1[10552] = 1;
	trans[1][10462]	= settr(10678,0,10490,4470,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][10490] = settr(10706,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10706,0,10482,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10482] = settr(10698,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10698,2,10480,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10480] = settr(10696,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10696,2,10463,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10696,2,10466,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10696,2,10469,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10696,2,10472,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10696,2,10475,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10696,2,10478,0,0,"IF", 1, 2, 0);
	trans[1][10463]	= settr(10679,4,10488,4471,4471,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10464 -> 10488,0 */
	reached1[10464] = 1;
	trans[1][10464]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10465]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10481]	= settr(10697,0,10488,4472,4472,".(goto)", 1, 2, 0);
	trans[1][10466]	= settr(10682,4,10488,4473,4473,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10467 -> 10488,0 */
	reached1[10467] = 1;
	trans[1][10467]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10468]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10469]	= settr(10685,4,10488,4474,4474,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10470 -> 10488,0 */
	reached1[10470] = 1;
	trans[1][10470]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10471]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10472]	= settr(10688,4,10488,4475,4475,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10473 -> 10488,0 */
	reached1[10473] = 1;
	trans[1][10473]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10474]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10475]	= settr(10691,4,10488,4476,4476,"((PAUSE==ABORT))", 1, 2, 0); /* m: 10476 -> 10488,0 */
	reached1[10476] = 1;
	trans[1][10476]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10477]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10478]	= settr(10694,2,10479,2,0,"else", 1, 2, 0);
	trans[1][10479]	= settr(10695,4,10488,4477,4477,"(1)", 1, 2, 0); /* m: 10481 -> 10488,0 */
	reached1[10481] = 1;
	T = trans[1][10488] = settr(10704,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10704,0,10483,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10704,0,10486,0,0,"IF", 0, 2, 0);
	trans[1][10483]	= settr(10699,0,10485,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10485] = settr(10701,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10701,0,10484,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10484]	= settr(10700,0,10552,4478,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10489]	= settr(10705,0,10552,1,0,".(goto)", 0, 2, 0); /* m: 10552 -> 0,10556 */
	reached1[10552] = 1;
	trans[1][10486]	= settr(10702,0,10487,2,0,"else", 0, 2, 0);
	trans[1][10487]	= settr(10703,0,10556,4479,4479,"(1)", 0, 2, 0); /* m: 10552 -> 10556,0 */
	reached1[10552] = 1;
	trans[1][10491]	= settr(10707,0,10519,4480,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10519] = settr(10735,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10735,0,10511,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10511] = settr(10727,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10727,2,10509,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10509] = settr(10725,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10725,2,10492,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10725,2,10495,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10725,2,10498,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10725,2,10501,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10725,2,10504,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10725,2,10507,0,0,"IF", 1, 2, 0);
	trans[1][10492]	= settr(10708,4,10517,4481,4481,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10493 -> 10517,0 */
	reached1[10493] = 1;
	trans[1][10493]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10494]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10510]	= settr(10726,0,10517,4482,4482,".(goto)", 1, 2, 0);
	trans[1][10495]	= settr(10711,4,10517,4483,4483,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10496 -> 10517,0 */
	reached1[10496] = 1;
	trans[1][10496]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10497]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10498]	= settr(10714,4,10517,4484,4484,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10499 -> 10517,0 */
	reached1[10499] = 1;
	trans[1][10499]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10500]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10501]	= settr(10717,4,10517,4485,4485,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10502 -> 10517,0 */
	reached1[10502] = 1;
	trans[1][10502]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10503]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10504]	= settr(10720,4,10517,4486,4486,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 10505 -> 10517,0 */
	reached1[10505] = 1;
	trans[1][10505]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10506]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10507]	= settr(10723,2,10508,2,0,"else", 1, 2, 0);
	trans[1][10508]	= settr(10724,4,10517,4487,4487,"(1)", 1, 2, 0); /* m: 10510 -> 10517,0 */
	reached1[10510] = 1;
	T = trans[1][10517] = settr(10733,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10733,0,10512,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10733,0,10515,0,0,"IF", 0, 2, 0);
	trans[1][10512]	= settr(10728,0,10514,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10514] = settr(10730,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10730,0,10513,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10513]	= settr(10729,0,10552,4488,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10518]	= settr(10734,0,10552,1,0,".(goto)", 0, 2, 0); /* m: 10552 -> 0,10556 */
	reached1[10552] = 1;
	trans[1][10515]	= settr(10731,0,10516,2,0,"else", 0, 2, 0);
	trans[1][10516]	= settr(10732,0,10556,4489,4489,"(1)", 0, 2, 0); /* m: 10552 -> 10556,0 */
	reached1[10552] = 1;
	trans[1][10520]	= settr(10736,0,10548,4490,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][10548] = settr(10764,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10764,0,10540,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10540] = settr(10756,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10756,2,10538,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10538] = settr(10754,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10754,2,10521,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10754,2,10524,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10754,2,10527,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10754,2,10530,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10754,2,10533,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10754,2,10536,0,0,"IF", 1, 2, 0);
	trans[1][10521]	= settr(10737,4,10546,4491,4491,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10522 -> 10546,0 */
	reached1[10522] = 1;
	trans[1][10522]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10523]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10539]	= settr(10755,0,10546,4492,4492,".(goto)", 1, 2, 0);
	trans[1][10524]	= settr(10740,4,10546,4493,4493,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10525 -> 10546,0 */
	reached1[10525] = 1;
	trans[1][10525]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10526]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10527]	= settr(10743,4,10546,4494,4494,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10528 -> 10546,0 */
	reached1[10528] = 1;
	trans[1][10528]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10529]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10530]	= settr(10746,4,10546,4495,4495,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10531 -> 10546,0 */
	reached1[10531] = 1;
	trans[1][10531]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10532]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10533]	= settr(10749,4,10546,4496,4496,"((STOP==ABORT))", 1, 2, 0); /* m: 10534 -> 10546,0 */
	reached1[10534] = 1;
	trans[1][10534]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10535]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10536]	= settr(10752,2,10537,2,0,"else", 1, 2, 0);
	trans[1][10537]	= settr(10753,4,10546,4497,4497,"(1)", 1, 2, 0); /* m: 10539 -> 10546,0 */
	reached1[10539] = 1;
	T = trans[1][10546] = settr(10762,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10762,0,10541,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10762,0,10544,0,0,"IF", 0, 2, 0);
	trans[1][10541]	= settr(10757,0,10543,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10543] = settr(10759,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10759,0,10542,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10542]	= settr(10758,0,10552,4498,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10547]	= settr(10763,0,10552,1,0,".(goto)", 0, 2, 0); /* m: 10552 -> 0,10556 */
	reached1[10552] = 1;
	trans[1][10544]	= settr(10760,0,10545,2,0,"else", 0, 2, 0);
	trans[1][10545]	= settr(10761,0,10556,4499,4499,"(1)", 0, 2, 0); /* m: 10552 -> 10556,0 */
	reached1[10552] = 1;
	trans[1][10552]	= settr(10768,0,10556,4500,4500,"j = (j+1)", 0, 2, 0);
	trans[1][10553]	= settr(10769,0,10554,2,0,"else", 0, 2, 0);
	trans[1][10554]	= settr(10770,0,10857,4501,4501,"j = 1", 0, 2, 0);
	trans[1][10555]	= settr(10771,0,10857,1,0,"goto :b99", 0, 2, 0);
	trans[1][10558]	= settr(10774,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10692]	= settr(10908,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][10560]	= settr(10776,0,10690,2,0,"else", 0, 2, 0);
	T = trans[ 1][10690] = settr(10906,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10906,0,10561,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10561]	= settr(10777,0,10687,4502,4502,"j = (3-1)", 0, 2, 0);
	trans[1][10688]	= settr(10904,0,10687,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10687] = settr(10903,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(10903,0,10562,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(10903,0,10684,0,0,"DO", 0, 2, 0);
	trans[1][10562]	= settr(10778,0,10682,4503,0,"((j>0))", 0, 2, 0);
	T = trans[ 1][10682] = settr(10898,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10898,0,10680,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10680] = settr(10896,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10896,0,10563,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10896,0,10593,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10896,0,10622,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10896,0,10651,0,0,"IF", 0, 2, 0);
	trans[1][10563]	= settr(10779,0,10592,4504,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][10592] = settr(10808,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10808,0,10583,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10583] = settr(10799,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10799,2,10581,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10581] = settr(10797,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10797,2,10564,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10797,2,10567,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10797,2,10570,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10797,2,10573,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10797,2,10576,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10797,2,10579,0,0,"IF", 1, 2, 0);
	trans[1][10564]	= settr(10780,4,10584,4505,4505,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10565 -> 10584,0 */
	reached1[10565] = 1;
	trans[1][10565]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10566]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10582]	= settr(10798,0,10584,4506,4506,".(goto)", 1, 2, 0);
	trans[1][10567]	= settr(10783,4,10584,4507,4507,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10568 -> 10584,0 */
	reached1[10568] = 1;
	trans[1][10568]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10569]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10570]	= settr(10786,4,10584,4508,4508,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10571 -> 10584,0 */
	reached1[10571] = 1;
	trans[1][10571]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10572]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10573]	= settr(10789,4,10584,4509,4509,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10574 -> 10584,0 */
	reached1[10574] = 1;
	trans[1][10574]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10575]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10576]	= settr(10792,4,10584,4510,4510,"((START==ABORT))", 1, 2, 0); /* m: 10577 -> 10584,0 */
	reached1[10577] = 1;
	trans[1][10577]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10578]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10579]	= settr(10795,2,10580,2,0,"else", 1, 2, 0);
	trans[1][10580]	= settr(10796,4,10584,4511,4511,"(1)", 1, 2, 0); /* m: 10582 -> 10584,0 */
	reached1[10582] = 1;
	trans[1][10584]	= settr(10800,0,10590,4512,4512,"(run Thread(j))", 0, 2, 0);
	T = trans[1][10590] = settr(10806,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10806,0,10585,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10806,0,10588,0,0,"IF", 0, 2, 0);
	trans[1][10585]	= settr(10801,0,10587,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10587] = settr(10803,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10803,0,10586,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10586]	= settr(10802,0,10683,4513,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10591]	= settr(10807,0,10683,1,0,".(goto)", 0, 2, 0); /* m: 10683 -> 0,10687 */
	reached1[10683] = 1;
	trans[1][10588]	= settr(10804,0,10589,2,0,"else", 0, 2, 0);
	trans[1][10589]	= settr(10805,0,10687,4514,4514,"(1)", 0, 2, 0); /* m: 10683 -> 10687,0 */
	reached1[10683] = 1;
	trans[1][10681]	= settr(10897,0,10683,1,0,".(goto)", 0, 2, 0); /* m: 10683 -> 0,10687 */
	reached1[10683] = 1;
	trans[1][10593]	= settr(10809,0,10621,4515,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][10621] = settr(10837,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10837,0,10613,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10613] = settr(10829,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10829,2,10611,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10611] = settr(10827,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10827,2,10594,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10827,2,10597,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10827,2,10600,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10827,2,10603,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10827,2,10606,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10827,2,10609,0,0,"IF", 1, 2, 0);
	trans[1][10594]	= settr(10810,4,10619,4516,4516,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10595 -> 10619,0 */
	reached1[10595] = 1;
	trans[1][10595]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10596]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10612]	= settr(10828,0,10619,4517,4517,".(goto)", 1, 2, 0);
	trans[1][10597]	= settr(10813,4,10619,4518,4518,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10598 -> 10619,0 */
	reached1[10598] = 1;
	trans[1][10598]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10599]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10600]	= settr(10816,4,10619,4519,4519,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10601 -> 10619,0 */
	reached1[10601] = 1;
	trans[1][10601]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10602]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10603]	= settr(10819,4,10619,4520,4520,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10604 -> 10619,0 */
	reached1[10604] = 1;
	trans[1][10604]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10605]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10606]	= settr(10822,4,10619,4521,4521,"((PAUSE==ABORT))", 1, 2, 0); /* m: 10607 -> 10619,0 */
	reached1[10607] = 1;
	trans[1][10607]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10608]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10609]	= settr(10825,2,10610,2,0,"else", 1, 2, 0);
	trans[1][10610]	= settr(10826,4,10619,4522,4522,"(1)", 1, 2, 0); /* m: 10612 -> 10619,0 */
	reached1[10612] = 1;
	T = trans[1][10619] = settr(10835,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10835,0,10614,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10835,0,10617,0,0,"IF", 0, 2, 0);
	trans[1][10614]	= settr(10830,0,10616,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10616] = settr(10832,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10832,0,10615,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10615]	= settr(10831,0,10683,4523,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10620]	= settr(10836,0,10683,1,0,".(goto)", 0, 2, 0); /* m: 10683 -> 0,10687 */
	reached1[10683] = 1;
	trans[1][10617]	= settr(10833,0,10618,2,0,"else", 0, 2, 0);
	trans[1][10618]	= settr(10834,0,10687,4524,4524,"(1)", 0, 2, 0); /* m: 10683 -> 10687,0 */
	reached1[10683] = 1;
	trans[1][10622]	= settr(10838,0,10650,4525,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10650] = settr(10866,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10866,0,10642,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10642] = settr(10858,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10858,2,10640,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10640] = settr(10856,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10856,2,10623,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10856,2,10626,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10856,2,10629,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10856,2,10632,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10856,2,10635,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10856,2,10638,0,0,"IF", 1, 2, 0);
	trans[1][10623]	= settr(10839,4,10648,4526,4526,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10624 -> 10648,0 */
	reached1[10624] = 1;
	trans[1][10624]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10625]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10641]	= settr(10857,0,10648,4527,4527,".(goto)", 1, 2, 0);
	trans[1][10626]	= settr(10842,4,10648,4528,4528,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10627 -> 10648,0 */
	reached1[10627] = 1;
	trans[1][10627]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10628]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10629]	= settr(10845,4,10648,4529,4529,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10630 -> 10648,0 */
	reached1[10630] = 1;
	trans[1][10630]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10631]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10632]	= settr(10848,4,10648,4530,4530,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10633 -> 10648,0 */
	reached1[10633] = 1;
	trans[1][10633]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10634]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10635]	= settr(10851,4,10648,4531,4531,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 10636 -> 10648,0 */
	reached1[10636] = 1;
	trans[1][10636]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10637]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10638]	= settr(10854,2,10639,2,0,"else", 1, 2, 0);
	trans[1][10639]	= settr(10855,4,10648,4532,4532,"(1)", 1, 2, 0); /* m: 10641 -> 10648,0 */
	reached1[10641] = 1;
	T = trans[1][10648] = settr(10864,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10864,0,10643,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10864,0,10646,0,0,"IF", 0, 2, 0);
	trans[1][10643]	= settr(10859,0,10645,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10645] = settr(10861,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10861,0,10644,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10644]	= settr(10860,0,10683,4533,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10649]	= settr(10865,0,10683,1,0,".(goto)", 0, 2, 0); /* m: 10683 -> 0,10687 */
	reached1[10683] = 1;
	trans[1][10646]	= settr(10862,0,10647,2,0,"else", 0, 2, 0);
	trans[1][10647]	= settr(10863,0,10687,4534,4534,"(1)", 0, 2, 0); /* m: 10683 -> 10687,0 */
	reached1[10683] = 1;
	trans[1][10651]	= settr(10867,0,10679,4535,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][10679] = settr(10895,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10895,0,10671,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10671] = settr(10887,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10887,2,10669,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10669] = settr(10885,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10885,2,10652,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10885,2,10655,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10885,2,10658,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10885,2,10661,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10885,2,10664,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10885,2,10667,0,0,"IF", 1, 2, 0);
	trans[1][10652]	= settr(10868,4,10677,4536,4536,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10653 -> 10677,0 */
	reached1[10653] = 1;
	trans[1][10653]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10654]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10670]	= settr(10886,0,10677,4537,4537,".(goto)", 1, 2, 0);
	trans[1][10655]	= settr(10871,4,10677,4538,4538,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10656 -> 10677,0 */
	reached1[10656] = 1;
	trans[1][10656]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10657]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10658]	= settr(10874,4,10677,4539,4539,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10659 -> 10677,0 */
	reached1[10659] = 1;
	trans[1][10659]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10660]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10661]	= settr(10877,4,10677,4540,4540,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10662 -> 10677,0 */
	reached1[10662] = 1;
	trans[1][10662]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10663]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10664]	= settr(10880,4,10677,4541,4541,"((STOP==ABORT))", 1, 2, 0); /* m: 10665 -> 10677,0 */
	reached1[10665] = 1;
	trans[1][10665]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10666]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10667]	= settr(10883,2,10668,2,0,"else", 1, 2, 0);
	trans[1][10668]	= settr(10884,4,10677,4542,4542,"(1)", 1, 2, 0); /* m: 10670 -> 10677,0 */
	reached1[10670] = 1;
	T = trans[1][10677] = settr(10893,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(10893,0,10672,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(10893,0,10675,0,0,"IF", 0, 2, 0);
	trans[1][10672]	= settr(10888,0,10674,1,0,"(1)", 0, 2, 0);
	T = trans[ 1][10674] = settr(10890,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10890,0,10673,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10673]	= settr(10889,0,10683,4543,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10678]	= settr(10894,0,10683,1,0,".(goto)", 0, 2, 0); /* m: 10683 -> 0,10687 */
	reached1[10683] = 1;
	trans[1][10675]	= settr(10891,0,10676,2,0,"else", 0, 2, 0);
	trans[1][10676]	= settr(10892,0,10687,4544,4544,"(1)", 0, 2, 0); /* m: 10683 -> 10687,0 */
	reached1[10683] = 1;
	trans[1][10683]	= settr(10899,0,10687,4545,4545,"j = (j-1)", 0, 2, 0);
	trans[1][10684]	= settr(10900,0,10685,2,0,"else", 0, 2, 0);
	trans[1][10685]	= settr(10901,0,10857,4546,4546,"j = 1", 0, 2, 0);
	trans[1][10686]	= settr(10902,0,10857,1,0,"goto :b100", 0, 2, 0);
	trans[1][10689]	= settr(10905,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10848]	= settr(11064,0,10857,1,0,".(goto)", 0, 2, 0);
	trans[1][10694]	= settr(10910,0,10846,2,0,"else", 0, 2, 0);
	T = trans[ 1][10846] = settr(11062,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11062,0,10823,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10823] = settr(11039,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11039,0,10820,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10821]	= settr(11037,0,10820,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10820] = settr(11036,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11036,0,10695,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11036,0,10817,0,0,"DO", 0, 2, 0);
	trans[1][10695]	= settr(10911,0,10815,4547,0,"((j<3))", 0, 2, 0);
	T = trans[ 1][10815] = settr(11031,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11031,0,10813,0,0,"sub-sequence", 0, 2, 0);
	T = trans[1][10813] = settr(11029,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11029,0,10696,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11029,0,10726,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11029,0,10755,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11029,0,10784,0,0,"IF", 0, 2, 0);
	trans[1][10696]	= settr(10912,0,10725,4548,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][10725] = settr(10941,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10941,0,10716,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10716] = settr(10932,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10932,2,10714,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10714] = settr(10930,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10930,2,10697,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10930,2,10700,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10930,2,10703,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10930,2,10706,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10930,2,10709,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10930,2,10712,0,0,"IF", 1, 2, 0);
	trans[1][10697]	= settr(10913,4,10717,4549,4549,"(((START==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10698 -> 10717,0 */
	reached1[10698] = 1;
	trans[1][10698]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10699]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10715]	= settr(10931,0,10717,4550,4550,".(goto)", 1, 2, 0);
	trans[1][10700]	= settr(10916,4,10717,4551,4551,"(((START==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10701 -> 10717,0 */
	reached1[10701] = 1;
	trans[1][10701]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10702]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10703]	= settr(10919,4,10717,4552,4552,"(((START==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10704 -> 10717,0 */
	reached1[10704] = 1;
	trans[1][10704]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10705]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10706]	= settr(10922,4,10717,4553,4553,"(((START==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10707 -> 10717,0 */
	reached1[10707] = 1;
	trans[1][10707]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10708]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10709]	= settr(10925,4,10717,4554,4554,"((START==ABORT))", 1, 2, 0); /* m: 10710 -> 10717,0 */
	reached1[10710] = 1;
	trans[1][10710]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10711]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10712]	= settr(10928,2,10713,2,0,"else", 1, 2, 0);
	trans[1][10713]	= settr(10929,4,10717,4555,4555,"(1)", 1, 2, 0); /* m: 10715 -> 10717,0 */
	reached1[10715] = 1;
	trans[1][10717]	= settr(10933,0,10723,4556,4556,"(run Thread(j))", 0, 2, 0);
	T = trans[1][10723] = settr(10939,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10939,0,10718,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10939,0,10721,0,0,"IF", 0, 2, 0);
	trans[1][10718]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10720] = settr(10936,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10936,0,10719,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10719]	= settr(10935,0,10816,4557,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10724]	= settr(10940,0,10816,1,0,".(goto)", 0, 2, 0); /* m: 10816 -> 0,10820 */
	reached1[10816] = 1;
	trans[1][10721]	= settr(10937,0,10722,2,0,"else", 0, 2, 0);
	trans[1][10722]	= settr(10938,0,10820,4558,4558,"(1)", 0, 2, 0); /* m: 10816 -> 10820,0 */
	reached1[10816] = 1;
	trans[1][10814]	= settr(11030,0,10816,1,0,".(goto)", 0, 2, 0); /* m: 10816 -> 0,10820 */
	reached1[10816] = 1;
	trans[1][10726]	= settr(10942,0,10754,4559,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][10754] = settr(10970,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10970,0,10746,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10746] = settr(10962,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10962,2,10744,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10744] = settr(10960,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10960,2,10727,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10960,2,10730,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10960,2,10733,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10960,2,10736,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10960,2,10739,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10960,2,10742,0,0,"IF", 1, 2, 0);
	trans[1][10727]	= settr(10943,4,10752,4560,4560,"(((PAUSE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10728 -> 10752,0 */
	reached1[10728] = 1;
	trans[1][10728]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10729]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10745]	= settr(10961,0,10752,4561,4561,".(goto)", 1, 2, 0);
	trans[1][10730]	= settr(10946,4,10752,4562,4562,"(((PAUSE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10731 -> 10752,0 */
	reached1[10731] = 1;
	trans[1][10731]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10732]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10733]	= settr(10949,4,10752,4563,4563,"(((PAUSE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10734 -> 10752,0 */
	reached1[10734] = 1;
	trans[1][10734]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10735]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10736]	= settr(10952,4,10752,4564,4564,"(((PAUSE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10737 -> 10752,0 */
	reached1[10737] = 1;
	trans[1][10737]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10738]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10739]	= settr(10955,4,10752,4565,4565,"((PAUSE==ABORT))", 1, 2, 0); /* m: 10740 -> 10752,0 */
	reached1[10740] = 1;
	trans[1][10740]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10741]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10742]	= settr(10958,2,10743,2,0,"else", 1, 2, 0);
	trans[1][10743]	= settr(10959,4,10752,4566,4566,"(1)", 1, 2, 0); /* m: 10745 -> 10752,0 */
	reached1[10745] = 1;
	T = trans[1][10752] = settr(10968,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10968,0,10747,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10968,0,10750,0,0,"IF", 0, 2, 0);
	trans[1][10747]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10749] = settr(10965,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10965,0,10748,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10748]	= settr(10964,0,10816,4567,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10753]	= settr(10969,0,10816,1,0,".(goto)", 0, 2, 0); /* m: 10816 -> 0,10820 */
	reached1[10816] = 1;
	trans[1][10750]	= settr(10966,0,10751,2,0,"else", 0, 2, 0);
	trans[1][10751]	= settr(10967,0,10820,4568,4568,"(1)", 0, 2, 0); /* m: 10816 -> 10820,0 */
	reached1[10816] = 1;
	trans[1][10755]	= settr(10971,0,10783,4569,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10783] = settr(10999,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10999,0,10775,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10775] = settr(10991,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(10991,2,10773,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10773] = settr(10989,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10989,2,10756,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10989,2,10759,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10989,2,10762,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10989,2,10765,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(10989,2,10768,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(10989,2,10771,0,0,"IF", 1, 2, 0);
	trans[1][10756]	= settr(10972,4,10781,4570,4570,"(((CONTINUE==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10757 -> 10781,0 */
	reached1[10757] = 1;
	trans[1][10757]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10758]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10774]	= settr(10990,0,10781,4571,4571,".(goto)", 1, 2, 0);
	trans[1][10759]	= settr(10975,4,10781,4572,4572,"(((CONTINUE==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10760 -> 10781,0 */
	reached1[10760] = 1;
	trans[1][10760]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10761]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10762]	= settr(10978,4,10781,4573,4573,"(((CONTINUE==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10763 -> 10781,0 */
	reached1[10763] = 1;
	trans[1][10763]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10764]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10765]	= settr(10981,4,10781,4574,4574,"(((CONTINUE==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10766 -> 10781,0 */
	reached1[10766] = 1;
	trans[1][10766]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10767]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10768]	= settr(10984,4,10781,4575,4575,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 10769 -> 10781,0 */
	reached1[10769] = 1;
	trans[1][10769]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10770]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10771]	= settr(10987,2,10772,2,0,"else", 1, 2, 0);
	trans[1][10772]	= settr(10988,4,10781,4576,4576,"(1)", 1, 2, 0); /* m: 10774 -> 10781,0 */
	reached1[10774] = 1;
	T = trans[1][10781] = settr(10997,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(10997,0,10776,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(10997,0,10779,0,0,"IF", 0, 2, 0);
	trans[1][10776]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10778] = settr(10994,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(10994,0,10777,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10777]	= settr(10993,0,10816,4577,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10782]	= settr(10998,0,10816,1,0,".(goto)", 0, 2, 0); /* m: 10816 -> 0,10820 */
	reached1[10816] = 1;
	trans[1][10779]	= settr(10995,0,10780,2,0,"else", 0, 2, 0);
	trans[1][10780]	= settr(10996,0,10820,4578,4578,"(1)", 0, 2, 0); /* m: 10816 -> 10820,0 */
	reached1[10816] = 1;
	trans[1][10784]	= settr(11000,0,10812,4579,0,"(((2==STOP)||(2==ABORT)))", 0, 2, 0);
	T = trans[ 1][10812] = settr(11028,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11028,0,10804,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 1][10804] = settr(11020,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(11020,2,10802,0,0,"ATOMIC", 1, 2, 0);
	T = trans[1][10802] = settr(11018,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11018,2,10785,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11018,2,10788,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11018,2,10791,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11018,2,10794,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(11018,2,10797,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(11018,2,10800,0,0,"IF", 1, 2, 0);
	trans[1][10785]	= settr(11001,4,10810,4580,4580,"(((STOP==START)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10786 -> 10810,0 */
	reached1[10786] = 1;
	trans[1][10786]	= settr(0,0,0,0,0,"assert((states[j]==READY))",0,0,0);
	trans[1][10787]	= settr(0,0,0,0,0,"commands[j] = START",0,0,0);
	trans[1][10803]	= settr(11019,0,10810,4581,4581,".(goto)", 1, 2, 0);
	trans[1][10788]	= settr(11004,4,10810,4582,4582,"(((STOP==PAUSE)&&(commands[j]==CONTINUE)))", 1, 2, 0); /* m: 10789 -> 10810,0 */
	reached1[10789] = 1;
	trans[1][10789]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==RUNNING)))",0,0,0);
	trans[1][10790]	= settr(0,0,0,0,0,"commands[j] = PAUSE",0,0,0);
	trans[1][10791]	= settr(11007,4,10810,4583,4583,"(((STOP==CONTINUE)&&((commands[j]==START)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10792 -> 10810,0 */
	reached1[10792] = 1;
	trans[1][10792]	= settr(0,0,0,0,0,"assert(((states[j]==STARTING)||(states[j]==PAUSED)))",0,0,0);
	trans[1][10793]	= settr(0,0,0,0,0,"commands[j] = CONTINUE",0,0,0);
	trans[1][10794]	= settr(11010,4,10810,4584,4584,"(((STOP==STOP)&&((commands[j]==CONTINUE)||(commands[j]==PAUSE))))", 1, 2, 0); /* m: 10795 -> 10810,0 */
	reached1[10795] = 1;
	trans[1][10795]	= settr(0,0,0,0,0,"assert((((states[j]==STARTING)||(states[j]==RUNNING))||(states[j]==PAUSED)))",0,0,0);
	trans[1][10796]	= settr(0,0,0,0,0,"commands[j] = STOP",0,0,0);
	trans[1][10797]	= settr(11013,4,10810,4585,4585,"((STOP==ABORT))", 1, 2, 0); /* m: 10798 -> 10810,0 */
	reached1[10798] = 1;
	trans[1][10798]	= settr(0,0,0,0,0,"assert((states[j]!=READY))",0,0,0);
	trans[1][10799]	= settr(0,0,0,0,0,"commands[j] = ABORT",0,0,0);
	trans[1][10800]	= settr(11016,2,10801,2,0,"else", 1, 2, 0);
	trans[1][10801]	= settr(11017,4,10810,4586,4586,"(1)", 1, 2, 0); /* m: 10803 -> 10810,0 */
	reached1[10803] = 1;
	T = trans[1][10810] = settr(11026,0,0,0,0,"IF", 0, 2, 0);
#if 0
	/* dead link: */
	T = T->nxt	= settr(11026,0,10805,0,0,"IF", 0, 2, 0);
#endif
	    T->nxt	= settr(11026,0,10808,0,0,"IF", 0, 2, 0);
	trans[1][10805]	= settr(0,0,0,0,0,"(0)",0,0,0);
	T = trans[ 1][10807] = settr(11023,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11023,0,10806,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10806]	= settr(11022,0,10816,4587,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10811]	= settr(11027,0,10816,1,0,".(goto)", 0, 2, 0); /* m: 10816 -> 0,10820 */
	reached1[10816] = 1;
	trans[1][10808]	= settr(11024,0,10809,2,0,"else", 0, 2, 0);
	trans[1][10809]	= settr(11025,0,10820,4588,4588,"(1)", 0, 2, 0); /* m: 10816 -> 10820,0 */
	reached1[10816] = 1;
	trans[1][10816]	= settr(11032,0,10820,4589,4589,"j = (j+1)", 0, 2, 0);
	trans[1][10817]	= settr(11033,0,10818,2,0,"else", 0, 2, 0);
	trans[1][10818]	= settr(11034,0,10843,4590,4590,"j = 1", 0, 2, 0);
	trans[1][10819]	= settr(11035,0,10843,1,0,"goto :b101", 0, 2, 0);
	trans[1][10822]	= settr(11038,0,10843,1,0,"break", 0, 2, 0);
	trans[1][10844]	= settr(11060,0,10843,1,0,".(goto)", 0, 2, 0);
	T = trans[1][10843] = settr(11059,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(11059,0,10824,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(11059,0,10840,0,0,"DO", 0, 2, 0);
	trans[1][10824]	= settr(11040,0,10837,4591,0,"((j<3))", 0, 2, 0);
	T = trans[1][10837] = settr(11053,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11053,0,10825,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11053,0,10828,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(11053,0,10831,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(11053,0,10834,0,0,"IF", 0, 2, 0);
	trans[1][10825]	= settr(11041,0,10827,4592,0,"((2==START))", 0, 2, 0);
	T = trans[ 1][10827] = settr(11043,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11043,0,10826,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10826]	= settr(11042,0,10839,4593,0,"(((((((states[j]==RUNNING)||(states[j]==PAUSED))||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10838]	= settr(11054,0,10839,1,0,".(goto)", 0, 2, 0); /* m: 10839 -> 0,10843 */
	reached1[10839] = 1;
	trans[1][10828]	= settr(11044,0,10830,4594,0,"((2==CONTINUE))", 0, 2, 0);
	T = trans[ 1][10830] = settr(11046,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11046,0,10829,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10829]	= settr(11045,0,10839,4595,0,"((((((states[j]==RUNNING)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10831]	= settr(11047,0,10833,4596,0,"((2==PAUSE))", 0, 2, 0);
	T = trans[ 1][10833] = settr(11049,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11049,0,10832,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10832]	= settr(11048,0,10839,4597,0,"((((((states[j]==PAUSED)||(states[j]==STOPPING))||(states[j]==STOPPED))||(states[j]==ABORTING))||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10834]	= settr(11050,0,10836,4598,0,"((2==STOP))", 0, 2, 0);
	T = trans[ 1][10836] = settr(11052,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(11052,0,10835,0,0,"sub-sequence", 0, 2, 0);
	trans[1][10835]	= settr(11051,0,10839,4599,0,"(((states[j]==STOPPED)||(states[j]==ABORTED)))", 1, 2, 0);
	trans[1][10839]	= settr(11055,0,10843,4600,4600,"j = (j+1)", 0, 2, 0);
	trans[1][10840]	= settr(11056,0,10841,2,0,"else", 0, 2, 0);
	trans[1][10841]	= settr(11057,0,10857,4601,4601,"j = 1", 0, 2, 0);
	trans[1][10842]	= settr(11058,0,10857,1,0,"goto :b102", 0, 2, 0);
	trans[1][10845]	= settr(11061,0,10857,1,0,"break", 0, 2, 0);
	trans[1][10852]	= settr(11068,0,10853,2,0,"else", 0, 2, 0);
	trans[1][10853]	= settr(11069,0,10857,1,0,"(1)", 0, 2, 0);
	trans[1][10857]	= settr(11073,0,10863,4602,4602,"states[0] = 3", 1, 2, 0);
	trans[1][10859]	= settr(11075,0,10860,2,0,"else", 0, 2, 0);
	trans[1][10860]	= settr(11076,0,10863,4603,0,"assert(0)", 0, 2, 0);
	trans[1][10863]	= settr(11079,0,0,4604,4604,"-end-", 0, 3500, 0);

	/* proctype 0: Thread */

	trans[0] = (Trans **) emalloc(218*sizeof(Trans *));

	trans[0][1]	= settr(0,0,3,4605,0,"((commands[k]==START))", 1, 2, 0);
	T = trans[ 0][3] = settr(2,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(2,0,2,0,0,"sub-sequence", 0, 2, 0);
	trans[0][2]	= settr(1,0,23,4606,4606,"states[k] = 12", 1, 2, 0);
	T = trans[ 0][23] = settr(22,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(22,2,21,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][21] = settr(20,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(20,2,4,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(20,2,7,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(20,2,10,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(20,2,13,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(20,2,16,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(20,2,19,0,0,"IF", 1, 2, 0);
	trans[0][4]	= settr(3,4,92,4607,4607,"(((CONTINUE==START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 5 -> 92,0 */
	reached0[5] = 1;
	trans[0][5]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][6]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][22]	= settr(21,0,92,4608,4608,".(goto)", 1, 2, 0);
	trans[0][7]	= settr(6,4,92,4609,4609,"(((CONTINUE==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 8 -> 92,0 */
	reached0[8] = 1;
	trans[0][8]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][9]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][10]	= settr(9,4,92,4610,4610,"(((CONTINUE==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 11 -> 92,0 */
	reached0[11] = 1;
	trans[0][11]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][12]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][13]	= settr(12,4,92,4611,4611,"(((CONTINUE==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 14 -> 92,0 */
	reached0[14] = 1;
	trans[0][14]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][15]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][16]	= settr(15,4,92,4612,4612,"((CONTINUE==ABORT))", 1, 2, 0); /* m: 17 -> 92,0 */
	reached0[17] = 1;
	trans[0][17]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][18]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][19]	= settr(18,2,20,2,0,"else", 1, 2, 0);
	trans[0][20]	= settr(19,4,92,4613,4613,"(1)", 1, 2, 0); /* m: 22 -> 92,0 */
	reached0[22] = 1;
	T = trans[ 0][92] = settr(91,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(91,0,90,0,0,"sub-sequence", 0, 2, 0);
	T = trans[0][90] = settr(89,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(89,0,24,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(89,0,46,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(89,0,67,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(89,0,88,0,0,"IF", 0, 2, 0);
	trans[0][24]	= settr(23,0,45,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][45] = settr(44,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(44,0,44,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 0][44] = settr(43,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(43,2,42,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][42] = settr(41,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(41,2,25,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(41,2,28,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(41,2,31,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(41,2,34,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(41,2,37,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(41,2,40,0,0,"IF", 1, 2, 0);
	trans[0][25]	= settr(24,0,171,4614,4614,"(((ABORT!=START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 26 -> 171,0 */
	reached0[26] = 1;
	trans[0][26]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][27]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][43]	= settr(42,0,171,4615,4615,".(goto)", 1, 2, 0);
	trans[0][28]	= settr(27,0,171,4616,4616,"(((ABORT==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 29 -> 171,0 */
	reached0[29] = 1;
	trans[0][29]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][30]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][31]	= settr(30,0,171,4617,4617,"(((ABORT==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 32 -> 171,0 */
	reached0[32] = 1;
	trans[0][32]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][33]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][34]	= settr(33,0,171,4618,4618,"(((ABORT==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 35 -> 171,0 */
	reached0[35] = 1;
	trans[0][35]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][36]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][37]	= settr(36,0,171,4619,4619,"((ABORT==ABORT))", 1, 2, 0); /* m: 38 -> 171,0 */
	reached0[38] = 1;
	trans[0][38]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][39]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][40]	= settr(39,2,41,2,0,"else", 1, 2, 0);
	trans[0][41]	= settr(40,0,171,4620,4620,"(1)", 1, 2, 0); /* m: 43 -> 171,0 */
	reached0[43] = 1;
	trans[0][91]	= settr(90,0,171,1,0,".(goto)", 0, 2, 0);
	trans[0][46]	= settr(45,0,66,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][66] = settr(65,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(65,2,64,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][64] = settr(63,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(63,2,47,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(63,2,50,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(63,2,53,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(63,2,56,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(63,2,59,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(63,2,62,0,0,"IF", 1, 2, 0);
	trans[0][47]	= settr(46,0,171,4621,4621,"(((PAUSE==START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 48 -> 171,0 */
	reached0[48] = 1;
	trans[0][48]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][49]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][65]	= settr(64,0,171,4622,4622,".(goto)", 1, 2, 0);
	trans[0][50]	= settr(49,0,171,4623,4623,"(((PAUSE==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 51 -> 171,0 */
	reached0[51] = 1;
	trans[0][51]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][52]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][53]	= settr(52,0,171,4624,4624,"(((PAUSE==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 54 -> 171,0 */
	reached0[54] = 1;
	trans[0][54]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][55]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][56]	= settr(55,0,171,4625,4625,"(((PAUSE==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 57 -> 171,0 */
	reached0[57] = 1;
	trans[0][57]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][58]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][59]	= settr(58,0,171,4626,4626,"((PAUSE==ABORT))", 1, 2, 0); /* m: 60 -> 171,0 */
	reached0[60] = 1;
	trans[0][60]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][61]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][62]	= settr(61,2,63,2,0,"else", 1, 2, 0);
	trans[0][63]	= settr(62,0,171,4627,4627,"(1)", 1, 2, 0); /* m: 65 -> 171,0 */
	reached0[65] = 1;
	trans[0][67]	= settr(66,0,87,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][87] = settr(86,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(86,2,85,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][85] = settr(84,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(84,2,68,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(84,2,71,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(84,2,74,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(84,2,77,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(84,2,80,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(84,2,83,0,0,"IF", 1, 2, 0);
	trans[0][68]	= settr(67,0,171,4628,4628,"(((STOP==START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 69 -> 171,0 */
	reached0[69] = 1;
	trans[0][69]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][70]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][86]	= settr(85,0,171,4629,4629,".(goto)", 1, 2, 0);
	trans[0][71]	= settr(70,0,171,4630,4630,"(((STOP==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 72 -> 171,0 */
	reached0[72] = 1;
	trans[0][72]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][73]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][74]	= settr(73,0,171,4631,4631,"(((STOP==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 75 -> 171,0 */
	reached0[75] = 1;
	trans[0][75]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][76]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][77]	= settr(76,0,171,4632,4632,"(((STOP==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 78 -> 171,0 */
	reached0[78] = 1;
	trans[0][78]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][79]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][80]	= settr(79,0,171,4633,4633,"((STOP==ABORT))", 1, 2, 0); /* m: 81 -> 171,0 */
	reached0[81] = 1;
	trans[0][81]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][82]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][83]	= settr(82,2,84,2,0,"else", 1, 2, 0);
	trans[0][84]	= settr(83,0,171,4634,4634,"(1)", 1, 2, 0); /* m: 86 -> 171,0 */
	reached0[86] = 1;
	trans[0][88]	= settr(87,0,89,1,0,"(1)", 0, 2, 0);
	trans[0][89]	= settr(88,0,171,1,0,"(1)", 0, 2, 0);
	trans[0][172]	= settr(171,0,171,1,0,".(goto)", 0, 2, 0);
	T = trans[0][171] = settr(170,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(170,0,93,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(170,0,155,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(170,0,169,0,0,"DO", 0, 2, 0);
	trans[0][93]	= settr(92,0,94,4635,0,"((commands[k]==CONTINUE))", 1, 2, 0);
	trans[0][94]	= settr(93,0,103,4636,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))", 1, 2, 0);
	T = trans[0][103] = settr(102,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(102,0,95,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(102,0,98,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(102,0,101,0,0,"IF", 0, 2, 0);
	trans[0][95]	= settr(94,0,97,4637,0,"((states[k]==STARTING))", 1, 2, 0);
	T = trans[ 0][97] = settr(96,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(96,0,96,0,0,"sub-sequence", 0, 2, 0);
	trans[0][96]	= settr(95,0,154,4638,4638,"states[k] = 11", 1, 2, 0);
	trans[0][104]	= settr(103,0,154,1,0,".(goto)", 0, 2, 0);
	trans[0][98]	= settr(97,0,100,4639,0,"((states[k]==PAUSED))", 1, 2, 0);
	T = trans[ 0][100] = settr(99,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(99,0,99,0,0,"sub-sequence", 0, 2, 0);
	trans[0][99]	= settr(98,0,154,4640,4640,"states[k] = 11", 1, 2, 0);
	trans[0][101]	= settr(100,0,102,2,0,"else", 0, 2, 0);
	trans[0][102]	= settr(101,0,154,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][154] = settr(153,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(153,0,105,0,0,"sub-sequence", 0, 2, 0);
	trans[0][105]	= settr(104,0,151,4641,4641,"executing[k] = 1", 1, 2, 0);
	T = trans[0][151] = settr(150,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(150,0,106,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(150,0,128,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(150,0,149,0,0,"IF", 0, 2, 0);
	trans[0][106]	= settr(105,0,127,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][127] = settr(126,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(126,0,126,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 0][126] = settr(125,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(125,2,124,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][124] = settr(123,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(123,2,107,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(123,2,110,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(123,2,113,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(123,2,116,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(123,2,119,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(123,2,122,0,0,"IF", 1, 2, 0);
	trans[0][107]	= settr(106,0,153,4642,4642,"(((ABORT!=START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 108 -> 153,0 */
	reached0[108] = 1;
	trans[0][108]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][109]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][125]	= settr(124,0,153,4643,4643,".(goto)", 1, 2, 0);
	trans[0][110]	= settr(109,0,153,4644,4644,"(((ABORT==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 111 -> 153,0 */
	reached0[111] = 1;
	trans[0][111]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][112]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][113]	= settr(112,0,153,4645,4645,"(((ABORT==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 114 -> 153,0 */
	reached0[114] = 1;
	trans[0][114]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][115]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][116]	= settr(115,0,153,4646,4646,"(((ABORT==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 117 -> 153,0 */
	reached0[117] = 1;
	trans[0][117]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][118]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][119]	= settr(118,0,153,4647,4647,"((ABORT==ABORT))", 1, 2, 0); /* m: 120 -> 153,0 */
	reached0[120] = 1;
	trans[0][120]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][121]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][122]	= settr(121,2,123,2,0,"else", 1, 2, 0);
	trans[0][123]	= settr(122,0,153,4648,4648,"(1)", 1, 2, 0); /* m: 125 -> 153,0 */
	reached0[125] = 1;
	trans[0][152]	= settr(151,0,153,1,0,".(goto)", 0, 2, 0);
	trans[0][128]	= settr(127,0,148,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][148] = settr(147,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(147,2,146,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][146] = settr(145,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(145,2,129,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(145,2,132,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(145,2,135,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(145,2,138,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(145,2,141,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(145,2,144,0,0,"IF", 1, 2, 0);
	trans[0][129]	= settr(128,0,153,4649,4649,"(((STOP==START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 130 -> 153,0 */
	reached0[130] = 1;
	trans[0][130]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][131]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][147]	= settr(146,0,153,4650,4650,".(goto)", 1, 2, 0);
	trans[0][132]	= settr(131,0,153,4651,4651,"(((STOP==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 133 -> 153,0 */
	reached0[133] = 1;
	trans[0][133]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][134]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][135]	= settr(134,0,153,4652,4652,"(((STOP==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 136 -> 153,0 */
	reached0[136] = 1;
	trans[0][136]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][137]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][138]	= settr(137,0,153,4653,4653,"(((STOP==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 139 -> 153,0 */
	reached0[139] = 1;
	trans[0][139]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][140]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][141]	= settr(140,0,153,4654,4654,"((STOP==ABORT))", 1, 2, 0); /* m: 142 -> 153,0 */
	reached0[142] = 1;
	trans[0][142]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][143]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][144]	= settr(143,2,145,2,0,"else", 1, 2, 0);
	trans[0][145]	= settr(144,0,153,4655,4655,"(1)", 1, 2, 0); /* m: 147 -> 153,0 */
	reached0[147] = 1;
	trans[0][149]	= settr(148,0,150,1,0,"(1)", 0, 2, 0);
	trans[0][150]	= settr(149,0,153,1,0,"(1)", 0, 2, 0);
	trans[0][153]	= settr(152,0,171,4656,4656,"executing[k] = 0", 1, 2, 0);
	trans[0][155]	= settr(154,0,167,4657,0,"((commands[k]==PAUSE))", 1, 2, 0);
	T = trans[0][167] = settr(166,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(166,0,156,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(166,0,158,0,0,"IF", 0, 2, 0);
	trans[0][156]	= settr(155,0,157,4658,0,"((states[k]==PAUSED))", 1, 2, 0);
	trans[0][157]	= settr(156,0,171,4659,0,"((commands[k]!=PAUSED))", 1, 2, 0);
	trans[0][168]	= settr(167,0,171,1,0,".(goto)", 0, 2, 0);
	trans[0][158]	= settr(157,0,159,2,0,"else", 0, 2, 0);
	trans[0][159]	= settr(158,0,165,4660,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==STARTING)))", 1, 2, 0);
	T = trans[0][165] = settr(164,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(164,0,160,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(164,0,163,0,0,"IF", 0, 2, 0);
	trans[0][160]	= settr(159,0,162,4661,0,"(((states[k]==STARTING)||(states[k]==RUNNING)))", 1, 2, 0);
	T = trans[ 0][162] = settr(161,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(161,0,161,0,0,"sub-sequence", 0, 2, 0);
	trans[0][161]	= settr(160,0,171,4662,4662,"states[k] = 10", 1, 2, 0);
	trans[0][166]	= settr(165,0,171,1,0,".(goto)", 0, 2, 0);
	trans[0][163]	= settr(162,0,164,2,0,"else", 0, 2, 0);
	trans[0][164]	= settr(163,0,171,1,0,"(1)", 0, 2, 0);
	trans[0][169]	= settr(168,0,215,4663,0,"(((commands[k]==STOP)||(commands[k]==ABORT)))", 1, 2, 0);
	trans[0][170]	= settr(169,0,215,1,0,"goto :b0", 0, 2, 0);
	trans[0][173]	= settr(172,0,215,1,0,"break", 0, 2, 0);
	T = trans[0][215] = settr(214,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(214,0,174,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(214,0,207,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(214,0,213,0,0,"IF", 0, 2, 0);
	trans[0][174]	= settr(173,0,175,4664,0,"((commands[k]==STOP))", 1, 2, 0);
	trans[0][175]	= settr(174,0,177,4665,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))", 1, 2, 0);
	T = trans[ 0][177] = settr(176,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(176,0,176,0,0,"sub-sequence", 0, 2, 0);
	trans[0][176]	= settr(175,0,204,4666,4666,"states[k] = 7", 1, 2, 0);
	T = trans[ 0][204] = settr(203,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(203,0,202,0,0,"sub-sequence", 0, 2, 0);
	T = trans[0][202] = settr(201,0,0,0,0,"IF", 0, 2, 0);
	T = T->nxt	= settr(201,0,178,0,0,"IF", 0, 2, 0);
	    T->nxt	= settr(201,0,200,0,0,"IF", 0, 2, 0);
	trans[0][178]	= settr(177,0,199,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][199] = settr(198,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(198,0,198,0,0,"sub-sequence", 0, 2, 0);
	T = trans[ 0][198] = settr(197,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(197,2,196,0,0,"ATOMIC", 1, 2, 0);
	T = trans[0][196] = settr(195,2,0,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(195,2,179,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(195,2,182,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(195,2,185,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(195,2,188,0,0,"IF", 1, 2, 0);
	T = T->nxt	= settr(195,2,191,0,0,"IF", 1, 2, 0);
	    T->nxt	= settr(195,2,194,0,0,"IF", 1, 2, 0);
	trans[0][179]	= settr(178,0,206,4667,4667,"(((ABORT!=START)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 180 -> 206,0 */
	reached0[180] = 1;
	trans[0][180]	= settr(0,0,0,0,0,"assert((states[k]==READY))",0,0,0);
	trans[0][181]	= settr(0,0,0,0,0,"commands[k] = START",0,0,0);
	trans[0][197]	= settr(196,0,206,4668,4668,".(goto)", 1, 2, 0);
	trans[0][182]	= settr(181,0,206,4669,4669,"(((ABORT==PAUSE)&&(commands[k]==CONTINUE)))", 1, 2, 0); /* m: 183 -> 206,0 */
	reached0[183] = 1;
	trans[0][183]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==RUNNING)))",0,0,0);
	trans[0][184]	= settr(0,0,0,0,0,"commands[k] = PAUSE",0,0,0);
	trans[0][185]	= settr(184,0,206,4670,4670,"(((ABORT==CONTINUE)&&((commands[k]==START)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 186 -> 206,0 */
	reached0[186] = 1;
	trans[0][186]	= settr(0,0,0,0,0,"assert(((states[k]==STARTING)||(states[k]==PAUSED)))",0,0,0);
	trans[0][187]	= settr(0,0,0,0,0,"commands[k] = CONTINUE",0,0,0);
	trans[0][188]	= settr(187,0,206,4671,4671,"(((ABORT==STOP)&&((commands[k]==CONTINUE)||(commands[k]==PAUSE))))", 1, 2, 0); /* m: 189 -> 206,0 */
	reached0[189] = 1;
	trans[0][189]	= settr(0,0,0,0,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==PAUSED)))",0,0,0);
	trans[0][190]	= settr(0,0,0,0,0,"commands[k] = STOP",0,0,0);
	trans[0][191]	= settr(190,0,206,4672,4672,"((ABORT==ABORT))", 1, 2, 0); /* m: 192 -> 206,0 */
	reached0[192] = 1;
	trans[0][192]	= settr(0,0,0,0,0,"assert((states[k]!=READY))",0,0,0);
	trans[0][193]	= settr(0,0,0,0,0,"commands[k] = ABORT",0,0,0);
	trans[0][194]	= settr(193,2,195,2,0,"else", 1, 2, 0);
	trans[0][195]	= settr(194,0,206,4673,4673,"(1)", 1, 2, 0); /* m: 197 -> 206,0 */
	reached0[197] = 1;
	trans[0][203]	= settr(202,0,206,1,0,".(goto)", 0, 2, 0);
	trans[0][200]	= settr(199,0,201,1,0,"(1)", 0, 2, 0);
	trans[0][201]	= settr(200,0,206,1,0,"(1)", 0, 2, 0);
	T = trans[ 0][206] = settr(205,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(205,0,205,0,0,"sub-sequence", 0, 2, 0);
	trans[0][205]	= settr(204,0,217,4674,4674,"states[k] = 5", 1, 2, 0);
	trans[0][216]	= settr(215,0,217,1,0,".(goto)", 0, 2, 0);
	trans[0][207]	= settr(206,0,208,4675,0,"((commands[k]==ABORT))", 1, 2, 0);
	trans[0][208]	= settr(207,0,210,4676,0,"assert((((states[k]==STARTING)||(states[k]==RUNNING))||(states[k]==STOPPING)))", 1, 2, 0);
	T = trans[ 0][210] = settr(209,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(209,0,209,0,0,"sub-sequence", 0, 2, 0);
	trans[0][209]	= settr(208,0,212,4677,4677,"states[k] = 4", 1, 2, 0);
	T = trans[ 0][212] = settr(211,0,0,0,0,"sub-sequence", 0, 2, 0);
	T->nxt	= settr(211,0,211,0,0,"sub-sequence", 0, 2, 0);
	trans[0][211]	= settr(210,0,217,4678,4678,"states[k] = 3", 1, 2, 0);
	trans[0][213]	= settr(212,0,214,2,0,"else", 0, 2, 0);
	trans[0][214]	= settr(213,0,217,4679,0,"assert(0)", 0, 2, 0);
	trans[0][217]	= settr(216,0,0,4680,4680,"-end-", 0, 3500, 0);
	/* np_ demon: */
	trans[_NP_] = (Trans **) emalloc(3*sizeof(Trans *));
	T = trans[_NP_][0] = settr(9997,0,1,_T5,0,"(np_)", 1,2,0);
	    T->nxt	  = settr(9998,0,0,_T2,0,"(1)",   0,2,0);
	T = trans[_NP_][1] = settr(9999,0,1,_T5,0,"(np_)", 1,2,0);
}

Trans *
settr(	int t_id, int a, int b, int c, int d,
	char *t, int g, int tpe0, int tpe1)
{	Trans *tmp = (Trans *) emalloc(sizeof(Trans));

	tmp->atom  = a&(6|32);	/* only (2|8|32) have meaning */
	if (!g) tmp->atom |= 8;	/* no global references */
	tmp->st    = b;
	tmp->tpe[0] = tpe0;
	tmp->tpe[1] = tpe1;
	tmp->tp    = t;
	tmp->t_id  = t_id;
	tmp->forw  = c;
	tmp->back  = d;
	return tmp;
}

Trans *
cpytr(Trans *a)
{	Trans *tmp = (Trans *) emalloc(sizeof(Trans));

	int i;
	tmp->atom  = a->atom;
	tmp->st    = a->st;
#ifdef HAS_UNLESS
	tmp->e_trans = a->e_trans;
	for (i = 0; i < HAS_UNLESS; i++)
		tmp->escp[i] = a->escp[i];
#endif
	tmp->tpe[0] = a->tpe[0];
	tmp->tpe[1] = a->tpe[1];
	for (i = 0; i < 6; i++)
	{	tmp->qu[i] = a->qu[i];
		tmp->ty[i] = a->ty[i];
	}
	tmp->tp    = (char *) emalloc(strlen(a->tp)+1);
	strcpy(tmp->tp, a->tp);
	tmp->t_id  = a->t_id;
	tmp->forw  = a->forw;
	tmp->back  = a->back;
	return tmp;
}

#ifndef NOREDUCE
int
srinc_set(int n)
{	if (n <= 2) return LOCAL;
	if (n <= 2+  DELTA) return Q_FULL_F; /* 's' or nfull  */
	if (n <= 2+2*DELTA) return Q_EMPT_F; /* 'r' or nempty */
	if (n <= 2+3*DELTA) return Q_EMPT_T; /* empty */
	if (n <= 2+4*DELTA) return Q_FULL_T; /* full  */
	if (n ==   5*DELTA) return GLOBAL;
	if (n ==   6*DELTA) return TIMEOUT_F;
	if (n ==   7*DELTA) return ALPHA_F;
	Uerror("cannot happen srinc_class");
	return BAD;
}
int
srunc(int n, int m)
{	switch(m) {
	case Q_FULL_F: return n-2;
	case Q_EMPT_F: return n-2-DELTA;
	case Q_EMPT_T: return n-2-2*DELTA;
	case Q_FULL_T: return n-2-3*DELTA;
	case ALPHA_F:
	case TIMEOUT_F: return 257; /* non-zero, and > MAXQ */
	}
	Uerror("cannot happen srunc");
	return 0;
}
#endif
int cnt;
#ifdef HAS_UNLESS
int
isthere(Trans *a, int b)
{	Trans *t;
	for (t = a; t; t = t->nxt)
		if (t->t_id == b)
			return 1;
	return 0;
}
#endif
#ifndef NOREDUCE
int
mark_safety(Trans *t) /* for conditional safety */
{	int g = 0, i, j, k;

	if (!t) return 0;
	if (t->qu[0])
		return (t->qu[1])?2:1;	/* marked */

	for (i = 0; i < 2; i++)
	{	j = srinc_set(t->tpe[i]);
		if (j >= GLOBAL && j != ALPHA_F)
			return -1;
		if (j != LOCAL)
		{	k = srunc(t->tpe[i], j);
			if (g == 0
			||  t->qu[0] != k
			||  t->ty[0] != j)
			{	t->qu[g] = k;
				t->ty[g] = j;
				g++;
	}	}	}
	return g;
}
#endif
void
retrans(int n, int m, int is, short srcln[], uchar reach[], uchar lpstate[])
	/* process n, with m states, is=initial state */
{	Trans *T0, *T1, *T2, *T3;
	Trans *T4, *T5; /* t_reverse or has_unless */
	int i;
#if defined(HAS_UNLESS) || !defined(NOREDUCE)
	int k;
#endif
#ifndef NOREDUCE
	int g, h, j, aa;
#endif
#ifdef HAS_UNLESS
	int p;
#endif
	if (state_tables >= 4)
	{	printf("STEP 1 %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
		return;
	}
	do {
		for (i = 1, cnt = 0; i < m; i++)
		{	T2 = trans[n][i];
			T1 = T2?T2->nxt:(Trans *)0;
/* prescan: */		for (T0 = T1; T0; T0 = T0->nxt)
/* choice in choice */	{	if (T0->st && trans[n][T0->st]
				&&  trans[n][T0->st]->nxt)
					break;
			}
#if 0
		if (T0)
		printf("\tstate %d / %d: choice in choice\n",
		i, T0->st);
#endif
			if (T0)
			for (T0 = T1; T0; T0 = T0->nxt)
			{	T3 = trans[n][T0->st];
				if (!T3->nxt)
				{	T2->nxt = cpytr(T0);
					T2 = T2->nxt;
					imed(T2, T0->st, n, i);
					continue;
				}
				do {	T3 = T3->nxt;
					T2->nxt = cpytr(T3);
					T2 = T2->nxt;
					imed(T2, T0->st, n, i);
				} while (T3->nxt);
				cnt++;
			}
		}
	} while (cnt);
	if (state_tables >= 3)
	{	printf("STEP 2 %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
		return;
	}
	for (i = 1; i < m; i++)
	{	if (trans[n][i] && trans[n][i]->nxt) /* optimize */
		{	T1 = trans[n][i]->nxt;
#if 0
			printf("\t\tpull %d (%d) to %d\n",
			T1->st, T1->forw, i);
#endif
			srcln[i] = srcln[T1->st];	/* Oyvind Teig, 5.2.0 */

			if (!trans[n][T1->st]) continue;
			T0 = cpytr(trans[n][T1->st]);
			trans[n][i] = T0;
			reach[T1->st] = 1;
			imed(T0, T1->st, n, i);
			for (T1 = T1->nxt; T1; T1 = T1->nxt)
			{
#if 0
			printf("\t\tpull %d (%d) to %d\n",
				T1->st, T1->forw, i);
#endif
		/*		srcln[i] = srcln[T1->st];  gh: not useful */
				if (!trans[n][T1->st]) continue;
				T0->nxt = cpytr(trans[n][T1->st]);
				T0 = T0->nxt;
				reach[T1->st] = 1;
				imed(T0, T1->st, n, i);
	}	}	}
	if (state_tables >= 2)
	{	printf("STEP 3 %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
		return;
	}
#ifdef HAS_UNLESS
	for (i = 1; i < m; i++)
	{	if (!trans[n][i]) continue;
		/* check for each state i if an
		 * escape to some state p is defined
		 * if so, copy and mark p's transitions
		 * and prepend them to the transition-
		 * list of state i
		 */
	 if (!like_java) /* the default */
	 {	for (T0 = trans[n][i]; T0; T0 = T0->nxt)
		for (k = HAS_UNLESS-1; k >= 0; k--)
		{	if (p = T0->escp[k])
			for (T1 = trans[n][p]; T1; T1 = T1->nxt)
			{	if (isthere(trans[n][i], T1->t_id))
					continue;
				T2 = cpytr(T1);
				T2->e_trans = p;
				T2->nxt = trans[n][i];
				trans[n][i] = T2;
		}	}
	 } else /* outermost unless checked first */
	 {	T4 = T3 = (Trans *) 0;
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
		for (k = HAS_UNLESS-1; k >= 0; k--)
		{	if (p = T0->escp[k])
			for (T1 = trans[n][p]; T1; T1 = T1->nxt)
			{	if (isthere(trans[n][i], T1->t_id))
					continue;
				T2 = cpytr(T1);
				T2->nxt = (Trans *) 0;
				T2->e_trans = p;
				if (T3)	T3->nxt = T2;
				else	T4 = T2;
				T3 = T2;
		}	}
		if (T4)
		{	T3->nxt = trans[n][i];
			trans[n][i] = T4;
		}
	 }
	}
#endif
#ifndef NOREDUCE
	for (i = 1; i < m; i++)
	{	if (a_cycles)
		{ /* moves through these states are visible */
	#if PROG_LAB>0 && defined(HAS_NP)
			if (progstate[n][i])
				goto degrade;
			for (T1 = trans[n][i]; T1; T1 = T1->nxt)
				if (progstate[n][T1->st])
					goto degrade;
	#endif
			if (accpstate[n][i] || visstate[n][i])
				goto degrade;
			for (T1 = trans[n][i]; T1; T1 = T1->nxt)
				if (accpstate[n][T1->st])
					goto degrade;
		}
		T1 = trans[n][i];
		if (!T1) continue;
		g = mark_safety(T1);	/* V3.3.1 */
		if (g < 0) goto degrade; /* global */
		/* check if mixing of guards preserves reduction */
		if (T1->nxt)
		{	k = 0;
			for (T0 = T1; T0; T0 = T0->nxt)
			{	if (!(T0->atom&8))
					goto degrade;
				for (aa = 0; aa < 2; aa++)
				{	j = srinc_set(T0->tpe[aa]);
					if (j >= GLOBAL && j != ALPHA_F)
						goto degrade;
					if (T0->tpe[aa]
					&&  T0->tpe[aa]
					!=  T1->tpe[0])
						k = 1;
			}	}
			/* g = 0;	V3.3.1 */
			if (k)	/* non-uniform selection */
			for (T0 = T1; T0; T0 = T0->nxt)
			for (aa = 0; aa < 2; aa++)
			{	j = srinc_set(T0->tpe[aa]);
				if (j != LOCAL)
				{	k = srunc(T0->tpe[aa], j);
					for (h = 0; h < 6; h++)
						if (T1->qu[h] == k
						&&  T1->ty[h] == j)
							break;
					if (h >= 6)
					{	T1->qu[g%6] = k;
						T1->ty[g%6] = j;
						g++;
			}	}	}
			if (g > 6)
			{	T1->qu[0] = 0;	/* turn it off */
				printf("pan: warning, line %d, ",
					srcln[i]);
			 	printf("too many stmnt types (%d)",
					g);
			  	printf(" in selection\n");
			  goto degrade;
			}
		}
		/* mark all options global if >=1 is global */
		for (T1 = trans[n][i]; T1; T1 = T1->nxt)
			if (!(T1->atom&8)) break;
		if (T1)
degrade:	for (T1 = trans[n][i]; T1; T1 = T1->nxt)
			T1->atom &= ~8;	/* mark as unsafe */
		/* can only mix 'r's or 's's if on same chan */
		/* and not mixed with other local operations */
		T1 = trans[n][i];
		if (!T1 || T1->qu[0]) continue;
		j = T1->tpe[0];
		if (T1->nxt && T1->atom&8)
		{ if (j == 5*DELTA)
		  {	printf("warning: line %d ", srcln[i]);
			printf("mixed condition ");
			printf("(defeats reduction)\n");
			goto degrade;
		  }
		  for (T0 = T1; T0; T0 = T0->nxt)
		  for (aa = 0; aa < 2; aa++)
		  if  (T0->tpe[aa] && T0->tpe[aa] != j)
		  {	printf("warning: line %d ", srcln[i]);
			printf("[%d-%d] mixed %stion ",
				T0->tpe[aa], j, 
				(j==5*DELTA)?"condi":"selec");
			printf("(defeats reduction)\n");
			printf("	'%s' <-> '%s'\n",
				T1->tp, T0->tp);
			goto degrade;
		} }
	}
#endif
	for (i = 1; i < m; i++)
	{	T2 = trans[n][i];
		if (!T2
		||  T2->nxt
		||  strncmp(T2->tp, ".(goto)", 7)
		||  !stopstate[n][i])
			continue;
		stopstate[n][T2->st] = 1;
	}
	if (state_tables && !verbose)
	{	if (dodot)
		{	char buf[256], *q = buf, *p = procname[n];
			while (*p != '\0')
			{	if (*p != ':')
				{	*q++ = *p;
				}
				p++;
			}
			*q = '\0';
			printf("digraph ");
			switch (Btypes[n]) {
			case I_PROC:  printf("init {\n"); break;
			case N_CLAIM: printf("claim_%s {\n", buf); break;
			case E_TRACE: printf("notrace {\n"); break;
			case N_TRACE: printf("trace {\n"); break;
			default:      printf("p_%s {\n", buf); break;
			}
			printf("size=\"8,10\";\n");
			printf("  GT [shape=box,style=dotted,label=\"%s\"];\n", buf);
			printf("  GT -> S%d;\n", is);
		} else
		{	switch (Btypes[n]) {
			case I_PROC:  printf("init\n"); break;
			case N_CLAIM: printf("claim %s\n", procname[n]); break;
			case E_TRACE: printf("notrace assertion\n"); break;
			case N_TRACE: printf("trace assertion\n"); break;
			default:      printf("proctype %s\n", procname[n]); break;
		}	}
		for (i = 1; i < m; i++)
		{	reach[i] = 1;
		}
		tagtable(n, m, is, srcln, reach);
		if (dodot) printf("}\n");
	} else
	for (i = 1; i < m; i++)
	{	int nrelse;
		if (Btypes[n] != N_CLAIM)
		{	for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			{	if (T0->st == i
				&& strcmp(T0->tp, "(1)") == 0)
				{	printf("error: proctype '%s' ",
						procname[n]);
		  			printf("line %d, state %d: has un",
						srcln[i], i);
					printf("conditional self-loop\n");
					pan_exit(1);
		}	}	}
		nrelse = 0;
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
		{	if (strcmp(T0->tp, "else") == 0)
				nrelse++;
		}
		if (nrelse > 1)
		{	printf("error: proctype '%s' state",
				procname[n]);
		  	printf(" %d, inherits %d", i, nrelse);
		  	printf(" 'else' stmnts\n");
			pan_exit(1);
	}	}
#if !defined(LOOPSTATE) && !defined(BFS_PAR)
	if (state_tables)
#endif
	do_dfs(n, m, is, srcln, reach, lpstate);

	if (!t_reverse)
	{	return;
	}
	/* process n, with m states, is=initial state -- reverse list */
	if (!state_tables && Btypes[n] != N_CLAIM)
	{	for (i = 1; i < m; i++)
		{	Trans *Tx = (Trans *) 0; /* list of escapes */
			Trans *Ty = (Trans *) 0; /* its tail element */
			T1 = (Trans *) 0; /* reversed list */
			T2 = (Trans *) 0; /* its tail */
			T3 = (Trans *) 0; /* remembers possible 'else' */

			/* find unless-escapes, they should go first */
			T4 = T5 = T0 = trans[n][i];
	#ifdef HAS_UNLESS
			while (T4 && T4->e_trans) /* escapes are first in orig list */
			{	T5 = T4;	  /* remember predecessor */
				T4 = T4->nxt;
			}
	#endif
			/* T4 points to first non-escape, T5 to its parent, T0 to original list */
			if (T4 != T0)		 /* there was at least one escape */
			{	T3 = T5->nxt;		 /* start of non-escapes */
				T5->nxt = (Trans *) 0;	 /* separate */
				Tx = T0;		 /* start of the escapes */
				Ty = T5;		 /* its tail */
				T0 = T3;		 /* the rest, to be reversed */
			}
			/* T0 points to first non-escape, Tx to the list of escapes, Ty to its tail */

			/* first tail-add non-escape transitions, reversed */
			T3 = (Trans *) 0;
			for (T5 = T0; T5; T5 = T4)
			{	T4 = T5->nxt;
	#ifdef HAS_UNLESS
				if (T5->e_trans)
				{	printf("error: cannot happen!\n");
					continue;
				}
	#endif
				if (strcmp(T5->tp, "else") == 0)
				{	T3 = T5;
					T5->nxt = (Trans *) 0;
				} else
				{	T5->nxt = T1;
					if (!T1) { T2 = T5; }
					T1 = T5;
			}	}
			/* T3 points to a possible else, which is removed from the list */
			/* T1 points to the reversed list so far (without escapes) */
			/* T2 points to the tail element -- where the else should go */
			if (T2 && T3)
			{	T2->nxt = T3;	/* add else */
			} else
			{	if (T3) /* there was an else, but there's no tail */
				{	if (!T1)	/* and no reversed list */
					{	T1 = T3; /* odd, but possible */
					} else		/* even stranger */
					{	T1->nxt = T3;
			}	}	}

			/* add in the escapes, to that they appear at the front */
			if (Tx && Ty) { Ty->nxt = T1; T1 = Tx; }

			trans[n][i] = T1;
			/* reversed, with escapes first and else last */
	}	}
	if (state_tables && verbose)
	{	printf("FINAL proctype %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
	}
}
void
imed(Trans *T, int v, int n, int j)	/* set intermediate state */
{	progstate[n][T->st] |= progstate[n][v];
	accpstate[n][T->st] |= accpstate[n][v];
	stopstate[n][T->st] |= stopstate[n][v];
	mapstate[n][j] = T->st;
}
void
tagtable(int n, int m, int is, short srcln[], uchar reach[])
{	Trans *z;

	if (is >= m || !trans[n][is]
	||  is <= 0 || reach[is] == 0)
		return;
	reach[is] = 0;
	if (state_tables)
	for (z = trans[n][is]; z; z = z->nxt)
	{	if (dodot)
			dot_crack(n, is, z);
		else
			crack(n, is, z, srcln);
	}

	for (z = trans[n][is]; z; z = z->nxt)
	{
#ifdef HAS_UNLESS
		int i, j;
#endif
		tagtable(n, m, z->st, srcln, reach);
#ifdef HAS_UNLESS
		for (i = 0; i < HAS_UNLESS; i++)
		{	j = trans[n][is]->escp[i];
			if (!j) break;
			tagtable(n, m, j, srcln, reach);
		}
#endif
	}
}

extern Trans *t_id_lkup[];

void
dfs_table(int n, int m, int is, short srcln[], uchar reach[], uchar lpstate[])
{	Trans *z;

	if (is >= m || is <= 0 || !trans[n][is])
		return;
	if ((reach[is] & (4|8|16)) != 0)
	{	if ((reach[is] & (8|16)) == 16)	/* on stack, not yet recorded */
		{	lpstate[is] = 1;
			reach[is] |= 8; /* recorded */
			if (state_tables && verbose)
			{	printf("state %d line %d is a loopstate\n", is, srcln[is]);
		}	}
		return;
	}
	reach[is] |= (4|16);	/* visited | onstack */
	for (z = trans[n][is]; z; z = z->nxt)
	{	t_id_lkup[z->t_id] = z;
#ifdef HAS_UNLESS
		int i, j;
#endif
		dfs_table(n, m, z->st, srcln, reach, lpstate);
#ifdef HAS_UNLESS
		for (i = 0; i < HAS_UNLESS; i++)
		{	j = trans[n][is]->escp[i];
			if (!j) break;
			dfs_table(n, m, j, srcln, reach, lpstate);
		}
#endif
	}
	reach[is] &= ~16; /* no longer on stack */
}
void
do_dfs(int n, int m, int is, short srcln[], uchar reach[], uchar lpstate[])
{	int i;
	dfs_table(n, m, is, srcln, reach, lpstate);
	for (i = 0; i < m; i++)
		reach[i] &= ~(4|8|16);
}
void
crack(int n, int j, Trans *z, short srcln[])
{	int i;

	if (!z) return;
	printf("	state %3d -(tr %3d)-> state %3d  ",
		j, z->forw, z->st);
	printf("[id %3d tp %3d", z->t_id, z->tpe[0]);
	if (z->tpe[1]) printf(",%d", z->tpe[1]);
#ifdef HAS_UNLESS
	if (z->e_trans)
		printf(" org %3d", z->e_trans);
	else if (state_tables >= 2)
	for (i = 0; i < HAS_UNLESS; i++)
	{	if (!z->escp[i]) break;
		printf(" esc %d", z->escp[i]);
	}
#endif
	printf("]");
	printf(" [%s%s%s%s%s] %s:%d => ",
		z->atom&6?"A":z->atom&32?"D":"-",
		accpstate[n][j]?"a" :"-",
		stopstate[n][j]?"e" : "-",
		progstate[n][j]?"p" : "-",
		z->atom & 8 ?"L":"G",
		PanSource, srcln[j]);
	for (i = 0; z->tp[i]; i++)
		if (z->tp[i] == '\n')
			printf("\\n");
		else
			putchar(z->tp[i]);
	if (verbose && z->qu[0])
	{	printf("\t[");
		for (i = 0; i < 6; i++)
			if (z->qu[i])
				printf("(%d,%d)",
				z->qu[i], z->ty[i]);
		printf("]");
	}
	printf("\n");
	fflush(stdout);
}
/* spin -a m.pml; cc -o pan pan.c; ./pan -D | dot -Tps > foo.ps; ps2pdf foo.ps */
void
dot_crack(int n, int j, Trans *z)
{	int i;

	if (!z) return;
	printf("	S%d -> S%d  [color=black", j, z->st);

	if (z->atom&6) printf(",style=dashed");
	else if (z->atom&32) printf(",style=dotted");
	else if (z->atom&8) printf(",style=solid");
	else printf(",style=bold");

	printf(",label=\"");
	for (i = 0; z->tp[i]; i++)
	{	if (z->tp[i] == '\\'
		&&  z->tp[i+1] == 'n')
		{	i++; printf(" ");
		} else
		{	putchar(z->tp[i]);
	}	}
	printf("\"];\n");
	if (accpstate[n][j]) printf("  S%d [color=red,style=bold];\n", j);
	else if (progstate[n][j]) printf("  S%d [color=green,style=bold];\n", j);
	if (stopstate[n][j]) printf("  S%d [color=blue,style=bold,shape=box];\n", j);
}

#ifdef VAR_RANGES
#define BYTESIZE	32	/* 2^8 : 2^3 = 256:8 = 32 */

typedef struct Vr_Ptr {
	char	*nm;
	uchar	vals[BYTESIZE];
	struct Vr_Ptr *nxt;
} Vr_Ptr;
Vr_Ptr *ranges = (Vr_Ptr *) 0;

void
logval(char *s, int v)
{	Vr_Ptr *tmp;

	if (v<0 || v > 255) return;
	for (tmp = ranges; tmp; tmp = tmp->nxt)
		if (!strcmp(tmp->nm, s))
			goto found;
	tmp = (Vr_Ptr *) emalloc(sizeof(Vr_Ptr));
	tmp->nxt = ranges;
	ranges = tmp;
	tmp->nm = s;
found:
	tmp->vals[(v)/8] |= 1<<((v)%8);
}

void
dumpval(uchar X[], int range)
{	int w, x, i, j = -1;

	for (w = i = 0; w < range; w++)
	for (x = 0; x < 8; x++, i++)
	{
from:		if ((X[w] & (1<<x)))
		{	printf("%d", i);
			j = i;
			goto upto;
	}	}
	return;
	for (w = 0; w < range; w++)
	for (x = 0; x < 8; x++, i++)
	{
upto:		if (!(X[w] & (1<<x)))
		{	if (i-1 == j)
				printf(", ");
			else
				printf("-%d, ", i-1);
			goto from;
	}	}
	if (j >= 0 && j != 255)
		printf("-255");
}

void
dumpranges(void)
{	Vr_Ptr *tmp;
	printf("\nValues assigned within ");
	printf("interval [0..255]:\n");
	for (tmp = ranges; tmp; tmp = tmp->nxt)
	{	printf("\t%s\t: ", tmp->nm);
		dumpval(tmp->vals, BYTESIZE);
		printf("\n");
	}
}
#endif
